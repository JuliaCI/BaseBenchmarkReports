cset: moving following pidspec: 13180
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.230690899 seconds)
loading group "string"... done (took 0.458366815 seconds)
loading group "linalg"... done (took 7.764477862 seconds)
loading group "parallel"... done (took 0.148582958 seconds)
loading group "find"... done (took 1.086893329 seconds)
loading group "tuple"... done (took 1.667507752 seconds)
loading group "dates"... done (took 1.147397475 seconds)
loading group "micro"... done (took 0.167779035 seconds)
loading group "io"... done (took 0.434233679 seconds)
loading group "scalar"... done (took 47.173796401 seconds)
loading group "sparse"... done (took 13.415161961 seconds)
loading group "broadcast"... done (took 1.185669979 seconds)
loading group "union"... done (took 9.953237453 seconds)
loading group "simd"... done (took 3.061868954 seconds)
loading group "random"... done (took 11.30195921 seconds)
loading group "problem"... done (took 2.037218455 seconds)
loading group "array"... done (took 21.692619706 seconds)
loading group "misc"... done (took 1.008767186 seconds)
loading group "sort"... done (took 3.339270534 seconds)
loading group "collection"... done (took 17.499238984 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.605880387 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.245695473 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.261619127 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.34201836 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243424324 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.216040036 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.199525181 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.316552485 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.835144178 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210373895 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1919305 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.466941923 seconds)
done (took 6.959560936 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.269521815 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.166747579 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168233334 seconds)
  done (took 1.116534309 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088635506 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154108501 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.121700491 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107560496 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.106560122 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.121154836 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.106307913 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.123041586 seconds)
  done (took 1.624396245 seconds)
done (took 3.882776498 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.475330802 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.876864958 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.469715989 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.152986391 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316789797 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.289645088 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.296398875 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.214021147 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.117455531 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.103597439 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178024166 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.412481529 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.393675083 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.851932557 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.101931225 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110199685 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.146863699 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.774935776 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.09246205 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.104532619 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.43881473 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.173437023 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.110371505 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.114855778 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.197004495 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140846891 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173702366 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.115020699 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.692612146 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.146324034 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.172244878 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.109862595 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171745148 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.206452185 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.199789359 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.103916111 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.700435432 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.215739518 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08409583 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.109708274 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686801842 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.131073494 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.199121788 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.113008689 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.103192523 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197512102 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.090171532 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09053932 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.131428822 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.095878155 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.184398512 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446495426 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.117995745 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.187370262 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.105032316 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.703361535 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111689114 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.289002622 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.137490732 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107773513 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.10280745 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.099327178 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.170897923 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.10617089 seconds)
  done (took 20.383360018 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161000875 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.178628424 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08784725 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.167083462 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132558834 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.091839547 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.114016389 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.089195704 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118408475 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.233944987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143092763 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.163920199 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.102124974 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.159344487 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.19818383 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.257100239 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116335649 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.137258562 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.163466917 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104394465 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.155324117 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.108144459 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.103087459 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.121620249 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.177162729 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.214950904 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.122342977 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.136960463 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.16323987 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111508814 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.156096468 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161810217 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.106100994 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.158794254 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.180461197 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.136274148 seconds)
  done (took 6.036187331 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194015098 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.130066617 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.212208884 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.152023447 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146915752 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160612214 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158241072 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25823846 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.385666702 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174018341 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149908041 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111014532 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089495543 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.091251655 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.10840376 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.30885881 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.172880742 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130122716 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167528516 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116549744 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09448051 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355462442 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117105342 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092408483 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115025278 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059887414 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.206551219 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099011671 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.950939392 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095055022 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100520385 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154279233 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.223676752 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.146274267 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127187409 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113313858 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095407647 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.209973418 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1058851 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.192480518 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.089192976 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.141171602 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135494918 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135972477 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09804374 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.123346388 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219733492 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094634271 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115800658 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.903563899 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.211275276 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095606864 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.13388014 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.110965541 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.266950236 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101960607 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096707029 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.113544484 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.206759726 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.144009049 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093975551 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08902556 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.118419342 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.090737152 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.44598793 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123486421 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.620513257 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.111624471 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.173060319 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09472153 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112121851 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100610777 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096337161 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114474032 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104726847 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094000015 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.091619091 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.114281252 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093863305 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.097934137 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10698519 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097461196 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.109125757 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159974267 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113642961 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119006146 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129315262 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.113947776 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09258012 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147487842 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096967075 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099222257 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.184203629 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101484525 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103772521 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099482419 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.157724227 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094113251 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.209192241 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095432929 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122676486 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.114316111 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146855055 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11402597 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091459025 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115481627 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.090954343 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091390413 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176632043 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095446158 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094236926 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101259796 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.114717933 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108731248 seconds)
  done (took 24.511377755 seconds)
done (took 51.712347458 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.417688443 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077517848 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076663426 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097366936 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077135305 seconds)
  done (took 1.603649874 seconds)
done (took 2.441237482 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.331881151 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198349434 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104069631 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.199040274 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097435581 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203962982 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188899027 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101039512 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216543007 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098023226 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194511214 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095920252 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.116112403 seconds)
  done (took 3.003486999 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.168534349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17187195 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.166053522 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186523047 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.150843296 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165124978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184428864 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.175886586 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163920218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.178439756 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.152814272 seconds)
  done (took 2.699392275 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.165040718 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171251306 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.159977153 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184115537 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.151324734 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163835124 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182557598 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.174704543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164803479 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.179681112 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.153377812 seconds)
  done (took 2.689786195 seconds)
done (took 9.225370778 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.134278937 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.74198816 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.239096466 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.299109021 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.412420692 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.312804054 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.652532753 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.22744292 seconds)
  done (took 14.99720667 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.2465002 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.186459205 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.170117252 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.165947232 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.165793191 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.192182719 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.170005631 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.169289001 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.189942424 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.166444794 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.16486518 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.181624911 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.168204924 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.162605137 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.161565355 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.180657965 seconds)
  done (took 3.737877063 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.211315233 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.188197323 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1850091 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.167500069 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.162112723 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.184257016 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.167309451 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.1635514 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.182048785 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.162850201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.167100851 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.184714232 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.166179884 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.161771485 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.184047289 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.184707545 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.161485531 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.184829185 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.183521542 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.163561665 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.183742682 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.164902953 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.165239 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.185832145 seconds)
  done (took 5.129180031 seconds)
done (took 24.702060951 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156969163 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112254702 seconds)
  done (took 1.10994427 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.213612541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.231316658 seconds)
  done (took 1.288695622 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.181694266 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.157856848 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.207641357 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.172614236 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.158932304 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.177972623 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.185127202 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.175443464 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.159965257 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.159408147 seconds)
  done (took 2.583814939 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.166018699 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.165980546 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.19213689 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.212144862 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.189183589 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.16595514 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.167863592 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.16404328 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.188340689 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.16156076 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.168228248 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.200385743 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.167369483 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.199304491 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.165137099 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.164260889 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.185941472 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.163885098 seconds)
  done (took 4.037185284 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.162088579 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.159070251 seconds)
  done (took 1.17300013 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.165720277 seconds)
    (2/7) benchmarking "second"...
    done (took 0.159044367 seconds)
    (3/7) benchmarking "month"...
    done (took 0.159665029 seconds)
    (4/7) benchmarking "year"...
    done (took 0.179614371 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.160697608 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.163191427 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.18103213 seconds)
  done (took 2.020333611 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.538905461 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.245741214 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337513974 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.177162436 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.216101167 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.387201596 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.214391473 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.172195792 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.170888054 seconds)
  done (took 3.339246402 seconds)
done (took 16.397123101 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.104819556 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.301502307 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.732256153 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.181782768 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.160004365 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.176110642 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.296638584 seconds)
done (took 2.811770878 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.297145953 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.133872122 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076213175 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.154957719 seconds)
  done (took 1.514284921 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.096389913 seconds)
    (2/2) benchmarking "read"...
    done (took 0.169140204 seconds)
  done (took 1.124433941 seconds)
done (took 3.497811572 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.163043864 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.160260782 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.202432789 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.15794916 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.157882338 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.158339745 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.178898502 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.158324394 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.160371388 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.159296934 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.182962785 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159443634 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.156026777 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.175654571 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158668089 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.15736288 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.156102334 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174805978 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.157199279 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.157352613 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.156750892 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.175479131 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.157685291 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.157263038 seconds)
  done (took 4.827532401 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.183373495 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.163161106 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.179361626 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.163048134 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.162581071 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.180813597 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.163125483 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.160388767 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.160850604 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.179836448 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.162810302 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.161911227 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.178723556 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.162946985 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.157848025 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.180244901 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.162435016 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160749703 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.177819207 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.162872854 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.162656764 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17881759 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.162585882 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.161282095 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.179129784 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.162818311 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.158669464 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.177017069 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.163746247 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.162605549 seconds)
  done (took 5.895875645 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.16702105 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.155381438 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.157436241 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.189511051 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.157728705 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.161436142 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.176054069 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.160903026 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.163583715 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.159765558 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.183421009 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.161230195 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.158785869 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.180226867 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.165508768 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.164775434 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.169889268 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.180540157 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.158198471 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.160852469 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.183384992 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.158370864 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.15758229 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.157192826 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.177905259 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.156525485 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.157916936 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.177037304 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.159606856 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.157023598 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.160558441 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.180034166 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.159708694 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.164947417 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.17835674 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.157577834 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.16288763 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.156238872 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.17798448 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.157529569 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.153548243 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.175013508 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.158286712 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.163434482 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.156945896 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.178646229 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.156374319 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.158819611 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.177079488 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.163370937 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.153858771 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.154348089 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.178472613 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.160224224 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.160176088 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.173578476 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.1590087 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.156929184 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.158671277 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.176566723 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.157845704 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.155556715 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.181652699 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.159895059 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.171661903 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.1819611 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.15794761 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.162417591 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.162073016 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.188229875 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.165143207 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.171707201 seconds)
  done (took 12.782877342 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.175853093 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.166620372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.159763992 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.179018296 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.159661424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.158865628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.182884601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.160294672 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160113448 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.184907294 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160958704 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.159803359 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159333872 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.179605103 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160518859 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.160142261 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.185808189 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.162384098 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.160216385 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.177773281 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.161853509 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.164506344 seconds)
  done (took 4.551406359 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.291268418 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.167563997 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.203407982 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.19270428 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.180431799 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.191455097 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.165948199 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.166199062 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.181416495 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.169507104 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.168152575 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.183264264 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.177167442 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.167850594 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.187925969 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.170993467 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161711753 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.18968874 seconds)
  done (took 4.18692663 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.177253168 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.162590973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.196872395 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.165413488 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.161582223 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.16066148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.186643328 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.178434792 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.162545812 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.182291628 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.169240671 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.160545829 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.181368325 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.162751148 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161635363 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.184695461 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.162053029 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161289714 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.187627605 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.16977289 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.166544924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.187722477 seconds)
  done (took 4.661612232 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.179716787 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.161807763 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.198277585 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.165298444 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.159819192 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.160325745 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.18773745 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.163393416 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.167341126 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.182381606 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164013862 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.159941289 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.192858903 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162909262 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.165744597 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.181602441 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.163150861 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.161872502 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.181836545 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.163059308 seconds)
  done (took 4.295733187 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.2435963 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.193635629 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175933023 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183757305 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194893378 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.175768044 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182337889 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.196728505 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.176482468 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.206083246 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176327492 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.174390592 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.203180367 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.181929489 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.17376782 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.203040855 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.184728167 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.202037328 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.174743539 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.173937544 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.205809096 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175451453 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.20316867 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.175569155 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.172977936 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.194769987 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.17671668 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.178533837 seconds)
  done (took 6.136828789 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.166235103 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.161947643 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.161307461 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.180163069 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.16146309 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.159585481 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.158655476 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.18095805 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.162007648 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.159794697 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.181030787 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.161530556 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.160521533 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.159017699 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.18014859 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.16131773 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1598572 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.159042213 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.181298398 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.162524284 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.16000321 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.18004998 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.162302991 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.161684745 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159444757 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.181379514 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161484018 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.160243488 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.179938258 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.162544062 seconds)
  done (took 5.866762541 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.176587193 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168481087 seconds)
  done (took 1.225822333 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.173255598 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.174209492 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.159427067 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.182760981 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.169288974 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.160390052 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.188915282 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.169389445 seconds)
  done (took 2.257812329 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.159487386 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.236289636 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.16736745 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.171157709 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.238221279 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.169367364 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142835328 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.165796472 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.121983745 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096714761 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.1734308 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096552617 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103833445 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100287856 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.124962894 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109268309 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.161206959 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.19161256 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.168998893 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.161638839 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.186195301 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111440679 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105324528 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.192181825 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098659501 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105280605 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.126996223 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.172290186 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100011376 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.125877222 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.102617191 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.160780177 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.184550445 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.167582675 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.162309263 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.239750684 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111216269 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119942506 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106798771 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.165648177 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.187834043 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.183633038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107130589 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.1013643 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.128651801 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.167158912 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.166053255 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.182923655 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098347057 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099712948 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.18253107 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100456124 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.161223368 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.12415759 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105908321 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112167652 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.184681096 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103082346 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.099989172 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.0973897 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.124077528 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100690755 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106059286 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.185927742 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107177108 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104795925 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.124984272 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.162411508 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.163717733 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.183465272 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105208033 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118540478 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.124971775 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.167592904 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.166108528 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.183265139 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103309268 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166934066 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.122701033 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107080164 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.165899635 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.185993157 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.127464606 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100395564 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098912126 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.190884779 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.164877825 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.164158072 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.117106306 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114200334 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.164208209 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.184435782 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098806496 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.102739875 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.1182761 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.167732306 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.09768833 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104336436 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.18187553 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.167414533 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167275964 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123606389 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.105739246 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.166942078 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.188489772 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104874846 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.229881987 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103213939 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.099751074 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.163398849 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.188374039 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098994013 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10357149 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.18204083 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102670393 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099258126 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.187078897 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10712733 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.163016254 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.167105 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127573527 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105842837 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.163958504 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.182465637 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102119006 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.165420245 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.189860546 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106993037 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.163463698 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.18436963 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.16418121 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10489102 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.186129169 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103652145 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167959833 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101210714 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.18199224 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.164554156 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.167933766 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.126209147 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102038447 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103562718 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.126470091 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105102757 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.164924307 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.124435968 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102593126 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097976839 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.124443647 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102460587 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.162927389 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.190036006 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102295757 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.165175588 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10036954 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.192734328 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101509267 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.166046111 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.188019686 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.170421521 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.166377517 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.116625796 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104029756 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.165969109 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.125809612 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103141725 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.162062327 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.162441226 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.190453034 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099192545 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.165647838 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.116788255 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103420044 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.167408892 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.183248143 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.169015116 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101453322 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.214995687 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175840494 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167814556 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10634059 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.126232374 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.167101196 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10426562 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.18924749 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.169606931 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.167806078 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.125669084 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10428457 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169660433 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.120620212 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.165620065 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102398147 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.125598674 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098998726 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.163326484 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096531604 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.18719574 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106856692 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.16543061 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.187994345 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.165265059 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103391536 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.190048776 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102780471 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.166232488 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.116670662 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.168054225 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.174343059 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.167961595 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.188716421 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106856451 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101377892 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.183920099 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.170578507 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.164180825 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.123665681 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.166031012 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098325555 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.11732894 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.169609959 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.166008067 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100463633 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.182842099 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10784562 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106518121 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.123656304 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099574107 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.165184276 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.129352772 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100869597 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10672992 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.121039067 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105141504 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112592865 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.118584586 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103091706 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107374172 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.187816331 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.16550205 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104999695 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.163905681 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.189609873 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.167084168 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.165638237 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.122822234 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.172854133 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104156673 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.181898882 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104003362 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.166830838 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099456066 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.186131266 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107392544 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100871213 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.121585987 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110560126 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168182941 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.188773079 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104933706 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.167232206 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.189573497 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.173113562 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104339685 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.167855201 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.122288949 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098606128 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10276995 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.118007159 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.16582944 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101061002 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.188560377 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105571237 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1054059 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.186820636 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10898166 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10232771 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.167491677 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.138057044 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100174699 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.117834824 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105094329 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104998257 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101227632 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.124521941 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.165203569 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107134831 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.188149259 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108471141 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101622332 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.183154171 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.170666589 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102885186 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.190192077 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.171149403 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.16953263 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100820488 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.189408364 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103529255 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108945457 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.120143373 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115125818 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103094287 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.125802703 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103200102 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104264687 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.121823748 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100157367 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101560846 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.188837307 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106050084 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.176172919 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.124472999 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105781292 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102898607 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101795992 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.190726753 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105431247 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.168329055 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.184601728 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101380692 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099081839 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.188363381 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107498617 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.168010534 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100635912 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.189268668 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.171317707 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.168045334 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.185010008 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.174566152 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.170797386 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.190167205 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112233483 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098693636 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.123402057 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112539674 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.163745456 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.165487292 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.187999149 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102171604 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108107415 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.191691963 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10784181 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103091592 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.120554408 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.166529351 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.168532887 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.187276803 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.170275051 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.165202865 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106683235 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.122139823 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.167320223 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.16924092 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.126618924 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.171795537 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106180223 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.187860342 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103428812 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.168481212 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.184131234 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101921464 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099391082 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103595488 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.191034883 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101123184 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.166812157 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.189812428 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10405188 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104821761 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.18844482 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104943964 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108738327 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.167333917 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.125149914 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.174616515 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.166954895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.124927214 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.16969981 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.168490974 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.120137246 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105739246 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105051107 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.19087676 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106345852 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.168658097 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105611694 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.191848437 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.167704901 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.16763552 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.190057165 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.170316465 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100325804 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.191113957 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111718843 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.165215161 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.122775169 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106155078 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101163874 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104865309 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.193003912 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104424573 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.170486813 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.192451088 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105901093 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.104901665 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.191465612 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10707372 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.170862531 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.122097838 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110600786 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099798832 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.128277109 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107414597 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.169995594 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102169335 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.12237016 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.16994463 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.168459507 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.190328951 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111151185 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.170361225 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.120297487 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101667242 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.166766956 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103028579 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.196991137 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109519313 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.1046457 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.126196795 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.167540198 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.164274666 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.190703605 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102389283 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103389617 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.126491057 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109900213 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104571342 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.12142231 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.16985285 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.104522489 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107274237 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.127023159 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10226908 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105018479 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.191353084 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105095736 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101795863 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.124992864 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173213979 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104678894 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.123956842 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102862912 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113111933 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.128290751 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.173200499 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103369499 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.127340891 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106183197 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.165819036 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.169344345 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.126712498 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107192533 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104113327 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.191159551 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114135454 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100518691 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.12575997 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.175295326 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.16978328 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.131790049 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.16937155 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105500158 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.191306738 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172287373 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.167641495 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099539014 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.123078968 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106844734 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100309519 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.189704157 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113231558 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.106290146 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.123857964 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170490415 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.169324554 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.167331299 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.189235115 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101262737 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.171648515 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.125274505 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110732948 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10175919 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.120244436 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.168859671 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.170684181 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104918418 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.128626621 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.167023928 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.166125821 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.123244886 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106475011 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110228382 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.190633708 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.171092406 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106317578 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.125851356 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.168409276 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.174247092 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.165171567 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.127082989 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116989822 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.169706842 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12907399 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107834431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10975615 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.192849442 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.168043205 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.171379724 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.125422258 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107718586 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.171107218 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.193747243 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118704527 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10639283 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.122162863 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.170744861 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105128566 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09991248 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.13269834 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.172066918 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.172019026 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.128496122 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106308127 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172537583 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.133356691 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108456104 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103629027 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.126780889 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.171995251 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10443655 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.189354146 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10681405 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.171093241 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.171770178 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.193630764 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.175290636 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10016632 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.134896321 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11137597 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.172445299 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.188211005 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103668197 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103061646 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.166572648 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.195400836 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.171927973 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.170123645 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.190901591 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.170514898 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107574257 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.128091858 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106560211 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.172099352 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.192205162 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.170127283 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109880947 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10598705 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.130737366 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.166555988 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.170497373 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.196283967 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110060357 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.17380908 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.193355458 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10658355 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104801591 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129209437 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.169786752 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107523579 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.168780684 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.126363679 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102069682 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.17124346 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.193000244 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107828063 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.171679009 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.194074405 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107754695 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.108102015 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.194908677 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.172462752 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.16758268 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107527394 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.192329491 seconds)
  done (took 84.702424492 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.224020154 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1735065 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190741303 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.168668881 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185665349 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1916116 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16884367 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.167839481 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.19075963 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179251616 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.166919453 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.187875301 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.187352099 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.190672658 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.20783074 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.178974057 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.189350902 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.169924913 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.166141099 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.167851133 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.205669205 seconds)
  done (took 4.791438597 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.190768578 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.180908311 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.199402794 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.181639795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.172801671 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.200170762 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.179166695 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.200673053 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.182471908 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.17409385 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.202872638 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.179382378 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.197052628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.179405772 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.175082192 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.197394414 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.182933704 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.174026293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.201733085 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.180609565 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.198270935 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.181553554 seconds)
  done (took 5.045026009 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.183213097 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.170876176 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112240336 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.189202841 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.172692262 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.166973764 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.195604133 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.169057352 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.175361371 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.106932791 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.125520101 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.107511608 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112129232 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.189458172 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105648767 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.167080408 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.196862512 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.172444196 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.173043557 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.167821827 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.143219673 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.168133115 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.167275377 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.125866192 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.18092653 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.171393378 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.191188824 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.173766115 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104336757 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.192210348 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.170818704 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108101793 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107842363 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.125566115 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104667353 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.16984224 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.194152863 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.171450726 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.16803042 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.130021871 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.171462965 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.171528849 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.133387525 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.170602671 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.168217831 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108336273 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.193347722 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.170653265 seconds)
  done (took 8.452110075 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.203363283 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.228847615 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.17177092 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.199411461 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.205061954 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.178272387 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.170103604 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.201810671 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.169591595 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.194605129 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.184776998 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.181989207 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.196664455 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.176423805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.173511284 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.198519235 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.174478414 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.17148705 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.198269119 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.173933286 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.175299364 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.195842216 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.182947739 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.204265263 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.177517319 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.17242824 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.193580002 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.177497589 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.181652141 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.19929788 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.176820352 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.424202604 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.204739071 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.172671603 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.17149476 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.19689408 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.184092315 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.173400604 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.195739989 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.172452997 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.173026768 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.196894964 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.172623527 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.182329552 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.19666274 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.174711418 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.171429644 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.192077808 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.182584141 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.172522458 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.201734365 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.182191968 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.195648023 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.175024513 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.175627525 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.202231086 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.17286802 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.170258652 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.195542355 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.181867722 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.170274944 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.196043472 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.183156811 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.173008258 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.198723965 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.183104043 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.195205263 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.177284905 seconds)
  done (took 13.887949971 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.207452161 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.174804495 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.205505765 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184840102 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1749908 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.197981642 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176848933 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.17484228 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1976105 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.180043501 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.196057213 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.26791606 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.194944457 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.181345326 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.174453966 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.199379697 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.177005024 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174741508 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.199299729 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176387689 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.175787114 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.205340509 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.177380018 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.204807316 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.188078598 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.173394395 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.196934598 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.177412038 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.184140622 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.199454441 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187588572 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.197102341 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.178488113 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.184865051 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.209436497 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.177258831 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.170493309 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.198952802 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.177565015 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.177088404 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.195721029 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.185234648 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.175900544 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.19431159 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17862959 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.175114469 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.206894412 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.188808985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.204219816 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.182385362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.175693659 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.208774711 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177359581 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.176199563 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.207302181 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.191531979 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.207934004 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185770882 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.198588793 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.187774457 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.18469638 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.213952845 seconds)
  done (took 12.707790342 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.177905667 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.169567844 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.169120872 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.191795765 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.171825729 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.170446491 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.168185854 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.192981821 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.171279031 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.170122504 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.192113492 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.171809986 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.170020439 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.168214931 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.194753941 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.171340477 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16999647 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.170298512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.193521767 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.171391209 seconds)
  done (took 4.473714378 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.185087157 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.184901188 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.194121275 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.179578384 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.171393185 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.199476218 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.172487407 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.171623201 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.171138934 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.195285728 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.182029033 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.178478226 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.195542447 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.179106092 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.201508024 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.179949661 seconds)
  done (took 3.893321036 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.19557792 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.185296606 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.263721364 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.173387035 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.194951991 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.181728635 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.172170507 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.172192872 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.196493255 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.177686365 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.17511027 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.198812241 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.174118145 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.172445124 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.195218991 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.176403195 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.170116244 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.199657221 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.173267835 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.239234843 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.200379284 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.175899507 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.174791889 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.198183934 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.174008334 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.175751756 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.201581578 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.173813436 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.173144038 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.195642359 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.174405329 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.17733953 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.195723538 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.178142157 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.173989751 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.198540209 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.174640769 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.172382997 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.173951009 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.196153291 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.174796505 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.172480488 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.195312923 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.175817574 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.170738905 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.195850478 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.17267979 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.178806236 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.194633605 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.176598526 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.173653373 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.177552698 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.200170981 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.180311693 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.180198413 seconds)
  done (took 11.120713526 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189982818 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.176086531 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.20512124 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.172676418 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.17274997 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.173783999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.196514913 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.176441218 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.17234153 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.19603514 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.174438066 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.174617649 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.195048431 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.175697619 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.174082326 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.172649803 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.193312025 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.174553814 seconds)
  done (took 4.224089804 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.182962656 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.172527484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.17638943 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.194669896 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.173649343 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.171599664 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.194691564 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.17261712 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.172836309 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.171471513 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.19711188 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.171455069 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.170009436 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.196101978 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.175881614 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.171074013 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.19423955 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.172576396 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.172285893 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.170689329 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.19608461 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.173741357 seconds)
  done (took 4.905234224 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.126651169 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.19395919 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.117628921 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.203127998 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.110846399 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.109970827 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.138619307 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.112287275 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12270676 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.132925674 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.110790551 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109460064 seconds)
  done (took 2.549976836 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201883952 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205431002 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.196580475 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176788821 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180386253 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201338453 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.178567553 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.176575253 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20857133 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1886991 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198787243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187664636 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183852947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.207697965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180999654 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.204069299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181007685 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177743088 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174593923 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.215196591 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.179609536 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207168681 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179430861 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177214352 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200659002 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187106653 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.206732833 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191629606 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176475458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208674974 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18278252 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176259988 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.209306575 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188888973 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196588067 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186701034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.176086255 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215053637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183368977 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.207260962 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.176508764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181311837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.207681406 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184562618 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.185441181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200915769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184013271 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176368429 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.20172588 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198298425 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.204735727 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186764221 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180548456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.207491453 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.185209679 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.222104527 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189549883 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.209136848 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182779934 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.210251098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187989962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183348733 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.207693192 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188773907 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204495658 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186962237 seconds)
  done (took 13.664017352 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.215305162 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.174047512 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201057418 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191492659 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.183725166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202415721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.179178281 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200801041 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.179674025 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174543869 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.239556133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.179373426 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187424033 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.209280813 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.180652191 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199090069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.18070473 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187128977 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196518862 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.200791689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176356103 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.209563551 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186437381 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.209608804 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190512155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204041682 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.180329422 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179019856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20037112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.181642756 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.182600275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.200082983 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189179151 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.174556523 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.209194466 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179492113 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1769761 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.207969917 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18042675 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.181310974 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.209157235 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193759203 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200377564 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178621095 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.211444905 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180389035 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179103072 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172729633 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.2017661 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176250208 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.212593707 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191158905 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188906557 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.208438832 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179355991 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200214816 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.180081699 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177486812 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200807789 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184918019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185329656 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20194748 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200370092 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200839213 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.179542809 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185489073 seconds)
  done (took 13.616174968 seconds)
done (took 245.58104679 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.169764287 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.200147473 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.159222823 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.198622166 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107354007 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.160277611 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.164657207 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.163296156 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105957061 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.132435866 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10740906 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108410445 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.233271382 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.1075991 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106169382 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.132888878 seconds)
  done (took 3.319050067 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183517081 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.290295288 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.119283714 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.13451063 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115654396 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111822135 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.134680583 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114323115 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110475078 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.140824016 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.114835263 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10938831 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.141191935 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111216283 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110511151 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.135235114 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121503238 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.11260245 seconds)
  done (took 3.381883058 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.13645731 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158786548 seconds)
  done (took 1.271049303 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.141402929 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193164023 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.232322807 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.177862579 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130820516 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.152278989 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156237379 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.146753448 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.169663932 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.147131543 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12679201 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110071652 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.155662213 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117693201 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.182060593 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.135138167 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.133549826 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.181466469 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.205180001 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.1151549 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.126462832 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.140665231 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117126375 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.204554364 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.159636697 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.145273718 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116960562 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115534025 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.136097002 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.182116478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.118507196 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.150581651 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125187699 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187646206 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.115992818 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.184760536 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.120614503 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.135242333 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.18180152 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111822984 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.138140376 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117835302 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127211921 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.134869711 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.117062134 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119424615 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.139532384 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116360661 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.143326841 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124743778 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11959881 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.14355427 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159647402 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.146516184 seconds)
  done (took 8.808419249 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.827034964 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147211916 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112661401 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.973470323 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164771899 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12758515 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.801791447 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.152396551 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.289841691 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.811587353 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124334005 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126184885 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.325633865 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.652661109 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.076570781 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.876312524 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.657152409 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.150564403 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146442952 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.182636759 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120511057 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160476993 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133034992 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.661891198 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.114245476 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112407288 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143800158 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125955178 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.194513926 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113215195 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.137003786 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.236880088 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.687297448 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224196474 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134518543 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113064671 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111804963 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.238055847 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303901919 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.234006473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.230169842 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109887922 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111248526 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142825843 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132669454 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107797221 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198792247 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.255710319 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.250976102 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117080497 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125448368 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147406534 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118596175 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.19700065 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.109353032 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.859910495 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.867006762 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112119832 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120334096 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.15174948 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299500932 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115120806 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.295655211 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.169016908 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.229891341 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111148289 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.03636523 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.236564879 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111353614 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.146746618 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12003399 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117467457 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143566717 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191689679 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.629557575 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123390845 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.14071173 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111055965 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264992577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.112007703 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133886809 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173510766 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137527234 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121278955 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14747965 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125960055 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.248746219 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.640076994 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148620032 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121397644 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.141793666 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127996985 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112875414 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.265040949 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246319771 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.194847143 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.266460341 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121980312 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.198491449 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.23610043 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12000692 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252354793 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119393351 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.160074678 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121253179 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.242087373 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.174202228 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.116179934 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116117325 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.146245903 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152504046 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.147742429 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121568319 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.250567342 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.697337573 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.212845708 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.133129599 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127154084 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121681308 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19569985 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142585993 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294559672 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123593639 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.236964715 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120868439 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109355268 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.144856899 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.19854097 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132068015 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12045871 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144390991 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133720315 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.674838961 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237716223 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125441537 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.287995745 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.236433353 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121682057 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.253124745 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142097664 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.182334322 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.15356892 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12117255 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112316654 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.027302196 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.157839484 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119905621 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139565993 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.221286581 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111826654 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.140029111 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113731118 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108842006 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.014914849 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.148506293 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111746558 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.116098482 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.142978412 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122810994 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119343113 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.140813342 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173901166 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.329829013 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126228974 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.142320641 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114385213 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.193808606 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115913424 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113828167 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.113018059 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.140060219 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123265611 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.141127958 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11878099 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.208125203 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171901386 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.270134936 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.882725541 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115545197 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113441529 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.300679537 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135595732 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.722068393 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121246916 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.286488139 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.200252279 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.109660262 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.857362296 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.178989184 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.246332256 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12575995 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.242306296 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109656141 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144798513 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174853717 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.136234081 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120221367 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.195629751 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128133702 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149959268 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.086316671 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112375026 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.285591443 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.11052423 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.252386941 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113439698 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145140753 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.724218078 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112052371 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.162463367 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.176593728 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14158576 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115158117 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.823474193 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.1152421 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1480296 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121730421 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.251269351 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.200533313 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120370044 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146610168 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127329756 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.201187136 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.264426506 seconds)
  done (took 65.88524086 seconds)
done (took 83.638656869 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.300278925 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255410004 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269155171 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.216522835 seconds)
  done (took 2.104176716 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.336329578 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.17262798 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.302057561 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112795409 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.318039961 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11215949 seconds)
  done (took 2.354867987 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.483685484 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.383051827 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.307368128 seconds)
  done (took 2.180262734 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.243660887 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.240133407 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.300514912 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412992822 seconds)
  done (took 2.307607949 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.362738906 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.201158519 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.191460232 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.289386721 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.334447795 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.309960337 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.222486532 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.271370806 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.206320688 seconds)
  done (took 3.438257283 seconds)
done (took 13.386579129 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.309840322 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.238419191 seconds)
    (3/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.22645342 seconds)
    (4/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.32110381 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.171684456 seconds)
    (6/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.181836679 seconds)
    (7/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.320600019 seconds)
    (8/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.212691972 seconds)
    (9/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.186394057 seconds)
    (10/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.308147049 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.177638149 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.175371941 seconds)
    (13/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.180508533 seconds)
    (14/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.177812694 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.3009807 seconds)
    (16/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.244895298 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119876056 seconds)
    (18/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.259249523 seconds)
    (19/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.160216566 seconds)
    (20/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155677024 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11732401 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.193382959 seconds)
    (23/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.197031719 seconds)
    (24/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158132138 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.176665768 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.181068608 seconds)
    (27/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.139717605 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.117192243 seconds)
    (29/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.254062985 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119692487 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.112294166 seconds)
    (32/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.15492875 seconds)
    (33/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.205613703 seconds)
    (34/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.148996788 seconds)
    (35/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.142406428 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.196841226 seconds)
    (37/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078887158 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.18348183 seconds)
    (39/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.159095659 seconds)
    (40/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.187895667 seconds)
    (41/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.168571444 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.200416635 seconds)
    (43/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.180386608 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.180304891 seconds)
    (45/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.276710233 seconds)
    (46/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072873052 seconds)
    (47/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.151231111 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146651783 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176326119 seconds)
    (50/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.254804412 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.145475951 seconds)
    (52/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.126868084 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119363517 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.097361531 seconds)
    (55/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161443656 seconds)
    (56/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158269471 seconds)
    (57/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.098320395 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.209793364 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.305623255 seconds)
    (60/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.179800973 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.099192472 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074869983 seconds)
    (63/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127279564 seconds)
    (64/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.308004601 seconds)
    (65/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.176523002 seconds)
    (66/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.206341463 seconds)
    (67/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.177580792 seconds)
    (68/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073690724 seconds)
    (69/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.143940452 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074657828 seconds)
    (71/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.072151333 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.14359622 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.121180658 seconds)
    (74/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.177380383 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.19991069 seconds)
    (76/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.139914696 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.215862337 seconds)
    (78/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073711451 seconds)
    (79/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.098664975 seconds)
    (80/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126829791 seconds)
    (81/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.203166496 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074894378 seconds)
    (83/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.073949189 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073525687 seconds)
    (85/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11135357 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.099332651 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118324857 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.193980218 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.141905051 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.197180653 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.177275681 seconds)
    (92/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.207252521 seconds)
    (93/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.160133035 seconds)
    (94/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.073534441 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.173023566 seconds)
    (96/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073000716 seconds)
    (97/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111611919 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.138646487 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.181102122 seconds)
    (100/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072866866 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118856055 seconds)
    (102/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.187915485 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120416378 seconds)
    (104/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.188496149 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074856864 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.192869457 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074064886 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.10023034 seconds)
    (109/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.152899709 seconds)
    (110/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.193859453 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.157164945 seconds)
    (112/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.160836139 seconds)
    (113/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.183503035 seconds)
    (114/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.133447116 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115211321 seconds)
    (116/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100755736 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121528996 seconds)
    (118/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.074086071 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119238365 seconds)
    (120/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.100055067 seconds)
    (121/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.164701779 seconds)
    (122/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.128663648 seconds)
    (123/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.141539352 seconds)
    (124/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.180124742 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.179578005 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.099681992 seconds)
    (127/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.166059035 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.073719197 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11315526 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.100664685 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120519086 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073831522 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.221510061 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.197433304 seconds)
    (135/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.196016376 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.074413533 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.099941774 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.151585094 seconds)
    (139/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.074609948 seconds)
    (140/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.09951185 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.185314126 seconds)
    (142/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.18359803 seconds)
    (143/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.072586551 seconds)
    (144/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.098863398 seconds)
    (145/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.07823558 seconds)
    (146/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.075604092 seconds)
    (147/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.133517183 seconds)
    (148/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.077056948 seconds)
    (149/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.107430599 seconds)
    (150/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.137036327 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074402458 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074754543 seconds)
    (153/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.10134681 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114525743 seconds)
    (155/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.07333339 seconds)
    (156/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.072937849 seconds)
    (157/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.18353191 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.206764341 seconds)
    (159/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.179124664 seconds)
    (160/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.077544473 seconds)
    (161/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.072323378 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.223878565 seconds)
    (163/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.074483 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.183191741 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.10239484 seconds)
    (166/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.074111003 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122166757 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074285985 seconds)
    (169/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.074850019 seconds)
    (170/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.099058946 seconds)
    (171/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.134266504 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113296329 seconds)
    (173/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.076819661 seconds)
    (174/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.098357744 seconds)
    (175/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.183604338 seconds)
    (176/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07869457 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.193434813 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.146992584 seconds)
    (179/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.179459366 seconds)
    (180/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.180645359 seconds)
    (181/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.103186199 seconds)
    (182/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.073744118 seconds)
    (183/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.075405818 seconds)
    (184/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.073443044 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.143460168 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121914161 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119677811 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073772775 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.098803235 seconds)
    (190/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.178340777 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074857863 seconds)
    (192/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074613377 seconds)
  done (took 29.089698853 seconds)
done (took 30.106154581 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226683172 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.116110326 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118186162 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117450947 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.216004058 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122335185 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.212444333 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.123839274 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.182544055 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.20427705 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114676226 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.182952246 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.116730327 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.270257405 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.120077247 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.14131369 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114131293 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.183842649 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.213167139 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.189474881 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.215737784 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116250664 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.182788577 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.1403563 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.192005467 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.141889893 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11946419 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117739161 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.20891207 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.182477106 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117914908 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11324495 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.21495848 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.186850464 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113485564 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.207005941 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115715433 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.078462595 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.205019507 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.183428401 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.185142079 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.181062377 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.148967892 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115810656 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.181264696 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.207491625 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114351243 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12194648 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.137629494 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11967583 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116271377 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.213967559 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.182924561 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112186713 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.136456144 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117406233 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.184250697 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114759563 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.213736775 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115246119 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113787821 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139611035 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.184057225 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114915249 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.206470818 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.116075943 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.181013449 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.208098547 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.18261167 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116520048 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113585039 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.206855445 seconds)
done (took 12.398683324 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.125792535 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.165171158 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.217028777 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.286514247 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.141062653 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.156635745 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.196986098 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.20275824 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.220112222 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137685061 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.229915478 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.201666908 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.225458409 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.187556132 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.1291534 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.211503491 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.189154195 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.125691083 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.288461704 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131226754 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166958426 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.188635751 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.231674397 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13379178 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119669409 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.176251078 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121072275 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.207986412 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12316864 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12705185 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.157598561 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122506992 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.119072354 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.224808813 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.192349888 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.187384716 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.15571159 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.184772777 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118209148 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.146273216 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.128140386 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.19463411 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.146605462 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.130577927 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.2076501 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.18987929 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.188782986 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.213892756 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124624766 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.183343286 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.14750399 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.206081514 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.188051591 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.215580827 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.189463965 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.187126503 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.215600403 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.190622951 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.119626274 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.215015249 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.121811368 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.120020096 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.149437389 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.201999883 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.121046627 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.215991395 seconds)
  done (took 12.535115664 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.140199502 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145158461 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.150203766 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.126311454 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.123239752 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.137877379 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112152328 seconds)
  done (took 1.997491166 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.120745543 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.256036686 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.222321191 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.22267844 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.252388666 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.228248386 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218478736 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114553939 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.202444913 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.148282994 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.25753254 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.310071517 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.180081759 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.153002696 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.199761741 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.140080103 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.201130518 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.139486735 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185383956 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.223277869 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.186754211 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.197461803 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.152888611 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113914805 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.28179928 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114301787 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264775702 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.188350548 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.205251396 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.185912872 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185562322 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207669077 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.279373962 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126436925 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.176503181 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.223354472 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.277671718 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.185595064 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.292242541 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.118079945 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.277236893 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.185311183 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.186308316 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.214254084 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.187549098 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.182608083 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.217644934 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.185068258 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.181967601 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.287801743 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122370382 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.283929838 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.18078445 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.213377475 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124006016 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.186260081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.220133704 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.187521977 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.287992997 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.186722757 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.222894416 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.195199705 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.28297632 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.224508146 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192365306 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.286765027 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.248108274 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.211532361 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122051403 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.184470332 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.225037458 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.182834396 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.154447697 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.184464535 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216313359 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.222854094 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.198459421 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.181837113 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.152953026 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.117397645 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181863379 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.141657364 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.189839347 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211694467 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183559998 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130261426 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152435891 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.18681945 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.118905699 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.159821696 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.185989149 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.12443503 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.218007192 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.185319403 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152960849 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.20430903 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.149774468 seconds)
  done (took 19.995154525 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.123696438 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11611682 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.119129062 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.143149303 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.117057247 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114963964 seconds)
  done (took 1.813545915 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.150965568 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.185707841 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.220100968 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.188837546 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.232172013 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.291007732 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.294226777 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123272615 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.228533429 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.19563456 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.289947842 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.271327661 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.297078381 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.188762557 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.293880032 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.188066212 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.294858662 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.183832863 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.222128656 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.186887889 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.127863517 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.2204022 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.185356633 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.226028425 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.186643046 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.215671455 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125209808 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.193427743 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.218963553 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125588918 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.190162353 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.214450197 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121921616 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122262145 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.294520819 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.120766482 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211911879 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.19627929 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.189859653 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.21746757 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.275769963 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.211897338 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.194238177 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.194152261 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.15136419 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121787474 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.221576175 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124019101 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.295247497 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.196380673 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.195043479 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.214552084 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.191150198 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.195238026 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.148825079 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125523077 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.194593116 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.294011948 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.189747006 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.150907221 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.189454794 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.187787547 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.152725659 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.191459083 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.186332784 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.223653212 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12224074 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.187143911 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212922551 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.189011595 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.194880715 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.216515043 seconds)
  done (took 15.456050231 seconds)
done (took 52.851091817 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.612621845 seconds)
  done (took 2.692991629 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.870150165 seconds)
  done (took 1.952431531 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.861459163 seconds)
  done (took 19.9744542 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.529715041 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.69812135 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.897556253 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156277481 seconds)
  done (took 3.363488767 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.06561509 seconds)
  done (took 2.162832122 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.313101013 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.284850275 seconds)
  done (took 1.685457543 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772157884 seconds)
  done (took 1.87599111 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.434786123 seconds)
  done (took 2.524180172 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.415421293 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239233275 seconds)
  done (took 1.757555082 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566395807 seconds)
  done (took 1.672017033 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.767909768 seconds)
  done (took 20.874770492 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.280779109 seconds)
  done (took 1.387719186 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305167271 seconds)
  done (took 1.407662005 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.865736302 seconds)
  done (took 4.970999015 seconds)
done (took 69.395744943 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.130006638 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126439566 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125160603 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.150858847 seconds)
  done (took 1.629072827 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.19646169 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.18683392 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189076567 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.213760323 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.192693493 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.184693592 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.214198299 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.18993546 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.184382881 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.215235376 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.187074083 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.185185406 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.215737334 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.186570836 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.184207855 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.214490132 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.190153547 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.187553771 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.21137334 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.189161722 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.186062806 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.184403415 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.21628232 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.189046377 seconds)
  done (took 5.805045998 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.129840128 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117324087 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118509778 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.144100364 seconds)
  done (took 1.625388233 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196846199 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.196640124 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.220062407 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.191810265 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.19484271 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.220974839 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.185532336 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.183193892 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.212081515 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.192503673 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.198977288 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.224163719 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.195320085 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.186395485 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.221504301 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.183614491 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186169247 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.22584531 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.191981141 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.192506767 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.214971052 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.192442421 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.188803763 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.220183324 seconds)
  done (took 5.928096958 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.246325459 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.197170497 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.233651404 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.218180801 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.231769619 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.185477426 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.199072362 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.218066171 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.190977414 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.186964111 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.217861495 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.220881833 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.216810497 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.190812516 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.186085664 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.221154686 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.199821109 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.190265679 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.249240117 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.190795792 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.215943368 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.197890464 seconds)
  done (took 5.717510271 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.135102341 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119222142 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.116062504 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.150457471 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.129298086 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120175063 seconds)
  done (took 1.890100922 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.124337047 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115511668 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115051986 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.140732408 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11806251 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115173947 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.112472365 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.141765742 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.115625658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11411666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.141080214 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115957208 seconds)
  done (took 2.591406912 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.352411725 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120500893 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.148365189 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.122288991 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125023453 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117221507 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.158814515 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120771789 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.307432336 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.119652201 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.157931127 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.23414036 seconds)
  done (took 3.207158603 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259573115 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21528849 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.347143481 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360278086 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228414722 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255183845 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276674632 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258820318 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.275941481 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205010584 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298449333 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206554202 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244920412 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234836608 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232984375 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143368064 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257272817 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247695041 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239510649 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253602958 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250358401 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251777882 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236823563 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243704657 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203194775 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254597323 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.18867879 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19429375 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259242867 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229099535 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263523806 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240022368 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208380171 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282112809 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310238628 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238612133 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287295337 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231881669 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162457796 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.267244251 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.311863881 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204777008 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280753679 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245240179 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198270316 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260723279 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219963218 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.2642625 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.20024402 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205794728 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275420732 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252691768 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.246833602 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233201682 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318321323 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226164318 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.208804432 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204096637 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272760806 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245788867 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25289377 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.188345841 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214173402 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26892933 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231992867 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.237836629 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.233718961 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221379743 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232754444 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279848805 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242701877 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254067057 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.293945652 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197613999 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250527525 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231464579 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263255999 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224965008 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247168618 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.186132596 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241308962 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204271033 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19489013 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.271126054 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189750263 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284039246 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19345842 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.296982088 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21647872 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22068923 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.253373132 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219481599 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255232235 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206965324 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.122476425 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209601599 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.251532031 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217732532 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226326059 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224131375 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203621096 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.225573727 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214182009 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.215995577 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219389541 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.142091311 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230702026 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248546839 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.199517903 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249266858 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216562238 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.217124466 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263807487 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270017091 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197823065 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19833485 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274916546 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246750492 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.201699421 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264978386 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244777044 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.155104926 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206316498 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251418514 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252675036 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236556353 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244736544 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238345595 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203363694 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.156247643 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221856145 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253878956 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.21612794 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19321604 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.24770184 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284651138 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.195525856 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199577942 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259078728 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200404764 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221101524 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206093585 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204167659 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.236225351 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.212485494 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.231896553 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215193375 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248101946 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217393618 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2512006 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200010361 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269377566 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200683271 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.249383305 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209634172 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.184948679 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.271096499 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270823512 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199587926 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2940868 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.230789799 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224519323 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252858369 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195956104 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271694605 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194486177 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.18694653 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250647133 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222051191 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256122219 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.23773949 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221377085 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.262770633 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.214697232 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241554423 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260051695 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.23435124 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246848084 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.21021834 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249590358 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227034205 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.186253441 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.222477848 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.194801495 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199976489 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229435531 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199987518 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269960784 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228209641 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217135902 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250940584 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202363614 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270889184 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.194894908 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256935163 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.229666817 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233359388 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.242914803 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268253206 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222727151 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236632976 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221693434 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.217518757 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194662998 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.199624837 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.260535564 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2005771 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234524584 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207504276 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268888959 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266887135 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211581537 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229157053 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261037413 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250649489 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.186510344 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.249580136 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230181876 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247426814 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.248476279 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231271331 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.225104251 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268293519 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208919439 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279407054 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219845144 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256661339 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276754889 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.21882693 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197361955 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244558667 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226508725 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236931921 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224898019 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.242998056 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197380552 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249015686 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.205827457 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192612844 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278564487 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236255963 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236511914 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.249592221 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231807786 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218965201 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209009478 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249114764 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209139296 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.096049423 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264336105 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270976057 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213642033 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220578694 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264859656 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198473841 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343937231 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279769996 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242592785 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234298423 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209605655 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25137666 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223094533 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257468331 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246281207 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240933768 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231033076 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252315159 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.20854423 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226280464 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216914482 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215281335 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157830736 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.201612932 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.252815975 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.206267109 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280898516 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205885893 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251496523 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222241219 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.239044406 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.213686772 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233139331 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250351464 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250144318 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237729842 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.248646616 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.227203358 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289019148 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189944903 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22575832 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.201169606 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.276273971 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19423518 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220195987 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.211729392 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226359521 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252484786 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227596012 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232356536 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.197087375 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220422502 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240923327 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221587459 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2033261 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.23459764 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252775206 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.144955241 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201656269 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257691132 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286331532 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240313175 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232123519 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131610516 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28137499 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22527683 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201789505 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248870618 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235537202 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.200258918 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.280513423 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226505456 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239052176 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223322288 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235187306 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217909135 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193831835 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253643746 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236707461 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.241932139 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224212842 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254534298 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264867171 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211777179 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.208051645 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245723583 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237842847 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.275764743 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.197462211 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254453845 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219515057 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251051009 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23515182 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234704529 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286944716 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196719743 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222809241 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237950891 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194207348 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250944985 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.212291023 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200064783 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264354531 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222659442 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195411185 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226381546 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216355397 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249780646 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208829109 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.197252416 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279626474 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.194648219 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253391616 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228644578 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229405779 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2190389 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242072182 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200123929 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238171673 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210580325 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19784763 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.266044802 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241967069 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.229292188 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239806114 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25447577 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229126407 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255690866 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209000109 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.696920979 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1958526 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2676922 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21361917 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28057333 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215817597 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256704365 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22293166 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24220469 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222960948 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243828111 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.267267563 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255739223 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.2224475 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229441236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208819368 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206252224 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.231675946 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21784486 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253446203 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205441509 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.201246442 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.252989229 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206428395 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.24337072 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202990598 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272750125 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211167076 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28087603 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275132117 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207967412 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224425685 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268631995 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196546452 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.264376636 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265384736 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209209377 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216356266 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.228322994 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.205912528 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260635096 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.192746248 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249729632 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224065489 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220807267 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252061913 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.203851985 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253014753 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208873596 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252019147 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196732105 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.253541262 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223043879 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199530146 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.226696796 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22117394 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255770525 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.218523955 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226572814 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.241252839 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242228656 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.22185945 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203050016 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312126659 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225016714 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284862698 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.125817625 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23389313 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207379602 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248274283 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.222042069 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252727343 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.199799348 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196600209 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.230842893 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155833222 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.157099351 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220196008 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209767336 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226935776 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290332315 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.198310796 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.32754788 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203128775 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25118002 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.1097964 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.195163275 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238415863 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204575924 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239758718 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194506203 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260493275 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.215260444 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.245111708 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203470998 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.190333484 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227444157 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226024835 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24996747 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221525739 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243853162 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.09610291 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210935894 seconds)
  done (took 114.784505576 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187452006 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.166783494 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.184052461 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.239752208 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20982586 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.323603402 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.254350154 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269585408 seconds)
  done (took 3.040709972 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.139280441 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.169012169 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147313829 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.158448125 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129539997 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.429720322 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16890589 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.131549949 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.168720211 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.17396678 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.155414807 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.536281677 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126289171 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.156988217 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119326245 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130751408 seconds)
  done (took 4.239109889 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.958867458 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.952597465 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.74070739 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.85586048 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.291362936 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.197913531 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 1.146328933 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.208649083 seconds)
  done (took 19.562621938 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.159023274 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144465719 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.323680269 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.268516477 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.156301005 seconds)
  done (took 2.26414685 seconds)
done (took 173.383871037 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.199589654 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.193595471 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.193502264 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.226221019 seconds)
  done (took 2.00840583 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.175709577 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.085437242 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.087070653 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.113380644 seconds)
  done (took 1.66610924 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.418992638 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.083995119 seconds)
  done (took 1.732577615 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.221374358 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.214692237 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.234044832 seconds)
  done (took 1.894905832 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.214082866 seconds)
  done (took 1.421669673 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.136156249 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126498625 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.241578813 seconds)
  done (took 1.719426098 seconds)
done (took 11.658926026 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133330379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.553925624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.447140462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141910385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.801573855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.440847144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.118092525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.184462061 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177925017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.150862584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141688022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.78870236 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.136645107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.516579264 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.095515056 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.542453543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.787905317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123851618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.159428454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124395613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.1058562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.149295067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124708544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12269819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.814832692 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429023681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121572136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.553526269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122152259 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124972528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.438475699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123195117 seconds)
  done (took 18.998267133 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131076329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172959067 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15772101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124033449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12468925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.15282853 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.136002358 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.132689504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209234864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121648424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.170030497 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121129368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127848365 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.150821986 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146396717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121675739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124059913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.156901519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130900721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123857615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.171898666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121350011 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123159476 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.154071764 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122751295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140506375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.152949281 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.135122198 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120800488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.156168939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127312256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121513342 seconds)
  done (took 5.706857538 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153572954 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176110963 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.161233067 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146713951 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186846906 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125568253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.210436366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155862885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202077612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12290197 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140752285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.150474197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157790109 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122208743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.175029517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121644835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124422959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.15404802 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130331959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123851847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.172054453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120675875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124436692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.153539165 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123221391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142309262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.152389987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136200435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120976064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.156418956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129363176 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122740526 seconds)
  done (took 5.920143782 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.19889714 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.193399581 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.200976962 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.230727547 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.189887654 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.192104433 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.22274308 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.190340025 seconds)
  done (took 2.848382496 seconds)
done (took 34.689190935 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.203452894 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.193588252 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.191717775 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.219172969 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.205437028 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.21330416 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.192088284 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.181974563 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.217533617 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.19637321 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.121785648 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.182775179 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.225503857 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.185838262 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.239668875 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.18921397 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.24385987 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.208675155 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.212813081 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.189420644 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.184635615 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.242901166 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.186313613 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.180962376 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.221202495 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.1243154 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.229822387 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.184591899 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.215559882 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.125244864 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.235849322 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.186634012 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.181017499 seconds)
  done (took 7.722487973 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.226888478 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.186576905 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.218932948 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.187391859 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.187036424 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.21664783 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.223503033 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.216889349 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.18801594 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.187672692 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.185507705 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.297961618 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.190009465 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.216828434 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.189118796 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.099525488 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.255377487 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.187313951 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.120022107 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.11561236 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.185617256 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.18499202 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.325865287 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.183092648 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.186343215 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.218841547 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.191558111 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.191750445 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.218770621 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.190272132 seconds)
  done (took 7.208133746 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.199853436 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.138253477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.143693055 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.208027168 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147382525 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.167868517 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.149484264 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.197581752 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.177059681 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125210958 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.134674181 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.242765039 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136415732 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130518444 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.157340764 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.198127573 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.200240217 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.155798045 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.131195335 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136562808 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167397149 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.198462168 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146355232 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.160360469 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.124189856 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131340569 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.162150043 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137501734 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.130182587 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.135349974 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.15805492 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.127995652 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124983011 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.188217099 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126493631 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.195134771 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.236091003 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13367116 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133741959 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.17654073 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128560915 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.126765635 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.175203309 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166255403 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123958951 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.227038541 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.135793341 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135910117 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.153984939 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139060259 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.161416943 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.156108627 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.202041609 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125136716 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.155512198 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131760513 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12390212 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.15859663 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138485881 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127171144 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.233698755 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.131812579 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132603674 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124585165 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.164560077 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123878735 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123914221 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.160620399 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145833606 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130132394 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.183360511 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125456848 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.193305338 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.164913345 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.134700065 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134402926 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124006385 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.164732277 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133700766 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128225935 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.166324639 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128690654 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.127256454 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.166438946 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.204229486 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.197230814 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.226205843 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.197639917 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127505648 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.15666082 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140424125 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12576683 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.159076901 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.137437071 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.127100013 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.126958264 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.227479991 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.194521298 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.123294476 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.17622607 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.129973856 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124891403 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.174050952 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.130135356 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.129735882 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.163324702 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.164206835 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123192317 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.223404514 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.197154272 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124934012 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.129391325 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.160134506 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124538194 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.197115395 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.168560429 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131607484 seconds)
  done (took 19.397125009 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.329593293 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.311618181 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.192257344 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311138132 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.167715593 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.222560711 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.306693829 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.30884639 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123559282 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.194104758 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17501491 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.290226853 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.157095896 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.146621525 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.3106389 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.364680107 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180722015 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162330562 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.192707061 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136984226 seconds)
  done (took 5.83480019 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.206234771 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153864081 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.174320785 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.209867202 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.191326373 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16826894 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126085608 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.202547446 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.224030822 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.135821696 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.126909616 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.232528082 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.190646352 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.196873489 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.170436761 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151066776 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.131733684 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.160278028 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.204654645 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.129155009 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.125304645 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.210007085 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.133113559 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.174922211 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.20043949 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133077446 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.154215855 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.131084743 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.188746547 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.190536671 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.16325036 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.202068368 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129276679 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.128931581 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.19593181 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.195575154 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.222044296 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.129415056 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128186078 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128219443 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.171500195 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.194704306 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.189961668 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.121823349 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.202737899 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100198329 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.197186946 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.226398319 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099820913 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.199330148 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.22548482 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.199325589 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12883943 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.235507297 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.192057279 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.200651414 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.165029522 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.199389798 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.131051334 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12257157 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.156007263 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.130566794 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.191158763 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.229321601 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.195717063 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.202591573 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.232369847 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126372927 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.129772582 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.160731096 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130358916 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136773636 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.237567935 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.192985424 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.190576638 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.165582132 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.194358945 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087513104 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132287603 seconds)
  done (took 14.737757887 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.151635704 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.187154836 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140461912 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.185776378 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.1910471 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128985683 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.219615815 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.141512087 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.191162061 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.226457172 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.193444052 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13593775 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.174535829 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.133635396 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.186870421 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.170921583 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.192693647 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.154892274 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.172895138 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.149114471 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.191074353 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.161965256 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.135929029 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.133967217 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.182741432 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.135267578 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.148298234 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.224109483 seconds)
  done (took 6.005208595 seconds)
done (took 62.132213565 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.491630876 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.666212772 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.429521283 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.429082848 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.38152882 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.48023239 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.427062919 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.42861441 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.97004649 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.325586238 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.428683797 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.427083743 seconds)
done (took 31.130109008 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.390601427 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.88623568 seconds)
    (2/2) benchmarking "String"...
    done (took 1.641311077 seconds)
  done (took 4.770314219 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.360625616 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.361375495 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.635591645 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.361166536 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.364799742 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.360687399 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.363347342 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.400020251 seconds)
  done (took 17.087364832 seconds)
done (took 27.848798455 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.438749919 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.55155456 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.584452415 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.371215355 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.361597512 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.36824271 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.362426642 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.397564233 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.379121621 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.360329776 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.82190226 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.619582124 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.375114165 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.708984638 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.371421352 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.368769201 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.377910855 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.583257575 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.369978821 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.377768939 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.321494178 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.322647899 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.369873264 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.345186419 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.372528035 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.379145327 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.412475631 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.361281142 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.555868385 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.384270986 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.380936592 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.365306049 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.407093342 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.360455731 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.377469479 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.371671813 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.549892512 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.380670816 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.334118639 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.389895403 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.555835881 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.382826347 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.365027291 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.373809609 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.36559943 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.448221438 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.333628131 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.502065531 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.400154611 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.377782187 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.386500184 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.705751534 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.369073743 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.371429986 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.376396571 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.583505934 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.395944035 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.425483654 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.389284991 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.37228894 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.36677976 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.363642249 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.392007771 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.380555142 seconds)
  done (took 154.121163144 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.364985032 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.36942418 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.366491677 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.432886662 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.367030798 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.377157564 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.381791785 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.366242217 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.367163952 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.395661157 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.369411997 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.363357641 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.369036805 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.433123764 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.433144614 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.386150015 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.372149989 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.367285966 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.432279345 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.365530197 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.389590292 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.371500379 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.377390314 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.366853279 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.373252823 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.452276651 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.410968934 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.389418918 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.436688124 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.366866089 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.369888861 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.417839282 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.057137482 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.398825854 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.380580759 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.412600297 seconds)
  done (took 86.902337321 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.368423131 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.367616493 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.368544224 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.415143527 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.368242 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.174630048 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.179263468 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 3.409543681 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.462668748 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.898554847 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.332310915 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.36989776 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.513845617 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.378376217 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.365892238 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.384090798 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.394995046 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.374261884 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.370989554 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.176009158 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.387606606 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.545882599 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.554013028 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.382749268 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.4194608 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.731267257 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.368191444 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.41674216 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.78459947 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.419594636 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368531402 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.431669012 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 14.181187694 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.529578944 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.37160395 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.416590959 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.371478691 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.65841808 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.36897777 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.372735573 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.369745346 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.374742258 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.73707334 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.370528703 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.178179443 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.371847071 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.394211491 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.3724456 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.370216968 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.473859268 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.163024175 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.373733344 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.370569409 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.371704113 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.375789214 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.37331008 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.369787554 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.422713296 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.478397353 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.47344446 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.37341832 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.372544269 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.418377967 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.372294377 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.512816597 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.371505954 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.685889488 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.433807887 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.818443537 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.373637708 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.175049751 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.376007444 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.515944749 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.540906743 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.371963596 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.372166148 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.372664272 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.36972974 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.487245691 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.372271902 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.82022069 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.558046139 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.387010949 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.900239072 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.476358363 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.370935095 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.508666638 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.375693613 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.372894876 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.818934966 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.517069428 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.374781633 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.373357511 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.373545479 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.824742516 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.177389691 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.675047604 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.37605592 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.694603566 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.379058669 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.848171027 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.976050682 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.802491263 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.37897389 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.538266592 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.558825676 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.391697448 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.375444893 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.902034688 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.37351435 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.376244455 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.374376536 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.429517828 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.769007475 seconds)
  done (took 395.928953828 seconds)
done (took 638.193219093 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.243670841 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.180875544 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.336492454 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.196514584 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.194045902 seconds)
  done (took 12.403821049 seconds)
done (took 13.655366716 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.764771298 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.760559614 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.443108664 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.736834289 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.413037853 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.754608268 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.638847038 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.397964217 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.582867708 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.466457785 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.581470451 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.435201645 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.408823366 seconds)
  done (took 21.637420348 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.737442883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.439104553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.508682936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.722809714 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.479397354 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.739698478 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.810798882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.446067762 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.585048426 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.452296391 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.450241398 seconds)
  done (took 20.623488742 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.737111547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.437938376 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.495471087 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.72849143 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.47066228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.72863773 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.760326556 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.440920412 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.607137039 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.458216909 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.45093901 seconds)
  done (took 20.569893813 seconds)
done (took 64.086953245 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.479808094 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.560451054 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.46886805 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.470250315 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.453321542 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.452654603 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.471423054 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.450808617 seconds)
  done (took 13.056592332 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.452350628 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.453715008 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.450388045 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.447257934 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.453504915 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.449781403 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.448095674 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.452667698 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.451212448 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.452317117 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.453239651 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.450342501 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.452533391 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.452647746 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.45245786 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.450297333 seconds)
  done (took 24.478776641 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.454158353 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.454800875 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.453840191 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.450239369 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.452449196 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.451499482 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.456265346 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.453223815 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.452841628 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.452772447 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.45519815 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.450316994 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.452865543 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.45280135 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.455515875 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.456781053 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.45325872 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.451214547 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.457239849 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.452257134 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.453992712 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.452094938 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.452912174 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.449265281 seconds)
  done (took 36.135152608 seconds)
done (took 74.923938287 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.381337562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.408938028 seconds)
  done (took 6.046726053 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.513291438 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.515513675 seconds)
  done (took 4.289903016 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.452791563 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.457643907 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.454958492 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.458453948 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.452762 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.455036243 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.457546766 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.455322457 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.456691695 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.456731498 seconds)
  done (took 15.816558564 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.453712238 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.456040413 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.454234021 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.453907929 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.45405338 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.452935272 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.456150843 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.454788988 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.452137593 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.454380293 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.453698891 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.451506089 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.453669534 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.454743965 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.456417601 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.454481646 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.456338218 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.456247279 seconds)
  done (took 27.440030512 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.469382626 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.477928392 seconds)
  done (took 4.205500443 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 2.149217852 seconds)
    (2/7) benchmarking "second"...
    done (took 1.643989736 seconds)
    (3/7) benchmarking "month"...
    done (took 2.031096138 seconds)
    (4/7) benchmarking "year"...
    done (took 1.912463183 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.636817451 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.54498582 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.641696448 seconds)
  done (took 13.822385573 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.459692383 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.59375571 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.721989532 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.178778801 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.458187293 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.459756961 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.450630056 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.460271312 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.461944229 seconds)
  done (took 16.504881585 seconds)
done (took 89.384080067 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.384583619 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.494446423 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.472000872 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.467632631 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.816013797 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.432145686 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.390704008 seconds)
done (took 17.719248739 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.347344529 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.364878319 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.348990859 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.445223531 seconds)
  done (took 10.769009974 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.383488418 seconds)
    (2/2) benchmarking "read"...
    done (took 2.158340275 seconds)
  done (took 5.805117077 seconds)
done (took 17.835366572 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.458576918 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.455560594 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.456495687 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.457091143 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.456729468 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.458983335 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.459903518 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.457811564 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.458834339 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.456034135 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.45732179 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.456663082 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.457205441 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.452068553 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.458618694 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.461467608 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.459337081 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.45432071 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.456617747 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.456897322 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.45947899 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.453030701 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.461327482 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.456525055 seconds)
  done (took 36.239649163 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.459364654 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.457813226 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.457981677 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.45920951 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.457890197 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.456692118 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.459247227 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.461630872 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.461917944 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.46255334 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.458816145 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.459437656 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.459013229 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.459254193 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.457795519 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.459073898 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.459770049 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.462583253 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.458182348 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.458631664 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.457726561 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.460520316 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.460575874 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.459583763 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.45694451 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.460723524 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.462670995 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.456574762 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.459246621 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.460564923 seconds)
  done (took 45.0474678 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.468397376 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.466127077 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.461946423 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.460703202 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.460093631 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.461420186 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.46181479 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.458099556 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.45848331 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.457416149 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.457884534 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.463226655 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.460201965 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.454993611 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.461340368 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.46050293 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.461727064 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.46124349 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.461676188 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.463899363 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.459804151 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.459339906 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.45926066 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.464767606 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.462330636 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.459652887 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.459368171 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.460882127 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.463744798 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.460673714 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.462616348 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.465047263 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.459557801 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.462360203 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.461330119 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.462760983 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.466492281 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.464820263 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.46425465 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.464342012 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.465836354 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.465810146 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.462784314 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.459579875 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.464582972 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.464189404 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.459591058 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.462008408 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.463717511 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.462211165 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.463541995 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.462367318 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.464997207 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.464056788 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.462181318 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.460918077 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.461681099 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.466136881 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.461238738 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.463741302 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.466863571 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.462854485 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.466201058 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.461979676 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.463416265 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.464002838 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.465451987 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.464599877 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.46304018 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.465490401 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.463424019 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.464484611 seconds)
  done (took 106.564368012 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.465122712 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.46344733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.465558246 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.463835029 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.466282839 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.46485701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.466615416 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.46509422 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.465250774 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.464615515 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.46635249 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.466592679 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.466274636 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.463051411 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.464104576 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.464012522 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.467032195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.46421707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.467325142 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.470176694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.464855125 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.469739049 seconds)
  done (took 33.514372075 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.466168043 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.465647933 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.466066436 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.467731671 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.468618202 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.468283463 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.468138113 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.466013469 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.465195673 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.467179187 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.46737853 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.469137333 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.470124971 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.466511703 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.46573908 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.46942946 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.467921843 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.469513705 seconds)
  done (took 27.684048678 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.464669355 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.466036464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.467222364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.466631651 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.468995345 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.469189804 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.468590246 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.464633484 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.468760537 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.46490738 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.469564281 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.472578387 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.468077564 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.468251439 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.466032986 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.470887486 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.466987946 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.46786423 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.469768883 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.470013193 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.46705238 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.470966268 seconds)
  done (took 33.57232477 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.467880319 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.468755053 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.468169245 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.468349082 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.468826737 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.467478648 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.469802239 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.470534224 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.470382274 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.471786745 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.471818277 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.469711157 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.470584513 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.467495671 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.473532499 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.468501949 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.469850813 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.468864544 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.468529993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.470188549 seconds)
  done (took 30.671586851 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.46882522 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.474427492 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.469693647 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.467600755 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.47144481 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.468552035 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.465287373 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.473613391 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.470239586 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.469339112 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.472153918 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.468590795 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.470234815 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.47037758 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.466989487 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.471040795 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.473020255 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.472125376 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.472191018 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.471281426 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.474884795 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.469826922 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.472220478 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.475450783 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.469962072 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.471361793 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.472101408 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.471667312 seconds)
  done (took 42.459552835 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.4722037 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.471302658 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.470652445 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.477618618 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.469192551 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.472290643 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.471191991 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.472189544 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.472914541 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.472706941 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.470728277 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.472383842 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.474667334 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.472924973 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.473209816 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.473889114 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.472999138 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.4747541 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.473168522 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.473891685 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.472574343 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47431646 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.473542188 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.470703092 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.474504625 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.47253494 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.471138399 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.474264602 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.473248802 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.473752544 seconds)
  done (took 45.464283433 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.497970634 seconds)
    (2/2) benchmarking "in"...
    done (took 2.512994967 seconds)
  done (took 6.290086116 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.475409315 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.474619037 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.475162805 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.473472458 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.471619527 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.473596875 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.47384836 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.475068332 seconds)
  done (took 13.072959418 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.408468223 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.475112696 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.475515702 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.473932358 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.470746674 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.40551861 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.419370436 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.480999518 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.409117519 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.409995842 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.417457717 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.41246572 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.412298943 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.414170699 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.414040345 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.415594492 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.483214875 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.479716192 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.477133284 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.480455561 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.479890669 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.41421192 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.416596116 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.477481876 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.413102843 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.421963084 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.418943412 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.478772325 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.415956132 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.416353843 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.416586978 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.477171071 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.480951333 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.479434094 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.47694904 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.474466325 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.420783952 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.418449221 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.418188629 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.48301145 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.478551332 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.477726217 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.413515604 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.414477496 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.415801038 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.481672894 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.478753211 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.481016239 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.412779148 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.416577703 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.480371055 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.410811606 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.476881805 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.415997939 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.417200564 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.423886932 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.481203725 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.41470226 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.419777203 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.423267055 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.428121822 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.421527044 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.418596568 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.483392031 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.421876455 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.430025114 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.424419429 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.48570407 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.481690956 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.481934299 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.423888476 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.432384035 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.427900612 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.483277985 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.478522401 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.483859963 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.415251122 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.481593642 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.423920377 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.423157976 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.482481738 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.483369543 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.423970374 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.428073665 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.413101054 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.482640911 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.481041974 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.47830845 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.415009355 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.425029431 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.485969428 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.481694195 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.416395878 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.417065519 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.41412281 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.482120351 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.415965548 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.417134888 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.482446962 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.484586535 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.482223432 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.419205916 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.423382492 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.481722682 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.48317207 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.420688839 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.485136869 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.413223729 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.424816169 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.484700421 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.481501286 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.416387173 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.421261174 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.485204463 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.418592553 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.423398844 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.484966163 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.418658657 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.486622562 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.483845332 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.425258723 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.434562398 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.485723875 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.485169323 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.421424415 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.490779451 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.480826581 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.421872431 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.487114404 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.483997022 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.481554501 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.419703087 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.484669237 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.418547612 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.485070661 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.418291473 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.484757005 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.487939566 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.486833179 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.419943959 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.419559213 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.420995589 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.424553129 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.424353453 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.485676583 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.419891213 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.429124343 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.420235554 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.42335052 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.424732147 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.489693091 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.48616855 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.421533112 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.488483362 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.421955088 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.485541494 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.419571665 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.485127281 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.485034926 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.481904679 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.486700183 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.420268403 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.423255602 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.489556153 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.423795554 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.42245121 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.485921704 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.4858721 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.486273251 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.419275238 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.482717302 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.419665259 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.421353215 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.48952918 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.486414028 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.48512813 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.420563581 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.486101115 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.486138849 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.486610657 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.423339883 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.425146505 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.486929081 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.427074081 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.492222751 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.488709533 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.486936704 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.423721952 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.421462863 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.488346061 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.421631448 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.493280819 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.432786268 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.435154222 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.422308584 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.487695583 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.421758178 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.488654996 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.425530258 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.489922663 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.486185506 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.486475032 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.423167592 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.48522092 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.424813605 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.485021332 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.424194534 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.490577564 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.488896556 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.487786849 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.489640094 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.421374729 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.424166982 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.490030333 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.487290328 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.489927392 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.424429564 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.487335756 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.422088299 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.424319022 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.489933433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.490652023 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.428738904 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.492173567 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.425626087 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.429333628 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.427157292 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.426484838 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.490539122 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.42741788 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.423469783 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.431161748 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.426722302 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.42623961 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.429985267 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.4294676 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.426233549 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.430539183 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.488925915 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.491459221 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.425315704 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.496581764 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.491239177 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.48901768 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.491615213 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.420438242 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.490138304 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.428057323 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.493221825 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.422408187 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.490056889 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.424654734 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.488760274 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.427989067 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.428337537 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.427410332 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.42663209 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.491166109 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.48983741 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.427089514 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.492394866 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.490269376 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.487772169 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.428181153 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.495135098 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.432956106 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.42678869 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.429291237 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.425251496 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.490228574 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.423954329 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.491266839 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.426364003 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.441479662 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.50150804 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.432440597 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.428976084 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.491557009 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.430971154 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.43079019 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.426842665 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.425061569 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.425175653 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.42762747 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.428654514 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.494403785 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.425099962 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.491762743 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.429555424 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.427859562 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.492264987 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.489557198 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.422355717 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.489785805 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.486553037 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.488966029 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.422804865 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.48644447 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.422457623 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.426707842 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.425658959 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.426696093 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.430075242 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.428701368 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.425614246 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.425555533 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.424199855 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.4231919 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.427905596 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.489901801 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.42510365 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.493443383 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.42482367 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.427511287 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.42258686 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.429163232 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.487425467 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.421795059 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.487935295 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.484493408 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.416135033 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.420871907 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.489064587 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.427927185 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.488808741 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.423873301 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.489645965 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.488376767 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.486528204 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.487088612 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.485956176 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.484262961 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.484552927 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.427033446 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.424386197 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.423756758 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.424251329 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.488778618 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.485415381 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.484944574 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.419089779 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.424490136 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.489388721 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.421616563 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.417645252 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.419152071 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.485997065 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.486035377 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.487141649 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.484777007 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.484560807 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.424389968 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.42444191 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.482567056 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.483695757 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.425574254 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.48534409 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.423785574 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.489411101 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.418640247 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.486721689 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.484217852 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.420798286 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.423603394 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.421033287 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.484965232 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.418878856 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.487614221 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.483928574 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.422245068 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.422982384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.48633112 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.419127428 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.4260726 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.501191861 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.420549217 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.486914596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.483459704 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.421678685 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.487136352 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.487953197 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.419252731 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.423482559 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.423650879 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.489432851 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.419750284 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.485194731 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.420862806 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.484721728 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.485268356 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.485912311 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.484628396 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.486752872 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.41896503 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.485251702 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.421819363 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.487831231 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.423423437 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.423544125 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.422486255 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.428888529 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.489768345 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.424471981 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.488440307 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.487770478 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.422972361 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.425929967 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.489259394 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.421276396 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.488423852 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.422265597 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.424152903 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.425940796 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.426256583 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.423834584 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.492289747 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.424245914 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.424982982 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.487385467 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.488398513 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.489567588 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.4242256 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.488370949 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.423590108 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.42341738 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.491172322 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.42489596 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.490460105 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.426388824 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.426996811 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.424325829 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.488865558 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.490313753 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.492040268 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.421314419 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.423713451 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.431328749 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.430382019 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.432926759 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.428537219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.494714421 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.425070018 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.428733604 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.430842226 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.425070207 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.426414119 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.491218033 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.426679215 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.424575179 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.428927634 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.489701538 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.431147672 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.427918211 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.427546725 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.435819029 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.431467306 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.495096515 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.425153252 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.430845585 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.429033005 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.492653799 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.493988033 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.426267697 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.433696653 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.432966802 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.495760655 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.432391916 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.427963629 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.427406549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.495679498 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.491320332 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.428008183 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.493754551 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.428643749 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.49357835 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.492623264 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.49339094 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.427666199 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.424682047 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.429544244 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.430511527 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.491166669 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.429831018 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.427258823 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.430283477 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.495582284 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.496661097 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.492819345 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.491960956 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.425556874 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.493841502 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.426861209 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.430257357 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.429595848 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.42983011 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.495939996 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.494314384 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.430663025 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.433755278 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.499232456 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.491635689 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.428059659 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.42855169 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.433369374 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.49568957 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.494258045 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.42767055 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.431841854 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.496443866 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.494435802 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.498889755 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.432904601 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.444285022 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.498113485 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.430606159 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.430347013 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.434330013 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.498831221 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.496757256 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.498575286 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.434611167 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.431524933 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.502677185 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.495609589 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.438425393 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.435783547 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.43236183 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.498900817 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.432493455 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.4342148 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.43584793 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.49873054 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.498322516 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.435809097 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.444833319 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.4985713 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.440207055 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.452900711 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.432343307 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.433285939 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.4997094 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.429126558 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.499662503 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.430695929 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.497226998 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.4979159 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.495542336 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.497001413 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.431040886 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.433667448 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.431571698 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.498188597 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.494855056 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.426232688 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.432877114 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.497681317 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.495393658 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.497211063 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.496239126 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.493985947 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.493816414 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.428851933 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.442789923 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.442538403 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.497817919 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.497793248 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.496616381 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.435292711 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.434241945 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.438769247 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.501793198 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.497039459 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.493942399 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.433022063 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.497244132 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.497045014 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.428339645 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.429447509 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.430395152 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.495449166 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.442293163 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.506875124 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.437941653 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.436721162 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.499202143 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.499031843 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.43245591 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.496512764 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.497282998 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.430230814 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.431881029 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.500255222 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.499522438 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.495310865 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.434682365 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.501653409 seconds)
  done (took 867.974681018 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.501162822 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.498465884 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.496538665 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.496612127 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.498117323 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.496409282 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.499451793 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.497494566 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.495416607 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.496346418 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.497303689 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.497927751 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.497084553 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.498386554 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.497761233 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.496316665 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.498194411 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.496102746 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.497270166 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.497616464 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.496768972 seconds)
  done (took 32.743815353 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.497380743 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.497657617 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.497332206 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.497050866 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.496418403 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.496853336 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.496563457 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.497653606 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.496949062 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.496233572 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.496011982 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.496459073 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.497093313 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.495941215 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.494326628 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.496484211 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.494663297 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.496904385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.498283186 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.493164816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.494780103 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.496061366 seconds)
  done (took 34.215039587 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.49529666 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.495170752 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.428215834 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.496912314 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.496816349 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.497373303 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.496332673 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.497201976 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.496586012 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.432211888 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.432531097 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.432431306 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.435980171 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.502407563 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.434425034 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.500223749 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.498216202 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.498116954 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.496260412 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.497170252 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.437560733 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.498640559 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.497648097 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.433418327 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.499294929 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.502547622 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.501850154 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.500461202 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.43430542 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.500892634 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.497429984 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.430108869 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.437904748 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.435464649 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.435503605 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.500800436 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.500522786 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.499043367 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.498569962 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.44463736 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.512938156 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.500638337 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.439921084 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.501130317 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.500873016 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.435477984 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.50552935 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.500824195 seconds)
  done (took 72.240840154 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.499434757 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.498854623 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.50085105 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.500621213 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.501624119 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.498490693 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.498785534 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.502094885 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.499553125 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.498715522 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.499495148 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.498786823 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.496325765 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.49954613 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.498432487 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.503140832 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.49848295 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.499051806 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.500267965 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.499305254 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.500380895 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.50081264 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.500158739 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.501374907 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.501514527 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.498868297 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.501283443 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.500578387 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.499767901 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.499750578 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.498403173 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.500451984 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.500329294 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.499518625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.500095765 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.501628425 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.499595789 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.498946029 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.502284821 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.498547519 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.501214259 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.498671722 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.501002721 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.502758082 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.501368669 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.500499277 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.50277554 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.500037517 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.501919544 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.500983821 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.50081945 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.498819011 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.499628584 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.500300889 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.50269877 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.500598568 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.500887948 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.499498989 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.502768988 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.502610439 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.503855189 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.502869359 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.503184613 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.503000632 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.503091189 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.502368555 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.50274525 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.501323791 seconds)
  done (took 103.338614476 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.503210858 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.503142515 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.503043157 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.503197825 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.503337964 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.504490731 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.502101589 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.504467261 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.504729265 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.502047766 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.504360291 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.502826977 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.50432362 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.503291358 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.502976936 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.500712865 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.508369356 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.504242311 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.503304072 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.505033426 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.50420912 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.504694883 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.503778189 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.502226111 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.506128172 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.505448779 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.505565404 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.503106469 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.505910259 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.503939602 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.504559605 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.504205003 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.502969334 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.502182406 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.505495112 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.502991985 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.502229703 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.505636322 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.503494578 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.505331933 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.503361768 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.505030873 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.502509575 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.507135628 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.505130809 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.505151079 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.503932668 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.501359085 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.507064765 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.50462128 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.505490461 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.505947131 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.504136965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.505122123 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.506270811 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.505250008 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.505181161 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.507658344 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.50625757 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.506139737 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.504165846 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.507150705 seconds)
  done (took 94.574750628 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.508016598 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.503639844 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.505270616 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.505141951 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.504151327 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.50350475 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.507381307 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.505060661 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.507629973 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.503160455 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.503922571 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.505639596 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.505923114 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.504278366 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.507895512 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.507457958 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.504930027 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.505390751 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.504990439 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.504832256 seconds)
  done (took 31.412639842 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.506891257 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.504610578 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.504223655 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.507159028 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.506351807 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.505901872 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.506059191 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.506018147 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.504589835 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.505856683 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.504546772 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.504761595 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.505416393 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.507373882 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.506930899 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.504636794 seconds)
  done (took 25.394643238 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.506684335 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.50531582 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.503356997 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.505655441 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.508174451 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.50551412 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.503086783 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.506903893 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.506659766 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.50635749 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.509931197 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.50804313 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.50660943 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.506039278 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.505150972 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.508021643 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.507276405 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.507758006 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.507124839 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.507043285 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.506077778 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.50442035 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.508681902 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.507721935 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.507533398 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.508041685 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.507055965 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.506574202 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.507129645 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.507021978 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.508344814 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.506840734 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.507228767 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.505515751 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.507743389 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.509492251 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.507479599 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.507033903 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.507155758 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.508586233 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.506551796 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.506800319 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.507068086 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.506934244 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.507604588 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.508151213 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.506833345 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.508729219 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.506234728 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.507410524 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.508454836 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.508422914 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.506747304 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.505498522 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.506430749 seconds)
  done (took 84.189271379 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.51206758 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.507902893 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.506741548 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.508460052 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.506239532 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.508300771 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.509018392 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.510738878 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.510407587 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.508123035 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.510145497 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.509015251 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.508487904 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.5097345 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.508932786 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.507561141 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.507220948 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.508560071 seconds)
  done (took 28.461403895 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.509930455 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.509479202 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.507434497 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.507434916 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.505406504 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.510140523 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.508198686 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.510743018 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.510282393 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.511070311 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.5062211 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.508215919 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.509004912 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.511186734 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.50979829 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.508992964 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.509531559 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.508861137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.509450968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.505094781 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.508219544 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.509927114 seconds)
  done (took 34.500662966 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.444460906 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.440689596 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.440858977 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.453356374 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.456804852 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.443614475 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.442068044 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.445479987 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.461445778 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.485085281 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.479419485 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.45697246 seconds)
  done (took 18.752879167 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.507088575 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.51244885 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.50845241 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.512572539 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.511900246 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.511614307 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.509592244 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.511052831 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.508815111 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.512187359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.509915839 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.512369728 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.509416045 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.511134709 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.511923059 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.510854666 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.508171727 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.505344857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.509656356 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.511237919 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.509305044 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.507442919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.510213438 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.509748036 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.513706118 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.510140798 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.510568885 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.511919907 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.509120437 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.507308572 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.511268551 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.509734774 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.512266947 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.508269562 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.509128984 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.512086238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.509773269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.51021238 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.51267506 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.513356405 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.512623647 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.512071539 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.510876212 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.511817191 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.512454245 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.51352453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.508595491 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.51015559 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.510205686 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.513917582 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.513510857 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.512389808 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.516882736 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.511563048 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.510162903 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.512677478 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.511496013 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.513444814 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.511809437 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.511598353 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.510487085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.511155196 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.510650273 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.511996821 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.510959501 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.509753737 seconds)
  done (took 101.028580182 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.513100016 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.512287325 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.510097606 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.511251403 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.512563798 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.512722739 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.508717668 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.512112579 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.509561356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.513987684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.511245987 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.512093911 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.515188207 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.50951914 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.515300122 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.51315433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.515355787 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.512509582 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.517138185 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.514631867 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.513212871 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.511268096 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.512850396 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.510103092 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.516547523 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.513319286 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.517455772 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.513092922 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.513520521 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.514499916 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.512285953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.514631421 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.515058805 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.516414488 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.513424736 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.515709455 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.515852765 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.511792868 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.513208222 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.515860222 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.510621395 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.5089936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.514502742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.514124395 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.51199009 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.515588691 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.517435851 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.515609008 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.515713744 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.516376544 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.516750842 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.513187838 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.518199585 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.515534389 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.513063453 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.515791077 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.514120487 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.511907797 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.515618399 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.510934444 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.516487694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.51109744 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.516342351 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.514252008 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.512914958 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.515523509 seconds)
  done (took 101.213338106 seconds)
done (took 2051.88322861 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.638337033 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.620426675 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.447675222 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.467126394 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.44605731 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.489006773 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.449780922 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.44536723 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.449883609 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.446885957 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.450186821 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.729570313 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.443261886 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.446071549 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.449411534 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.580455951 seconds)
  done (took 29.305071636 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.478905695 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.455103689 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.57512866 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.450905502 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.479671755 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.647643323 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.509968989 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.450295616 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.623319778 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.468914934 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.450254805 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.473727147 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.4488276 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.442686298 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.468874572 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.649656799 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.711643441 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.443055672 seconds)
  done (took 31.529098857 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.903387046 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.4553203 seconds)
  done (took 5.666210454 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.472300475 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.450706151 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.45242086 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.448127638 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.442431979 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.446268408 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.450934931 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.446645173 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.457267592 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.595448995 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.455525633 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.461872161 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.447146845 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.449155619 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.519131137 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.496012489 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.596793831 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.517325698 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.518649929 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.457671745 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.445940765 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.547145057 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.490927592 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.517841245 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.573164104 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.450805143 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.455442397 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.460296382 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.572168799 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.51956528 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.451002276 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.452972212 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.454598673 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.448993932 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.071966195 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.450784958 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.473293356 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.456336562 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.513688356 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.595590509 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.453641777 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.460730393 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.446446279 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.063017128 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.564579886 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.575800916 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.452798108 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.460811395 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.453272896 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.521562147 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.460172971 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.453546903 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.510137825 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.303686328 seconds)
  done (took 92.47484935 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.506020692 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.446600106 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.150413418 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.490082271 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.447114001 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.463263595 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.462741769 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.726594745 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.462303801 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.447565247 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.803301796 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.465458911 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.490487207 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.904333689 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.280504616 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.67307949 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.451619406 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.446989373 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.448043895 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.456721427 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.446224081 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.455252398 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.449256109 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.92058077 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.491510809 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.372609218 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.449935635 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.44992454 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.447108013 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.446104952 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.451890514 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.491693129 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.938191686 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.450609469 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.783103205 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.878022429 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.840659551 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.450246242 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.470486048 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.452668776 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.500503923 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083856686 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.859588298 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.448744179 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.44755979 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.070837661 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.447011517 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.466398598 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.447877359 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.435410108 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.453670518 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.450787433 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.462444577 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.463927245 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.446317862 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.686365211 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.647708226 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.367670345 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.447093293 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.4475442 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.448465811 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.452004308 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.480773765 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.456306911 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.454878034 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.858022859 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.069317064 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.478799498 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.857291971 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.452872495 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.454471324 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.45217363 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.448400148 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.481210847 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.831513488 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.45116896 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.447838517 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.395986366 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.471965421 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.451324914 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.825329944 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.455707948 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.804555293 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.46942896 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.472298256 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.447481248 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.499575529 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.873868905 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.450924117 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.451003826 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.450842872 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.460667447 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.789548619 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.503485176 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.455607318 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.456973887 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.448692226 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.449667386 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.47286996 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.476805301 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.452543669 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.492636931 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.450337525 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.452875609 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.447829477 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.459290176 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.455534339 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.449255476 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.452093773 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.454823472 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.461281032 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.449801504 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.450384571 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.494615506 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.921394614 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.468426938 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.763472466 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.454922326 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.450592383 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.453553973 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.45103299 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.477106728 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.451315571 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.494825663 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.454739323 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.866718828 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.47348827 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.455930891 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.453811802 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.451788104 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.451882772 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.462505208 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.904666564 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.450413785 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.449501816 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.499378214 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.50153393 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.449801243 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.48815473 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.453393578 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.459934983 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.458910514 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802883003 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.800177732 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.072205253 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.457265737 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.473402611 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.452561714 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.480365955 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.1611835 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.474198487 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.454685929 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.84905102 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.053262538 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.466230688 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.453577597 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.457934695 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.449088169 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.468157257 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821715507 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.459010109 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.45960098 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.460183332 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.453467879 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.450383523 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.461397955 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.462014637 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.808389352 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.476210072 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.453775021 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.455415356 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.45354712 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.450369366 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.458623768 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.453698995 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.458314741 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.459242403 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.776784928 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.140350225 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.468827682 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.511523416 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398009845 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.897178675 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.455248128 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.484225089 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.45792715 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.456392595 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.642491455 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.459354933 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.478806958 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.461542902 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.485634208 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.117151464 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.468020624 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.462217953 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.142410696 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.482073148 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.457964331 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.461202043 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.466764876 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.308401379 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.42152472 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.475679898 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.76960121 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.501232667 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.502576359 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.45899833 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.916793471 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.421895101 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.453368853 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.456274466 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.458138244 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.458309129 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.071167786 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.456144213 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.457776494 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.463334308 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.460279156 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.459995924 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.455585771 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.455911005 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.477074749 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.471329819 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.476546673 seconds)
  done (took 553.889518756 seconds)
done (took 714.167660898 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.451872172 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.454221087 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.419197421 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.460404371 seconds)
  done (took 11.098400705 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.54509018 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.463124892 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.528788134 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.464821587 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.532610504 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.45809294 seconds)
  done (took 10.308650272 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.453423752 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.457275423 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.462738502 seconds)
  done (took 8.686074038 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.668401326 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.474835047 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.777943581 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.468592511 seconds)
  done (took 9.702250392 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.531600151 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.532456367 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.532441097 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.536719599 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.54138168 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.543678763 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.538774005 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.536353621 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.543153446 seconds)
  done (took 15.150249511 seconds)
done (took 56.25964929 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.572905545 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.61636543 seconds)
    (3/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.635608573 seconds)
    (4/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.345861942 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.533055473 seconds)
    (6/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.557255926 seconds)
    (7/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.422055661 seconds)
    (8/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.427415799 seconds)
    (9/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.42377292 seconds)
    (10/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.456754826 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.576841065 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.461189919 seconds)
    (13/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.562268851 seconds)
    (14/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.559123012 seconds)
    (15/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.210019645 seconds)
    (16/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.136529735 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.465876077 seconds)
    (18/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.565417695 seconds)
    (19/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.420214562 seconds)
    (20/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.699358653 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.581650036 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.599260586 seconds)
    (23/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.561852467 seconds)
    (24/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.179310023 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.571334048 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.226884618 seconds)
    (27/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.530900368 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.570072213 seconds)
    (29/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.419754125 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.626510749 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.568388881 seconds)
    (32/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.563435536 seconds)
    (33/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.599045135 seconds)
    (34/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.510569424 seconds)
    (35/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.579306359 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.606477471 seconds)
    (37/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.438098293 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.805680603 seconds)
    (39/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.419705747 seconds)
    (40/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.436850946 seconds)
    (41/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.571122599 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.424813119 seconds)
    (43/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.636651944 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.590806041 seconds)
    (45/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.659938213 seconds)
    (46/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.584705668 seconds)
    (47/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.541455407 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.621946937 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.603626019 seconds)
    (50/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.597705066 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.625801108 seconds)
    (52/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.529701408 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.566485988 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.452981321 seconds)
    (55/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.294099921 seconds)
    (56/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.231208014 seconds)
    (57/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.629469112 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.732843769 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.900958077 seconds)
    (60/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.558412338 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.425421702 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.428084558 seconds)
    (63/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.465459356 seconds)
    (64/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.435862337 seconds)
    (65/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.148015312 seconds)
    (66/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.573163291 seconds)
    (67/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.606144852 seconds)
    (68/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.300408668 seconds)
    (69/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.638262412 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.422835363 seconds)
    (71/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.49218307 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.462289273 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.566912293 seconds)
    (74/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.557489224 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.611163174 seconds)
    (76/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.578063948 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.616320021 seconds)
    (78/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.308260355 seconds)
    (79/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.44013443 seconds)
    (80/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.469289061 seconds)
    (81/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.596684717 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.239279875 seconds)
    (83/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.424403378 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.242911675 seconds)
    (85/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.583640648 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.152614405 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.546878469 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.613996872 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.573357759 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.606310001 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.420334896 seconds)
    (92/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.583652462 seconds)
    (93/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.420437419 seconds)
    (94/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.159914778 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.468728232 seconds)
    (96/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.5482325 seconds)
    (97/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.642258453 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.588032224 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.559274398 seconds)
    (100/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.556048619 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.63243351 seconds)
    (102/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.60558066 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.462530627 seconds)
    (104/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.44304511 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.441234937 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.60504158 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.306945052 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.434456137 seconds)
    (109/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.498216093 seconds)
    (110/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.615086305 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.584630897 seconds)
    (112/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.634339033 seconds)
    (113/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.280512708 seconds)
    (114/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.630854831 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.484298343 seconds)
    (116/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.445816833 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.580308098 seconds)
    (118/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.270416581 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.599404822 seconds)
    (120/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.423307411 seconds)
    (121/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.44618903 seconds)
    (122/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.510913967 seconds)
    (123/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.466957704 seconds)
    (124/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.56328088 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.561568441 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.427625771 seconds)
    (127/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.685595025 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.433741696 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.574906624 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.200128656 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.632765775 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.276032391 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.660489956 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.62190225 seconds)
    (135/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.600653985 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.442428655 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.430247553 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.707537571 seconds)
    (139/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.427205594 seconds)
    (140/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.426595426 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.615320665 seconds)
    (142/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.59192873 seconds)
    (143/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.616255201 seconds)
    (144/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.428464318 seconds)
    (145/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.610419448 seconds)
    (146/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.42776081 seconds)
    (147/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.616728879 seconds)
    (148/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.628667332 seconds)
    (149/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.430246922 seconds)
    (150/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.534216128 seconds)
    (151/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.439712885 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.442626602 seconds)
    (153/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.42192808 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.535896582 seconds)
    (155/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.521173017 seconds)
    (156/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.529316628 seconds)
    (157/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.567484543 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.56514995 seconds)
    (159/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.556798961 seconds)
    (160/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.674346647 seconds)
    (161/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.496390833 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.652695249 seconds)
    (163/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.598134041 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.626513306 seconds)
    (165/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.798090137 seconds)
    (166/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.450625098 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.603971069 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.431860564 seconds)
    (169/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.432437768 seconds)
    (170/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.581263241 seconds)
    (171/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.674496602 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.529668419 seconds)
    (173/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.67178671 seconds)
    (174/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.601593921 seconds)
    (175/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.593888691 seconds)
    (176/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.428344896 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.799266866 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.715619351 seconds)
    (179/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.564841655 seconds)
    (180/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.605396314 seconds)
    (181/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.698443411 seconds)
    (182/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.533774208 seconds)
    (183/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.430827647 seconds)
    (184/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.590852553 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.714295538 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.473093981 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.592372856 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.310155861 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.348160576 seconds)
    (190/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.570655037 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.606089862 seconds)
    (192/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.203593642 seconds)
  done (took 366.559572201 seconds)
done (took 367.876218712 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.535818786 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.547105209 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.501523952 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.501557874 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.531798088 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.479317613 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.608937422 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.534527268 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.577947256 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.577326986 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.478588168 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.552798755 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.508216442 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.602834746 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.608238688 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.53467535 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.506608518 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.574387378 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.590784809 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.609459698 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.536252462 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.535942651 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.580619987 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.505691251 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.538465908 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.536792243 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.507439113 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.482706059 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.552358151 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.591839798 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.472401384 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.516140475 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.612768758 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.60796587 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.535525085 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.571387493 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.535956817 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.549278429 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.610062762 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.606418601 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.556085855 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.612945483 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.538340614 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.533639511 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.604808002 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.576881128 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.53801168 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.600624197 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.464078099 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.475923 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.526784777 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.597887975 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.546201874 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.462482085 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.456080224 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.595829161 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.568337651 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.529418237 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.540747556 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.527114223 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.598183796 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.529503728 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.600966511 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.530829195 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.542163214 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.502073835 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.567934575 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.599378592 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.540492546 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.525333777 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.528192755 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.543527212 seconds)
done (took 120.737952773 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.597824147 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.464745695 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.614878178 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.534959888 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.639940652 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.596625928 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.528742862 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.529018842 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.527534479 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.296346447 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.52647003 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.523695938 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.459372241 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.525765929 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.589729769 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.524525436 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.521112313 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.182320538 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.519803057 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.612914463 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.451609245 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.519617189 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.518440223 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.275205298 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.451803042 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.449496215 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.608494458 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.511984914 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.159680269 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.440349186 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.448441001 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.160296467 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.597428276 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.521622254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.51568497 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.512754577 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.616500528 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.50707116 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.571052853 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.569080612 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.586022711 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.542978885 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.432997867 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.436763828 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.496518046 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.498936756 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.49459291 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.528335509 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.435635116 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.500291163 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.156634897 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.509044039 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.505404811 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.49695893 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.495966465 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.514143949 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.495642514 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.49415692 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.589172041 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.492471899 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.562582107 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.251828366 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.259959901 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.492849956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.42473242 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.493508027 seconds)
  done (took 118.230463499 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.495804725 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.502307834 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.537753965 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.424668271 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.476516938 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.540868736 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.419037287 seconds)
  done (took 11.689219858 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.426526738 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.484692285 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.475050889 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.47685575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.487515281 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.596335656 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481661589 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.430296666 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.485083428 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.47391877 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.485323706 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.485962768 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.4905695 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.419589522 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.47438769 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.429114699 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.502386804 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.419201743 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.476833429 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.564748865 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.480711119 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.492582921 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.471707208 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.424649088 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.4803432 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.419840341 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.250934173 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476774679 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.478057054 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.482981186 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.477805539 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.48339257 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.475913104 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.411835424 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.477707283 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.534248664 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.477956499 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.4702397 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.475958584 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.408385224 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.478668836 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.471631541 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.480444907 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.476656769 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.476832697 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.437953298 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.481210031 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.473689014 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.477264996 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.481842763 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.468302365 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.47865583 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.476494826 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.477944663 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.471859095 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.484894149 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.478952062 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.478429896 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.476260858 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.475801723 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.562070897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.466570355 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.476978256 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.467035396 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473174147 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.474381086 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.471454947 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.472735517 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472820883 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.469850248 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.455513272 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.47055077 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.602989802 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.428028319 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470500771 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.406240561 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.4055843 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468013969 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.39924377 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.40455107 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.469124456 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.403714339 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.406862961 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.467522998 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.4641975 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.598757665 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.512813432 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.462020544 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.423029671 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.409105613 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.461403514 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.460534429 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.468650952 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.465256021 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.456039399 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.490305514 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.460955577 seconds)
  done (took 148.714060288 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.414071639 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.414567149 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.400800367 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.424846813 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.400191481 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.403397493 seconds)
  done (took 9.726763881 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.398051978 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.460816856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.460917162 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.460668677 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.458594954 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.461870713 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.463375038 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.396863232 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.464059966 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.46274861 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.461961569 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.468075171 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.469882203 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.458351159 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.463449284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.463900866 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.464058312 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.459830579 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.461468239 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.464476975 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.398398371 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.465171855 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.463333663 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.39914245 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.463859536 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.46557776 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.419543971 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.461783406 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.462830304 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.404679104 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.463363788 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.463849382 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.396095475 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.399811471 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.463002295 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.400689538 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.466601089 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.471126363 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.46292282 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.465764861 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.469368559 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.464348504 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.461054349 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.467240146 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.401192145 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.397491229 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.473202194 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.420822177 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.462627023 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.468124144 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.468436678 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.460765567 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.462984224 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.469774816 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.399316119 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400131673 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.469413276 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.463704922 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.462923102 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.398939771 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.467065464 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.463049571 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.403458015 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.469774345 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.463664275 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.469724078 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.401220879 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.464175554 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460730945 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.458088893 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.471726202 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.463589787 seconds)
  done (took 106.642290205 seconds)
done (took 396.31921627 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.884050575 seconds)
  done (took 4.143622235 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.45484274 seconds)
  done (took 3.720014909 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.293458471 seconds)
  done (took 22.561444883 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.421483216 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.489971223 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.397421859 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.399117404 seconds)
  done (took 10.97077452 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.853273056 seconds)
  done (took 4.116718882 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.453587563 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.450328305 seconds)
  done (took 6.166416114 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.638855387 seconds)
  done (took 3.905328066 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.640184383 seconds)
  done (took 3.909820718 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.492266084 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.483186948 seconds)
  done (took 6.246576846 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.351770378 seconds)
  done (took 3.617525939 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.259593634 seconds)
  done (took 20.522957414 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.471875699 seconds)
  done (took 3.742458572 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.482013981 seconds)
  done (took 3.743871051 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.979614086 seconds)
  done (took 6.239627432 seconds)
done (took 104.868210967 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.389876202 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.396693258 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.394093976 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.392592017 seconds)
  done (took 10.829512903 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.541166006 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.542201774 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.54449725 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.542935004 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.540909641 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.5396257 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.497360329 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.501393762 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.540333442 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.539081681 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.543233165 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.532993268 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.544384319 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.497538731 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.53356957 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.542915298 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.54278841 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.542749888 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.497679088 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.539164004 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.465820362 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.542836656 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.542282794 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.464433829 seconds)
  done (took 37.930049045 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.044933492 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.471034516 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.571792988 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.456957196 seconds)
  done (took 7.814952567 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.656211029 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.667903684 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.668789872 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.71122631 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.765957079 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.668653987 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.487148399 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.485038757 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.47006977 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.659428864 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.740936925 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.649752707 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.800592002 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.461967631 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.84436914 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.462954561 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.462764002 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.652857683 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.697576483 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.744058477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.455696266 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.647777599 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.648773654 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.641777804 seconds)
  done (took 40.424247486 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.467059556 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.476462005 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.465651927 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.477875565 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.465062869 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.461934217 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.461847583 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.463366667 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.457512472 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.457199993 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.463683176 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.471005186 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.459962769 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.458208883 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.468403333 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.46092297 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.471706439 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.465658873 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.467312201 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.463947475 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.459659849 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.466202369 seconds)
  done (took 33.493031067 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.385203298 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.384274703 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.736194894 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.640285273 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.387384232 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.384933271 seconds)
  done (took 14.179626361 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.459708908 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.598243622 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.397277131 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.736153998 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.835728337 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.399525375 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.391770397 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.630174163 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.923920174 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923069926 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.453076227 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.461674181 seconds)
  done (took 20.473785379 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.398921193 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.392112902 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.396697967 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.423384983 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.462701649 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.417182627 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.417554771 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.388155156 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.452789588 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.471663601 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.419370397 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.446359347 seconds)
  done (took 22.351384112 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549118838 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.454535966 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455825331 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407688729 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455372651 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.456680536 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42522153 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170111361 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.460795769 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738132141 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46480555 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558321584 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455363038 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46038918 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463135591 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.350927473 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461130683 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990787309 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462320509 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469466649 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515437831 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467415438 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463115534 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671846183 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462366731 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458062333 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.333523987 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458049664 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745250339 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721065188 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732266243 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463786074 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738065591 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09969576 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724729039 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666939405 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406757927 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483421746 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.361797594 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.458289758 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466532753 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463193562 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723541619 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465169425 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458725312 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457529805 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185576441 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.466073254 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.460537617 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457210529 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730132351 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562670593 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.462323123 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.457148282 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483008052 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456608667 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.926291532 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522350941 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141789312 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460435197 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466275433 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.464532402 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405781427 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469217203 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167652563 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.024148586 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.464890399 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.465766879 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459285042 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458851645 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542668373 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458966066 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.574269803 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457238331 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26181269 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.477460412 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466661791 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041190983 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473000169 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.466517222 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459632184 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461282395 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46284862 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.454620506 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.460987047 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203855563 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490151388 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.355455491 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445713683 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.177435572 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670768031 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50217007 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514545005 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.46128605 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.354791529 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459886516 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.46287024 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466902527 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491980651 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178099362 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461025904 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.92697925 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462088659 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.406599571 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463987554 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.362475006 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963234854 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464322165 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.566143019 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466613231 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.674903656 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.123536947 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731989447 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466533319 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513991314 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461446924 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244024744 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468482882 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.025790572 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474726497 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812606837 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.239926003 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460949137 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607139775 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472824683 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.465490048 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463125872 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486826529 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462432534 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.599649552 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468789243 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.73821179 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.469131134 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464556291 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.466184845 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465244776 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.488654811 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463861471 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472602711 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754288309 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463767064 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463129159 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46428823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.465616144 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.465347005 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.927192474 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464881285 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476564008 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475056131 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74213107 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526923545 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733800604 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509964641 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.465259179 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.470748688 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.729266023 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.470709468 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466776525 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489637873 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467317586 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.47414234 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403410129 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1306997 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467463227 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473002909 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4658875 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.481670878 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609021141 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.472887282 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677408654 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.469464533 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440202016 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.478533151 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.4643852 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46902744 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734052804 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.471647217 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564960159 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.941680791 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127193943 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489196968 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.467076366 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.466301077 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.464864842 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467176542 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467253524 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.466901816 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675856967 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738581921 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416449494 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.137897703 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470863257 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467291944 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.955748879 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.73015258 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.478994026 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469203418 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.469321234 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473394814 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475330687 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.738434861 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621948204 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.483331064 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469240746 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.468754604 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475465253 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467822691 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469996468 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607390365 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468598356 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329796422 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470874093 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405607964 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732289779 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4748762 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.490234423 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.462905697 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467323989 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486115301 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.484358325 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499545147 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.678660944 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474620268 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479566157 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151988332 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290341583 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069508063 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473325278 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.48183036 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474481418 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193293897 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467583805 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467684865 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964764243 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189755485 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469381598 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949878017 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.471043346 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230216521 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.742447032 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47598392 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471613622 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.470901303 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.746476968 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478442216 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609331439 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.476170495 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476665845 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.367389422 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033879973 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47195948 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580541378 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19217101 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468772257 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472950775 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.481962812 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.468505798 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858873162 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.471858382 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470489071 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47004747 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503885404 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329978369 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476534514 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474244521 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182338313 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48751011 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.956243199 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47216405 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.683056933 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.744194602 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.67348168 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.48690579 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.484518371 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.477568016 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741837189 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472156699 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487426614 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081231819 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.464344639 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.486341081 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472334888 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257808281 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477034058 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772747059 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.489185351 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.476895902 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484087878 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473255196 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475683308 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.473022005 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481950303 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472305303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998005815 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.432113417 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426761227 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474161561 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482008308 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473866603 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.490243259 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139568504 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475327402 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406964619 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547878373 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.959406123 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474319816 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.372139627 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476051279 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473937301 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491765528 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474121088 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476334394 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.36904406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.452319047 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475732059 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475431528 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482503561 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70933165 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.478669604 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.489568105 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28521751 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528198503 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487025724 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478118831 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410073173 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460068245 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621372003 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68527865 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.753632753 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.758407432 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863705831 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486723365 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478509468 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.495632397 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573778467 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480996533 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.481454828 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.479506753 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143843471 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299948108 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.146662193 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.754841776 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481504995 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479914511 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477193077 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649505276 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475822865 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759589767 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476915781 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.414835501 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508181786 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47948332 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486860842 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481717903 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759373615 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480110451 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488012892 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481642104 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.477942548 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755275266 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.424109765 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017247151 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067314727 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482010378 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479318038 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205379167 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758400479 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476297718 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477755608 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476265682 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.49889648 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.478989492 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.485315686 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477439044 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648306201 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744401082 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123022012 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.743362703 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 3.937262968 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.478719415 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487142531 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480173456 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348810919 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.686765494 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152039197 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240496859 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481153582 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775234087 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689640663 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.482405244 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649410365 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.484116646 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479976784 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479309284 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478212342 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.478149153 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.746238717 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153238888 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481631674 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.943074883 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.480976947 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531750174 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.688461024 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484991245 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230739363 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.480428323 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756959875 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490978857 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4805656 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148524003 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760976713 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480266313 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.484898287 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711803945 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486466801 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605124657 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.480254973 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.478669602 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081155385 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.486832791 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515726944 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490266692 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248467894 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151789347 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.483594927 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010719504 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488850838 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482649388 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766504286 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.490730558 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485053503 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779723789 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.966625837 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498025905 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694421758 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.150646272 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260984093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.501872647 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484082801 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.491655682 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485542739 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436892968 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484397203 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487767198 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.820564266 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483717042 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486013751 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506638155 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.486249734 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486009872 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.486304205 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486751336 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.49227598 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.39589613 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.378957613 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493234818 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544919235 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049849724 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495427075 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.292929208 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.784615667 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485955469 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484603872 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.381379002 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.951331849 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485290736 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488652666 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487871798 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420097975 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091250083 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.492277228 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.764356323 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.497956314 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.488713774 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486517701 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488035205 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71893553 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506433386 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566518137 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.379378988 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488740574 seconds)
  done (took 1060.385949445 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.458337618 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.440604447 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.434881147 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.465322312 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.462488602 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422143826 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.469496151 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.480111153 seconds)
  done (took 20.924244243 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.423317748 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.436338486 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.421313797 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.435673629 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.421163783 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.905007061 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.445930299 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.436890167 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.451019418 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.428291552 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.428747539 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.108123309 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.430186103 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.432182528 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.399323369 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.437607672 seconds)
  done (took 33.335037108 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.097790227 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.875885784 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.748812541 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.49156438 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.473454662 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.443794856 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.262279126 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.437810565 seconds)
  done (took 33.127214723 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.437806681 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.434743631 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433454012 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.435657466 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.435535076 seconds)
  done (took 8.46244903 seconds)
done (took 1344.992180536 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.497597488 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.498746651 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.496145078 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.499428594 seconds)
  done (took 7.283329511 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.382977097 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.383709453 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.384585054 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398258648 seconds)
  done (took 9.844292438 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.124741781 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.042907274 seconds)
  done (took 5.462834018 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.98397905 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.98864519 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.979848607 seconds)
  done (took 7.244663 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.769938246 seconds)
  done (took 3.064874769 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.343677402 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.429548935 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.169058568 seconds)
  done (took 8.23760236 seconds)
done (took 42.433718838 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.431671431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.805931944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.580233876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.422757797 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.751027764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.57855253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.318266941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.428460033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.436713503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.443434411 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.423150279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.751914632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.295269625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.806791142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.295567226 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.80604139 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.750337737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.438582893 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.442925588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.431449903 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.314767335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.439540537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429961298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.424843548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.752840635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.569091641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422922318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.822913661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.424934426 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424905618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.576067594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.425149088 seconds)
  done (took 85.963620884 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.423902789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.425698794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.426431118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.448505817 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.425991657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.462240655 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.424056157 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.424171252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.430833949 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.430668639 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.433075407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.424153109 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.440140514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.426818917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.445269125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.436925515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.436532355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.427408234 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.427162867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.433265628 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.426762969 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42908211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427397354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.43476917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.42528209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.425904744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.454205939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.426160434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.42792922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426051231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.432160353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.446808342 seconds)
  done (took 79.133135565 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.437514905 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.43096928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.434694867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.432490493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.427962112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.433893742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.436502298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.431585282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.44452523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.433434208 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427101482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.436574679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.433770293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.428800695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.449007603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.427632193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.448195543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432540805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.432927974 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.433852752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.431128758 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.439522393 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.43130441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.440633755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.431592449 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.431939688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.428719974 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.428181801 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.434507846 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.431133035 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.433174127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.436680193 seconds)
  done (took 79.190782776 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.857358575 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.501713129 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.504529441 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.494974534 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.503536649 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.502905325 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.497428823 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.864043399 seconds)
  done (took 16.027122118 seconds)
done (took 261.606808995 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.492871401 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.985048519 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.518168905 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.497624787 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.456109042 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.517092911 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.708341737 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.51853037 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.717216252 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.511159807 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.452871874 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.490981155 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.327811625 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.642453076 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.275071116 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.440332197 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.342618262 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.444549507 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.059350707 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.771991825 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.518542148 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.430221065 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.352093252 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.501665022 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.395372303 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.516669017 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.537782465 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.721049307 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.657287239 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515967834 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.942310554 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.495000775 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.510380825 seconds)
  done (took 67.564476437 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.436828704 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.502510572 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.501742595 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.504089995 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.50135321 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.506279097 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.438051586 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.501482148 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.503785053 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.502806674 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.502112727 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.506530637 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.507295648 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.502956612 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.502600811 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.403884233 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.436452702 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.506430489 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.437628174 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.401916494 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.503985145 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.505161202 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.506874354 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.506233875 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.504681729 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.504060489 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.504025498 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.504174685 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.502479422 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.505671015 seconds)
  done (took 45.954808638 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.505855533 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.028851337 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.170882683 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.447072255 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.438227981 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.443849802 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.721215476 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.511736225 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.442747476 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.442194923 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.914473191 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.511022311 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.472679538 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.175934654 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.44835809 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.506607642 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.509427076 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.440686628 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.033556953 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449045492 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.720272466 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.513360913 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.722024259 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455859958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.442837739 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440664373 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.44474779 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.264202841 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.46685834 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.918771568 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.205971458 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.720235968 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.195145122 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.216263881 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.213515513 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.514023801 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.508957047 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92118689 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45121018 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.442173468 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.7206555 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.447551841 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.170338277 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.132560642 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.462361162 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.508608924 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.289158832 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.928423769 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.684660906 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455102437 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.200848523 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.450184872 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.510886833 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.444096376 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.679307827 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.450705332 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.441312768 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.288876691 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.448200812 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.721165343 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.514026966 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.440570925 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.02490767 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.448444136 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.027209738 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.449280362 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.45026531 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.445767406 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.184579483 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.453057215 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.135692351 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.460530541 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.510849421 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.917929998 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.031049314 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.346887146 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.449156376 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.032075351 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.235242144 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.740755252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.454009087 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.237980128 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.743931713 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.454984531 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.512654168 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.513490515 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.511496914 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.580614035 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.720075113 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.074781859 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.15166701 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.316655349 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.728773967 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.459969816 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.445709413 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.300418467 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.510907938 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.510456089 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.175695772 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.139662222 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.463159665 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.453357266 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.146626955 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.464954291 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.726835052 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.458106535 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.209593614 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.452570123 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.582923018 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.510963281 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451942218 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.450073633 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.725677937 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.45732598 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.512346108 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.129076744 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.948978208 seconds)
  done (took 202.122793099 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.444172644 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.439834354 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.446425851 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.440842696 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.440695169 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.448264423 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.440794775 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.4408217 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.444742764 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.44180062 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.441305369 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.450143527 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.449177522 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.441723952 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.441242082 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.457666615 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.441528258 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.449315654 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.461256461 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.440403198 seconds)
  done (took 46.209351283 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.513990786 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.996410608 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.962662347 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.51988094 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.514789558 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.447449751 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.502469544 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.521887091 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.516823048 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.744148768 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.622369929 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.520514274 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.514495947 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.514100316 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.964044639 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.417852799 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.742470495 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.002502724 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.520811483 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.999280321 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.417959303 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.515705869 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.449544153 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.997667055 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.819792849 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.732930205 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.512232814 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002381293 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.521816445 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.517693048 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000249937 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.524190907 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.452661123 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.968635515 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.522279611 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.528970628 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.517524626 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.509443889 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.51500386 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.752170709 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.012090369 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.800438779 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.535730604 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.6009145 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.518948913 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.413593527 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.06988268 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.522320624 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.414792393 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.521019058 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.524140681 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.035014729 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.457402886 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.035684736 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.521200245 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.518501986 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.002112211 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.041464212 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.97099306 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.624291485 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.456513763 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.733565283 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.525361892 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.073528088 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.523171046 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.51607233 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.516463831 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.621983899 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.01108008 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.738636595 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.755376908 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.756037193 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.527004117 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.578885039 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.527193231 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.74978207 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.584629027 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.83938522 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.75708363 seconds)
  done (took 133.081908613 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.72270041 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.627014268 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.82783534 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.075116821 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.028072674 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.588494373 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.622398888 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.707093994 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.516224958 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.630984298 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.161378999 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.54926011 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.214283374 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51916658 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.62283057 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.584233846 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.919336539 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.454432192 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.118635687 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.072063879 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.515845142 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.547949665 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.014444571 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.650149779 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.456861058 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.009670583 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.408594692 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.038966328 seconds)
  done (took 55.520096333 seconds)
done (took 551.754522223 seconds)
SAVING RESULT...
DONE!
