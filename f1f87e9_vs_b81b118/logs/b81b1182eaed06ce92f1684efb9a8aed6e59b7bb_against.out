cset: moving following pidspec: 19910
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.519347343 seconds)
loading group "string"... done (took 0.539322716 seconds)
loading group "linalg"... done (took 9.082425008 seconds)
loading group "parallel"... done (took 0.182973828 seconds)
loading group "find"... done (took 1.327673555 seconds)
loading group "tuple"... done (took 1.963375849 seconds)
loading group "dates"... done (took 1.393442593 seconds)
loading group "micro"... done (took 0.201572079 seconds)
loading group "io"... done (took 0.522927622 seconds)
loading group "scalar"... done (took 51.844012736 seconds)
loading group "sparse"... done (took 14.224025739 seconds)
loading group "broadcast"... done (took 1.348191978 seconds)
loading group "union"... done (took 10.396183231 seconds)
loading group "simd"... done (took 3.102361677 seconds)
loading group "random"... done (took 11.740551375 seconds)
loading group "problem"... done (took 2.244905235 seconds)
loading group "array"... done (took 24.726772482 seconds)
loading group "misc"... done (took 1.155729156 seconds)
loading group "sort"... done (took 3.828757261 seconds)
loading group "collection"... done (took 19.623279406 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.623093645 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.184092103 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.207140838 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.287637348 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242084513 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154457575 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139484178 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.262049507 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.681771359 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214584958 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132972045 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.497512822 seconds)
done (took 6.460517107 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255339095 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.181789468 seconds)
    (2/2) benchmarking "String"...
    done (took 0.169961449 seconds)
  done (took 1.129064847 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075114446 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155430963 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107618445 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093323999 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091878534 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108864912 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091651238 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108703098 seconds)
  done (took 1.539189829 seconds)
done (took 3.778685382 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.51743338 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.867181326 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.511840068 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.165114481 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.305823727 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.301308693 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321722256 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.207509693 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106938113 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.0914583 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177812561 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.392654725 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.444237969 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.966629273 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092785148 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.098260635 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.134595038 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.76618188 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079715691 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127059654 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.502645257 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.196062437 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098262355 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125344041 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185021271 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133418914 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16318132 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104182759 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662866637 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132569389 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188047582 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097561878 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161131493 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197424377 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211299278 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092396504 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688139807 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20072411 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091986986 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099279303 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671346598 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119394499 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187682244 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103344676 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091733926 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18338291 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095215351 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07675498 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.11717049 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085161202 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16636906 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.458725881 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106509823 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.173658463 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092789632 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.695251253 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099924466 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.279998007 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125985753 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09188542 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091735058 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087927861 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161521043 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093992116 seconds)
  done (took 20.284083353 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148604565 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166924526 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077446791 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156870261 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12218555 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079569947 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102441353 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078365584 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125940156 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.22602688 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141054189 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.15638575 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092533128 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088987725 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128090455 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250225573 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106079682 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122940351 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087948195 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090005325 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140871909 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096024113 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107928173 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094272001 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170773469 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203585149 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107962611 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121871991 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087856598 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0966248 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142161797 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147994349 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092168912 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086372575 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189152871 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106363789 seconds)
  done (took 5.34139061 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202091766 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125954668 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.215972013 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163957248 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115821167 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.123880379 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.177665521 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148580553 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.287182865 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.280959794 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179519938 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112632928 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.122675364 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079231715 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079376209 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093832581 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.502746419 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.13822673 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.176315821 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154856254 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088007514 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09836951 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37838762 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102285942 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081036436 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086982819 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083964475 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.182013 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103582514 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.099620527 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085221536 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089981444 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136235034 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195466674 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132202637 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122271772 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101205956 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.140069832 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07968204 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219844048 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111057241 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077521674 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108260389 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134767456 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11437453 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101459554 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109854635 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222432315 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082416852 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106242134 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.058769068 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198221399 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.125612478 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079236676 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289218063 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118686357 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086855154 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081827522 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25267121 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116529341 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081184879 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096736477 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087367466 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077867017 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.438378557 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10952775 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.895844399 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085189324 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161654049 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084793441 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105713861 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085756664 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084647202 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119005676 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080260212 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078090044 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09777758 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080221221 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083610539 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111847683 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082725716 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099091984 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080381495 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146695189 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100917054 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118182727 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109338803 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101499497 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080864009 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127009716 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083297608 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083370336 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172933163 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086941908 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111109231 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085065485 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145229171 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082052201 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.098304937 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192023135 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09757917 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109416766 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099497044 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112678126 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119337128 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080986351 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083115336 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098184476 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08032327 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148256904 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098945846 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083410503 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083102819 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110191503 seconds)
  done (took 23.258932866 seconds)
done (took 49.663657561 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.463085627 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088334381 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085754711 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106870178 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088066707 seconds)
  done (took 1.694360779 seconds)
done (took 2.528628953 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.334325188 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201032515 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099921633 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19813539 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086519552 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.206388639 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.191788584 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094829634 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216239766 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084833366 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.195194083 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084611532 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105796466 seconds)
  done (took 2.960809773 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09845722 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104346622 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097298473 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115715829 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078575147 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096265609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113557026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106664137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094777273 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107270289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079632406 seconds)
  done (took 1.922345258 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095240952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102212118 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092796135 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112638668 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079252586 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093143392 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111354514 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104845983 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093646566 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108992428 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079658479 seconds)
  done (took 1.911364439 seconds)
done (took 7.628513735 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.143960265 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.093758782 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.17160912 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.219264988 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.361111731 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.244054038 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.580068185 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155381464 seconds)
  done (took 14.963706577 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.125595186 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.155440026 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094760083 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092668202 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094019318 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.114878757 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089195269 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088140057 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10945432 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09271349 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089952639 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.110618925 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092138116 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090205695 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086447608 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108552122 seconds)
  done (took 2.530425906 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138500295 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122087071 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113899088 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0959329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110104007 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.095448583 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097355565 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112981805 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091617279 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091550483 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115788897 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.095565084 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093570721 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107395879 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.096137711 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109626447 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107591334 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095555485 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107830068 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112260651 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097624024 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09332579 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11141713 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096275594 seconds)
  done (took 3.431364449 seconds)
done (took 21.763804043 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150779469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101893759 seconds)
  done (took 1.091755994 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141840744 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.160730016 seconds)
  done (took 1.143892502 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11199954 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.086262844 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137928599 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102145757 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.087445921 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104798061 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114036967 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105312501 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087936647 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087824417 seconds)
  done (took 1.87088556 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091150604 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09119873 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120809727 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139170998 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113774095 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091743267 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092649213 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089495361 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112553095 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088459577 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096977055 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125527093 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091313134 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125467651 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093001574 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094244594 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114816632 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.091683697 seconds)
  done (took 2.71093497 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088026724 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090225441 seconds)
  done (took 1.025002607 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091314954 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08732288 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089416777 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107615884 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.086289348 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08689086 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105116171 seconds)
  done (took 1.500922614 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.501899567 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.268506356 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37358725 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105185885 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145483945 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.35251344 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145439087 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100472652 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100497631 seconds)
  done (took 2.975371045 seconds)
done (took 13.163115399 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094277173 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218907798 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.76022213 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110694261 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.086876881 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165521307 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.294009177 seconds)
done (took 2.587136678 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357102822 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152427145 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086782153 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085773927 seconds)
  done (took 1.532894532 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081960955 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096097466 seconds)
  done (took 1.035091141 seconds)
done (took 3.424913862 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087445832 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.121602148 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.104752732 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.086084915 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086281256 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084163304 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.104297519 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086580352 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086554502 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.105725719 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087086587 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.086823783 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085223976 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104442536 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086641795 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085306008 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103433623 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087072023 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085151258 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084548963 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102551838 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086434704 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083941795 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083999069 seconds)
  done (took 3.098963497 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111703371 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.087333751 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108369418 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092245767 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090051877 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108627921 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091987754 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086855697 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108818674 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089510975 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089361768 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.107533053 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089701843 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090745689 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087169961 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108678501 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091311031 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086104066 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106139814 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089639337 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089946908 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106072104 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090134819 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090031901 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108019167 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090098853 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087338886 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106397362 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092176278 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089545386 seconds)
  done (took 3.733369294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098632835 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086100377 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087924285 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117166247 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086337492 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089395199 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105792609 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088409469 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090544582 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086995131 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110227015 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088747351 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086110201 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108212534 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091173437 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092212601 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115842953 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087555541 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087257677 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089000836 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110808376 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087788982 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08962323 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107670325 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09005524 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086384792 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088841009 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108272884 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091396706 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08912861 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.11070391 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093823553 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090256743 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.1170849 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094291784 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090285579 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093740716 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106194481 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091755985 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086202503 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104487702 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089575881 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086812362 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096186166 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110272282 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091464483 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086978143 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108666565 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091139492 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093880811 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085398368 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.10476058 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092418833 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090534365 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110662874 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086685856 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089116786 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.104250001 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092409184 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089144667 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086369137 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105166311 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095693268 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089861504 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123785484 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096715731 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087167104 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109540152 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09204418 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095717989 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091397927 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.119675516 seconds)
  done (took 7.780224435 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102987723 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096027765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086755957 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107139181 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08750294 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086919353 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110382135 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088906167 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087142466 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112633494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088522429 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087835055 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10534981 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090356723 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088409895 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087246913 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11359674 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087697246 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087708813 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107234556 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089545197 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090659844 seconds)
  done (took 2.955851808 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.232675927 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094709114 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135747283 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119529189 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106334159 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118539774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091979868 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092406033 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110357099 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097245478 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096020004 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110415135 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106051583 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113905712 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096521836 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09977923 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109219014 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097517816 seconds)
  done (took 2.897492242 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101353963 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.087995754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130615077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090293778 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088713966 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089205358 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114500408 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110408954 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.106436939 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.089767047 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095233244 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10743391 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091488954 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089921842 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089305565 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110266177 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091263329 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088973782 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116141193 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094685183 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093743307 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116610383 seconds)
  done (took 3.063929271 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104044106 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089743636 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126880609 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093677841 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087172991 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107408849 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095384044 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.088231499 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.113928328 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.091340773 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089332143 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088541205 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122723834 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087970992 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.093505586 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107267329 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089809331 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088741517 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108949538 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088391195 seconds)
  done (took 2.833679486 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174967419 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126356607 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10847746 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115079631 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127547416 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109015073 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114189447 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128668159 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10701637 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13609341 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109752221 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107574526 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134291071 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113620706 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125618337 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118422424 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116668721 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134150666 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108419013 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125550242 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120584967 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107595209 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13486855 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107822496 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10752377 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127368223 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107480001 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131328163 seconds)
  done (took 4.25880819 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089959706 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087670804 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08713937 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105881601 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.087722804 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087617957 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.086156095 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106153429 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087929738 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08712 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107010701 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089005922 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088549127 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087791462 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107153921 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089081207 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088124103 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105689215 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089255979 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08721627 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088617997 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106611696 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088763238 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086746383 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10442118 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.089216502 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086833025 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085308367 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107637889 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087816623 seconds)
  done (took 3.655934498 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100092789 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09738577 seconds)
  done (took 1.073317382 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095685578 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103374532 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087176017 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107495781 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093753288 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088928956 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115087685 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09538751 seconds)
  done (took 1.663618922 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.146270357 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165753567 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093775266 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101012952 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.166021955 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157861894 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136252638 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094059391 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110357013 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084295051 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.160487323 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084264811 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092021424 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107609146 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093340625 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098131307 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.108662616 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100810306 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095494996 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.108556855 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096839496 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097326646 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113091306 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10035723 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085763979 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113178471 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096374835 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10300177 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106646687 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095088664 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090816945 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.106945932 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09518034 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094810348 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089595038 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165101146 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100381378 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108605649 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092952641 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093887276 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144900866 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.089872779 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093089054 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110112262 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096414598 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093454231 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115163914 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.090612076 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08465598 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107157352 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091244486 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086642268 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.106892091 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094554977 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091873795 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117027292 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093643545 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08828763 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106439759 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08891515 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09063789 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086859226 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113677091 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094080394 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092513098 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.113985543 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091325486 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088409826 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.109545973 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.090324744 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09079092 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127197126 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093751975 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.093701482 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114928058 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.090317814 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088558851 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113972786 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091475465 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092181601 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.113108815 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120383913 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093745835 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107239435 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088463258 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096314328 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.110470356 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093853114 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084195107 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119151958 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094008934 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.090134436 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084075298 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110527364 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088663945 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093392865 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104712364 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093254168 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087486889 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113960072 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096943154 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091488646 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114144429 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096688729 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09669431 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110833123 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139004311 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109434618 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089289693 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091470958 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094361965 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10694165 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093187272 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088543214 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109399461 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088520141 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.094746251 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111416652 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094130713 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094740279 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113667705 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095661444 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09147727 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.107165031 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090270706 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093392633 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11656292 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095917901 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093476013 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08877704 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.109968967 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0925606 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.093727167 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109503618 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095551704 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088641244 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.107645566 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092277506 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094760995 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111534366 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088758555 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091408999 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111264231 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092749155 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09326928 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11129039 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088888256 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08480919 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111039122 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090202912 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.090065393 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098322866 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10899517 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0932898 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089479632 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118081696 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090181501 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.094612652 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112429637 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096828468 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094804774 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10416799 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090433162 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093137241 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114052359 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089889735 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.089342401 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.087862923 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.118363943 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086216614 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.092954282 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105495209 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089658348 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094633136 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.111715508 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095580071 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088044286 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150747575 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103546467 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097075443 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111146859 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093900266 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094500683 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111399961 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096134867 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09634933 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.113635349 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094735851 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091650062 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114852348 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090713286 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092267043 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09030817 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115236711 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085734145 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.091237156 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104148526 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096474573 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09459987 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.11520197 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097463574 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092737155 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1105251 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100462935 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08878507 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.112676116 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086619588 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095916523 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099855105 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116250837 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096616648 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094213636 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110188308 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091967283 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098482124 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11262362 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094207748 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091653922 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104162913 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087396029 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096337018 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112807793 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089961368 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089470186 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094002947 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115552058 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089794217 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085300602 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.115539296 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097621379 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087573448 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113366601 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089891228 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090514615 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120929622 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086200406 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090019469 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114618204 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.095821239 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089867432 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111592408 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.0947652 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098561889 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.112909477 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094919995 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090562909 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098916618 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111790571 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090046419 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089046019 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.113645598 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086961751 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.091045259 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112295475 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090712721 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089330928 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116836848 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098002793 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.095199275 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11051178 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09641518 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.096667604 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.116088088 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092215697 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.095966943 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088012127 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106356484 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090098027 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084896355 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.111065095 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089516783 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095584127 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111630176 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092996916 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095193966 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114122862 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090551219 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.095833056 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122798716 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088450775 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085706334 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110739678 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093044004 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088599339 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108988354 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.091775055 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095379572 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.113860444 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097546843 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089406882 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.089161238 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.118556614 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089915214 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097436842 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.117076036 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106369385 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088142104 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.114710874 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090917168 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097330444 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107070758 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093542956 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100404358 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112373917 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091134266 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090575576 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108777392 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086930682 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090093506 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11602675 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092871499 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.094894648 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110326559 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092689228 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089976663 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088061127 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117832221 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09204326 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.095505789 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.110793443 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087351636 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086921277 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115201446 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094897603 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097254239 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107755357 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09599095 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097902614 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095022609 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.112957544 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100502705 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098418209 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119096673 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099287835 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086382859 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111205187 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099426085 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089401842 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.113804239 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.093942986 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08721847 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115144193 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098434148 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093789723 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110532011 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088792181 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091429889 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096665491 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115499502 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093963003 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092492465 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113542028 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088821492 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093504275 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.116815236 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095203934 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098059701 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111899136 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096376636 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089791223 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11627852 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09326014 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086837163 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08564904 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11083362 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.0985821 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087469784 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117214166 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096580316 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089746013 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110908088 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096826648 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0881882 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11611248 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096897442 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091713531 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099750372 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111124429 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091462353 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095784064 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117025059 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087426318 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091272917 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112367213 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098483038 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092023465 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.11710067 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094301089 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096989198 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.112347402 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097211268 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096726478 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096663878 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108326493 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099027407 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097371667 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.11408183 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091787535 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091485991 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109028201 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093515417 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097623813 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110796945 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100700799 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096421648 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111921958 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093090748 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.096938958 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110440422 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098909532 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090174144 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094175093 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108078584 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096257553 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091521686 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118360629 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090286346 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087891962 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117433905 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096889365 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094649469 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115736905 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.098780056 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08704776 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10587703 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09537059 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090730959 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119795318 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098197085 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091420336 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092014421 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.113307981 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.091298048 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097215695 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107803486 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090885698 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094234154 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115381816 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092559411 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088354818 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.116602704 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094259789 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09496064 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112007452 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089423882 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092453998 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.117818052 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093854613 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089258651 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09011108 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120336332 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093730513 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090385389 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108628947 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101117662 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095319906 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120051975 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091315268 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.093938584 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112154466 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094395954 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.099126078 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112429688 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095342192 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092522015 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117719137 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101591066 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086438879 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110751162 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102619293 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097082262 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117073514 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09485697 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092630125 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11872298 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100526224 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093856749 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087538775 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109472617 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092473324 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08761764 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.113287801 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101014226 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093018963 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111540974 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097481956 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095714176 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.112933446 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094683036 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088771188 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098529977 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111704378 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098243608 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087639244 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109343167 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094249137 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097533503 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114342887 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095652644 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092720728 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.112664283 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090684868 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091666868 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096881339 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117857209 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098211996 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093081044 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113690338 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095642738 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102347276 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.113465472 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095314183 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10314262 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119430117 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095733147 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09367682 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119473658 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099671987 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093451071 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120763077 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093703619 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093661855 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.120163254 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101034754 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103721519 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113422414 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089882153 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.096840419 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111734334 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091321105 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098945127 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099054783 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120528597 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094981808 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0905952 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122720598 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10046379 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09377123 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112988555 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092625975 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096023017 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113264945 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097479307 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091443324 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120035601 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100480396 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098911949 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.121777271 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09108479 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100505712 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116681078 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105363134 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093459376 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088352858 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10990858 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094752981 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.09970781 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122229312 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097981391 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096458705 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117910817 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097148672 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094978608 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111789521 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101777576 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098678816 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092308021 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117775123 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093517627 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095468785 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.11522203 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099996867 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100448994 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116504753 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104427154 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098133929 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113921928 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09348304 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09622935 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.113856771 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097758446 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098531586 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091482894 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111689711 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100173285 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100100316 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116269262 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101310283 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101545465 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114437324 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09907775 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100246375 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.118227473 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095228553 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09615917 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.115657302 seconds)
  done (took 60.928592925 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1470825 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100442811 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11508283 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09544183 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112554387 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116729219 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095131941 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095686124 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116730415 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105403644 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094462541 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114428162 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112102276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136016192 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113984113 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103669756 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11573849 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096472898 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094166292 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115894832 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111550686 seconds)
  done (took 3.233655848 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114122315 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109017748 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126574094 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110363278 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100643163 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127713151 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106151371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127315933 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110262074 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101725884 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131426117 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106250155 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124014601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104476123 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102684991 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125054692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110073361 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100833417 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129043903 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106125489 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124803177 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106734305 seconds)
  done (took 3.434715467 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.104849924 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098592465 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.10036313 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115682915 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100214554 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.094097985 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124648063 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097204918 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103639377 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115495076 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092205091 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095634059 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120601219 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.096398428 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091902141 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094900063 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125116406 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099854173 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.099290477 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11553673 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109376715 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094184048 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.116791937 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092039138 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106358724 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.121051152 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.095856274 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.099280488 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089681894 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120936949 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.096439528 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095043335 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118226595 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091091133 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090356104 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.120928892 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100243245 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094595674 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.115090642 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099599261 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096735675 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.099031165 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.121660712 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095909446 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.09584326 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.116665084 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100693755 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.094367632 seconds)
  done (took 5.906290695 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126880402 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164760719 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099262577 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135799175 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131946946 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106074534 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.097193265 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137047153 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.095630288 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121158715 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112078472 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109442501 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122616806 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103006232 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.123460234 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100976021 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100653144 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0975802 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125792635 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099089067 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123775713 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103146167 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109394263 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129149171 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103640234 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098423595 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120340247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104015671 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107649157 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125422576 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.343828595 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123835277 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.111654523 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.098270828 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119900655 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.101411627 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110772153 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120653352 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101747471 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097066359 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120887902 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104688698 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100259838 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132439538 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100805403 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100244584 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121297644 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.097381583 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107075389 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122148704 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.105838817 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129861751 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103185824 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099463084 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123376008 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111601802 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098367762 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118589499 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102032732 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107185162 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.11894196 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10235375 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109495366 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122765628 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10617301 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130551019 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102679673 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102617543 seconds)
  done (took 8.938609412 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136485767 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103383472 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133388988 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112164434 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103079517 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125350351 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103316882 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103017894 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126288549 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109065982 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123539162 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.202539571 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122760405 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108631492 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102868437 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126105337 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104269263 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103187024 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126161392 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103813766 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.123210823 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113706677 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102660351 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13167747 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115181502 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099683198 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126032116 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104481063 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13154629 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104608282 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114093758 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125465689 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104507379 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111154595 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136646769 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103476375 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119574981 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105107844 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103439961 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125548955 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10165549 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111337161 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125409109 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101248678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103447703 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125487659 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113399058 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135363479 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110170513 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109000459 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125766928 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112257148 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103666718 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126004301 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112653695 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140552292 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113595341 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13193053 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106680515 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112442123 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133949329 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119888817 seconds)
  done (took 8.199506012 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09909316 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097148943 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095479051 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116583038 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098527819 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096268279 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096135182 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120495094 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097817046 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097400428 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118687706 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096498841 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095921696 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095952436 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117000541 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096373696 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096040638 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117455122 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098913588 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095509692 seconds)
  done (took 2.989639019 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108765695 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11578858 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.118761171 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105379707 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100437989 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124556449 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.099696821 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099913824 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098248176 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122200196 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107477573 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127397325 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100109103 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104383763 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127881596 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105181304 seconds)
  done (took 2.713582215 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119269854 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115611867 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.192437666 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102199922 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121221657 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10785989 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09922663 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124017389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.09941029 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105255007 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103020151 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12554885 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100604291 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100989267 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121988235 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103727182 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096828387 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124235935 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101689793 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189142108 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103687894 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101608198 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122495822 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104436636 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100279886 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.125512085 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106279739 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.098686128 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.122055508 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10175011 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101696163 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.127638005 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.09997508 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103805033 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099987616 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122039552 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101108627 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100092941 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124616014 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.100912598 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102524796 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.122353873 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101145869 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102619233 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.117833081 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102244094 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.097086467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126622414 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102556478 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.100948266 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098660489 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131032531 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105554491 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108421184 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130031963 seconds)
  done (took 7.12260462 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113114915 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101355865 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13269616 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09979337 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100636687 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099118488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123903244 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101358376 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099897708 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120472011 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10180988 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101125104 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120962731 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102562577 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100711098 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121817509 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098770402 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100367256 seconds)
  done (took 2.89302587 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105520266 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098841891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104919901 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12194591 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099080855 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099526321 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119628301 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100935622 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098127077 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120021271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100711893 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100761429 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097989987 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121551596 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099673081 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098795427 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120276449 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099693358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099793529 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119097135 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102155276 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099761542 seconds)
  done (took 3.283934156 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113211712 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185879543 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109587219 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195224075 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099532104 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096738294 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130653124 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100106904 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114763521 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119900146 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098073789 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096623359 seconds)
  done (took 2.41576405 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130663793 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138577685 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122195175 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101629046 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108451364 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125834338 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104289336 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103941707 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136355631 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115903368 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124795831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114796091 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111398259 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134455117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109399908 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130285543 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10504216 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103663202 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120148659 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120604737 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103182123 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135035287 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10391299 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123612497 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105309865 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111221858 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134221324 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115271779 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103604761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135947546 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109821247 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125352922 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113782742 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114288013 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124022205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112538218 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124555892 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120821199 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109014016 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134527851 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102034312 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108346045 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13537781 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110198721 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134795782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105341044 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10832953 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125964115 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104970709 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147456138 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111697993 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111368921 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132435021 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113041647 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133910952 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126548538 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136416458 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114089218 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109006488 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138826701 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111884333 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132264293 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113507531 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136319404 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111304856 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112614949 seconds)
  done (took 8.814247312 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142766046 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100783544 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126744781 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117298974 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133681144 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105743672 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104054332 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125355002 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106546162 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100623437 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172016314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10485087 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136008559 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114290955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104072331 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125887955 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105101627 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112332078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123499224 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127640537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125478393 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11465363 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111818132 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13538982 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115707267 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131638167 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106111737 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103515406 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128175101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104428971 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108852195 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127269946 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113430769 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121794369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115300771 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104266791 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126231414 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110704902 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10472676 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132133958 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113219827 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142406881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105458067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104925418 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138935152 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105288603 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104113419 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123630283 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105529876 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10063159 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139002731 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116340344 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138110225 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112738719 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126919336 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106212449 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104535553 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12665529 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106236889 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110068125 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134858319 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107154057 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148952356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105985989 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104412658 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135592045 seconds)
  done (took 8.766899352 seconds)
done (took 167.514560643 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.153211638 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.192821546 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146139303 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.181107159 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096001846 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129578263 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.151940947 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150050648 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093827686 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118116017 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094595572 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097367278 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184649134 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094434175 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093983808 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120624627 seconds)
  done (took 3.05965958 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194794391 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.31259069 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109809823 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120518925 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102792619 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101346423 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120476833 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102140316 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098894883 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12908812 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10232855 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095854531 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129435175 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097735628 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098629399 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123875286 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107123326 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100996374 seconds)
  done (took 3.220052791 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12180588 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144802873 seconds)
  done (took 1.239817264 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131733769 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198691573 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280395103 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173922561 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122750304 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139641869 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153619665 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13453292 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182485842 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134281765 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112590484 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099389198 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149403397 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104965557 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13490457 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100985021 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128191385 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133799773 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112176453 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101461215 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143864871 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104964377 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104418003 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135267564 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171341341 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134745179 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104942332 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.1030204 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12504491 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111402255 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106460183 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139837745 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112926971 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175424687 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10451742 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171221376 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130399611 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10106512 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110270498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121155467 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104828865 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103337729 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138747789 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100237904 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10379602 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132211046 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104226814 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124940406 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110279299 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109602737 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130718383 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107805575 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170774801 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110301637 seconds)
  done (took 7.962990058 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.859397362 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143258854 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10038455 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.013361672 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151364941 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115433689 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.863708645 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14768242 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254925196 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.872472637 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116731171 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.140028858 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239121468 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254080624 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.999290027 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326734964 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.713736641 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115257009 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127378613 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166487623 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107038053 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148554897 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120082653 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.419621235 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100030088 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122429513 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10840674 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110787971 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179721141 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.121003202 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106380367 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196367163 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244899281 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209925742 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123684845 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099379231 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096917215 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183951021 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269700803 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217740016 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187990719 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09572523 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120495919 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109563011 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118864583 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119502365 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159194028 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190082254 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189382184 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102328964 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135739862 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109776087 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128908014 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.156961426 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120246448 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328337336 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331168046 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097770901 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131614841 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115166826 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266663965 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122136503 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234694114 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125362541 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215888015 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121594381 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811350642 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160637789 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121251261 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107377389 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128863721 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106995445 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10712069 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182003382 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371806835 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136540753 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103761106 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121428207 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240362876 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102606136 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098803693 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183216709 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100488771 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129581365 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115422898 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133773025 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16537317 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252289084 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13260696 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111059588 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105034379 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134351149 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101167509 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232868643 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231227413 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176936482 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211116375 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131419678 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182680657 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16055929 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129643389 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185720716 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108488616 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114337037 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130556057 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225544913 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155626771 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101776079 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104892101 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130613665 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.139616111 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10214088 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132054755 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184966891 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455279695 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.163420417 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11824836 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105035542 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108842393 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181377756 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1062011 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264142946 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132011353 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160385408 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130287056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097249738 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129519666 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161713368 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13270068 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108206787 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129878292 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112448565 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.253749644 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225550449 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111904323 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246110326 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193832085 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108056533 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191430254 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107651678 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189918507 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131327491 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109657454 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101514097 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797519512 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135991335 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108096376 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126950067 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184942656 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099714751 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123649026 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100259385 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097215995 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803473766 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125143797 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099760492 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09951127 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130973466 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108725221 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107256862 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129026199 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178375828 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244967571 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112708877 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130048131 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101459163 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179882678 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102030983 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100236908 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122625883 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101808616 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109038659 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126541015 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102433314 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191173139 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154292023 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254003103 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558080323 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101046434 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09992135 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237426684 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124575627 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299930108 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108588643 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232085025 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187611795 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120088769 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329820305 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185923099 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184761878 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102603335 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191162673 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09727883 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132787035 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180202673 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102451897 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106974571 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179005746 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13700644 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114693361 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.999421209 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100646735 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250918233 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.120063882 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16589701 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124937426 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109552615 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303458702 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10028235 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141553546 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180895097 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106289204 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100099332 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.602386946 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123427209 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113482079 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108131675 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25849213 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164330391 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131859444 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110512391 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135348866 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158889445 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234121952 seconds)
  done (took 45.484707214 seconds)
done (took 61.932820145 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301057762 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.260449184 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307097962 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212545952 seconds)
  done (took 2.148832988 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.26944804 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163182381 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.237277402 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099178147 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246002197 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099053453 seconds)
  done (took 2.11168183 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.492880167 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.376768844 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.309795869 seconds)
  done (took 2.181126627 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258241826 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249106047 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355706733 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.408751512 seconds)
  done (took 2.39110047 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.304724454 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130717501 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127583671 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.215279853 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.261195666 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.235506739 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148812168 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197954461 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.157003947 seconds)
  done (took 2.8303953 seconds)
done (took 12.659815274 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.146768214 seconds)
    (2/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.277940914 seconds)
    (3/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.283362699 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.364282932 seconds)
    (5/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.156249542 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.170045354 seconds)
    (7/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.297973823 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.106715799 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.278586533 seconds)
    (10/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.145162273 seconds)
    (11/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.250371421 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.22756375 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.23111108 seconds)
    (14/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.305326298 seconds)
    (15/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.335343556 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103824837 seconds)
    (17/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.331132596 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125958876 seconds)
    (19/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.14370536 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138068143 seconds)
    (21/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.30170552 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.196730807 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.248727684 seconds)
    (24/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.225330762 seconds)
    (25/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107013972 seconds)
    (26/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.214982563 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.218597529 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.350742635 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.178435618 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151879007 seconds)
    (31/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.194805278 seconds)
    (32/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106440008 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.159628473 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.213808338 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.202273837 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110535486 seconds)
    (37/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108364803 seconds)
    (38/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081531449 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.134083073 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.189553743 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082821769 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.300171552 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.254709063 seconds)
    (44/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.093783839 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.189500861 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.131092011 seconds)
    (47/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.23987526 seconds)
    (48/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.232650665 seconds)
    (49/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.212324702 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.202640451 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093201158 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106861511 seconds)
    (53/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082960138 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107629746 seconds)
    (55/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.217600246 seconds)
    (56/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.1069129 seconds)
    (57/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.133335686 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082646961 seconds)
    (59/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.107555012 seconds)
    (60/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.153848749 seconds)
    (61/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.108589177 seconds)
    (62/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106723249 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10501595 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.165143661 seconds)
    (65/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.190602045 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.151345276 seconds)
    (67/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14988165 seconds)
    (68/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185358267 seconds)
    (69/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.128209635 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188762444 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.163465781 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103746738 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13624943 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.235124683 seconds)
    (75/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107268375 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093889456 seconds)
    (77/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.190158852 seconds)
    (78/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.088739354 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10572438 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.129741808 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10912373 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125078233 seconds)
    (83/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.300467563 seconds)
    (84/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.113975311 seconds)
    (85/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083013781 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.133131924 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.127259148 seconds)
    (88/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.221088084 seconds)
    (89/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113066245 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.131308301 seconds)
    (91/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.147411755 seconds)
    (92/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.152598581 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105656733 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.164299805 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099224768 seconds)
    (96/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.169140843 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108660348 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082644425 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082490911 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.205553504 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.176948638 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.235958737 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.147969381 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099342772 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.148579236 seconds)
    (106/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084955563 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084017637 seconds)
    (108/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082864284 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.081692248 seconds)
    (110/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.220609231 seconds)
    (111/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082616945 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088602273 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092642449 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108405186 seconds)
    (115/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.152922541 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088953882 seconds)
    (117/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088594095 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132443124 seconds)
    (119/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085221392 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083155544 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108217561 seconds)
    (122/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.177032209 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084478353 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111129963 seconds)
    (125/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083701405 seconds)
    (126/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.109129268 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.095570207 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085242629 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083943756 seconds)
    (130/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082408003 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.108833494 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108891943 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.082608656 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.150061809 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127771681 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107854643 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131068887 seconds)
    (138/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.084304143 seconds)
    (139/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083971376 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108009153 seconds)
    (141/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082979279 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.134032077 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083942789 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.084492389 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.213221961 seconds)
    (146/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.191100999 seconds)
    (147/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.083780585 seconds)
    (148/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094486943 seconds)
    (149/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.108286941 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10939092 seconds)
    (151/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.084521499 seconds)
    (152/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.214467623 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111690205 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083525556 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100071979 seconds)
    (156/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.109558744 seconds)
    (157/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085387759 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112683846 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.124345978 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11015999 seconds)
    (161/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100319663 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124338202 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085727257 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128256717 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107546393 seconds)
    (166/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132970931 seconds)
    (167/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085058856 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1278728 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123993274 seconds)
    (170/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085852789 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108399987 seconds)
    (172/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089270404 seconds)
    (173/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083140244 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.133907347 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100744491 seconds)
    (176/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083175575 seconds)
    (177/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.10762073 seconds)
    (178/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.090004166 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107926839 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084713254 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.131453466 seconds)
    (182/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085389715 seconds)
    (183/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085472747 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124466673 seconds)
    (185/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.107054625 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110367591 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084520804 seconds)
    (188/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.106437452 seconds)
    (189/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.112582054 seconds)
    (190/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.089701558 seconds)
    (191/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084316546 seconds)
    (192/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112536728 seconds)
  done (took 28.215334367 seconds)
done (took 29.224748157 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.216486216 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13023394 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109597442 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10945805 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.207079219 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115971966 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.144596336 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11287667 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115244157 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133008735 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101673153 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118661527 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133898652 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.180537733 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137403556 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104319644 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102722659 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115356616 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.145601949 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120260356 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.208220127 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104087924 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11420848 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128965047 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.183175124 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130391161 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109252825 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110060789 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.143131874 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108598978 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10905034 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127044302 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.120357224 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11992268 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126680933 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110463351 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101478741 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089582722 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134203202 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109619955 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116755505 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133874754 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111293008 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102009547 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135277879 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109593489 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101428526 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138383093 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101580988 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109344609 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129279941 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122743882 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106878248 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.123590678 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101577626 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10287065 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.140800353 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104265622 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.119220972 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100916428 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.127646178 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102890474 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111085858 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127088755 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109180766 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102838988 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134886102 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.110845154 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10777817 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127660632 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103825038 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108792108 seconds)
done (took 9.881409417 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109252315 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.158939307 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.203487246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.21630003 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131347007 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14369429 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124080841 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.130386157 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.145626292 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12644778 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.163003324 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132339031 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.217185175 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.115143175 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116456757 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139181044 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117916741 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138673432 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.19325854 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.151161883 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.13363931 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113857606 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.160988678 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.126389438 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.134998854 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.141102113 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108240486 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.137691359 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110678833 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116195473 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153621627 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109959412 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107603909 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.155016102 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12333135 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139443919 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119830992 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112267997 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.13219856 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.109213357 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116184469 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.153610204 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108754438 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118230773 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140800299 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117286997 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116435723 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142973769 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111925804 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135882623 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114016843 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134399393 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.139970216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.11774118 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114802312 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142624928 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.117988398 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115748156 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13468678 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11863027 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108185174 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.13586594 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112765413 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154705769 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111123498 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118086546 seconds)
  done (took 9.819500214 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127889751 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138422322 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141355881 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117497609 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111236804 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125658574 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10026372 seconds)
  done (took 1.924432072 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102469961 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188643528 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211752233 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212268302 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208115076 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.197230933 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148729564 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101825006 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133153 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137110398 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189577681 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242277691 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.106909581 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143592732 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.214284501 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101799071 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.218020392 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101949132 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113430418 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.215875904 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114702594 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156468894 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114679749 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101613167 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211668801 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102493972 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.266395554 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143083365 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109926869 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115462685 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112039674 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205694223 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212890739 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11583989 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106414758 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.213364816 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.208687778 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113305886 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226878007 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105369817 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.212914938 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113285824 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.142280448 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116372295 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117478299 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.198663157 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120029393 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114723516 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140679833 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.195153482 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.139492288 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211712784 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111419645 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113408817 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11109581 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142546061 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121846941 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.139667893 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197473552 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141804796 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185649925 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214257612 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.211150527 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188350079 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1503093 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.189390135 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.208636927 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112357827 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135583699 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.1157729 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213340145 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113717325 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112743752 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.202239524 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117901117 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.215648947 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213851 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112890067 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113886391 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.131615371 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112325477 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102115454 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.205147011 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112135518 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137679284 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122146507 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114582859 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.140169634 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108345779 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123207644 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139911945 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113855913 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118523102 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.14066149 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119046221 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.219563186 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112758284 seconds)
  done (took 15.81498133 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108729413 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104489944 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.1073942 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130570399 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104839373 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102759695 seconds)
  done (took 1.744466147 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142273861 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114339835 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.14974374 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117180992 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.194010977 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.19529873 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.229259954 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111041916 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158666458 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128023556 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.222177727 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.229473768 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.203206387 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.142549401 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.202109885 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146224931 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.206116386 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139408729 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125761607 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112730068 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144447527 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11908819 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112855108 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213457306 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116551513 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147798786 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111920337 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128385556 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150894683 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112371365 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.143891376 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119907647 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110058273 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136429836 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.207576689 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136071543 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112658537 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123951885 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144253772 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118470441 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.231086919 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112925882 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123466121 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.153695233 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112065502 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109098416 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.151840375 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111698797 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.228366971 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124280453 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150629338 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118452826 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116501419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.152723688 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111294722 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111085295 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.151321471 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.205249034 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145822061 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110151752 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.115027503 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144751985 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111484074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.148570707 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117610045 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123941864 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135755314 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118314278 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113717279 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.141698399 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126366495 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116228566 seconds)
  done (took 11.412017349 seconds)
done (took 41.771043928 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.5726803 seconds)
  done (took 2.650598025 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.914793056 seconds)
  done (took 1.992167773 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.010163392 seconds)
  done (took 20.120600263 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.537576797 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.612701639 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.036000647 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155304551 seconds)
  done (took 3.42120045 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.05421175 seconds)
  done (took 2.151440297 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293620544 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264268129 seconds)
  done (took 1.641740387 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.75330969 seconds)
  done (took 1.85013965 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.546285135 seconds)
  done (took 2.629650262 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.353340705 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176471441 seconds)
  done (took 1.629145296 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.632770496 seconds)
  done (took 1.734521984 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.948331749 seconds)
  done (took 21.05062837 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2387667 seconds)
  done (took 1.344289507 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284846311 seconds)
  done (took 1.392125385 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.740535438 seconds)
  done (took 4.844611725 seconds)
done (took 69.541486671 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115558 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11828006 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11746092 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142224153 seconds)
  done (took 1.586811772 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124063938 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118409505 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146849099 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118865294 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12493858 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118215808 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144193071 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120628701 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117104244 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14740101 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118995512 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117370484 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149761677 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117737675 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115311403 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147807864 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122565484 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118302296 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145487701 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121067508 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118934161 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146658882 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123727286 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12164233 seconds)
  done (took 4.174405706 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115116857 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108836065 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108598882 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133619386 seconds)
  done (took 1.577216667 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128198541 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131717596 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15560165 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126855394 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130737488 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156246719 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118417652 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114932666 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143928289 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127945955 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133767605 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157705936 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131846238 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12048833 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155910802 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112973177 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118761916 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157639155 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125531373 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151746247 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120970412 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124882006 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149711433 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128946044 seconds)
  done (took 4.332566825 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191632978 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127178204 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.168179728 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160151977 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.16996371 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11273797 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.137699729 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146756533 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121214775 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.142062026 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.118089206 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160808798 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147012457 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118011158 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114982848 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146344334 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126889903 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120082496 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185659264 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.118623285 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146822242 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128537653 seconds)
  done (took 4.224860703 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120037174 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107849318 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129136791 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112409051 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119726596 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136662178 seconds)
  done (took 1.843392616 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108407249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102546562 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101448049 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129005812 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108051047 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102521938 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126909793 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103938978 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103350823 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102251464 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128705372 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102530608 seconds)
  done (took 2.42995622 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.338647163 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108227991 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135767573 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109361538 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114469952 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105054525 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149564771 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107706209 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.274175524 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10691058 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.147851347 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19632914 seconds)
  done (took 3.011573856 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206743963 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143228998 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298811017 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372785412 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163014553 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18622087 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270528995 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190539462 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204313071 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133422394 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243629984 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152603368 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177157796 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17226421 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162985017 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159940061 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195299199 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213812435 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145588049 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222674268 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152702067 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191727999 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175899382 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173807499 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132628337 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186693617 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115343937 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152790352 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16614225 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189015166 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167178972 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172466871 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137170447 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218058814 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257611595 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19462916 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287735342 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131219844 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.205956905 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180353375 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254103685 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164112791 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184259413 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177420765 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126351655 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202907961 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148526051 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.198980308 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.125870996 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167791456 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201862235 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171994011 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202179165 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13316295 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316927579 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162012337 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166487594 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168963646 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206945637 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215178564 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161179847 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148436757 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206877734 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180365172 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204290206 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137485836 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190296896 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120756306 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191275391 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189103504 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203635672 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182114577 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.193653132 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156836975 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153304545 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197364083 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173923701 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200357524 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180785104 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117736308 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14532721 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159805949 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123555084 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.221751226 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119454006 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222217544 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130073459 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343879373 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211228467 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154940742 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18267952 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156466396 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183222199 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140967843 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.1092001 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171571465 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158576457 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181469057 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128534624 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180756066 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135302641 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151968587 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148467697 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.118381341 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181920269 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13194661 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189243909 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153960129 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155971391 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160497085 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173495847 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150708928 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192138731 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206057349 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130833294 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128362545 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214389375 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152076091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.155199296 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172258888 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208016074 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145473924 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162110608 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160758352 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212403801 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164247423 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185083896 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160559189 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132517874 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143019134 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184836135 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179817291 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153793741 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1244658 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.175778118 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219480408 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12493275 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132642216 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192783821 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129177744 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150491268 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136901353 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130872866 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166567156 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.139855018 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.158438821 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148581263 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182043003 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15249029 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179718452 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132114735 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203665743 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129078749 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.183937086 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143039369 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11423238 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197679796 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210099469 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125551396 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227536442 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158652354 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218130847 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185012413 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128533406 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202987668 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125986723 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11484485 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187836436 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1507817 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186017466 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201984137 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212833406 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162001926 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172645636 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145660153 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192150509 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172648289 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17785014 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13986859 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182635264 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160432426 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.145018197 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12012362 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.122984207 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16297505 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126386353 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131223436 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200686398 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189726366 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208103761 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155263525 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162321803 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180741217 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.148729394 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159208738 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.188168825 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136195756 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205742582 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177950394 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190698304 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136561932 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187090772 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117633238 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12262033 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157194017 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159221189 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160183973 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131673307 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165430362 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179063658 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198827511 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143699121 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225051604 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190957354 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21822078 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117107323 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161064785 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197358758 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153572505 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.209299518 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136741991 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184300441 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175702105 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165600317 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183720957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183461386 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158244926 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214826927 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.178512909 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128770358 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143568538 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184697056 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13293894 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190187125 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141227343 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155363258 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149602131 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.162108429 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121729507 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208900327 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138713368 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197200629 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155689584 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193913469 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121095186 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167176687 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156337766 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167969805 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114387162 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164629645 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210236814 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170021963 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15313431 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1992761 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126510991 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343492891 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184854562 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203618057 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13016929 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166139511 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159186161 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188443053 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158325476 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206477211 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137309004 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205272217 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180648665 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140508387 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125867549 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173530659 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147428071 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173503105 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128429128 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.181257428 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139230155 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212389142 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135865947 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183320335 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155876103 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.170996448 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149462877 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135762311 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222828057 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179692186 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172528057 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.178846 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163250323 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216437021 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119371048 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15307856 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129522913 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203827315 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128237098 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157895417 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.206084079 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220546711 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188720896 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158655251 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164276629 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124208669 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154332043 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174613837 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216158096 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13309104 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160277823 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189606521 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162915089 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128229035 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184360204 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282202875 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17253509 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170654238 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.147301276 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273485342 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15583894 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129191956 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186948736 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168533147 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156494456 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180609066 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15813341 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168338093 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160263268 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162939007 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211269221 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19031363 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193064506 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195817523 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14156228 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184317117 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158134835 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201352863 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139382096 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.169214964 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1603763 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20650594 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177906859 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.153885094 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156422107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181628889 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155098745 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195376707 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13376155 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217624596 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124667039 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18881652 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134966269 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11969923 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183909921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.203898853 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129042914 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204960132 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155353681 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158643969 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124799377 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140889124 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181876032 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134914422 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156441143 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178374398 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155760893 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158858494 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205787201 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127714391 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182617076 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144255128 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125436185 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168445376 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138777388 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157641191 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169269349 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207528518 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129600238 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202472695 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161376694 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18865344 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152769586 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168845129 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662538079 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122223286 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207531992 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14196921 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215309471 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175880535 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159690485 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184968077 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146720388 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190519186 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145159821 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2639465 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16149095 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183242711 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128493829 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136780465 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167045112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129210035 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178104824 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153818569 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165254133 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133353989 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179036459 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141161232 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140691034 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165798158 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17909373 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174418365 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208331645 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179007221 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16100063 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160031518 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197580289 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127973201 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189051965 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17012294 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166375666 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144406392 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127825481 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163973801 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178537689 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.149258475 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155304786 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187375565 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157140415 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183868689 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131555298 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18669014 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138612 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183710761 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12399694 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148443427 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186647325 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130019636 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.15000155 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156963953 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183291555 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154342102 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121780906 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.198376287 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180896098 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.148271838 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131866405 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300091232 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156591508 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214455253 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.144831388 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15993007 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142384589 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179126678 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15327997 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183511887 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127294327 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126453344 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.154502536 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.173372144 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.18066533 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157617493 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202661384 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158846661 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218816686 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.128924467 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.316877943 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136522594 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182009484 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.125480876 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.123793347 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165927559 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132175163 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136382385 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214447587 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207828261 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150723573 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.172028294 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131808901 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122297124 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15807326 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162644938 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177861924 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155377595 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170816254 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112578586 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138138097 seconds)
  done (took 83.150834993 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168044521 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153563903 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170443662 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.228148275 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19886364 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.300619119 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236421536 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266030061 seconds)
  done (took 2.921847773 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12216592 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160042622 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140562687 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147687513 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.118338481 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.448977343 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158887311 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119809679 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.166686836 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.160053967 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143861476 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.625219204 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114204734 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146251334 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.129368409 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.119134347 seconds)
  done (took 4.21707347 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.519328005 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.598991617 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.330906034 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.791375076 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234345031 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.180333657 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.818952279 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191992399 seconds)
  done (took 13.870063043 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.148179271 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136475173 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.32004778 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.263799062 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150778077 seconds)
  done (took 2.225897876 seconds)
done (took 130.660283487 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120649948 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120939062 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119707083 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153501631 seconds)
  done (took 1.707242195 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.185160255 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094807937 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096656833 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121898828 seconds)
  done (took 1.703929635 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.448962762 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09373666 seconds)
  done (took 1.772793047 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146844785 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142147549 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164496301 seconds)
  done (took 1.671340393 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140090704 seconds)
  done (took 1.347416773 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128568789 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.120645788 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.243527671 seconds)
  done (took 1.704979032 seconds)
done (took 11.118378918 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120732857 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.507413849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433520746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134297398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709955503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427043491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029184828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176126011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174154433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138225008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132655636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688048413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.082317128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.452071218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.037489874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.385665428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692728023 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111074414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147072421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112880567 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009055881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137709173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111908075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111327973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719199416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419651936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107328748 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.398686513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109289431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112296558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427577677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109378264 seconds)
  done (took 17.668027461 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11889147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173150943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146353712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111863963 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112670871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139504857 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12155462 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121061208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205605727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108787778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162690353 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108894849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114371182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138870745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1360594 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108872901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140882269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112681038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117304966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140393402 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13390622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108771184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140792019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112636546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109877881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160704722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110662151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120881857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139064804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115327136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114822755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139831407 seconds)
  done (took 5.366462808 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160012975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179637406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149659997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149071748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188955291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112270184 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224660824 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14933461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20450881 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111341232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132765482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138262054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151468225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110194938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167556521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110227549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111903064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142650412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118645891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111092538 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162939899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108643609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111757304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142539061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110816534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160254277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111622284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121996033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137718528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115346793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115538838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138779794 seconds)
  done (took 5.676519939 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126753469 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126820012 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133631361 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164867999 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121273897 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124477378 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156366242 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121651212 seconds)
  done (took 2.290764736 seconds)
done (took 32.213883914 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132191219 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12569562 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.125628476 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.149092698 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194781253 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142642521 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.123514463 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.110768771 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149634993 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128340104 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109446656 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.112330744 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156598534 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.11623225 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.226503436 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12126288 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.231497053 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197187971 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143679138 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.120584657 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11367878 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232070439 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.117018099 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.112364074 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.235095125 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112832067 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.218587222 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.115419041 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.14538395 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112820586 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.226259394 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.11933749 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112145705 seconds)
  done (took 6.101192504 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.213369323 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116935414 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.150129329 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120529714 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.116803017 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148783502 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.214858012 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148556417 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119377155 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118546551 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117904952 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226529568 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.12253796 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141655995 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119415754 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11412255 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.246839291 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118053375 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110018767 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.127199528 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.112767575 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118680347 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256761171 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110256173 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117819743 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.151724551 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.11835066 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121719162 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148318382 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118856833 seconds)
  done (took 5.517772709 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126948005 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133271155 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164815942 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.188557272 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148156779 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162474426 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141220237 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134064276 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174300138 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112145806 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126817861 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180073303 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130039394 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121996928 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147201038 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132093966 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135481789 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143851576 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121543615 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130191247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164660714 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130786124 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139962552 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151711643 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110992401 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119907885 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153253942 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127269523 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11978037 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157006544 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116159658 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117102325 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145178631 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149539994 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113493976 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157286871 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139704151 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12367082 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157828999 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144690502 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11582279 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146466515 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140117797 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169216403 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144856669 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126690985 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123490104 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.157927256 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111593976 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13042513 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.18874915 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112576073 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133158517 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.145648952 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111442668 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120212932 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143731221 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.11624916 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126941548 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145335305 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138752134 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120062272 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15320982 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115691632 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123040102 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110996649 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.144603089 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116577817 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139017031 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151146536 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150150614 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112042352 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.155961468 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126018917 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12243766 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155312407 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112257103 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122916538 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.153115591 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120082885 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125052306 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.144641666 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117918983 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129743278 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162759933 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129220661 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123900652 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.155640323 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117455296 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114540324 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129903572 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.145795997 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.11890562 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125533531 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.144196793 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116760055 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125572947 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.155708895 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112588952 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138197548 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.147199084 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113305159 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139372896 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148240356 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121102476 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122523091 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186421486 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114261676 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124325819 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.15546302 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114718482 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120647773 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116368762 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.143702783 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132282947 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128290087 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.150901914 seconds)
  done (took 17.099868741 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.332011473 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.31589739 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182751201 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.316801974 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157430351 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.212031306 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.313951293 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.312777486 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111975827 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1819606 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.197275918 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.250749522 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145560445 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14203489 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.317133946 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.369443364 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175555163 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149282922 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183273414 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127584529 seconds)
  done (took 5.732616965 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13565563 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149129223 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168639091 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144167944 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120102472 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158861977 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113540427 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132762525 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153873185 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124586812 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115872009 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159895654 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12350387 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127496945 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160140847 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152018161 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120768239 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149248052 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137142979 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117167708 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137979284 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141075388 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121232186 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167854856 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129380166 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124855005 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143706562 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118443949 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116468636 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.150927601 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119095008 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132840366 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151762755 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110080315 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124982114 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159527954 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.118729641 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115396168 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117724578 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149064545 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128733355 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.1221997 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.152758417 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102547412 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130774336 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114804864 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155129087 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127055893 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109999641 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.159810029 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128398025 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12424207 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150345603 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134450172 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.11727057 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160034787 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127076366 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124306956 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148108244 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114813682 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111684732 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117987236 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.150770635 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124983044 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124995787 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165598464 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130539993 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112146237 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149036715 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11881054 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117485571 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.159700464 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136233639 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.118769472 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.147915244 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127399236 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11804873 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096985166 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.154685497 seconds)
  done (took 11.788818921 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141864746 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.118440972 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133390908 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.183912973 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.120874565 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119146687 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150590936 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135028296 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122545124 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.1582131 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.122616261 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127265882 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167489679 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124346185 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.116284091 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163365654 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122627693 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15230588 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164504422 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142699302 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.151493913 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121894421 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127159763 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126191113 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174532659 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125387019 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.17136851 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.123715427 seconds)
  done (took 5.16652705 seconds)
done (took 52.628220744 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.365432429 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.589124438 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.348408426 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.343907019 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.393191088 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.361719536 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.347378291 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.346371504 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.980863814 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.327394192 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.348175457 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.341884839 seconds)
done (took 30.34433854 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.354988269 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.866740625 seconds)
    (2/2) benchmarking "String"...
    done (took 1.623465186 seconds)
  done (took 4.732821906 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.340713516 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.341410998 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.567875017 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.338895224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.348478188 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.341809821 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.341817684 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.344678269 seconds)
  done (took 16.866084879 seconds)
done (took 27.534375102 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.410174394 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.548381026 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.593714455 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.343135455 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.34275169 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.350646734 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.34347831 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.370543064 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.34265201 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.352232678 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.766396813 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.620896581 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.345068565 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.737761452 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.353780127 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.34594441 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.373356107 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.584060143 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.343497134 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.378272109 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.323963659 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.330113103 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.387434136 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.344171285 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.353043417 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.354292104 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.400023616 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.344056067 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.536703016 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.354400289 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.378149801 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.344519087 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.392193523 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.358334512 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.342988365 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.358749321 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.537351113 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.353665633 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.327090203 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.346216112 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.538742308 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.35362022 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.354864757 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.346338889 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.345559226 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.411278011 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.330446585 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.460206884 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.371789592 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.34627068 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.387862464 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.715831477 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.357142118 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.360205739 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.347631411 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.565672894 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.365816866 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.411967901 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.368701512 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.362567555 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.354660314 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.343273184 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.364092327 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.347299738 seconds)
  done (took 153.072057032 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.344940583 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.348271429 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.350178638 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.37044691 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.350779234 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.350645877 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.34575196 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.345522608 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.351297497 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.378591651 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.350811383 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.348256813 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.352647373 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.316663859 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.354064598 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.359715431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.347370107 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.349101852 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.36801354 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.34460074 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.349970015 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.351533466 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.348228115 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.347039583 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.355062146 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.426450046 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.373854006 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.359236473 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.357288678 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.346258788 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.349334615 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.356154109 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.005372096 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.216667764 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.357399208 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.384057214 seconds)
  done (took 85.559206244 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.347025005 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.347824087 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.348615152 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.381637972 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.347023944 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.348207878 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.964373709 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.964780315 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.074165605 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.047710622 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.844287191 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.651634142 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.347893513 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.444300322 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.362840324 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.353683524 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.36419766 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.373934553 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.352794489 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.349862362 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.954337767 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.362019787 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.356426492 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.535844443 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.366173703 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383674062 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.747684217 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.350266069 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384102571 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.689043014 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.404031891 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.349245054 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.778820101 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.486520478 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.467944924 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.350764884 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385572918 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.349872947 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.349875714 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.63622661 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.350624218 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.35207424 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.353799498 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.052561639 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.350581779 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.970947316 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.354511309 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.337400597 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.351286328 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.350588533 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.637858285 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.14132855 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.355565894 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.351532685 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.353254666 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.351731053 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.350215711 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.386696936 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.595331804 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.452122778 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.3519773 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.355212261 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.387030485 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.35231814 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.44932104 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.351225069 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.835742767 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.413358266 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.591524939 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.957605018 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.352926376 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.452429176 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.474289834 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.352467326 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.350681057 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.352426324 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.35265781 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.464769845 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.352558356 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.789890605 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.352943738 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.536119973 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.371100756 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.852320943 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.455740553 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.35542094 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.789239471 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.359306356 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.354130631 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.13666404 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.453059684 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.352168415 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.354730908 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.353153157 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.794885689 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.970879262 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.657245618 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.357925488 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.354962687 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.866441296 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.359212471 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.813530946 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.951858525 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.058229373 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.354157074 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.470135058 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.538202376 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.372466584 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.354527712 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.852837819 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.359140787 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.410815538 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.359996626 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.759168556 seconds)
  done (took 384.791688625 seconds)
done (took 624.665241325 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.244664375 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.192672234 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.337830086 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.200621581 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.180961072 seconds)
  done (took 12.412136725 seconds)
done (took 13.666723625 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.555940691 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.556899788 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.420733227 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.558661621 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.388216277 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.576044335 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.54662689 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.377290296 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.4755537 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.441104985 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.472422173 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.410961249 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.390303911 seconds)
  done (took 20.425910792 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.64178349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.360835574 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.42153643 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.620943401 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.398098251 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.646977211 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.682313722 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.36002046 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.504083939 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.372903893 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.372457273 seconds)
  done (took 19.638009765 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.641134188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.360582413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.415678906 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.616547387 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.392768398 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.6650902 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.710693564 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.360684277 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.512652546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.372492448 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.370302927 seconds)
  done (took 19.674963103 seconds)
done (took 60.992660336 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.441436514 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.727265178 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.391267645 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.382689168 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.372050781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.373356885 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.38358677 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.371427692 seconds)
  done (took 12.699899048 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.369769598 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.370213843 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.370810119 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.36854564 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.371611322 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.371590336 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.36950345 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.369210472 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.369465268 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.370878104 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.369859127 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.370389443 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.369331816 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.370675065 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.369554607 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.372572206 seconds)
  done (took 23.183071103 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.374194766 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.371224284 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.369240032 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.371075366 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.371117907 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.37356767 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.370760613 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.370474972 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.371730137 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.369251895 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.371996314 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.370325563 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.370948172 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.37343096 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.371054436 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.371999548 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.370197664 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.371024677 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.37589746 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.372679213 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.37191147 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.371127886 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.371514105 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.373879956 seconds)
  done (took 34.180835258 seconds)
done (took 71.319118235 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.360489642 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.381934826 seconds)
  done (took 6.003325088 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.432428651 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.43194626 seconds)
  done (took 4.121417311 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.372907385 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.37181522 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.37198354 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.372001347 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.372190414 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.3724788 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.372473026 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.373520097 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.372624146 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.371196906 seconds)
  done (took 14.983229153 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.372655126 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.371931015 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.371837871 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.376465629 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.373542779 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.37326173 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.372933088 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.373003603 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.37357344 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.372185889 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.376401831 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.373908835 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.372522148 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.373476404 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.374442959 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.373775693 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.374164411 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.374185243 seconds)
  done (took 25.985994552 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.386358655 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.394956062 seconds)
  done (took 4.043223624 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.51409999 seconds)
    (2/7) benchmarking "second"...
    done (took 1.414492892 seconds)
    (3/7) benchmarking "month"...
    done (took 1.490748252 seconds)
    (4/7) benchmarking "year"...
    done (took 1.480655369 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.414167662 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.39497272 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.414750598 seconds)
  done (took 11.385642405 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.375569916 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.587268731 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.719786218 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.913033107 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.37658355 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.378325126 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.15851968 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.377357076 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.382295294 seconds)
  done (took 15.53045646 seconds)
done (took 83.311708278 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.36408841 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.438801653 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.389741641 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.385331654 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.715480198 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.4068837 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.370062909 seconds)
done (took 17.331886196 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.357760068 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.35139824 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.352565336 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.371938894 seconds)
  done (took 10.697372374 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.363852648 seconds)
    (2/2) benchmarking "read"...
    done (took 1.655420758 seconds)
  done (took 5.282307014 seconds)
done (took 17.24209511 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377529529 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.378016696 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.377605495 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.375112381 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.375831224 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.376494878 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.374866942 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.375579493 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.378664057 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.377225737 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.375451896 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.378832634 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.37853516 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377718365 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.377132356 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37719832 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.375911542 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.377119878 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.376942311 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377543038 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.377285977 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377861955 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.376082489 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.377967442 seconds)
  done (took 34.312423575 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.379236062 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.378972799 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.378663073 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.37774589 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.378192927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.378446406 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.377940002 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.378353193 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.377717342 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.376722721 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3769697 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.378810348 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.380023508 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.378313584 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380875429 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.376959715 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.379797938 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378569501 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380588543 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.37770818 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.379869433 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378985944 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.378845285 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378241723 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.378446921 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.378236806 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.37901252 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.38012781 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.380390329 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.377790373 seconds)
  done (took 42.626185457 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.387209109 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.389759679 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.382727561 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.383034016 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.383694869 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.381903224 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.383669061 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.38114973 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.38145927 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.383737373 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.382888444 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.383764187 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.3816532 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.38327015 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.383872156 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.384339083 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.382698665 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.383611428 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.383963812 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.382618493 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.38500509 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.384128052 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.383088681 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.3842503 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.385689732 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.383775739 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.383436378 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.38384171 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.38393327 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.38566594 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.383858507 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.386044701 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.384673141 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.38438756 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.382806348 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.384858223 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.388808665 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.388050517 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.385345381 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.384196962 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.38355504 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.386254097 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.384336193 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.384592015 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.384351103 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.385722673 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.385109834 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.386833741 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.385448509 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.384907473 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.385653158 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.384974747 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.386518098 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.384946254 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.385533629 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.384743809 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.385531665 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.386563514 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.385825891 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.385435768 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.38544517 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.385951672 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.385196367 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.38614901 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.386383977 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.385795431 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.389164362 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.386620961 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.386191911 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.387939056 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.386996211 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.388204415 seconds)
  done (took 100.982554827 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.384951294 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.383417664 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.382429646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.383847488 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383567254 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.384057666 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.384074406 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384733297 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381939195 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.384264822 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386747089 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.384416642 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384502745 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.386269977 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.385719249 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.384126929 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.385669321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383355522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.385476369 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.385764215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.384891668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.384464892 seconds)
  done (took 31.728828296 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386372042 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.387388976 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.38379757 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.385987481 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.387592368 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.387624891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.385878913 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.387006174 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385223365 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.385146805 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38601289 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.387438487 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.387032284 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385577178 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384392162 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.386222456 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.386555272 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.388184156 seconds)
  done (took 26.225130298 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.387744779 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.385293801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.388532773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.386879478 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.385971249 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.387230268 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.386030649 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.387395441 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.386746967 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.386186387 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.38726184 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.38697223 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.38765483 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.385297591 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389865457 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.388132272 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.387538295 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.387913105 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38818402 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.385299751 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.386469605 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.388167574 seconds)
  done (took 31.789767774 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391627301 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.388391161 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.387676636 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.387009577 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.386908651 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.388082929 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.393046409 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.387507651 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.390629196 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.388521653 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.387373465 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.388739922 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.388167449 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.388948193 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.386699556 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.387889105 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.389187391 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.389514687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.390485369 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.387814415 seconds)
  done (took 29.048510693 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.391978611 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390583955 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.391793114 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392949981 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.391322442 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.391656882 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390896488 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.390788843 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.392788332 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392299145 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393573544 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.392425598 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391451734 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.391012659 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.392725877 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393366148 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.392137174 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.392869069 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393455153 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392025546 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.395217622 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.392018248 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3939347 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.393025376 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.393019412 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.392867285 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391794776 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.393855768 seconds)
  done (took 40.263143464 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391740462 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.389791557 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.389379435 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.391700243 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.391080266 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.389797233 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.389922689 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.391288238 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.391246851 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.390660745 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.392586242 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.391125928 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.391990628 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.393042851 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39130976 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.392687481 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.392427493 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.3928137 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.391890398 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389652391 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.392515564 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392306664 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.394161388 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.392631809 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391282974 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.393718115 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.392718725 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.392475422 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.393226083 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.391441588 seconds)
  done (took 43.029894638 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.412333454 seconds)
    (2/2) benchmarking "in"...
    done (took 1.412723348 seconds)
  done (took 4.103304158 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.394171138 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.393716277 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.392937445 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.391816435 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.393242221 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.394101359 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.393083451 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392797418 seconds)
  done (took 12.422482637 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.388618178 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.394938929 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.394679195 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.39288436 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.396374376 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.389041112 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.397459637 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.399842865 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.389927968 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.391310025 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.395093009 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.394036965 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.390708348 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.39060887 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.391008635 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.394896186 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.396213811 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.396496914 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.395948899 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.395143966 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.395278366 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.392255862 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.395090953 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.396836118 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.391548223 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.399539953 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.397547054 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.401318033 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.391334568 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.39658421 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.393751765 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.396762459 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.397137391 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.395276025 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.39583534 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.395246057 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.398877114 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.396253371 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.397443221 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.399996944 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.39800542 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.395826182 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.392941222 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.395076235 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.396053235 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.400411207 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.397984044 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.395954166 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.391137858 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.395145964 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.399309847 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.392652308 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.39467088 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.39542756 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.397024231 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.401981238 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.402927 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.395181068 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.399287894 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.402539542 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.407022276 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.403717588 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.397262175 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.401944303 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.4026429 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.409395419 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.401300454 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.402029762 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.398440358 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.395889809 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.399810553 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.407990892 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.406324174 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.40301097 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.399132149 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.398488668 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.393762222 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.399619187 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.402156968 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.401593354 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.401646762 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.398891216 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.402664884 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.406954211 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.394709446 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.398933251 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.398889518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.400316813 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.395122101 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.402217587 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.404535202 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.40095172 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.396078566 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.394160512 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.395559511 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.40223444 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.394484543 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.395711138 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.400099192 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.401240589 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.400149704 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.398312605 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.402433896 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.40200116 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.400317131 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.402635117 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.402332096 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.395300072 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.401905549 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.402488257 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.3997708 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.397499773 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.400579793 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.399985286 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.398712699 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.402016859 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.402237238 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.396987951 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.4037409 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.403341066 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.405171696 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.413800833 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.406154466 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.401996208 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.401422632 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.408722767 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.402681843 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.400247236 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.404893161 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.400306018 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.402595945 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.401020889 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.404432922 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.397395468 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.404132227 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.399293382 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.402867748 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.404042586 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.404877073 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.398862213 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.401213266 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.399479683 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.401125311 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.404208894 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.405718052 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.399627794 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.406663675 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.401927478 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.402138503 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.402177761 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.404546799 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.403787822 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.40158843 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.406106973 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.398227869 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.404132543 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.39889015 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.406303949 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.404682943 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.404782662 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.40696403 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.399861623 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.402204248 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.405181401 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.403635731 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.40351532 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.405910969 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.403243165 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.405467182 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.399022678 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.406950468 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.399482896 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.403385953 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.410244442 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.403960045 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.406258971 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.401068517 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.406742072 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.40467058 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.406116255 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.402292663 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.403599865 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.406636077 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.406667683 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.408248343 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.407131082 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.404675727 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.401808715 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.401101331 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.40781808 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.403219013 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.410564503 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.412492687 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.413498853 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.403789135 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.408216371 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.401709024 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.410011852 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.404788332 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.408190137 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.407552908 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.405208833 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.40189472 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.407802502 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.403083616 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.409110112 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.402209793 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.408569937 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.406296598 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.405522305 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.407560141 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.403110115 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.403795669 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.406909466 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.407304227 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.407067218 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.403371245 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.407712431 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.4016938 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.402650922 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.408226847 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.407501882 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.409079276 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.408046343 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.405409207 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.407990139 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.407318859 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.404170332 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.409743661 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.406234905 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.407262473 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.411214805 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.408284654 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.406366431 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.413289637 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.408910024 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.404049868 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.408075283 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.411931951 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.407873559 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.408015626 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.414961193 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.412177693 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.410424242 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.409421919 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.403682906 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.409542253 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.411465832 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.411668663 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.40580163 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.412214883 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.407596919 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.411288906 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.404897266 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.407290402 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.407375203 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.408782716 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.412565098 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.410858423 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407541426 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.411079155 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.41219057 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.410605135 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.408436439 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.415271373 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.410666725 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.410231362 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.409595872 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.408082672 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.413917451 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.404916993 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.413181029 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.40594758 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.418173134 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.422435622 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.413048489 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.412979735 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.412078334 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.413959673 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.411584981 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.41009697 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.407321346 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.408416624 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.408482825 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.407170587 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.412164025 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.408120997 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.414440372 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.409065563 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.410628415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.414417368 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.412629424 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.406883468 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.412870979 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.412545664 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.412113759 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.408236892 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.41222244 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.409634066 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.410731486 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.409599074 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.409278331 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.41675282 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.414126293 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.410813895 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.409272631 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.410108243 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.408405269 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.41117358 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.415900615 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.411934624 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.417787892 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.411150004 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.415572324 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.411954005 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.416895245 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.417346035 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.411770684 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.418778578 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.413984607 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.410270226 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.409833786 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.416027438 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.41666001 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.419101412 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.410195125 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.418509717 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.416031098 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.414509312 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.416380562 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.416864637 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.415280393 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.414984062 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.419615758 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.417142156 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.412326694 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.414687797 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.417497874 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.416463788 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.416523188 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.409942191 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.415520249 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.417715191 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.411475292 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.411674677 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.412658984 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.416681727 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.416141031 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.419698493 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.415540529 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.415576523 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.419646986 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.416737183 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.418269827 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.416730234 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.418819987 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.420422607 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.421369229 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.421894979 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.412827415 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.417701559 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.41586495 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.412578645 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.412117773 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.413696814 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.418905401 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.411772893 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.423629208 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.418377729 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.41366909 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.414950242 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.420257368 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.413698819 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.421407924 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.433845191 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.413293091 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.420654003 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.415932546 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.413725407 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.42126494 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.417976952 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.411731062 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.41568505 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.419810093 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.421524491 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.412941395 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.42147568 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.41416051 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.419275576 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.418384615 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.419714436 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.41758301 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.419647504 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.413646963 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.419353283 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.418871476 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.422102696 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.415621341 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.418482871 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.415932949 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.424252704 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.425275761 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.417132446 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.42071646 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.420013462 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.416671471 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.417139489 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.42458046 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.415582164 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.421820933 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.416330787 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.41940246 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.41837784 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.420865799 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.417223935 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.422420533 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.417621451 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.415361076 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.423098662 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.421711973 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.421479321 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.416154293 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.423178214 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.417783428 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.415181589 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.423050856 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.41640088 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.422219164 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.416746776 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.420225066 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.417634545 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.420116211 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.420242064 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.420369509 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.415322054 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.414304299 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.42388241 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.42121903 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.421863106 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.42281475 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.42209664 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.415654847 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.418465366 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.420380709 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.41503239 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.416458609 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.422484504 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.416657731 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.416238837 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.41879478 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.422622085 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.42561901 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.417874493 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.416945088 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.427134452 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.422309709 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.422749782 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.418623386 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.419901078 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.416805522 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.421756246 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.422115725 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.415768652 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.42509726 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.421891175 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.423684297 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.419321151 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.418118308 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.417958527 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.423568271 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.421400183 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.417655896 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.421643927 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.41538129 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.422775105 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.417971625 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.416751814 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.414101211 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.414943185 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.418015042 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.418414323 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.419524373 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.415708378 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.416704145 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.415444995 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.421327112 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.420474119 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.417925131 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.420021393 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.414834294 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.42147897 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.41489764 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.418685471 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.416777401 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.417181368 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.422638423 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.421527329 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.417754144 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.42114179 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.424892872 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.419826857 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.41369116 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.41721213 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.419783082 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.420002437 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.418022032 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.415084687 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.414683665 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.420088571 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.418826331 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.41988269 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.415458741 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.426649918 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.424124527 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.414541188 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.416238769 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.420618961 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.420415081 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.417146542 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.417996174 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.413895871 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.415302404 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.422537304 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.418309531 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.422361383 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.415692626 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.413333894 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.419115963 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.412289223 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.414463565 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.415127531 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.418604341 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.416815466 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.413706269 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.423146873 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.41952467 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.419566917 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.434185142 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.41560504 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.411443166 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.419261736 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.41043786 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.416418769 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.413352588 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.418687393 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.416886871 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.416456773 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.41596864 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.409980818 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.416267178 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.413796519 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.421052544 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.4165892 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.408900425 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.411828694 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.415441931 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.416818115 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.418626019 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.416443052 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.415322719 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.416336751 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.412474016 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.422539147 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.424936236 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.418896079 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.417123189 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.415983306 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.413245581 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.415614609 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.418548706 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.421464043 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.416916758 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.415888296 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.413436034 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.41833982 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.416927523 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.410878798 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.41307212 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.413277021 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.416916587 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.423259013 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.429411149 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.416551142 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.41613211 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.41879122 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.417441871 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.414877211 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.42020489 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.417630861 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.414176623 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.414305413 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.420915814 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.418481189 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.416401674 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.413927446 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.424389161 seconds)
  done (took 841.916866037 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.417350975 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.416751444 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.416518789 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.418199148 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.418463912 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.418184345 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.416865167 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.417082172 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.417383316 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.416133839 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.417421509 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417861864 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.418575875 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.417702055 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.416458905 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.418238688 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417268413 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.41862083 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.418904676 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.418467815 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.41858072 seconds)
  done (took 31.067108994 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.420682814 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.416766295 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.419152839 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.420725732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.419659942 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.422414265 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.419953094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.421518485 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.420851215 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420395057 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.420373598 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.422134618 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.418674791 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.419969495 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418365305 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.422194133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.420915734 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.41962723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.419953729 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.419910843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.420901607 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.4199444 seconds)
  done (took 32.543650577 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.42112042 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.421201865 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.415056046 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.420470063 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.421298214 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.418709646 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.421347968 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.422040191 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.42318265 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.41572148 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.415938273 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.416446222 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.421068702 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.425617869 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.419190672 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.424071238 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.421343171 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.421898934 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.421686463 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.420068595 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.425453521 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.424175544 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.422927 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.415654279 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.422949968 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.42305753 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.422388886 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.422859861 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.418436038 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.425637846 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.422636241 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.417049554 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.422304916 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.419747441 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.419660679 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.425423013 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.422611721 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.421819206 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.423809427 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.426187002 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.438647851 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.424158998 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.425987498 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.426129348 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.424933622 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.421240723 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.429237999 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.423117332 seconds)
  done (took 69.566325942 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.424273107 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.422979341 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.42451363 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.424326688 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.424506856 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.426188576 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.423930601 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.424478961 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.421587402 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.424486021 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.426278241 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.423837241 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.424658105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.424634432 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.424918517 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.423185461 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.425090766 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.423546585 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.42474686 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.423204878 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.423274727 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.424251713 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.424834484 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.424661272 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.426670563 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.423093418 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.423061168 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.424042394 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.42465084 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.424905996 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.426686623 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.42698278 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.425331564 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.425103771 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.424108631 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.427276946 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.427619569 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.426025442 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.425989483 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.425122937 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.425241263 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.424486398 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.426494656 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.426328466 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.425648711 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.423663431 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.42351812 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.423488753 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.424286008 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.425237234 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.426075469 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.42612113 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.425692345 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.423714958 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.425764563 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.427168784 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.425540735 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.42598427 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.426313008 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.423525761 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.424739655 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.426218302 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.424198711 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.427611816 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.426694381 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.425725707 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.425597388 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.427817111 seconds)
  done (took 98.205883759 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.426742153 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.428014009 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.427905638 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.427284147 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.426068809 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.427715089 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.42592582 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.425078218 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.426464583 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.426540548 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.428086661 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.427176353 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.426733679 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.426582692 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.427331162 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.428035696 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.426928979 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.427723217 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.426345101 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.427374568 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.427947625 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.427663787 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.427924592 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.427538368 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.426725288 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.428350812 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.428463402 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.427068537 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.42825973 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.426199522 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.427799668 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.428193677 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.426256996 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.427281535 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.426567045 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.428456315 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.428094887 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.428355757 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.429547768 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.427632507 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.427230184 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.426957096 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.428441761 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.428747369 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.426956304 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.429058849 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.428524775 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.428794602 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.427528383 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.427624267 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.427424881 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.428833656 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.429570896 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.427436756 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.428218895 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.428873825 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.427789065 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.427047505 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.428382681 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.428296607 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.428607903 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.427684339 seconds)
  done (took 89.818506369 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.429441501 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.427330348 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.42680253 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.425491234 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.427822562 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.425107782 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.427137112 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.428669142 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.427272543 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.428965336 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.431356874 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.427406316 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.427186694 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.428030604 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.425868758 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.427427904 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.426885107 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.425804446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.427813396 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.425390092 seconds)
  done (took 29.851588588 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.427824246 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.427581135 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.427563892 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.428798736 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.427541939 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.426934438 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.427996708 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.427031302 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.426058476 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.427241333 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.428682239 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.428075235 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.425946084 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.426535967 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.428148597 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.426532862 seconds)
  done (took 24.141827534 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.426857 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.428447306 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.428646455 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.427950981 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.427018727 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.426009896 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.429554071 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.427186061 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.426734452 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.429074157 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.427932433 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.428848022 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.42820141 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.430242109 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.427664877 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.427997112 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.428331289 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.427828816 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.428753545 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.429286963 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.42910971 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.429894515 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.430617716 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.429008989 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.427909977 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.42983025 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.42775498 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.428336855 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.429580913 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.430007938 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.428786154 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.430030378 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.429902811 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.429106407 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.432720008 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.430246375 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.431102454 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.431527583 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.431755666 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.430846184 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.430765827 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.428065263 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.4314611 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.430254504 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.428908938 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.43078151 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.43050502 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.430094383 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.430064715 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.428420876 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.433988263 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.433254852 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.43012292 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.431478977 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.431327526 seconds)
  done (took 79.926457712 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.433171488 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.431442338 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.429793598 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.431051478 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.43206788 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.42998883 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.431374184 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.431045197 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.430546351 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.430916399 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.430774611 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.433975859 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.429784659 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.431032717 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.431435946 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.432647453 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.430991523 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.43275103 seconds)
  done (took 27.071558692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.432682834 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.431251051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.432654627 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.432109629 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.431522975 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.432872505 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.431580281 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.431063434 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.434298511 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.432924134 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.430071775 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.433141791 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.433919694 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.433052995 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.432197877 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.43063983 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.435144701 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.433839592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.432668874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.433382138 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.434075144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.434021719 seconds)
  done (took 32.827006088 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.427308614 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.4275588 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.427365153 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.443684374 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.441318477 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.428671417 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.427665943 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.426943143 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.450320616 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.469713518 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.463691438 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.441138631 seconds)
  done (took 18.584108001 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434445023 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436659918 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.434116654 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434474394 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434828526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435181427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434448539 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433520696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43460242 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434193072 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433033232 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434951467 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435896959 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433761442 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436220196 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435367449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43556264 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436963219 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437281912 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436514304 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433215912 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436841513 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433914508 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435968274 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43516308 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435150056 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436263156 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435965538 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43523639 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436700321 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436944126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434478174 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436104095 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436313412 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435730511 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437623201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435559182 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436048015 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437375971 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435272759 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.435753191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437612209 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437260924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43801815 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435728069 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435683101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43493938 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436068805 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435319084 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437411237 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438321449 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4358711 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437879123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436929655 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437942095 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438369433 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437358696 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437755223 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437533859 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436326652 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438301693 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438424073 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436370118 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435768062 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439810269 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437102235 seconds)
  done (took 96.094468578 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43564643 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.437026595 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43757026 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436482218 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437006226 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436623505 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437785155 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436195115 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435663971 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437197216 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438020061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437270038 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438712288 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436481594 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436689888 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43716252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437672574 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438157062 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439776942 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440991174 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435753171 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436184871 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437401127 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436435642 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437869049 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440162067 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437794172 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437198213 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436084507 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438737509 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437962701 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437479776 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439447668 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.436636686 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438764187 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.4372149 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437417047 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438351208 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437597284 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.440211776 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436930333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439056593 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437741123 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437597683 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438782415 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438561496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439488612 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43870621 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437647937 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437187928 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438445371 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438117175 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437103541 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438685331 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438455023 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436638041 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43969356 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438709631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437859259 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439860191 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439699549 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437230179 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440496986 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438291089 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.440010959 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438580011 seconds)
  done (took 96.217715447 seconds)
done (took 1965.629117997 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.598822163 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.55196452 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.432451387 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.449162757 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.43452375 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.42994316 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.448493935 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.432838231 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.432643866 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.430505084 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.432550638 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.624437781 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.426074426 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.432091912 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.432939165 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.528686177 seconds)
  done (took 28.833754751 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.464359507 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.440396135 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.55389235 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.438913955 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.461808503 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.630623386 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.495011936 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.438219771 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.611596279 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.455756581 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.433992507 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.457393664 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.437960983 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.433447188 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.454828509 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.628433443 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.684895918 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.434144673 seconds)
  done (took 31.26978905 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.889711045 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.435017858 seconds)
  done (took 5.639394759 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.455653126 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.435546068 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.438683958 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.433179573 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.428061005 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.428887151 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.436407965 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.430199708 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.434258698 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.563374563 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.437937345 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.446762022 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.43374913 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.437975805 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.439121258 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.477737266 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.581440867 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.440240946 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.437316276 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.438979671 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.434428231 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.521110463 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.478634051 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.438571635 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.563308431 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.43855093 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.443341678 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.442248314 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.577992046 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.441365776 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.434911865 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.436337138 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.436299903 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.432437445 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.909323967 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.428762803 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.443223195 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.46024641 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.439587134 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.578570973 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.436086971 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.440970657 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.427363006 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.904837741 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.556194898 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.555540412 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.429162282 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.437104793 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.43598069 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.501304475 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.436189368 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.437520573 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.493076606 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.268319512 seconds)
  done (took 90.90987917 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.485932819 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.429540273 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596557785 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.448579951 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.429209664 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.428221408 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.429517059 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.714463647 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.478399096 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.429013303 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.739516828 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950661785 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.430192482 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.450342382 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.964651674 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.502997043 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.431830444 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.427534961 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.452032295 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.432331279 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.93973743 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430777414 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.431424678 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.474883878 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.468025114 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.886059649 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.432629884 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.435911673 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.432578398 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.428068254 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.899865864 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.43998641 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.43285458 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.430733997 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.702648161 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.783156489 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.762878231 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.439356851 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.432530299 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.431829378 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.451933298 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.882720191 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.776899268 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.434774713 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.432228135 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.888978104 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.434165948 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.430776364 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.431394336 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.664218741 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.431895914 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.430164761 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.435895434 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.431545314 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.43197155 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.492671077 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.432435571 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.923970207 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.438376991 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.432128999 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457183156 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.433364039 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.431302434 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.434798742 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.432435836 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.776260027 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.628878759 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.438297236 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.775394333 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892183858 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.437315606 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962309089 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.437260714 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.447805664 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.639840662 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.442159858 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.430226792 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915454367 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.456697088 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.432781666 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.760919945 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.439422067 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.726457164 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.449219408 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.432936741 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.958184702 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.437961209 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.470524243 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.431578766 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.432491159 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.430734137 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.432526225 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.70495285 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.462739511 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.431944625 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.431434159 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.45756864 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.431853917 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.446411452 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.435817055 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.957674504 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.44140719 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.431513538 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432414362 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.431134718 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.436535153 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.435345009 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.431635728 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.669875562 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.432180503 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.458306746 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432908484 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.433544129 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.441288257 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.485526805 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.437087691 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.730702904 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.438303818 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.433230824 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.43506874 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.432598641 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457429208 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.432768486 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.434514425 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.324639782 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.65059521 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.449950138 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.434383385 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.431914272 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.440108009 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.43348897 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.43532034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.439646147 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.435392766 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.168956095 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.441186644 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.441875981 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.432419206 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.442771173 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.434482834 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.437261491 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.43465362 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733281514 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.706849541 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.612927668 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.438299068 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.434991755 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.151388585 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.479589814 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581725441 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.451594351 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.435574253 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.640065457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.663739495 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.434606068 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.437608267 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.437111549 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.668450945 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.435576577 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.751599012 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920549375 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.439614641 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.441464465 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.166467525 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.146961908 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.434772303 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.434650585 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.719951323 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.449006001 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.433083338 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.434079339 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.437213719 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.434330826 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.436415101 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.442754964 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.435168696 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.435618251 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.493167514 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.604874078 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.450602105 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.434998868 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.875266033 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.484650722 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43527007 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.441130565 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.435279774 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.434605318 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.534972018 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.43849508 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.470912804 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.433695182 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.438790048 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901178685 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.437393861 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.435325175 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.586064026 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077498729 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.440907921 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.435844539 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.435790335 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.983895407 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.941540257 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.442756483 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.730159441 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.445380953 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.475425767 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.434914429 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.506295357 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.93473948 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.437468438 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.436888207 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.035243322 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.440054544 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.842380734 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.436525207 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.437313246 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964058297 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.441989754 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.44206757 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.435318189 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.436491897 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.722337105 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.437129921 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.489530052 seconds)
  done (took 518.221428946 seconds)
done (took 676.188708196 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.43545362 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.43829158 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.425174544 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.441940562 seconds)
  done (took 11.0596318 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.457327603 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.443070657 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.450386239 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.440695305 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.449414923 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.441486939 seconds)
  done (took 10.000869854 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.437163921 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.436148292 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.44060233 seconds)
  done (took 8.632508404 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.65111287 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.453360528 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.790830004 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.448689332 seconds)
  done (took 9.664120488 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.451071878 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.451400324 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.451773297 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.452365192 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.459096825 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.458801997 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.451046694 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.452254953 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.457531119 seconds)
  done (took 14.404369989 seconds)
done (took 55.078502373 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.463692859 seconds)
    (2/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.523521816 seconds)
    (3/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.430468919 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.425083542 seconds)
    (5/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.508905662 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.506620334 seconds)
    (7/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.578027663 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.469553672 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.531786199 seconds)
    (10/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.437976821 seconds)
    (11/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.712620372 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.586272765 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.566376888 seconds)
    (14/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.476616362 seconds)
    (15/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.422370396 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.551837795 seconds)
    (17/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.543495434 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.512437094 seconds)
    (19/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.439514619 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.444056185 seconds)
    (21/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.148273968 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.545595337 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.43635098 seconds)
    (24/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.767264566 seconds)
    (25/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.474478086 seconds)
    (26/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.448164345 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.492018942 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.284546785 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.39349691 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.523666548 seconds)
    (31/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.10083026 seconds)
    (32/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.470165433 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.568424195 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.583424407 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.422457366 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.507723267 seconds)
    (37/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.465693405 seconds)
    (38/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.53946077 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.425409998 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.544948204 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.139324995 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.664775766 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.297940548 seconds)
    (44/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.566914703 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.625491911 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.475926844 seconds)
    (47/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.192354517 seconds)
    (48/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.426397683 seconds)
    (49/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.43823962 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.433713109 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.453210008 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.445417942 seconds)
    (53/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.624588016 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.441798431 seconds)
    (55/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.57678906 seconds)
    (56/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.471692386 seconds)
    (57/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.473035621 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.6016079 seconds)
    (59/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.498069809 seconds)
    (60/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.507380541 seconds)
    (61/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.430265894 seconds)
    (62/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.620779592 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.527579136 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.662693493 seconds)
    (65/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.57729433 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.531348449 seconds)
    (67/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.423207961 seconds)
    (68/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.631874083 seconds)
    (69/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.454242831 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.633154466 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.453792827 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.465088874 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.574773847 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.439604705 seconds)
    (75/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.472431397 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.422960909 seconds)
    (77/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.665181 seconds)
    (78/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.657011794 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.55586911 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.499356549 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.53816672 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.526029466 seconds)
    (83/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.553631288 seconds)
    (84/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.620367305 seconds)
    (85/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.587373405 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.548858545 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.529648118 seconds)
    (88/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.503531883 seconds)
    (89/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.512492452 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.546040271 seconds)
    (91/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.526914341 seconds)
    (92/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.665502407 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.597871724 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.596043351 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.559866418 seconds)
    (96/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.481209963 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.476045086 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.523829261 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.425372472 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.427072086 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.446640634 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.248666952 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.545709831 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.550228522 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.511549848 seconds)
    (106/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.573667859 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.200961401 seconds)
    (108/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.559605216 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.528735376 seconds)
    (110/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.260039553 seconds)
    (111/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.587566493 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.426484411 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.432375126 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.429340784 seconds)
    (115/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.62875615 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.702947374 seconds)
    (117/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.694736097 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.483234523 seconds)
    (119/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.426104255 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.668096646 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.658972197 seconds)
    (122/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.56800605 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.625249299 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.58207491 seconds)
    (125/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.29510312 seconds)
    (126/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.426985588 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.436746203 seconds)
    (128/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.4547117 seconds)
    (129/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.334424797 seconds)
    (130/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.222418783 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.297890161 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.570911912 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.509982156 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.533434894 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.574277374 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.564679764 seconds)
    (137/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.482040666 seconds)
    (138/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.26041404 seconds)
    (139/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.162353524 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.508114068 seconds)
    (141/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.386139685 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.552325595 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.257479458 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.428903143 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.435381639 seconds)
    (146/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.429510461 seconds)
    (147/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.508588457 seconds)
    (148/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.44079113 seconds)
    (149/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.347621211 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.448319232 seconds)
    (151/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.439052229 seconds)
    (152/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.599525541 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.593708991 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.106549579 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.559963327 seconds)
    (156/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.26211261 seconds)
    (157/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.716858637 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.447220626 seconds)
    (159/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.563992573 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.669000311 seconds)
    (161/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.5132382 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.50941322 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.25617264 seconds)
    (164/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.519752436 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.480513557 seconds)
    (166/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.487098263 seconds)
    (167/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.430960885 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.593976335 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.527149052 seconds)
    (170/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.614203456 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.554592206 seconds)
    (172/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.484116793 seconds)
    (173/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.189165316 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.602672568 seconds)
    (175/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.619246849 seconds)
    (176/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.215657582 seconds)
    (177/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.43007188 seconds)
    (178/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.597633089 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.604957764 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.447255592 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.488167239 seconds)
    (182/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.430875439 seconds)
    (183/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.437249999 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.65157802 seconds)
    (185/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.430489989 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.471181712 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.462660076 seconds)
    (188/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.489453665 seconds)
    (189/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.572563358 seconds)
    (190/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.666738351 seconds)
    (191/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.430682751 seconds)
    (192/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.544707425 seconds)
  done (took 361.3278042 seconds)
done (took 362.648044175 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.473766664 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.536431133 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.457708389 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.457032021 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458571402 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.450362984 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.474376625 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.458751607 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.468508975 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.467532016 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.449375766 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.479648005 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.470659648 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.466392771 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.491387622 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.459719205 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.456394703 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.466926752 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.469900031 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.471944817 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.462261105 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459302194 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.479428567 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.460701268 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.468000149 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468019165 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.46598605 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.460207207 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.46259927 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.471192618 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.463261497 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.464928829 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.473315378 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.46770196 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461339997 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.467334901 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.461654685 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.537757296 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.475642059 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.466333482 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.463400783 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.47136656 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.467772475 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.458644607 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.461113923 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.471688502 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.462755084 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.467794449 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.456453479 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.449667741 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.465961087 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.46107256 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.45618392 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.447684151 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.445805387 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.465203569 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.457384064 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465352372 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.45301799 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.451087423 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.48473348 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.463779553 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.457164018 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455687538 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.45285389 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.46128515 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.453715573 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.461739867 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.447738096 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445090331 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.444729075 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.44946025 seconds)
done (took 114.789475172 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.572936095 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.435953301 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.584680905 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.444711171 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.601080955 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.569957855 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.44330535 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.439277096 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.439154414 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.259915855 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.439009003 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.439287229 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.436655534 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.43538481 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.560712918 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.436533798 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.43603587 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.15100238 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.439486747 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.568197868 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.425999119 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.432204763 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.431895817 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.25742102 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.425234599 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.418677173 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.564119227 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.428853159 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.142784935 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.419038471 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.419047125 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.142136864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.564258428 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.444576437 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.434220471 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.433186975 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.581971906 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.428293294 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.547647784 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.549308526 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.564990824 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.462028587 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.410682528 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.413080859 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.420844877 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.423728939 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.415496875 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.44468056 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.412347621 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.414242274 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.131754771 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.428081529 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.425740198 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.412913822 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.413195735 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.435420211 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.416636586 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.415557686 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.553649742 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.414011373 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.539464682 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.234090252 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.232364945 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.40952476 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.404283501 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.408117427 seconds)
  done (took 114.602133014 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.468356578 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.478402747 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.5104315 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.405501556 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.457842183 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.51024241 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.401632922 seconds)
  done (took 11.516542167 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.407188164 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.407839678 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.45043567 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.453918226 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.407773903 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.55980536 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.407735084 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.409926562 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.405899252 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.454743503 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.413076572 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.411285189 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.417655708 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.402645968 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.453881034 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.415559844 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.519900176 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.40323277 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.408105387 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.554227356 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.406109119 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.417247966 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.455286302 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.413974069 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.407480131 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.406137436 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.176298729 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40657493 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.405306619 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.407924012 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.405478953 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.451008216 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.404266297 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.397621573 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401857445 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.512659949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.406116173 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401177846 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.405140222 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.398535609 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.408945064 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.404189494 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.406729557 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.401740507 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.405687176 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.419412792 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.40472873 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.402299633 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.402185237 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405200207 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.447556833 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403175506 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.399222732 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.40018843 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.453466399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.410437186 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.399972673 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.403517276 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402638139 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396726244 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.547761189 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442678433 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.401387944 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.439965518 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401083319 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397822397 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.403106874 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.399007884 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458079606 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.397657334 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.441307703 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.399564892 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.57291582 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.414855026 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.399355879 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.393248289 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.396675523 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397825091 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.391651981 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.394787032 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.394357794 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.391695592 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.394812833 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.393800268 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.395794746 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.547482931 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.498049783 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.394099327 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.40384538 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.394502871 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.390640472 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.444438305 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.392652222 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.392674014 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438969418 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.502326051 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.441314805 seconds)
  done (took 144.0164647 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.400945829 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.400910029 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.391271755 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.412650873 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.388142936 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.387241472 seconds)
  done (took 9.64614346 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.39221937 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.396247214 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.390704626 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.394815571 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.392415032 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.394684813 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.401503706 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388705522 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.394867851 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.393573181 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.392937343 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.401382338 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.399056587 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.3913695 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.398781225 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.395654446 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.400906103 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.392178523 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.393670303 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392042283 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.381970482 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.391566504 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394312383 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.388800929 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394780865 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.396197539 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.407704022 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.395495126 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.394602821 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.393584763 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.395667413 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.393561513 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.388193601 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.392016073 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.402448254 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.390107103 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393025031 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.398798139 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392181221 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.394405694 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.401025974 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395916696 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.398759606 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.401288466 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38716258 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.392118362 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.402703275 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.409412756 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.396600664 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.399449796 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.407052967 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.394845677 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.394118221 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.399742883 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.388782111 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38984947 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.404383965 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.402190235 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.394209864 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.389248489 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.395088855 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.392137695 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388142541 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.398002885 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.39158669 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.397973908 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.389789084 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.398386605 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394750839 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.391925186 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.399224463 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.390146052 seconds)
  done (took 102.723658052 seconds)
done (took 383.823456141 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.906159792 seconds)
  done (took 4.173125643 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.429475553 seconds)
  done (took 3.698613008 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.346620236 seconds)
  done (took 22.618682492 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.405378269 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.475606236 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.379454808 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.388999495 seconds)
  done (took 10.915938331 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.670572297 seconds)
  done (took 3.940072127 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.386589356 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.379312347 seconds)
  done (took 6.037342164 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.621925566 seconds)
  done (took 3.887722916 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.580869624 seconds)
  done (took 3.850848969 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.385257346 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.400902005 seconds)
  done (took 6.062079899 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.364504708 seconds)
  done (took 3.631481871 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.345828472 seconds)
  done (took 20.613713652 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.402381133 seconds)
  done (took 3.673864825 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.436549261 seconds)
  done (took 3.706898434 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.880028406 seconds)
  done (took 6.145744585 seconds)
done (took 104.222619121 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.380397207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.385285702 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.379687949 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.376997413 seconds)
  done (took 10.791206081 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.448798439 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.447673432 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.452535184 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.448862298 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.449031259 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.446792994 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424540316 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.421953399 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.449024906 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.447764133 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.455591597 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.447623063 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.44914805 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.423469343 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.447207545 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.45348568 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.44968615 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.453918627 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.423311181 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.448572855 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.396974749 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.446886203 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.447974944 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.396554671 seconds)
  done (took 35.846558014 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.907035004 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.46147488 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540312001 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.440749866 seconds)
  done (took 7.619976196 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.474806163 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.479791258 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.498140935 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.5316798 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.560711545 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.499620404 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421409048 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.420068855 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.404363523 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.480001909 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.531374833 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.463726996 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.567895365 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.400979666 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.6838569 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.39994454 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.399852174 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.477463058 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.530204894 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.559510976 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.399738176 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.477224441 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.486274587 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.474961828 seconds)
  done (took 36.893510029 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.404689409 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.415340927 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.399376991 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.408842266 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.397989288 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.397803038 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.396017624 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.404211704 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.396140948 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.39679023 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.39874066 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.409030524 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.39759086 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.397848467 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.404057452 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.400914749 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.399381908 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.405148409 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.407144205 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.398003609 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.398640618 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.40289538 seconds)
  done (took 32.106191696 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.384868707 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.386367396 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.737002092 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.641815729 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.38997257 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.384348697 seconds)
  done (took 14.196171564 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.459237429 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.597477257 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.393156387 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.738263808 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.818212777 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.391222617 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.387538641 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.632229414 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.920747922 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.917678424 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.442270338 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.449646548 seconds)
  done (took 20.421833034 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.390478807 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.38576614 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.39046554 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39585248 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.436686487 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.392023387 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.396187753 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.379128284 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.443087602 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441820647 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.387469619 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439820401 seconds)
  done (took 22.147640752 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473499541 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384857949 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384042783 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400382407 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379585294 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.225507916 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436631738 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08445706 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386712656 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661939368 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386539075 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478075021 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641679926 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392003953 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385845934 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.362982246 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625830529 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891846832 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389066541 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401301447 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421687299 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40151066 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403143204 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596832822 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230821225 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3891767 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.65146531 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388653257 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67609988 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650763797 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651954372 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391283156 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665930119 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025931858 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485164943 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595588258 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408705856 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385246895 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.375130853 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.394884182 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399074187 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39268903 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65174167 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392999452 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390262689 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389785009 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101577292 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.390321694 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.388296268 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388800114 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653984485 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488516017 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.396645087 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389607982 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454355238 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385488366 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.397424104 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517577884 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950861576 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391645522 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391495669 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.394408307 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383409223 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402908972 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036409598 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.395341193 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.396703595 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39670986 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391796659 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386225236 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41220133 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39248935 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405558636 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393270118 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174293881 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388455767 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390026772 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952148784 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401423836 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.392437756 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622576567 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392820322 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393690587 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.390714764 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394171662 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127208856 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399391889 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.368328748 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452182985 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099065381 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594111875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412891085 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422217766 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615716718 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.369357143 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394210395 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.391158727 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391434948 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410122643 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098245482 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386290238 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.393655509 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651321179 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.602560443 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391707564 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371321872 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866349777 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392193512 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.41728382 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408163158 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60097605 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.030237236 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653360746 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395964942 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441695372 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394622888 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183273366 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397359638 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.399232106 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401919854 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664707506 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.236169968 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39554674 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464073939 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405891884 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395045275 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396276548 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39737594 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395830376 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.603542494 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394527572 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657792268 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.399957001 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394362151 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.39120986 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407703099 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.397790975 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617789472 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399885122 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670752799 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396794269 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395859995 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391090619 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61244736 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.401194038 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.402516118 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658293011 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396149498 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41067531 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659057327 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428081408 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505156477 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423537928 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.407489655 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.6528885 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.40090799 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401963425 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39616467 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399517537 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394415135 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.403688725 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401945358 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027015479 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369620373 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393620129 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397001869 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.408154069 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467845022 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4012988 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607514771 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.406472729 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406237906 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.397016488 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.397630403 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623699987 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659622418 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.408342632 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474872669 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.871036525 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025863128 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406390222 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.40069555 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.39809866 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.398389258 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400525964 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399398603 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395723543 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606156709 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663575673 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405566634 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030577413 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395179685 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397421789 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.40522201 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660040033 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.40815733 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396441061 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.404052101 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40153026 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415837221 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662780474 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536919098 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41378709 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401544156 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917855083 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404895289 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400574719 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400655673 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430944855 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400677852 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241752565 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656867784 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399137767 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677250488 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401496831 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.415441013 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397537825 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399882043 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399524597 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.424639979 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409357516 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.607877322 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402576417 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403223092 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955168265 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199654421 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974617017 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397619462 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.411692927 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402993744 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.118276431 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397533334 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401425822 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633232404 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107962432 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397512834 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874332276 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.405558745 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14262982 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667027918 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632151132 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402411162 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.397625147 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668363286 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612280896 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433161635 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407671335 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402818475 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.374187884 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953858677 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395220628 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480636103 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126031502 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398507326 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406118912 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.476379864 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.404010776 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786616387 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400063787 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401107762 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404758655 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412710849 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24995109 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400026856 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408504619 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056828957 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406356225 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.882867221 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395955939 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609656137 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664932147 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.664278622 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.409387616 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.411433623 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.656925441 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665814591 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405610145 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408639183 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984763994 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.26353841 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.410804356 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405773587 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198693663 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412868989 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696123361 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.417679219 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406360516 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399422203 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406844735 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405118927 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.403605387 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412698184 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381285575 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902362186 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.3994102 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422961963 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405257474 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407718805 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659527645 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417475241 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.044010935 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628126734 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415526523 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433509953 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.408233487 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411877707 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.384068841 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408127852 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407517879 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461994475 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623891809 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406100882 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.383295915 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437264088 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610943607 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405958183 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416008743 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629119935 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.406488523 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.418388923 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201624834 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432664921 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416502205 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410439652 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394318801 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448058162 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472446562 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614989545 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.671169701 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670765898 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792438149 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414473416 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409003071 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.423051267 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50455971 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41939445 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.408542777 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.175823595 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047141411 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195207433 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.044204567 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67080213 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411188794 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417577128 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409423685 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542991184 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408037614 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6830299 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408377631 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.404881718 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432456141 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414907286 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411777551 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619346954 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683543127 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407811131 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409719635 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409751591 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.410437118 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676705041 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.619411767 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914484826 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976234345 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409776249 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411322893 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120913851 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678185598 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410036634 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409661642 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411713261 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.42751695 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417555462 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.414919687 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424322223 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546255893 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67267703 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051259157 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671665564 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.446603446 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.928649932 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415075989 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664596233 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174425904 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618258784 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05107846 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155271936 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666511443 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47944825 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619976576 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.405458908 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546670128 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.414227925 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412062608 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41189953 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412692078 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.409190411 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675410119 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053322185 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670985995 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.41498772 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.410826722 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441685487 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.619016585 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634073623 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15172358 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631610595 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675931195 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419482437 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41038588 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053781266 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67178299 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413241062 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409459347 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632890535 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414431612 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439896509 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.93396731 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.411905167 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975214139 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.302446414 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436021374 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421816429 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16486814 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04854794 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.408790154 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920451877 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414294813 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41394933 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688716788 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.421181742 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419203856 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691304695 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.41665833 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420494506 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621942779 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056620638 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161133316 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.430588075 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413560471 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.414372941 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414823352 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416002941 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40947102 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41573977 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.821043818 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413089375 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415580529 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420976394 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.4225503 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420079084 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.417361398 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412754571 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.419520331 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.40892773 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.405441447 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417688647 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541426372 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96495649 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418899452 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088978004 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.760514042 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672574138 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424155167 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.392956647 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.421986052 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417294782 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417699103 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412650762 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409235662 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981012816 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.425713295 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.683518049 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421579089 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625926866 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624237071 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428577086 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627359499 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421619504 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435384854 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.392851734 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414251615 seconds)
  done (took 993.592868453 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.424685804 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.424519694 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.428062613 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.432971762 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441978613 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.470138865 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.469018021 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.501909983 seconds)
  done (took 20.88559006 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.41076768 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.419441383 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.410075235 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.419180442 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.421546501 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.886709698 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.419997639 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.414649637 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.42824884 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.42340103 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.416803931 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.092928493 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.439429445 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.424739506 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.404297537 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.423903765 seconds)
  done (took 33.149234923 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.492795996 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.586111009 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.34011409 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.480176917 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.459079094 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.416080935 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.651448782 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.430842533 seconds)
  done (took 27.151880766 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.422743361 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.423968514 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.423295546 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.424527601 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.427087309 seconds)
  done (took 8.415766178 seconds)
done (took 1264.484958288 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.420822685 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.423025745 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.422030387 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.424092467 seconds)
  done (took 6.983879075 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.395178504 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.395751484 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.394609925 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.406456524 seconds)
  done (took 9.885719621 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.118587696 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.013096507 seconds)
  done (took 5.425858501 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.917220329 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.91187749 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.911369509 seconds)
  done (took 7.035240006 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.693813703 seconds)
  done (took 2.987586451 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.34566438 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.415020373 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.087740348 seconds)
  done (took 8.142181641 seconds)
done (took 41.754290169 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410658949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.750568711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.568702308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412061024 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.586846085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.570588177 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.152985316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412057206 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.42228959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.414751417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414263489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.585312705 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.195782831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.750200705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.199674146 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.659258424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.569348102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422718844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.41227545 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.422186713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.145129965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42131925 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.410453649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.409561686 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.575966979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.556849764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.417600438 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.656654854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413859515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409221636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.559672803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412701333 seconds)
  done (took 84.016965961 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413072326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.424374767 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.422557336 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420670765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.407933269 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.422063637 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.410102055 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.411308609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410576657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.409506497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.408034102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.411813594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.41034963 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425670683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.409822628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411359702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421568608 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.41016184 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412621322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411668323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.417979268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411146431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.422545455 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.420964012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.411894404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426373225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415120857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410328932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418142111 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.41565197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.445236768 seconds)
  done (took 78.616188221 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.42447276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.423674183 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.411978574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413267902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.412426628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.436771666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.411997662 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.422117252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412637733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415334801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427249215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.441530171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.413162574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.412227289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414709303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413386854 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.427109457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430982017 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419696943 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413518593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.41588797 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414155244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413272024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414669065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426459702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415468157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.413262692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.41355593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412013481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.429222649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.418940426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419280447 seconds)
  done (took 78.703952957 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.657498836 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42977038 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.434043057 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.424782615 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.432652196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.431027452 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426882694 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.661807949 seconds)
  done (took 15.200339652 seconds)
done (took 257.831843273 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.417965201 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.932295102 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.445659497 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.421691296 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.439343916 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44643402 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.640584732 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.448678904 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.641426606 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.438650246 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.436153963 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.422139465 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.206466375 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.572027847 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.268976336 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.359766027 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.290110287 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.422110395 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.981669667 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.704226578 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.445836807 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.423152404 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.246732827 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.298200697 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.39675512 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.497157326 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.520975351 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.647891864 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.581160147 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.501813149 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.927663964 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.418577397 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.41878134 seconds)
  done (took 65.560962074 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.424608062 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.432320713 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.433664036 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.434553176 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.431379381 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.435887288 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.424443159 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.431226515 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.434236114 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.432950648 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.433467154 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.433299698 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.430885646 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.430476084 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.429885105 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.413313283 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.423384645 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.430298688 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.424384534 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.413103372 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.4286739 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.435454639 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.435820027 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.429452966 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.434203323 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.432691065 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.429900128 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.434671587 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.427232073 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.429300408 seconds)
  done (took 44.19821231 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.436617821 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.986681727 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.14048655 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.436560103 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.426365724 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.432565469 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.708969496 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438236688 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.432936863 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.43093352 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.90234312 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432561479 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459267847 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.154517194 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.426671915 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.436210137 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.43563388 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42684016 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.000297458 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433517283 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.707647922 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.439124021 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.710864272 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439449653 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.431791073 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430517638 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.431560851 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.232644191 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44818861 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.907236069 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.175450018 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.708758515 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.162955682 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.203671093 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.194842898 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.440782965 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.437280224 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.90880725 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430208221 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.429680674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.709232851 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.42691808 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.162840959 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.103798092 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44609563 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.436680394 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.263980705 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.921758363 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.665451525 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433283646 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.195814844 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429808659 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.43811881 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.430844962 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.670461072 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.428532428 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429967029 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.261939251 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.447484606 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.710388853 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.437534817 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.431678751 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.992765028 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.432370323 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.989144349 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.434940021 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.438565683 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.432704539 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.16487858 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437309536 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.124965218 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.448296004 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.437723438 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.908769176 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.990680359 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.305272629 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.428928954 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998088006 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.182177764 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.724272584 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.433843404 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.238669983 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.724342109 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432815914 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.441118703 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.442399194 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.439809441 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.507832125 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.708221514 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.052075184 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.11299491 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.267965119 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.726235248 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.437899982 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.434788319 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.271602456 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.455685695 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.44343754 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.158636281 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121475247 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.452566621 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.441130775 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.112886965 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.447519122 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.714624683 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.440474758 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.194493829 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.437511616 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.552493941 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.44128629 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.441200125 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.439655225 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.712741177 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.439076026 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.44782676 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.112252391 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.932508248 seconds)
  done (took 198.922350084 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.428781481 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.425400786 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.429933134 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.425084215 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.429405749 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.438007212 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.428354861 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.429329371 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.43555949 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.432181627 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.431760136 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.439684722 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.432893347 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.429441932 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.430476937 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.429068171 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.4304606 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.444715057 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.427330607 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.431456577 seconds)
  done (took 45.941324198 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.445846472 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.982072827 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.941824216 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.445607923 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.440527836 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.438855278 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.491111967 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.444892237 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.444813284 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.730293202 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.601230443 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.447761271 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.442894413 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.442831805 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.944447976 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.422728335 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.730849443 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.982020145 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.442855859 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.982730961 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.420122183 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.447570783 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.436271619 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.983748921 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.735042565 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.712251099 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.494467968 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.985180579 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.438124374 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.443975752 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.977991175 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446542113 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.437910334 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.97403145 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.446750594 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.460629878 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.440993398 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.494429208 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.499678859 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.73477157 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.992721218 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.723448994 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.460905264 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.609911494 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.445950024 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.426664372 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.996956235 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.451075538 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.428355973 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.446151889 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.449544622 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.961199638 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.441510502 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.960966278 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.447076723 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.447496932 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.989539639 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.962216249 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.956391737 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.607901645 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.440741489 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.718307018 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.448721001 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.998572162 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450891405 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.446854134 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.452863431 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.607373508 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.99723488 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.717544034 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.738376353 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.738329136 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.452550896 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.506725076 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.446509545 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.737328786 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.503963294 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.848997519 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.737714707 seconds)
  done (took 129.767083325 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.695121633 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.545438476 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.807503251 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.0225235 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.942802228 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.58140492 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.547568266 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.68043496 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.442041269 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.522613099 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.080355004 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.545803487 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.170163999 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.525850155 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.543954229 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.56840684 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.836596362 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.434861877 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.09180885 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.049093262 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.443314331 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.544320193 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.969501471 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.629353762 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.452053075 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.001879429 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.382276507 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.960277144 seconds)
  done (took 54.332087767 seconds)
done (took 540.02044181 seconds)
SAVING RESULT...
DONE!
