cset: moving following pidspec: 16467
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.540896826 seconds)
loading group "string"... done (took 0.538649085 seconds)
loading group "linalg"... done (took 9.07493074 seconds)
loading group "parallel"... done (took 0.174597678 seconds)
loading group "find"... done (took 1.313322657 seconds)
loading group "tuple"... done (took 1.969491461 seconds)
loading group "dates"... done (took 1.376257523 seconds)
loading group "micro"... done (took 0.196803482 seconds)
loading group "io"... done (took 0.521275057 seconds)
loading group "scalar"... done (took 53.47721003 seconds)
loading group "sparse"... done (took 14.244019061 seconds)
loading group "broadcast"... done (took 1.244051807 seconds)
loading group "union"... done (took 10.791325397 seconds)
loading group "simd"... done (took 3.106135112 seconds)
loading group "random"... done (took 12.261291751 seconds)
loading group "problem"... done (took 2.293277947 seconds)
loading group "array"... done (took 24.585204617 seconds)
loading group "misc"... done (took 1.178433533 seconds)
loading group "sort"... done (took 3.818549769 seconds)
loading group "collection"... done (took 19.661600458 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.623760255 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.187494302 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.208818621 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.292850424 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.246418995 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157674101 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144902759 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.267570731 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.748575778 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21486 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132486337 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534643076 seconds)
done (took 6.584977272 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252738606 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179163231 seconds)
    (2/2) benchmarking "String"...
    done (took 0.171052967 seconds)
  done (took 1.12354421 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074911718 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152536919 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090983274 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111403023 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092739933 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109745981 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09331218 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108795503 seconds)
  done (took 1.53217544 seconds)
done (took 3.75653311 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.50434098 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.881549718 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.53064348 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162215851 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.307723473 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.301940947 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.335441158 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.207384723 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090880125 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091082207 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178768832 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.401288091 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.434948846 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.958082425 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08863182 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.114571988 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.119596048 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.774222297 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078755784 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.11344372 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531584149 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.199677973 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098149099 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127457817 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183837866 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134847826 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163408097 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102159067 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657295987 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13397246 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.190420574 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098668478 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163258099 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197532264 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.210533843 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094380307 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680526919 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202454269 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092726422 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099039793 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664384025 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119934788 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186540649 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105217591 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090867738 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184479432 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094102907 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075871382 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.11750376 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085780731 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172260521 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.473717192 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107314673 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174728394 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09154127 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689480556 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100644182 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280412126 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124841798 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093608571 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092773098 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089123003 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.164498341 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093546292 seconds)
  done (took 20.318571303 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.14780375 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.169805152 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077127926 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157240717 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122499598 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079582411 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102787858 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078447722 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108432783 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.248301909 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12120326 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.173684194 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073368851 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.105432943 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128496783 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249407431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106681628 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122198089 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088676788 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089647487 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141818899 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098097418 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090697581 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110755276 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17176693 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206245615 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110057762 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124131895 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087028932 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097007322 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143026595 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146885525 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092432263 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085160969 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173199042 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124608734 seconds)
  done (took 5.342784711 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.173256801 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.221674587 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124163195 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.200995883 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.18767182 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150394364 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.173266723 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132867685 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.28911028 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.268269538 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18020734 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11442799 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114410394 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079619493 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080502448 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076551419 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.521707633 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.135553561 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.175701278 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.13675722 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109860923 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082347608 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386713164 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083447163 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099491223 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087452283 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068604914 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.20507697 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104948727 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.218938497 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.102732185 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082352668 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089513307 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135149356 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117053383 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141635764 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087004449 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099609411 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.202182335 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113218099 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078446555 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108844751 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136902551 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.141576831 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086669035 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.113978917 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224340331 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08474361 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105244071 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.084361448 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197927678 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.150192599 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101188778 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273574608 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.123508117 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087213191 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.103896421 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.241886729 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132101103 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08136431 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07759988 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107550826 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.140257457 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099148823 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092000506 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350131498 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082972004 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163157666 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.763504702 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103153813 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110716807 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088445175 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084806278 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122631949 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083350155 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078706122 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078960234 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.100943419 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084682424 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112536113 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086253677 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079991859 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164145674 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099789744 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100400353 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128217077 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087514499 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098959154 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11446629 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099229002 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086013613 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.174497453 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089825932 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096142805 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105672989 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144988577 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083927702 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192827387 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098838629 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111687454 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098875378 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114078605 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081560246 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119247462 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079185898 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1029541 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079443503 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080201017 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162099019 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083768897 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080039839 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08336191 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10314345 seconds)
    (114/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080427893 seconds)
  done (took 23.262287236 seconds)
done (took 49.692249903 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.458564894 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091640101 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091050485 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109757384 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085972178 seconds)
  done (took 1.685306648 seconds)
done (took 2.510131949 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323377031 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199010721 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099162532 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194583156 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083953499 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202968965 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189940138 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094632755 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219866585 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085484363 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.202445549 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086033737 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105377514 seconds)
  done (took 2.93463839 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098252226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105932715 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098969373 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119723795 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079182386 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097235507 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117209128 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109412755 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097026382 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111025388 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081301126 seconds)
  done (took 1.937755539 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094691604 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100203066 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08542862 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114602281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08040107 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094845206 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114720967 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106262133 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095271935 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110722206 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082459578 seconds)
  done (took 1.906297836 seconds)
done (took 7.599143554 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.16450499 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.146691285 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148986337 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.295267134 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.368135565 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.259712852 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.687131124 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.157176957 seconds)
  done (took 32.208247362 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.163375021 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112268836 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091747475 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093651746 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089281131 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.118291332 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091221216 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088577443 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114378023 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093952931 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088111464 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091281492 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113900922 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094595233 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092891212 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.111364837 seconds)
  done (took 2.535609423 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142150509 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115856126 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115758318 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09653291 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091238213 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117163743 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098739768 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092274987 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112135071 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091950696 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098576525 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113683249 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093723709 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.089936398 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113277597 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121155917 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089950791 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112875955 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.12045219 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095657099 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115375602 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09399195 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.094348111 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115444752 seconds)
  done (took 3.451171764 seconds)
done (took 39.020271577 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149449138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099166543 seconds)
  done (took 1.077764159 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.13940921 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156636132 seconds)
  done (took 1.129885785 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107805986 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084255941 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13573055 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.099922431 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.087168478 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106826795 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115384023 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.087050497 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.107802908 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089102502 seconds)
  done (took 1.858818584 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089047278 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.089156963 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12118957 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.141701455 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.095765793 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.110730868 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092605041 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091502919 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114820832 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088308421 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096056571 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127027636 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.092365127 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12592018 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094977243 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093059914 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115444284 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092672082 seconds)
  done (took 2.711973397 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.086108511 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.087017698 seconds)
  done (took 1.013092986 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089239661 seconds)
    (2/7) benchmarking "second"...
    done (took 0.084416923 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086481174 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109224613 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088073711 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086524867 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105438917 seconds)
  done (took 1.489972973 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.466262457 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.251144486 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.347448035 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12581564 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12587534 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.346272645 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146198719 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.120352421 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102800711 seconds)
  done (took 2.909264915 seconds)
done (took 13.023975027 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091909472 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.217765289 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.639397686 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.230600305 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085904459 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165468527 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.296596322 seconds)
done (took 2.570222803 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353738657 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.149449601 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087444596 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088873227 seconds)
  done (took 1.51809339 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079146787 seconds)
    (2/2) benchmarking "read"...
    done (took 0.093206306 seconds)
  done (took 1.0184767 seconds)
done (took 3.382507735 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08500165 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10627892 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083582568 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.102160025 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085002442 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.084584658 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.106450467 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087983312 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087019495 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084115298 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.109505927 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.086659489 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086041486 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104204899 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086260774 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085456699 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085427237 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104509598 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086195609 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085808712 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084635605 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105280287 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086204553 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085180585 seconds)
  done (took 3.070338707 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108750707 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085180767 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108497735 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092491334 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089967548 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108861987 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093164486 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08697794 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090660769 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.107905426 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090598564 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090609007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107751345 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0912838 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090038279 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10996739 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092367444 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087536163 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107809756 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091920842 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091058791 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105734998 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092075773 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090733674 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107938631 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091519024 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089748737 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086024126 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110687314 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09094288 seconds)
  done (took 3.735448589 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096410803 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082670209 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087218534 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118645832 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086902673 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089559084 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10547368 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088239771 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091588346 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088128727 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111449578 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089948141 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086470654 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.089862588 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.11108976 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09297475 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097875673 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.106418027 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087140843 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090808359 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111920406 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088555388 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09021361 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088520324 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.109064757 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087993444 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089288761 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.089829449 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.1109233 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090361427 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.0920679 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.111794062 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09135806 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100691697 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111060934 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092443073 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09516144 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.086722119 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.112585034 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088850789 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087270941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089336109 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.107466891 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097245747 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089354375 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.111686525 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08922103 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092029274 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.089937714 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.112923529 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088313342 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087355879 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.112009766 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092903231 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092939533 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085958749 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.111837499 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087596709 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090947368 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.108107802 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089148513 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087732265 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094308634 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.110992051 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106874532 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.095893929 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.107590885 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093504917 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091545247 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.114760023 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093818889 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099845405 seconds)
  done (took 7.799258733 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099938369 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092925999 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085602226 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107955082 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087895472 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088341666 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111609989 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089834289 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088709396 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111971039 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089579288 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088080089 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087854607 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109636174 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088882643 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087983429 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113355256 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088637764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089588516 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089189879 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107987902 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09206949 seconds)
  done (took 2.947780927 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209989861 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11090486 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138307298 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121458474 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105584053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119968996 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094390122 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093383428 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092945278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.117056749 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098029245 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111553093 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107900964 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09661789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116685999 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099235045 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092768605 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118520118 seconds)
  done (took 2.897067186 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099099661 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.08654032 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132647328 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091480371 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093226394 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090355724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116064644 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11172246 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.091254058 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.110488134 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098622037 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090901665 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.112049024 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091251985 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091159312 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112602671 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092813864 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089879017 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1171945 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097006224 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096081627 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117286154 seconds)
  done (took 3.079756035 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102770875 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.087438357 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12691373 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094159099 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088152362 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08905733 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116055962 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089598218 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096259556 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110167296 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090123741 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089577055 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124704486 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091038132 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094804554 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11019907 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091350151 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089653981 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091208811 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109398807 seconds)
  done (took 2.83748617 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171131845 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125116603 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108565865 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116462373 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130361743 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110881164 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116381044 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130395946 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109851688 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139264118 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110607287 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108320169 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137525322 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117132031 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10836362 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137174423 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117280226 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136576601 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111518709 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109808647 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142885963 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110544813 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136722701 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11105567 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110344097 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128313424 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111430374 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113919449 seconds)
  done (took 4.274733455 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087441193 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087492338 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086642272 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108549296 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08930273 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088344137 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088390477 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109824264 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090458306 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089134093 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107831849 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093075587 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089628997 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090535535 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109484566 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091744832 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090560709 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.088045673 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108827509 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090978114 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090705951 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108916605 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091188749 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088469826 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08816911 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110004628 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089515807 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089595043 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090069524 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108076863 seconds)
  done (took 3.700406249 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097858431 seconds)
    (2/2) benchmarking "in"...
    done (took 0.095035197 seconds)
  done (took 1.052351794 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095336931 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102493223 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087538282 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109234078 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097153125 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090535149 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119189155 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096840383 seconds)
  done (took 1.660580185 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143286162 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.166322086 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096267026 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103686638 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.169137675 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.162200293 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139096601 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095691786 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.113990108 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087203213 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.163941758 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08773696 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.095508167 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090642238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.119929558 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098757581 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.087702172 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.121195139 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098451815 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093378257 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11647242 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102230301 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094595495 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.12060292 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088576328 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096728495 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116950174 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106988704 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090446274 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.117890097 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.095247955 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090832508 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.11418679 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098253389 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09136319 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170801244 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103149106 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089355197 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112363476 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094074857 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124381149 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.111460771 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097430017 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092991382 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118618366 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098207187 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096774808 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.110065896 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088676814 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091531416 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.089937315 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110124668 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091557201 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097039282 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115010691 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103412093 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093154565 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.11024693 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091937709 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089426721 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.113874082 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.092028747 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096304581 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114743491 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098575813 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096239088 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112185956 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092604678 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093151881 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.091515588 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.115167695 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109552947 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09267884 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.11660114 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096716182 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092385457 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111828196 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0985519 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094055429 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.115874379 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097547153 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120210026 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117094238 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090087479 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085397744 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111186527 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.090284236 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090692967 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084547598 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124088498 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095702207 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.090784452 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.107370964 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094784952 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090004222 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.11396264 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088328109 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090816734 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.086378714 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113095507 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093466345 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088837991 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114102725 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094532675 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095724813 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108617726 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.135919551 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105923984 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087623302 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.089354944 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095093978 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107760695 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092979072 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.086962471 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111590953 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090239266 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.093798871 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110067016 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091069594 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.092572403 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093155966 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114384088 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09008127 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087750256 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107667982 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0935628 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09724869 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116594144 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09532467 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091455264 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111331446 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.097627271 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095270524 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088939141 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117314323 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091430905 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089827313 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114344838 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099612804 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095195424 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.111418049 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095140608 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096617321 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114553731 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097364768 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095260322 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109246222 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086787064 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091282577 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084369549 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.10757737 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096351099 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086569333 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.110379235 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087661294 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09551488 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107649067 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.095182791 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090485618 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111753704 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09505387 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082692573 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087336015 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110544216 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092487962 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086205661 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.107408512 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08833213 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095544878 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.104420413 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.092989154 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083212445 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086879665 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.117084634 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093268554 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092682017 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105579684 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129960838 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101214479 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112879839 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093034852 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090708448 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112451531 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091167339 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.091789184 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11208539 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.095317457 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091641335 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090480118 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116497742 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088573203 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090017918 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113462879 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093949173 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083273213 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.108370871 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084643387 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.093168383 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092067442 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113022594 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.094026786 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090152528 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109256178 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097878563 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08830485 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.111414155 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084224683 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093379211 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.115354394 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096065313 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094311299 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092034551 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108486475 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088503939 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099010995 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113597059 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092975 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091612172 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109719937 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090411738 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098533614 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09443609 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.112782815 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091646217 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097501457 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116077235 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08912356 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084891975 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.114887747 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102949202 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091097142 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115866119 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.094543082 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092783483 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123255013 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.09046014 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090865259 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114488244 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097707105 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087741125 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090240598 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.111819887 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09695762 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091360269 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.111372425 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0915026 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095929156 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107152783 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.088338534 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087476701 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.090627529 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105019266 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.089226447 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09075302 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109109157 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088808628 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095033763 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114972158 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.095669289 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088925926 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.110969286 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097090307 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095689531 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089027706 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.114118697 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08725557 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083193201 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108855801 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086810806 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.091624065 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105966951 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095868753 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089252906 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089033872 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112758762 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094488894 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087883181 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116179558 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102573464 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084875073 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104465898 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09031381 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090407851 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107243087 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088240008 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088120425 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113098671 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103356119 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094728719 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10605534 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.089391304 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.094436871 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.096335186 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11580005 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.095328642 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.094395027 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106320938 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.093957691 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088299037 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118331704 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087414059 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089596124 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108600115 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093273758 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088305285 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.109058276 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.093475687 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085868584 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086314169 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11555173 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090686767 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.093507574 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112144416 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090990346 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087650132 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106640567 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096421051 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090333702 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.095161736 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109404987 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084862335 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085178978 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.113923143 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093179353 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.094513274 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105878081 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094244032 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095791787 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.091914856 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.109019223 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09890179 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097205795 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116951435 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098632913 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085059823 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109007872 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097903249 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.087546588 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11139836 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.091700808 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08576756 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093660991 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.11575743 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094202159 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09031688 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106325842 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.089770487 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096229891 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111048952 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093842231 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.091421574 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092480123 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107588745 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093544767 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.094473629 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111767003 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096144356 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09249786 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.114535222 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089981113 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09490024 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.088796181 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.106942501 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086224562 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089027009 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.118929527 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087812024 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096024812 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.116492857 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091132559 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090431011 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.093779487 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108470228 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094836698 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094035989 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110746064 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100149584 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.090783232 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112086971 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095818296 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.093807604 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103610879 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092125668 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090610973 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095484533 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113148521 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095037051 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09160601 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116932634 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093117389 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.094488735 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.11375778 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.097166558 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085588984 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.096815964 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116785058 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09260043 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089415218 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110666275 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08800032 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091574683 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.118655568 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090772669 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097635214 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.116260872 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09957371 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092432258 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.095782058 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112246027 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09647748 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08777752 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115132692 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086632835 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094731137 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.112897431 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.097310158 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08949072 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109465569 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097199917 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.094463702 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093602026 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115692075 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.096625453 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085866813 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106897527 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09287133 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089298756 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119485858 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09768346 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090870838 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112048776 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.093024673 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.090298592 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096075518 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107715811 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090031982 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092513242 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114835401 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092297361 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086934025 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.115697952 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094213717 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094538253 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111497997 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089849904 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091536722 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.09690066 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111105923 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088622312 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089070938 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119293159 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09360305 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088846946 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107141978 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100765318 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093883499 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.12018668 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092220286 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.093306249 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109315827 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09255646 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.097036318 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09096833 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114417162 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091894553 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095868511 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12009126 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087454373 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089162658 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122059071 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095850008 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096271805 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111441587 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095199898 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097069109 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096050882 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.11253979 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087310332 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08765735 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111699706 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087396243 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.090558859 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118483244 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09331254 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090422158 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115292783 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097482374 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.091309567 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.091204848 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109438974 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100710092 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089403726 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115817089 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088285645 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086589493 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.091009042 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118327272 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092133917 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093024648 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.114366494 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.093163679 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087239814 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112730551 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.101487253 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095035834 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.096598088 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116005979 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092256586 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.092929611 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122218535 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092541283 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093731538 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123142747 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.098431329 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093245003 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115884877 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099573758 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.09990447 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.116980812 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106463805 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095391834 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093617112 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11894808 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097373594 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101674172 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114236235 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087830231 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.094322299 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113351292 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087681126 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096591156 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117990157 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.098804828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093195362 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.109949913 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101596618 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098681715 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112338039 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093293278 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090285925 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.095280986 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113722035 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09527511 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.09053336 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120004938 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099749569 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0965133 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118699519 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088018734 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100015539 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117770855 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105155234 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091789776 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087895164 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108581069 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.092725898 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.098525565 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122022859 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101111203 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.095757919 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094538848 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11540984 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093732374 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090735641 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.122320634 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101498847 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.093981381 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117129894 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095135869 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094663191 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091364711 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.119771026 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.098294016 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093951067 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124714941 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098692843 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092393093 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111546116 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095529833 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.092326987 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114815572 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098372647 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091325171 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087020121 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118919142 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.099708032 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092286611 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120332415 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100432569 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091934814 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116154678 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103797159 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095254955 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.091310089 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116554417 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093861741 seconds)
  done (took 60.561339312 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144555268 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098125232 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113229534 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093342925 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111369715 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114677804 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093018655 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093475627 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118858029 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10733901 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092669797 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091295494 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130309391 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114838505 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131791576 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102475928 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092721987 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1139105 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09265143 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093657545 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129246464 seconds)
  done (took 3.18409448 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112052878 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.107370145 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123002404 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107536225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098749467 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126453671 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103906617 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123349759 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108091272 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099764929 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127328796 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104300049 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.099396267 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.121459544 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101377578 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120695595 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108284536 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099925943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127725304 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105996753 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10066877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125611055 seconds)
  done (took 3.359685163 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.104212311 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.096775676 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099024148 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116539539 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097685848 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.094040614 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124206455 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097161565 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.101166117 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.096307762 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112300655 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096012109 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099829928 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116563743 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093442677 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095270298 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12435124 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100014283 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098954079 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09201248 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128678519 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093421887 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09250914 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110982335 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106258494 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.09859215 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.113875276 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098998512 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089153246 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116987568 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.095333096 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094047155 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.094707115 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111619285 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090476296 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095842996 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118789502 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094597893 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.092672673 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.115178276 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094720596 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098181683 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097812919 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.116304756 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095313351 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093701915 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.117927104 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.094026679 seconds)
  done (took 5.826702936 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12559751 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.152212726 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.098703281 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123884647 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129593387 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104005669 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096053326 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128645601 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09524218 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117286753 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110143173 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107362967 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119724607 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102431849 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098726708 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119831273 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098554253 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09509601 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121713388 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097934579 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100607112 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.119692385 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108786516 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.105694378 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12102398 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096819419 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.096064933 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.12203749 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107231132 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.121420329 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103322907 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101795271 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.365130352 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09646855 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097106046 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.118739524 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111664243 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.098582233 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.118761987 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097468105 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098125053 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120580557 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101700028 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.109457337 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118464698 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100568667 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.097909683 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115083407 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107670962 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097835776 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124373955 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109420371 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098992607 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.118725048 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100929865 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.107567988 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.118258755 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.097033881 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.098961623 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126456067 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096537047 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.099463154 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127073353 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.098908355 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.121733387 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109043063 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.098299207 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119640532 seconds)
  done (took 8.736154155 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134341629 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102487313 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129641512 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110789262 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100913232 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.121892569 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101666222 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101653019 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123803249 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106700774 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101884812 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.224351259 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120583946 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107819356 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100717078 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125704072 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105161657 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101900589 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124460033 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105304468 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102470721 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12973563 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102840004 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111271948 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13635457 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100492197 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121247725 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103952483 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110087388 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123092751 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114251372 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10164702 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125823625 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112450854 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132532669 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103602455 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096609413 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123676335 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103870654 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101283077 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.118121573 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112662723 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100937999 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.118856713 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104378986 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102121153 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132495792 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115015177 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106011191 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128438377 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.102703779 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130730619 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105420691 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10188367 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130769801 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117240538 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130898772 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111809979 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102448665 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131327474 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111596228 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135533308 seconds)
  done (took 8.078867783 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096862366 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09568389 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093907331 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.114792222 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096220995 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094130692 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094846143 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116231527 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09585712 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094271839 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115865182 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096539407 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094145411 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094953034 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114783399 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094769875 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093672739 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093173148 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117430131 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095442003 seconds)
  done (took 2.925385321 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.105851 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113291192 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.115726262 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104010788 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.097109942 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.121844004 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.099324391 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097574843 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09621808 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121711201 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106344807 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104402661 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11858055 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103374787 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103714415 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.124579814 seconds)
  done (took 2.659605839 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117572365 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114978456 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.192712189 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09993019 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.118549901 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105089428 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.097584882 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098988892 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.118408189 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103786315 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101424172 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123495734 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100241197 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099147071 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.118207876 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102723769 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095648379 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.101222453 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.119859657 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.166475636 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.12276587 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100690657 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09841952 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124316784 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099197587 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10039583 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.125559374 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097485749 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098955105 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.119608222 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099603627 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103996295 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.115785939 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103815763 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099763531 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.097510533 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.119856384 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099780359 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099849089 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.118889737 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103483471 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098298926 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.119104882 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102202096 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096132121 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.097533448 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.117097171 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10352568 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.099398779 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.120767434 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099590685 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106455449 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.124732481 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107784936 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104740795 seconds)
  done (took 6.972181477 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110021907 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099491534 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108980587 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.119138591 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09979403 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098355851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120905763 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099505283 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097246968 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117547491 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099347176 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099449451 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118268456 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100647261 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09878546 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098092039 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117002555 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099347122 seconds)
  done (took 2.836938613 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103065296 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097248709 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102593929 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119034341 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.096853379 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097758724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117178378 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099032194 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097333055 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096363364 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12047483 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098700005 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097635003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120663568 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098796202 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098152115 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.09857108 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118420237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098203512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095513323 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120615901 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098011087 seconds)
  done (took 3.225860694 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112189239 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183474265 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107062568 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193369909 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098507444 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095979201 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127422277 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098005772 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114168721 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117474782 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096934193 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095759316 seconds)
  done (took 2.376449948 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128139598 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13626756 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118942746 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099976061 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107188079 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123021351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103127646 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101972871 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133067272 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114862432 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101737059 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132871764 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108904578 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130363372 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108449073 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106838848 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122812387 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102237406 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097512061 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14030625 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101636413 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131919663 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103287552 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101156386 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123400859 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111551311 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110576453 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133837955 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102220584 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131731015 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108479297 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101980587 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131758766 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113645736 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098593916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132773172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102987039 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138693931 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108352763 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109577933 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121239855 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108500694 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110056793 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128878879 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111123859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123471389 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109332656 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102422227 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123337226 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125309313 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126921611 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112979551 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10720031 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131618235 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112745934 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143778624 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115467678 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110768411 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130187234 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114093572 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131543839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108673078 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109606496 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135945769 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107873903 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133772592 seconds)
  done (took 8.654704484 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141277888 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098798623 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122881229 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115172296 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109672327 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124942757 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102857801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101367055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125056141 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099460619 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168984012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104160773 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113147513 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1325271 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103074358 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101786748 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124426332 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110999046 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119783012 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126098957 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102098934 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132195927 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111956641 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132267814 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116120208 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107583855 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125532387 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103171636 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102299667 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124636471 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109131556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102410689 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133331518 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099725871 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130337707 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104354516 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102373072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12826771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104689421 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108740596 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133040271 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119114266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122817342 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105108538 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114286673 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124943554 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103220582 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099152905 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124232284 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100525137 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113833419 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135973851 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114417422 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132787161 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104481566 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10296584 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125209428 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104135764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102150627 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13094049 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111298101 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102554426 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14665415 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102761252 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124307365 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112785341 seconds)
  done (took 8.58361946 seconds)
done (took 165.883060691 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149634404 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189007724 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145966719 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178816858 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094366334 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127117226 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146828266 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.149129047 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091793409 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115725457 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09264721 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095564547 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179180204 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09454047 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093389304 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096089639 seconds)
  done (took 2.977517006 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18986407 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311566797 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11442442 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118761441 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10282554 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09999924 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117232285 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100925289 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097176421 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127076567 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100937333 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096157353 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126736731 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09770776 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096884727 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120247194 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106690938 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099830659 seconds)
  done (took 3.175093526 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120894072 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142055594 seconds)
  done (took 1.215243928 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130413644 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174958951 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295807704 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170748696 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122820735 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136790422 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15283418 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133492685 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.178581359 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131504451 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113482004 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099281911 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145741024 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104929089 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111791868 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121754907 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126523549 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109064251 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.13103245 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101163772 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119713241 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125730676 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104882612 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.108199268 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.19144353 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.110413567 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.1256878 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102891137 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099562051 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.132158287 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105257248 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137225683 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112751864 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173173044 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105758994 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169622923 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109652816 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.118598556 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11017417 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098505708 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12196979 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103253027 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116650148 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121463437 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104679233 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109384153 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125189264 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103801209 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107061889 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.132219304 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107529811 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127560861 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.147286435 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131920937 seconds)
  done (took 7.863772543 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.847646199 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141138593 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09967353 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.005629778 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147406862 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114943901 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.844811354 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142235003 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231413317 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.874155597 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136578931 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111436328 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239434248 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.270889659 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.178757527 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.346635818 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.705866064 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133075041 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129840149 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159838298 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108882738 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12509743 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141848609 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.416755745 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.121359542 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099053018 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105525111 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133920909 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173756955 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100348537 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102314354 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197698261 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.285314904 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20896764 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098962321 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097270954 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120578801 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.161855822 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.289003038 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216390588 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162779376 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094602956 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120221847 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108631502 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138335256 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096466063 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179267189 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.167527522 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189181586 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122502144 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112489485 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108001258 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128080069 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175387894 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097105306 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356427658 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.351750705 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09749255 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130656141 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114762165 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264862145 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121499393 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235573461 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125512733 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213526035 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118974803 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802860018 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162350238 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118366206 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107380165 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104601211 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126355161 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107634661 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179345825 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.379842985 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133668345 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104084267 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098291134 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227538285 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.119988739 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099144917 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180012532 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101008068 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106694827 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134765693 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109880372 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189162116 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267844907 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11213463 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127751071 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106638773 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111368647 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120800479 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209945148 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226131088 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17422 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231685014 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107152222 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180868277 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183881732 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105893525 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188040144 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105601244 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136528728 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106822447 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222288409 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155461567 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099622259 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123717738 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109925893 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.134767726 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125233342 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108535217 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185717866 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462615982 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158880069 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118222091 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102930805 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10758576 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17951263 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126848213 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265908931 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110268875 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184188738 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108279397 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09583759 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129489839 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158108419 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131982028 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107657265 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129578898 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110931946 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.269435839 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220691988 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117682102 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240096559 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188485133 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107140651 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191752375 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10625769 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186381457 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129634835 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109486738 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099918608 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794743222 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13518409 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107868639 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103124966 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200488206 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09873118 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121707651 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099178284 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095398078 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800038203 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10226445 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11947912 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101197581 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104835488 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130651424 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106656149 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125567369 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155925636 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241821944 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.136394525 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105128197 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121703281 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155928956 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.1220771 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100355318 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.097525974 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.1203137 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109959833 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103744953 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12181239 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167194106 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175672255 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226753514 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.530445513 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120498014 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101300322 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239097234 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097936155 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314618773 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130752653 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234419907 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18264255 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097478637 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347481978 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186291278 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202034812 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10482504 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187242573 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098468589 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107802723 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177817882 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098889098 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129075447 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.153884673 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136823703 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111904073 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.182798135 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122636123 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224593439 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.119944782 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164298434 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122857291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107463467 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321157923 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122481107 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117973322 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179207622 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103359734 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099606604 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.695867119 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121384279 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111637916 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107071898 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.255614552 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161304024 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131159356 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108204589 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134058946 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.15822253 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230701795 seconds)
  done (took 45.687023924 seconds)
done (took 61.865992177 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287162883 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25553868 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.306697076 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213791835 seconds)
  done (took 2.109052482 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.290707234 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163540367 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.234833035 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096970515 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246570871 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097757892 seconds)
  done (took 2.107189184 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.498495092 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.386940435 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346445743 seconds)
  done (took 2.212276892 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.247661132 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.256947651 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347094985 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.414946724 seconds)
  done (took 2.334666298 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.297475368 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131857465 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125810755 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.214724071 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.276063322 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258931533 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148654932 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201974452 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152673418 seconds)
  done (took 2.833780258 seconds)
done (took 12.572551437 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.352075844 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.344685114 seconds)
    (3/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.290117972 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.23317149 seconds)
    (5/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.268894689 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130453319 seconds)
    (7/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.340764347 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.304020243 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.225305732 seconds)
    (10/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.317780578 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.341826146 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.129998661 seconds)
    (13/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128762438 seconds)
    (14/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106597522 seconds)
    (15/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.246907401 seconds)
    (16/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.189249702 seconds)
    (17/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081702124 seconds)
    (18/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.236718611 seconds)
    (19/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107014079 seconds)
    (20/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.082719509 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.147196361 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.214801313 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.237817616 seconds)
    (24/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.264662912 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.205502401 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.313113127 seconds)
    (27/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.265906963 seconds)
    (28/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.324963565 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.212826171 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.19390543 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.170736064 seconds)
    (32/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.082544591 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.137902804 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.108982003 seconds)
    (35/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.15364749 seconds)
    (36/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083781112 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093035104 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.130443101 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.207976233 seconds)
    (40/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.169502739 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.135972269 seconds)
    (42/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.179928674 seconds)
    (43/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.190592619 seconds)
    (44/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153370601 seconds)
    (45/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.08216662 seconds)
    (46/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.200836592 seconds)
    (47/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.219034397 seconds)
    (48/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.244569643 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103740208 seconds)
    (50/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.20707119 seconds)
    (51/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093611466 seconds)
    (52/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.177013698 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.127950638 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108327649 seconds)
    (55/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093796697 seconds)
    (56/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088505734 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.202042279 seconds)
    (58/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083785806 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104858138 seconds)
    (60/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.167221935 seconds)
    (61/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.083158083 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.178109403 seconds)
    (63/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.220285583 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.105334009 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083884006 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082945252 seconds)
    (67/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.129832646 seconds)
    (68/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10604582 seconds)
    (69/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093257796 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.167852187 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118463688 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106517349 seconds)
    (73/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.139000704 seconds)
    (74/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.107864967 seconds)
    (75/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.088251317 seconds)
    (76/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.08499207 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.160379934 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137718582 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.101722731 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.108393947 seconds)
    (81/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.178071365 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105975306 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147848039 seconds)
    (84/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.191190152 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.131674527 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194518117 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149002387 seconds)
    (88/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181610498 seconds)
    (89/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083536193 seconds)
    (90/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092989422 seconds)
    (91/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.245644351 seconds)
    (92/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083076701 seconds)
    (93/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.143056161 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124220946 seconds)
    (95/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084549268 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.106120962 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.131550293 seconds)
    (98/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085495024 seconds)
    (99/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.084229509 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105968148 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.132551592 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108040936 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122343782 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.130033461 seconds)
    (105/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100515459 seconds)
    (106/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091993628 seconds)
    (107/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.10678899 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124029665 seconds)
    (109/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132405761 seconds)
    (110/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.123152507 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.130596495 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16180973 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106027291 seconds)
    (114/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.109012821 seconds)
    (115/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.107036378 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085088433 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.083246019 seconds)
    (118/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.171673248 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.117556946 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099170381 seconds)
    (121/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082850262 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.107573765 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107399253 seconds)
    (124/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083200943 seconds)
    (125/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088552088 seconds)
    (126/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.171193094 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107124793 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083635169 seconds)
    (129/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.150460827 seconds)
    (130/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132355762 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085533305 seconds)
    (132/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082888179 seconds)
    (133/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083059753 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200675877 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100589477 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084454245 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129408525 seconds)
    (138/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084399078 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126110285 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.149314509 seconds)
    (141/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109108168 seconds)
    (142/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116487136 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082900742 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.176214226 seconds)
    (145/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.090219651 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10765938 seconds)
    (147/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.104910745 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.131587424 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085335131 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084678771 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128665876 seconds)
    (152/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.086660759 seconds)
    (153/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.092592435 seconds)
    (154/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.089360709 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.106982153 seconds)
    (156/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.112482074 seconds)
    (157/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.185192073 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084481286 seconds)
    (159/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.200902629 seconds)
    (160/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10357618 seconds)
    (161/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.084026277 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.130726198 seconds)
    (163/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.089990243 seconds)
    (164/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100385661 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085113966 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084679614 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.129197402 seconds)
    (168/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.084980469 seconds)
    (169/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.105825946 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083571904 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.108067233 seconds)
    (172/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114277935 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106148932 seconds)
    (174/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.08272624 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151614093 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.084248194 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083560746 seconds)
    (178/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08455533 seconds)
    (179/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.128827019 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.085524306 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108051658 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.109825625 seconds)
    (183/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134717787 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124122695 seconds)
    (185/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.089718668 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130654583 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108635186 seconds)
    (188/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085334261 seconds)
    (189/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085069041 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12320224 seconds)
    (191/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.084362078 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.084153588 seconds)
  done (took 27.538265907 seconds)
done (took 28.527360549 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.216653825 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129365547 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109563291 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109370775 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.2046061 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117570085 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.118399883 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.137792287 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114370007 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.104961079 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.124949476 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116791784 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108568746 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201391031 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110692688 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126998502 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102266058 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115437175 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.142164489 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119663087 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205171038 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103274247 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113423021 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123187339 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18100498 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101718338 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.133584527 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109385749 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.115085409 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.132966835 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10877898 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099987427 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.14251529 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11913043 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100449865 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132159456 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102323063 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090710546 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106435853 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.133525647 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116050658 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.107651043 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134025083 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103190411 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107903388 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.129996024 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102509173 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111652109 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.120930098 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110827562 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10403522 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118264888 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.130870338 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098796191 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.098733328 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126352576 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116497609 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100726107 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.141027481 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102427648 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1018029 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100320073 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.134242601 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102183327 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107248934 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.125237239 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109499973 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.109281487 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.131092757 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10524667 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102006134 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.106668715 seconds)
done (took 9.731973267 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108038406 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.157130765 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202380364 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212135737 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131192117 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141081019 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122247281 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.130083232 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143726403 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126335152 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158227058 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130931842 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.212941671 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113696898 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116359283 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.135538828 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116819862 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113119773 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.214582453 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123919026 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157052075 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11377215 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158717536 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.125437001 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108644223 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.163915004 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109056871 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110390777 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133585791 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11710481 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.123997233 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133998401 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107748857 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152132819 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123891572 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115307099 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140390108 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112473111 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106679896 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.130444963 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117221318 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125289432 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131802986 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118816851 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111109615 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.140486191 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117430261 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113904081 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.135705176 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11191436 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110520431 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159861057 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114871888 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.115086769 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.139897193 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115740474 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.114473358 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.14108057 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109170695 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115944584 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132210238 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110053404 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110177845 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154830709 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.108888794 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.139015308 seconds)
  done (took 9.6947112 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127639115 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135849891 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139400447 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116695087 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109387252 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123556827 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098899894 seconds)
  done (took 1.886403284 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102237414 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187600639 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209802915 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210208349 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180211827 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219429142 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145933919 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10203788 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132572146 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135583958 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188425324 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239791389 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.106319951 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141753859 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.188145055 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125767858 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.189234272 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126213997 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113913213 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211269171 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114839996 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127898207 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138198771 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101204945 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210126639 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103473155 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.265948256 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117800167 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106435033 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.140338369 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113400102 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203951103 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183887977 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.141410739 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10616126 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210009231 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.180927663 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137609546 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.197994701 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.132253875 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183428261 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.138200425 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117463424 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112824407 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.14131302 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.171394617 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145253063 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115473727 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11164102 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219405072 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.111102649 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21007877 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.109084974 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.111614262 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.137568348 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114561891 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146122692 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115411791 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.218396574 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117668779 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.2076276 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186383787 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.211125726 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209824985 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125149891 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209963743 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180007657 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111396024 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136958451 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114344969 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.211719854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111198654 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.137233375 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.17545397 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116774776 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213267391 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.21210772 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110298493 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113789875 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.131354857 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11173055 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.100870553 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.202258202 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110642458 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133756303 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121235602 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113684512 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.13795753 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107447627 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123031377 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.138386699 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11450505 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117872331 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.138563823 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119078685 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.216697929 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111912966 seconds)
  done (took 15.626457306 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10801393 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103504677 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106776728 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129043012 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103785227 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103405463 seconds)
  done (took 1.713339563 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143163318 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115175695 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148510606 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115750256 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164835904 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.221712927 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.226866861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111106606 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155531343 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127746503 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220224996 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.199114299 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.229656858 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117209349 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225025908 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119078178 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.227572033 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111251605 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149266637 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112256225 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116476817 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145018646 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112645874 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213487102 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117843009 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118234591 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13849504 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126780981 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.121131083 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.13772796 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118759887 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142817659 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11193191 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111982011 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.227617677 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10898309 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135316671 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124047135 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11576511 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144203497 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.201881839 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136233218 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124943226 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121905388 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136968248 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110879775 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12232687 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1377226 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.200174053 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.150215835 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123840302 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114939201 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146191231 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.125234798 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.109584996 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138314475 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124679957 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.2292751 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117731445 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109322181 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.141168123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120113109 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135489679 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123827131 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.114614579 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.146563658 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111927129 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114990473 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136711575 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117767564 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123900224 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.139138729 seconds)
  done (took 11.299717173 seconds)
done (took 41.252346897 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.620264 seconds)
  done (took 2.672920859 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.904512322 seconds)
  done (took 1.957435048 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.208887169 seconds)
  done (took 19.302886532 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.533407741 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.611778069 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991855227 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154258717 seconds)
  done (took 3.34486023 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.994564066 seconds)
  done (took 2.068646934 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293296531 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262595638 seconds)
  done (took 1.613249646 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.746221887 seconds)
  done (took 1.819922893 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.543305916 seconds)
  done (took 2.602638616 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.360484458 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174011655 seconds)
  done (took 1.607387684 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.629612763 seconds)
  done (took 1.703705716 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.903937974 seconds)
  done (took 21.979368473 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251982144 seconds)
  done (took 1.329366424 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288148814 seconds)
  done (took 1.36445031 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.638047382 seconds)
  done (took 4.714105823 seconds)
done (took 69.140992539 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115413408 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116114386 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115133158 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140063573 seconds)
  done (took 1.553153681 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123200209 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118681937 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120766964 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142254821 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122889185 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116784261 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14319324 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119313288 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11643107 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144447444 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118674538 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116469515 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146055601 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11745483 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114686543 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144662953 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122137537 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117497565 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.119034916 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.145663176 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119274503 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117891903 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.146806858 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121594228 seconds)
  done (took 4.114066699 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115069648 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106663087 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109239637 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132634683 seconds)
  done (took 1.547314152 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127279595 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130019234 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153049368 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127347037 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129041282 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153823182 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117764593 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113848197 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14119889 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128152652 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133804508 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155581291 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129389629 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118935155 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155638349 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112788211 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119509778 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155877291 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12592162 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125314717 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141926732 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125760152 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12195377 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150576126 seconds)
  done (took 4.275154316 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189553517 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125574948 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.165615971 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15933809 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.169373363 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112410939 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.136233936 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144931135 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12032872 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.114713038 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.142632134 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16132699 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144190072 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117739938 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113541915 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143359707 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127586652 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.118781301 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.181079027 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.118579385 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.119345314 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.153279853 seconds)
  done (took 4.162182505 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121135885 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108330082 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103104642 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.136894857 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120036055 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109671189 seconds)
  done (took 1.785993247 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104699876 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103761631 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101649123 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127607951 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108200794 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101598701 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101293063 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128273586 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102005326 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10185898 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125327069 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103114558 seconds)
  done (took 2.398227301 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.344988524 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106868502 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134701902 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108641179 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112739335 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105407567 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147942199 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106798791 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.266580264 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.107054184 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145503635 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195110175 seconds)
  done (took 2.973100843 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207432419 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141418798 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300676461 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368893199 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162921591 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185022578 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265527376 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189318434 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198718772 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134015426 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239845063 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152168328 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17318467 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170870582 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15894028 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160499766 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190932507 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187286147 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170539119 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195999587 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180777728 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161324916 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200981059 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144846135 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158402724 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159727522 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.140541483 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123471577 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19032782 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161467714 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194453389 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141649255 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162348004 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215573605 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233856201 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199885991 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284418103 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154810802 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177164837 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.205407148 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253881961 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136332434 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210883505 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148926792 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152675264 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175087542 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176913861 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.168101098 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153116761 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13809106 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202972332 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167556674 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202501781 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130680194 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311485665 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18997684 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.138387509 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194526286 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180352531 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211500099 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186309959 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12051652 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202582393 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17785261 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203245278 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134784423 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187931163 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119510386 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188615347 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187943768 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202710485 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180604382 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219788012 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12761945 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152888006 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196530672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172004883 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200310556 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177751527 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116632461 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146465229 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157690376 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123273264 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.218655197 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119104854 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219622968 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129329048 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342980827 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180699901 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179239166 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153583651 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183746458 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179798851 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14255905 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108901344 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16778464 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158426797 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179983688 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129036929 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177408199 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136609552 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124190616 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174294603 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.117757833 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180557995 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132685481 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186619242 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155797058 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124443805 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187804868 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141314825 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.176272866 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189237413 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18034592 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152257733 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131082432 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182978804 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181579135 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.12706157 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199116172 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205256836 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147625964 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131911753 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188985413 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209480671 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138151003 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208526333 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133806021 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12916896 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171868692 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155849307 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181731541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150508457 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152207227 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14588428 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219037846 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123120404 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160793807 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163719904 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155455898 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123560549 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133685406 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159271342 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136680615 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.165543154 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131035659 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148910045 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180412523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149429654 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179316171 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129613693 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201694355 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127300238 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.182518376 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142070792 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.141101203 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170225149 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206525934 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124942388 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223557331 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157711258 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214266422 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181717237 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127585718 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202845319 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122906705 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114893926 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186169611 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148106114 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185727165 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199389519 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183145912 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190987006 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.170686274 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145556547 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190538819 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172350916 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176779064 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140240225 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179954545 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160253556 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.115514947 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146324881 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123157613 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160024988 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127641062 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129472889 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199521761 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185565161 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180414608 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181337903 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134515448 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205295608 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121466403 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183911242 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.158754662 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162663544 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177756957 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204146846 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161265871 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164274848 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157272418 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.142534561 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122514254 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.126723009 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189282014 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129976503 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158872162 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13691171 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206886958 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167453651 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17144842 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219004267 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162660767 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215924811 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.114969879 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.188177643 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167013039 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179352809 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177939905 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160354948 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15582173 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201988489 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138401867 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211768349 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152242831 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185485797 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18309997 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.178779611 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127305449 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170947211 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155420376 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160103118 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162294249 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168026674 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126631386 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148019955 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.161066347 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120485813 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207569628 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137331537 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194310959 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154281038 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1940333 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120698918 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164864775 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155632916 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168931118 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113874483 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19184304 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179926833 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167784982 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153422358 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196912919 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127123209 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341281517 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185186156 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202603481 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130763036 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164526857 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157789112 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186255097 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156830171 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203262041 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136020882 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202318024 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153176725 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167422767 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126072811 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171469718 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147138381 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171879917 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129109092 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151734862 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.165911916 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205496813 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136384383 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153431202 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183505849 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.141211101 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175286723 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134848276 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22053176 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152001769 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198468902 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151397897 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189677859 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213963699 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120960629 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123587249 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.154562525 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177169317 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124209732 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184213894 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.199252509 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213379387 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16002679 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185166725 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135686921 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122140291 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180283322 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142469552 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215147562 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15982642 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133637651 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217086637 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135348241 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12557954 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185738863 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29721615 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142190492 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197558187 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12027948 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.289604049 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126315882 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128047433 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186823562 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166236136 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156364781 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177485145 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184928191 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138997021 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185678203 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134357383 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205868653 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186672651 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190851226 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197676098 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140206083 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183197998 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157702094 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200425052 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13910532 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.167124723 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158904839 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20663524 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178807852 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15522046 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154380507 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180014805 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153876532 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195662528 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133114407 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215246413 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124879634 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186878862 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134767287 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118778221 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183496603 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199750972 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128166013 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203857313 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156387032 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127394268 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151497502 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141115087 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180036806 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13423097 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.152862726 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181227964 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.151481074 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159694004 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201030587 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128926203 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152842181 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17126088 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125569766 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163450702 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139134391 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126485107 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.193180225 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178188523 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.154048657 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17619488 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187255244 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160698533 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181506751 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138203861 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690395694 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.123177711 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203926024 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145253664 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212661327 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146761449 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186082052 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15452535 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171877891 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16115999 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171718542 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236301574 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187822565 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154292593 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125980133 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166283497 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135714325 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156467653 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149487291 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181208655 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137813915 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130340041 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180881263 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137757841 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.169831467 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136486833 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206636953 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145221706 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21076852 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177344409 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161939301 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157609334 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197051069 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126614252 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18753881 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166742258 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166215365 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1426918 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.155725027 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135056008 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204591576 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121956098 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155256362 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184602349 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153720463 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183795838 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130673441 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186550606 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137493752 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180584219 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125017459 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147543602 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182607713 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129295718 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.14930765 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156764417 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180422996 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152923893 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121667473 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.19452317 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180346962 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.119190682 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158709704 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296493041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157335739 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21435434 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.147135649 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129914669 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169748639 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150593187 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179838932 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156068758 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.153626434 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127232856 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.126850534 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196355678 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151397859 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184414519 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171360415 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185105184 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215807842 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132184377 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281795533 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163902756 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153870933 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.153010182 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12627562 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137735885 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157852837 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138504837 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210071832 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176635206 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.179601438 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141602865 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158464604 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122588086 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126394485 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19224217 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148219088 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183738936 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139468854 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.139123316 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141578782 seconds)
  done (took 82.359877553 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166308815 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152195367 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16767951 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22208623 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196626028 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289408068 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230487636 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253879271 seconds)
  done (took 2.851781698 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120171788 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157588702 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140206813 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144470343 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117269946 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.449864126 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157400595 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120017702 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165578984 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157583006 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.141113875 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.614518351 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120890561 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142218995 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.105324307 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.144457625 seconds)
  done (took 4.164030666 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.383562315 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.579475182 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.064833537 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.276790446 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233589101 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.181101519 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.778034588 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193422047 seconds)
  done (took 12.857526484 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.14745508 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134645616 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.80899757 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.263125895 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150169398 seconds)
  done (took 2.68318404 seconds)
done (took 128.791687014 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121738343 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120119971 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120012362 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152549695 seconds)
  done (took 1.678201159 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.186626006 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096135498 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098007063 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121263529 seconds)
  done (took 1.674911072 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440745078 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095293327 seconds)
  done (took 1.735537702 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146822786 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142350703 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167415878 seconds)
  done (took 1.641844776 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141066311 seconds)
  done (took 1.318808003 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127316496 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119620266 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.237384379 seconds)
  done (took 1.665263686 seconds)
done (took 10.896525426 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12162771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413392002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432865427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130218216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711010748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426488707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.051613656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17285978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175764758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13567992 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132600821 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688698501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033884369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.357390916 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99231724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.385323152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696818759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111764231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142841106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113328491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.031398671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135225367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113726582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111409015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.693445108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.449775145 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109355316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.366211037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138743359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11287198 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.398656877 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138894832 seconds)
  done (took 17.39411155 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119217141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17266465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145525231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112679345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113154117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136952222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122451036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122276521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204564074 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109539148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15848082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110502988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114706553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109291087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162747396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109644654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111439132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140185444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117780848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111978436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159235391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109917221 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11096769 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140697413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11079961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131338231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137905214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122974391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109219952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141587228 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116037972 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110689824 seconds)
  done (took 5.287749488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15828409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179685955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147429282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146775376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185086599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112594532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193297666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175222951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203038034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112108116 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131808161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135761407 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151891403 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111850863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161694107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112007026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113681336 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13905083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119302522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112497939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158779533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110704933 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111762048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138890685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111270915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134117257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136731324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124842104 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110737961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14172107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117076339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11118391 seconds)
  done (took 5.600688813 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126155201 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126000932 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135085606 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163641476 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120336815 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125736608 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153748918 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121913822 seconds)
  done (took 2.262003202 seconds)
done (took 31.722566334 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133722172 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127195996 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127434856 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15033129 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194513963 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143525973 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126202235 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114102595 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150263026 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131293877 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110444897 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114406857 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156148159 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118863489 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.224785052 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123956219 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.227652995 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.196954384 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.142858825 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123524566 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11552428 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.230853391 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118049407 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.113456226 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.232123566 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114776684 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215710797 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118461636 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.116049966 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.142174677 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.195733925 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148659734 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114838126 seconds)
  done (took 6.090636934 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212234424 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.115867806 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148723417 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118829623 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117495605 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146863358 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.214878859 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146352296 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121436074 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119192802 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118002847 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.222332066 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122833359 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.139685294 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.118814872 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.116535327 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.243375176 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118001193 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111340759 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.097237274 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.142157543 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119151231 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.254990936 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112073643 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118914855 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.145457775 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120440309 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12201578 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.11616428 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.147333336 seconds)
  done (took 5.466595113 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126943618 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131944656 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135154714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214322179 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146410631 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.15758115 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141957338 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133383217 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171799135 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114037431 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12801393 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17828725 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130542218 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123233952 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145820055 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133370567 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136064319 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140993425 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121696148 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129679642 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.156479661 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131823444 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140846322 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.120289326 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.142876974 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120517874 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121894088 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156960317 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120936126 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125537939 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144535844 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117306175 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114310553 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176586433 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114638291 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125647615 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167023213 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126586703 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126486301 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.174654947 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118189427 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115820659 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.168752881 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17013096 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114163554 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155174768 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126041951 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126795632 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.138660603 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132588874 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156032689 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143558998 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135286892 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113007074 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138457671 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122987901 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113237758 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115224304 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.156572885 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117157911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136720414 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.149900171 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12509346 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114267185 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.150576533 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113335139 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111639869 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1155172 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169467596 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12109636 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148280515 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.141640397 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126808946 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125357435 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.152101584 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12523687 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112159112 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122871913 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154014314 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119281147 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124851136 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146019794 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116901543 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129811496 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.16349879 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128773317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12421268 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.155650787 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117914201 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114764849 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158701169 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116752747 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118782614 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125280371 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.14287077 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117130187 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125406172 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.154391463 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112872897 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138351213 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146183068 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114851314 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137770804 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146728938 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121505479 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123344652 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18344679 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115183992 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125468838 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125279959 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142844205 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123038468 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116482218 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.141662858 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132732402 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128380784 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.147996974 seconds)
  done (took 16.98500948 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.327524152 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.281995868 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212038669 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.314060813 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128398127 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.241126801 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.308687437 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.310837137 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113139292 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179593353 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166623388 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.278483876 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14412601 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142209931 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.31376968 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.366989828 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171866797 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.1522577 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180149072 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128883752 seconds)
  done (took 5.668066752 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135772259 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145814302 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163258206 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144058126 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120386211 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158106738 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113735226 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131927787 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151254308 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122673259 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.112283852 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158177351 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12363541 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127315826 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156824962 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154176688 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119682603 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117927802 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.166769157 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119357616 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107963341 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.16895 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122917333 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.160589134 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131632341 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125577831 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.112049121 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.14923359 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119181945 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.119438987 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.147094725 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134701478 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121283348 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.137958806 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127859491 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131493074 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.117565773 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.146799267 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116721789 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118124835 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.158206575 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124778492 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121239018 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104239103 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.160042494 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118056317 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124113889 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125903361 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.141486831 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131275534 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126398839 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.15479308 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122490812 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131990615 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.146305077 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132876383 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124233682 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.152838538 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12069076 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112470978 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111676813 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.147517435 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12006862 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124881087 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.15611321 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135032177 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13027493 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.14352204 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11935798 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11824792 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.146927839 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130108272 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135161633 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.149195703 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.1195148 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126220157 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118398099 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.129457436 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124322375 seconds)
  done (took 11.706316916 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141387303 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120338893 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132118151 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180371926 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12362116 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119487974 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.14955357 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136099986 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124500322 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158366852 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126000049 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127428554 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166804971 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125030349 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.11877448 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160772714 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125020417 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153202988 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161982449 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142541529 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124872251 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150647735 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128471604 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126291546 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173715664 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127072159 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140917451 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.153485797 seconds)
  done (took 5.144674073 seconds)
done (took 52.25106029 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.328487552 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.538323178 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.318235507 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.319014995 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.337561756 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.324821308 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.314501918 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.323208459 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.867942603 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.293556622 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.312431054 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.311212437 seconds)
done (took 29.803867324 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.412886937 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.81315949 seconds)
    (2/2) benchmarking "String"...
    done (took 1.619452968 seconds)
  done (took 4.641445112 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.306549654 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.307668532 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.53610219 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.306251237 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.312764328 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.323897323 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.321695026 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.31561464 seconds)
  done (took 16.631197821 seconds)
done (took 27.200348828 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.364307491 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.499234299 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.554000036 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.315981416 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.314807855 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.307627946 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.308873073 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.329163075 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.320090088 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.315919521 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.72618056 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.572631923 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.319697668 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.68428119 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.307757906 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.325656817 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.323734758 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.534058901 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.314077005 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.34009388 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.288539073 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.309397711 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.308126989 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.311820577 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.313686596 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.323463647 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.340822028 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.311431449 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.497328045 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.328248987 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.345497266 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.310226578 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.338331847 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.312194859 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.309314745 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.314693104 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.486056606 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.319060313 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.29410004 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.311714646 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.503672843 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.325466977 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.309445621 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.312398775 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.31397974 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.362030818 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.294074005 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.417413832 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.333593404 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.310561766 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.373866382 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.677330637 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.308578942 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.309253917 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.321539977 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.527564207 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.323165025 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.354693468 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.336100615 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.311331132 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.309323596 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.307024808 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.311168032 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.315422032 seconds)
  done (took 150.532496511 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.307374439 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.313539737 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.314098011 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.375016223 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.31303313 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.313150667 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.308175979 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.307343665 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.313729134 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.343709549 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.31395092 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.315972427 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.312729269 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.260922807 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.314031157 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.331168722 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.313449129 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.31738502 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.316960415 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.30903417 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.331523555 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.311887426 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.328473711 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.313099215 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.352418424 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.384129407 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.325047863 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.334454672 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.319058811 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.307792903 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.349041419 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.360507198 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.888222269 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.177256482 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.316773387 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.320687598 seconds)
  done (took 84.245097408 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.70785516 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.310436121 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.308348432 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.308867661 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.339478233 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.309570122 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.847403509 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.85123657 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.017066856 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.928145137 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.541103178 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.544827676 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.314274066 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39977489 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.319977214 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.311181365 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.323760049 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.335208729 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.314820648 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.309486279 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.844908322 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.325990001 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.331136525 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.477904142 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.32363287 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338655 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.70182638 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.30860967 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339029926 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.702696059 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.632787818 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.354329328 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.309079181 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631177508 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.422629634 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.310254461 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337690994 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.308979693 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.58657459 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.308872994 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.309902054 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.311231974 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926196283 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.311989533 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839491844 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.314047426 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.203217404 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.307862517 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.308737255 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.566877837 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.879627684 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.312274136 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.308612942 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.310468803 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.306639199 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.308432028 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.338541636 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.440210847 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.401630038 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.30942759 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.31053261 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336183928 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.308145475 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.307201487 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.306987691 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.315266049 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.361660675 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.532616633 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.34061653 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.81848884 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310956297 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.399880527 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422770035 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.30833693 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.306403898 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.305405288 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.30643487 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.414999206 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.307649454 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.677060019 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.473570665 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.323215582 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.450301154 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.405001227 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.308661014 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625280449 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.312236911 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.307847192 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978867628 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402244781 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.308493809 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.308265785 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.307795191 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.677978989 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816770132 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.479628573 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.312670587 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.656077351 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.311947837 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.692331913 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.801901142 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.928272513 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.311575058 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.307174357 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.415602454 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.471821409 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.323236487 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.306262411 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.444064988 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.311922588 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.307955725 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.307879505 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.308534805 seconds)
    (114/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.361561254 seconds)
  done (took 376.132674502 seconds)
done (took 612.117991306 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.199261427 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.148939909 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.288006276 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.160586724 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.141616114 seconds)
  done (took 12.145998368 seconds)
done (took 13.354242798 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.484358081 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490927699 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.367182892 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.489377873 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.341604544 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502777367 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.477301813 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.333676731 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415700182 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.384290452 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415859242 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.361134287 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.342875018 seconds)
  done (took 19.614582913 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.577798237 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.320204066 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379759313 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.584452005 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.356969818 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.561577294 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.62669127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.318515777 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.463509188 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.325327096 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.327477715 seconds)
  done (took 19.05140874 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.582490742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.319891417 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.373989342 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553386285 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.35315292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.581119536 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.610927815 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.320081494 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.458537211 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326979505 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326655848 seconds)
  done (took 19.015784792 seconds)
done (took 58.888681446 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.245102573 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.71995451 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.347641008 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.404702381 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.324659773 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.337255187 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.407475258 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.326678259 seconds)
  done (took 29.322793462 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.323942749 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.323795308 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.323734068 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.323796918 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.322990288 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.323487139 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.322957073 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.322079203 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.324976478 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.323792191 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.32345493 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.322501689 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.323088013 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.322361377 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.323064715 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.323454 seconds)
  done (took 22.384124769 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.325373061 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.321862438 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.322586526 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.321926845 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.322753338 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.32302558 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.325879006 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.322573838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.323163151 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.324110677 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.324000969 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.324362338 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.322741563 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.321711284 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.322000705 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.32539583 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.323419897 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.323622646 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.329565359 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.323328552 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.324838488 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.324872086 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.325031777 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.324071067 seconds)
  done (took 32.983351534 seconds)
done (took 85.900589578 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.316449589 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.324035625 seconds)
  done (took 5.851201226 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.3867234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.383652899 seconds)
  done (took 3.982313935 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.324818195 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.324704801 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.325569289 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.326628896 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.324692985 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.323674296 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.325695895 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.323230341 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.325206664 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.325159877 seconds)
  done (took 14.459540748 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.325792404 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.326589914 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.32439145 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.329766141 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.324636366 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.324464808 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.325856715 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.327678819 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.326116154 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.325123471 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.330093249 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.326712142 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.325174909 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.32844802 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.327857992 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.325467854 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.326143611 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.327826374 seconds)
  done (took 25.091034998 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.340386964 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.348274122 seconds)
  done (took 3.902951686 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.468867897 seconds)
    (2/7) benchmarking "second"...
    done (took 1.368472542 seconds)
    (3/7) benchmarking "month"...
    done (took 1.443621929 seconds)
    (4/7) benchmarking "year"...
    done (took 1.432280427 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.369017652 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.347456413 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.367503173 seconds)
  done (took 11.010325564 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.326718292 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.546017824 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.673537139 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.892297275 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.329053173 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.331229748 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.118740312 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.332443828 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.333024053 seconds)
  done (took 15.096764663 seconds)
done (took 80.606482135 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.317033328 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.339383389 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.330356004 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.34122175 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.669772702 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.351823336 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.322563063 seconds)
done (took 16.886542746 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.308372186 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.302303397 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.304846533 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.316267505 seconds)
  done (took 10.446248114 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.316859606 seconds)
    (2/2) benchmarking "read"...
    done (took 1.603215878 seconds)
  done (took 5.133986996 seconds)
done (took 16.796118653 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330452384 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.327879242 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.329856921 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.327724241 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.330112064 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.328321939 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.328135655 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.330824837 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.330040719 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.327934945 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.330969688 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.331028709 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.330885376 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331048723 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328612621 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330893103 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331108012 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.329752474 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329634879 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.332845187 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330554906 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331665135 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.330926446 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.330339819 seconds)
  done (took 33.137634684 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.33042313 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.327616129 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.332033705 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.332945196 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.32914957 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.331726652 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.331099911 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.330360578 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.330401658 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.331289722 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330680983 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.33010754 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.332051077 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.332318803 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332978229 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.332473408 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.333627749 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332433363 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332235733 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.332552177 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.332324215 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332365247 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.330569169 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.332567871 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.331300333 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331791079 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.333188007 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.330603939 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332916677 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.332251468 seconds)
  done (took 41.166710924 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.338305041 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.340199537 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.335885992 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.334305464 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.334326367 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.336209186 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.335244951 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.335693819 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.335919948 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.33476258 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.336103193 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.334012595 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.334586658 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.335120339 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.336063447 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.335265515 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.335942995 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.336182191 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.336258362 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.33585695 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.337754877 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.335771328 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.337862159 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.335786074 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.336449857 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.336666056 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.337070436 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.337296086 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.337196488 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.337288649 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.337743731 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.337661363 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.337649601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.33729824 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.337912574 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.336484356 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.342027937 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.341218906 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.339282161 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.338014536 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.336426625 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.338836348 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.337303644 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.338298472 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.339369776 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.33638748 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.339161548 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.339344616 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.33930776 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.338695157 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.337994207 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.339612418 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.337967573 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.339089539 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.338948016 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.340025518 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.339630097 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.337722089 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.338370739 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.339033684 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.339670991 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.340674796 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.338970779 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.33884689 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.340507019 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.339239837 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.338266517 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.340177257 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.339296287 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.338544867 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.338738148 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.33955744 seconds)
  done (took 97.536713576 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.338252444 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.337037511 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.336840062 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.336225136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334640736 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.338282447 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.336367902 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338715545 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336186075 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.337951663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339857936 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.336843674 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336739382 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.337990078 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33786498 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.338470458 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.338908318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337142669 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.3388311 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.338188113 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.339231571 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.338231437 seconds)
  done (took 30.651880722 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339516945 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.339913777 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.336596484 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.339496453 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.339020172 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.341160447 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.340546594 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341310899 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339369076 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338297819 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338041709 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339084385 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.340563022 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338724856 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341210084 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.339991843 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340308454 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.34060654 seconds)
  done (took 25.337242446 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.339242566 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.339595156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.340262744 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.340169824 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.338702976 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.340500927 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.33881872 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.340534315 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.34013876 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.338574796 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.341162997 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340161311 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.339980618 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340377235 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341138077 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.340170881 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.341430461 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339557387 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340298288 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339723181 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.339944313 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.342017019 seconds)
  done (took 30.707971695 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343092798 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.342936648 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.341381939 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.337256036 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.339581921 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.340270962 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.340010136 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.338805586 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.340415547 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.340393542 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340398803 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.336433386 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.337223078 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334936689 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.335090026 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334451852 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337046479 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.337287525 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335883863 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.334763579 seconds)
  done (took 27.99349351 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.337183834 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337937576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.338124176 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338264747 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337035757 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.335905536 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334930492 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.336584323 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.335075312 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.337133333 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.336320686 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.337013293 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333352871 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.33259039 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333981554 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334447244 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334334118 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334724604 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.331944701 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33383414 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330293486 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330032238 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.331651823 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.331344616 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.33103269 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328892262 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32956534 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.330607481 seconds)
  done (took 38.576478111 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32540973 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.324971856 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.322742354 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.322800347 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.323920637 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.325263616 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.320968605 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.319478379 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.321231103 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.319988425 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.322034152 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.321656855 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.322369787 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.322843819 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.319046062 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.317475078 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317321398 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.317375203 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316488363 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316926717 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.317554672 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312568774 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.313854763 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.311913356 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311609512 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.313093133 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312488797 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312645949 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315393179 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308565552 seconds)
  done (took 40.76237973 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.328295889 seconds)
    (2/2) benchmarking "in"...
    done (took 1.32839884 seconds)
  done (took 3.85736442 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.309228665 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310930804 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.309912855 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.306699607 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.306039742 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.307634132 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.308541526 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305599296 seconds)
  done (took 11.664950209 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.302681085 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.303868024 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.303151353 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.303401176 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.303721669 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.298102683 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30705256 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.307378144 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.299465445 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.294963228 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.298264733 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.298945933 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.298078223 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.297474163 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.296683865 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29850679 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.303791478 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.298047717 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.297629223 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.298514998 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298632957 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.293553132 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296952846 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.301368004 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.290319858 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.299829117 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.297912726 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.302228019 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290830151 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.295406318 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.293708773 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.297162664 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.295486284 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.294182435 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.295105069 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.294932589 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.298245197 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295053335 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.297227611 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298612978 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.292617107 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.290106015 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.28841291 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.290636643 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289366627 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.294579172 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.291763192 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.290111802 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.284611332 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.28801909 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.293872661 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284049264 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.290372928 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.288226587 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.289178015 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292149026 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.293285579 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.284044824 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.287502092 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.291971701 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.296910433 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.293514793 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287760645 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.289512769 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29082115 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.296310216 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291907264 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.290512887 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.28776437 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.287557426 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.290977582 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295365509 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.292478133 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.287285379 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285224965 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.284574935 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280854654 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286956084 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.289262054 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.285467059 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.2870355 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285190521 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286836352 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292112175 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.279424069 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.288439601 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.283290271 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.284164867 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.278679396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286432271 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.287201144 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.28369449 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.276481006 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.280174749 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.278543555 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.282662934 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.275759202 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279085776 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.280977196 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.281868931 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.281428726 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278499956 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.279950258 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282346374 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281400312 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.283371398 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.283314857 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275071094 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.283019171 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.283106092 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278714515 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.275807521 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.277463649 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.278516446 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27631955 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.278703826 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.281129052 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.276692093 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.280257065 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.278787319 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280931932 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.29014157 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.280208659 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.279906407 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.27744333 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.284276712 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276427106 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.273389912 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.278866721 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.275320563 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.277263465 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.272106558 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.280135452 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.270387762 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276938475 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270850593 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.275165436 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.276863761 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.276511867 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.271058503 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.276458011 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.271427453 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.27238182 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.274794511 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.277617933 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.272816675 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.279710621 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273659496 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.272567649 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.272895 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.275654381 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275748103 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.271959302 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.277794228 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.271261113 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277163398 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.272146588 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.276405485 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275527909 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.276588055 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275202986 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.270451727 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271739668 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.275778552 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.275649168 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.270653845 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.27541569 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.275320596 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.27530937 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.26897954 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.277384613 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26946122 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.27197656 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27918122 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.273580552 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.274751627 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.27178919 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27592882 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273115238 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275841361 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.27108341 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.272511076 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.275268797 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.278825965 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278264839 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276490714 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.276164611 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.269565678 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.268574105 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275229487 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.271387613 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.279365173 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280280424 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279031597 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.269913901 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.276364811 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.269416368 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.277431616 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.273776679 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.276264651 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.274711897 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27541749 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269524002 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275632095 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.271933904 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.275898355 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.26904688 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.275733053 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.274531963 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.275959746 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275578645 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.272133234 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272246977 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.274948013 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276432995 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277126956 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.269641929 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.273904008 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269665681 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.27068772 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.276164038 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.276131565 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.277294296 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.277624699 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272522313 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273626888 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.274644923 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.270827082 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.278429719 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273447926 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.274276513 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278993436 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275399871 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.271672353 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282107766 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276122378 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.271603101 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.275253962 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.27952272 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.275039007 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.273827473 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279275664 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.279729409 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.275568582 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.276895452 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270322396 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277427866 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.280184902 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278213476 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.270031312 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.276863964 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.271631159 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.27547208 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.271723938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.273778608 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.273079005 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274597361 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279771071 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.277391813 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273108009 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.278500639 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.276464951 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.27834409 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273419911 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281076748 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.278060084 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.276213616 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274978317 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.274710079 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.279362595 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.271603385 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.277397938 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272890071 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284325296 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288406326 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281719614 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.276327078 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.279163851 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279573349 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.277044154 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.274300039 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274249217 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274889321 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.274238852 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.274062992 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.278955291 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273610516 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.279504174 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276145018 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276997533 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.278616658 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.279100409 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.27325556 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.279885893 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.27856499 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.278414603 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.273235209 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.27813202 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276219198 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275893694 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274327824 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.273611171 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282034164 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278573788 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275207536 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.276052443 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.275093689 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.275496325 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.275966275 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.282154104 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276493584 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.28428593 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.277331879 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.279655365 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275813055 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284071735 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.284051151 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276085065 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284362304 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.279720389 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.273289248 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.275499748 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.282792559 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2825897 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.284541547 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.276573807 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.282621267 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280004322 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.280623952 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.282287494 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.280251113 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280911143 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.281128189 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284616394 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.281685357 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.27756465 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279377258 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.283451455 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.280888195 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.282601595 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275579814 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279983079 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.283442755 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.276693141 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278378966 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.277088815 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.28099738 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.282526834 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.282655815 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.281700697 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.281417429 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284308234 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282672759 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284844896 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.282541885 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.28372078 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285282075 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285240247 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286053405 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.278161208 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.283097354 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.281685832 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279542571 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.277884855 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.278453266 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.283633487 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.276906339 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.289292031 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.282528244 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.278997165 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.279886713 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.284501337 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27824931 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286421038 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2965801 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.279073353 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284810676 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.281440036 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.278552687 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.284847213 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.284354218 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.277243029 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.280001006 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284901765 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286482217 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278906459 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.284289639 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279094919 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285611279 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.28393387 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.284358855 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.282924365 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.283672552 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.279165992 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.286439895 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283406365 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.285164592 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279066878 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282721163 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.280923702 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.28922602 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288005106 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280375398 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286612706 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.284766668 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.280852036 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.281729277 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.285680471 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280595748 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287529997 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.280752902 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284327481 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.283097316 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.283935195 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.282250324 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.287363394 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.280518619 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.281788384 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287347944 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.286163986 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286959721 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.282466164 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.29003504 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.283418452 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280170246 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.287544516 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.281875288 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288657214 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284281399 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.284757184 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282716273 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.286543026 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.285553216 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286664565 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.280123658 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282094529 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.291184344 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287460598 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.287696639 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.285914266 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.290553915 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.28284605 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28467136 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.287241726 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.282245763 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284257879 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.289527828 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.284121148 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.284831057 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.284231979 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289164178 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.289737979 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.286064294 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283680561 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292869958 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.289252669 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.290244457 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.283474909 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.285363997 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.284061755 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.28867564 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.287944463 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283462056 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293342941 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.289767952 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289827065 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286171712 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285102931 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.284170495 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29125458 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288981945 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285684386 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289998245 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.284801316 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290856008 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290049072 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.287021278 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.283578098 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285331287 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287325476 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.287865952 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.288704862 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287824167 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287615577 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285942146 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291410486 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289691543 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.289413751 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.290144431 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283280994 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291121433 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.285147505 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.288695684 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287103594 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.285430512 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291982883 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290578633 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287790489 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.290827655 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.293190068 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.289008098 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.284488889 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.287295618 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.290169347 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292960222 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.291564261 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287008048 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.288823417 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.293878059 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292069279 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.292255937 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.286749252 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300263711 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.296428917 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286136583 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.287939141 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290320916 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.293342406 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.291261721 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.29140301 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.288723388 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.290504444 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.296088065 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.292870676 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294560718 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290602829 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.289203251 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294903743 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.289391015 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.291540709 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.291052563 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295816623 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.29548215 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292178717 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.300208066 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29587358 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295625985 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308463095 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292293393 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290013932 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.295458893 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287430829 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.293831684 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.290782841 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.295432943 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.294506431 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293343777 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.293194471 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.290215295 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292730751 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.291729925 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.299532927 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.292887977 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.288051778 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.289629202 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.294028277 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.29319225 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.298695402 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.294611779 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.294349489 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.296250587 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.29111855 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300764032 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301847245 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.295301985 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.294965223 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.293171612 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.294635162 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29347719 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294798861 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298970465 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.294414405 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.29615245 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.29067836 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295496137 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.295718361 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.289731598 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.289941147 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290125646 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.295042815 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.302235505 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305424029 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.298320724 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293345895 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297764817 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.297124756 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292472122 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296033239 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297322431 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.291181665 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.293904361 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29831868 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.296011025 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.297003503 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.293516876 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.301253051 seconds)
  done (took 766.542879195 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296896129 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29598084 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294642123 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296176229 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297190543 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295670819 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294940913 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297319207 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296039519 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296686374 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296609023 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296221705 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296026369 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297076888 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295649356 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296163803 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297151438 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295423168 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296300224 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296343676 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297040884 seconds)
  done (took 28.411031205 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.298621587 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.296434155 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29747918 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297927041 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296807283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.298099882 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.297975678 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298327467 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297982996 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297535023 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.299697831 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298242794 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.297318547 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.297300008 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297430232 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299678678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.299148972 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29836193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.298609261 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298626437 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299760316 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.298656749 seconds)
  done (took 29.750278655 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.300140794 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.299899138 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.294026935 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.298241822 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.299192428 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.298418218 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299825936 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.299357813 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.299060056 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.295812649 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.294256904 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.29581308 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.298242091 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.303209855 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.297390319 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.303384635 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.300406667 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.301152852 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.300679301 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.300217393 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.302625856 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.303212063 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.299723036 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.295177921 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.302697336 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.301916252 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.30039036 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.300904253 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.296372538 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302763005 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.3019331 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.296856752 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299611817 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.298396907 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.297881391 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.3037455 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.302241125 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.301328874 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.30348396 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.302811361 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.314716399 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.301118816 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.305089829 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.304921307 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.301762496 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299266021 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.305514297 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.30215324 seconds)
  done (took 63.620492043 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.303368103 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.302775073 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.300435635 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301696352 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.303510183 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.303420447 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.302440497 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.302205881 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.301093043 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.302262504 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.303306772 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.300971552 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.300973609 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.303548558 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.303929696 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302824753 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.302030168 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302186374 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.302538603 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.302168784 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.302081242 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.30331232 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.303607558 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.303377303 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304201239 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302090229 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.302801664 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.305362264 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.302724956 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.303302658 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.304290303 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.303944152 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.304608185 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302177107 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303393245 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.304743702 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.304236223 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.304037116 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305409632 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.303948486 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.304999827 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.306369538 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.305335661 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.305422528 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.304679225 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.304555989 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.303253714 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.305638593 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.305425176 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.305560357 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.306562892 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.30521785 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30567736 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.304845441 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305662689 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.30658462 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.305723397 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.304366609 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.306023821 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.30514435 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.305867316 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306270969 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.305631812 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.306518702 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.307116186 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.305603347 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.307160244 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.307380161 seconds)
  done (took 89.876465209 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306569422 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.307042984 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306622835 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307718572 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305615898 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.306682886 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.307880519 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.306703578 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307446074 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.307088394 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307083322 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306214635 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.307322511 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307247159 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.308164901 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.307955109 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.308292644 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307628472 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.309285771 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308364819 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.307224011 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308020417 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.308111395 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.3074497 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.309252657 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.308670745 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308589446 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309852337 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307990427 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.309338841 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308818188 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.30855849 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.309673166 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.308310194 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.308827754 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.309293199 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308221431 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309098604 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.309849282 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.30942151 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.309933337 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308964722 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.310329554 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.309925809 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309935809 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.309348357 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.310372793 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.308922979 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.309314329 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.309758174 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.310114085 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310192801 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310148911 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.311007748 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.309844142 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.310637096 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309772672 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309893726 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310791822 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.310510678 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31174977 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.311747085 seconds)
  done (took 82.344474718 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311366619 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310833454 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.309964266 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.309561792 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310327784 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.310223932 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310940403 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.311201746 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.31063824 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.311184485 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312752959 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312028729 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312105601 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311740419 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310779861 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311302914 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310572151 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.310698884 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311135926 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.310940752 seconds)
  done (took 27.422397939 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.309940795 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312613897 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.310984304 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.311205429 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.31149869 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.310755684 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.311633505 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311919348 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310762167 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312504183 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311828776 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313539483 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310869051 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310650818 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312576753 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310960682 seconds)
  done (took 22.186481901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.312534139 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.31223535 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.312092757 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.313321886 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.312306469 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.311888186 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312795258 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.311275345 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.310791585 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.313323914 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.312819323 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.31416518 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.31345449 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.312217721 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.312316259 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.313711023 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.312257329 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.313281503 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.313840764 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.314120074 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.312497578 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.312499073 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.31328726 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.315258617 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.313120007 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.313562016 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.312740574 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.312336007 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.313468235 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.315255229 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.314360968 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.314159627 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.313854707 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.313446851 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.314499185 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.314538857 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.315158188 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.316004631 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.315523585 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.314788835 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.315223217 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.313602227 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.314639538 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.314883731 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.314948391 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.315323952 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.315277079 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.315880069 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.313131753 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.314493317 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.316128444 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.316973653 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.315749171 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31578281 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.315304481 seconds)
  done (took 73.466294559 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316664195 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.3171584 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314194952 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.316297026 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.316644073 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.315298244 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.316216155 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.316513966 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31447702 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.31677003 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.315815057 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.317553593 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315194949 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316905776 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.315774295 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317689167 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.316743053 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.315464766 seconds)
  done (took 24.897626694 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.317858206 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.31577379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.317589906 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.316676857 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.317209038 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31809562 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317660418 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.318066685 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318108125 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31587927 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316474388 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.319477235 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317409683 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.318249357 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.317096499 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316706148 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.318490039 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318747019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.315681208 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316500448 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318184696 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317718942 seconds)
  done (took 30.190391159 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.312395301 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.311549611 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.311413682 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.326368123 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.325025888 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.312529021 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.31189748 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.311939092 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.333159006 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.351094883 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.346587091 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.32339715 seconds)
  done (took 17.084391133 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319395021 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320244099 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318754244 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319667523 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320462512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319211583 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319554888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318573044 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319899418 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319205514 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317772839 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32028354 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320137764 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319139793 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319446623 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321292607 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319286261 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319540377 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319398179 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32255596 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319709168 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320273085 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320207042 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318596122 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320372594 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320686664 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322436577 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320527482 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319512836 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321246612 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321777693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319022009 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322201912 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320681991 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321117534 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321810464 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320861833 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323223264 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322130577 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319838428 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322246733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323291117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3223484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319810657 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322499786 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320630375 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320283845 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320727933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323209494 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324431235 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322646801 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319562449 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324029821 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323030375 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323801709 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32447441 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32227959 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32117976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32288695 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321890086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321129684 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323832985 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321303393 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321940445 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323343411 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322527339 seconds)
  done (took 88.398644547 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32175998 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322321068 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32344891 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322549123 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321548006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322564063 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322741194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322253567 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324262606 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322997573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323497773 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322995715 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322756843 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324567294 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323212131 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323480188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323297261 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324366178 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323218064 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32529494 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323178518 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323885789 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323911204 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322982908 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324351004 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323971878 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324810395 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322896137 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324323618 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324193978 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324238629 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324729116 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32399884 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.324076429 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324961778 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324721866 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323944302 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324012266 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323950216 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325515432 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324344936 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326645967 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323727457 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324046836 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324921467 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325844285 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324840264 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324537327 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324945687 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324856561 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323965776 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326163147 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326019399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325356686 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324230903 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324507786 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327113264 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326162186 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326230338 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327055933 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326186075 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32595492 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326590076 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325994611 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325450939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325615988 seconds)
  done (took 88.621511752 seconds)
done (took 1815.422150948 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.488217755 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.439508353 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.319652815 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.335589198 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321281259 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.346051949 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.331734616 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.32010608 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.322286775 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320547189 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321193651 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.512400692 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.377914572 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.323068685 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.322993037 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41868774 seconds)
  done (took 27.036826195 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.345601144 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.329833897 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.435396924 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.331266836 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.351135146 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.508047045 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.385881463 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.326896553 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.487986165 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.348573942 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.330585521 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.35179542 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327209992 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.3302246 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.349004829 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.506776845 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.567330569 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.323414684 seconds)
  done (took 29.154396208 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.745439708 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.335991045 seconds)
  done (took 5.298979255 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.347591645 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.326356958 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.327582066 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.325645091 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.319121346 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.324854975 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.326850227 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.323545946 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.328541913 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.450138198 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.333347243 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.339464245 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.327993893 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.32755029 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.331423977 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.370519555 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.473304101 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.328916864 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.328081893 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.330128534 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.323823882 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.421138432 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.365155452 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.333216334 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.439882633 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.330360561 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.328747001 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328906527 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.449965219 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.327620527 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.322267375 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.320448342 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.322902812 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.325603333 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.791009694 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.322432943 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329857856 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.345346369 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.324301224 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.463628953 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.323212108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324939441 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.314117025 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.797978654 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.439066695 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.437539191 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.319428538 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322806776 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.322825113 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.387201244 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.326429522 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322698174 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.377298656 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.137317185 seconds)
  done (took 84.783381745 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.35045327 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.314079097 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494255501 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.335349906 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315438285 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.31561183 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314264961 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.587448531 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.370215182 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328990097 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.601228863 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880874005 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321511897 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.385767749 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.308106321 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.403320626 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318193821 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.315346802 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.316901445 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.320514237 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861335025 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321560922 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.318297991 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.449193753 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.353484868 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819496817 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316528482 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.316779553 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.335899953 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.317883898 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835393405 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.32532863 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.414800961 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.319711678 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.586664606 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.686467441 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644945286 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.325520181 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.341890838 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.319752242 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.326417305 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.80388841 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.663424703 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.316970908 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.320074143 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810307965 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.317735757 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.320679546 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.327637649 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.571324248 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318212325 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.317482623 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317067513 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.319346382 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.318831135 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.365589355 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.325397513 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823232323 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317084081 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.333614816 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344414086 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.319004226 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319307124 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318618162 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.337314507 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.667853903 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.505300711 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318840855 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.666169803 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.828234451 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.323643332 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.89805022 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.322505892 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.326524843 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.565119283 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333970077 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.319519116 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813392609 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.334351216 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321021297 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649823628 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.320161461 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.612209899 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.335414823 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32075279 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89411144 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.336123068 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.336054784 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.320432373 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.323807197 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.32004123 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323949606 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.593494807 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.345642355 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.319978129 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.32241791 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.341817725 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.321117078 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.335829253 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326673628 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.89369769 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.333041127 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322523388 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326928618 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321087305 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.327218358 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.321546879 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.325595785 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.594929379 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322183855 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.343601548 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32390758 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.322449197 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.331432688 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.406448989 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.328747826 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.620727458 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.329059209 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320898802 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.327219836 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324491102 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352566309 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324525924 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.328124346 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.191939517 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.584549804 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.34196252 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.325187229 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323395468 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323679514 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323548591 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324189835 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.382564555 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.326535496 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108260549 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331506738 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.348954877 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324280821 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329260679 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32361149 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.325166748 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326039954 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622189462 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.596044308 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.506078365 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326695736 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.33405127 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.087802964 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.33217934 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50417324 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342668178 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325700095 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573267342 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.532523396 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.326610114 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.325595473 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.329353281 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590733371 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.324827951 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636133384 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.873570909 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.32882297 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333623155 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.114671368 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.040402072 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.331067391 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.329188 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.611504952 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.344203282 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.325683386 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.325030904 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.327499009 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.328049064 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.328619864 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.328285401 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.327681053 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.327657347 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.63049709 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.517984107 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.342828889 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331876491 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827505943 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.361729367 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328655802 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.330168192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.328187687 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.327408989 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.426198397 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.33056233 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.330256214 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.329263892 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.333704874 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841197028 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.329882712 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.330367361 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.518510971 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019044346 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.331946335 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.329217037 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326570326 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.256496098 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853247568 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.400185025 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.627105774 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.336247585 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366183225 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.329397508 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.335208976 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853795677 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334001715 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.327179083 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.989310061 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.332928692 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.824566398 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.329065677 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.329374777 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915528063 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.332684347 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.333984373 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.329868095 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328508044 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64822781 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.331878308 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.377415205 seconds)
  done (took 496.056970118 seconds)
done (took 643.547077771 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.3285856 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.335173399 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.316687437 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.334181678 seconds)
  done (took 10.539328931 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.369380849 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334814614 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.342959084 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.333690785 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.347198338 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333173052 seconds)
  done (took 9.286855341 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329552286 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.334965326 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.335169987 seconds)
  done (took 8.225086194 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.546067934 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.35134271 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.702387884 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.342152935 seconds)
  done (took 9.166769217 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.344143355 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.343426352 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.342705378 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.347173254 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.37229655 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.372979161 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.347506716 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.349275111 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.371158846 seconds)
  done (took 13.414912062 seconds)
done (took 51.859031514 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.312499934 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.053108015 seconds)
    (3/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.545732042 seconds)
    (4/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.187228163 seconds)
    (5/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.457563951 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.400783785 seconds)
    (7/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.313929011 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.469949194 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.029396923 seconds)
    (10/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.319981375 seconds)
    (11/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.094158679 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368504113 seconds)
    (13/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.402896262 seconds)
    (14/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.365919304 seconds)
    (15/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.313212523 seconds)
    (16/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.551814357 seconds)
    (17/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.433464861 seconds)
    (18/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.400007408 seconds)
    (19/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.373049238 seconds)
    (20/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.175946995 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.424037582 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.512753377 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.315597995 seconds)
    (24/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.445006983 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.484710376 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.320391504 seconds)
    (27/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.143779224 seconds)
    (28/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.318518185 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.586889094 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.318234476 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.419313036 seconds)
    (32/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.369837531 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.3363825 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.184048681 seconds)
    (35/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.416270449 seconds)
    (36/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.315394225 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.320029035 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.396279467 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.332475863 seconds)
    (40/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.426180553 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.432186414 seconds)
    (42/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.455530093 seconds)
    (43/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.316642292 seconds)
    (44/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.587054579 seconds)
    (45/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.146862536 seconds)
    (46/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.04878175 seconds)
    (47/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.228915033 seconds)
    (48/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.336794498 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.43934412 seconds)
    (50/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.31958691 seconds)
    (51/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.319351019 seconds)
    (52/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.637482931 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.454091159 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.34304035 seconds)
    (55/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.291763615 seconds)
    (56/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.338952598 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.097680779 seconds)
    (58/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.32043785 seconds)
    (59/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.534102765 seconds)
    (60/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.415948006 seconds)
    (61/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.369663032 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.148339129 seconds)
    (63/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.141436622 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.369626415 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.31532772 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.318731937 seconds)
    (67/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.387094941 seconds)
    (68/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.395815807 seconds)
    (69/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.317392919 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.426175805 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.434016772 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.36292051 seconds)
    (73/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.341655569 seconds)
    (74/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.425838967 seconds)
    (75/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.508581272 seconds)
    (76/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.321586976 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.495980765 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.497920742 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.391464094 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.634041553 seconds)
    (81/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.321459228 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.564801169 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.429877796 seconds)
    (84/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.40426397 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.448435914 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.320905371 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.422449854 seconds)
    (88/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.55119208 seconds)
    (89/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.078909395 seconds)
    (90/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.320030375 seconds)
    (91/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.340407812 seconds)
    (92/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.522636702 seconds)
    (93/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.377643303 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.457455679 seconds)
    (95/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.321097663 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.369932027 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.44379008 seconds)
    (98/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.477901817 seconds)
    (99/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.321006172 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.443499643 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.600776104 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.594748678 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.403829639 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.457846186 seconds)
    (105/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.514857783 seconds)
    (106/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.330925065 seconds)
    (107/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.400063713 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.404165522 seconds)
    (109/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.427225527 seconds)
    (110/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.406020669 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.490272447 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.591083186 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.342060652 seconds)
    (114/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.326656108 seconds)
    (115/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.372015862 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.320040451 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.322939681 seconds)
    (118/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.358408291 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.488003023 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.454912152 seconds)
    (121/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.001882501 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.478064994 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.379903297 seconds)
    (124/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.468929216 seconds)
    (125/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.32418635 seconds)
    (126/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.375383489 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.445584433 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.501129801 seconds)
    (129/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.513983759 seconds)
    (130/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374597913 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.520555962 seconds)
    (132/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.406939564 seconds)
    (133/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.490805015 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.227884157 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.4522973 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.085139882 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.425360991 seconds)
    (138/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.324929076 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.472319299 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.432921924 seconds)
    (141/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.369222834 seconds)
    (142/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.354126775 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.490473933 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.487117368 seconds)
    (145/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.564999154 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.344856519 seconds)
    (147/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.373896835 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.397864895 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.33809138 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.320442406 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.508043708 seconds)
    (152/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.321631326 seconds)
    (153/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.679584432 seconds)
    (154/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.567053907 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.451049374 seconds)
    (156/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.55677973 seconds)
    (157/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.456068533 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.036006328 seconds)
    (159/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.158171819 seconds)
    (160/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.365101374 seconds)
    (161/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.996105819 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.341290508 seconds)
    (163/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.474541177 seconds)
    (164/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.419956692 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.342242517 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.323123141 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.407701806 seconds)
    (168/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.493498289 seconds)
    (169/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.371153584 seconds)
    (170/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.444451953 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.143710791 seconds)
    (172/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.427337797 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.37488734 seconds)
    (174/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.445181121 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.466365537 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.523227091 seconds)
    (177/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.445752452 seconds)
    (178/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.194696101 seconds)
    (179/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.399277444 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.289163472 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.48144291 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.425584228 seconds)
    (183/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.404474507 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.539072906 seconds)
    (185/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.464286353 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.471290012 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.50109594 seconds)
    (188/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.32555737 seconds)
    (189/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.330538149 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.46018709 seconds)
    (191/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.434596406 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.477921617 seconds)
  done (took 340.889403782 seconds)
done (took 342.117248913 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366689652 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.428517868 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.349904336 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.349776421 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350623683 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.354031289 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.373061408 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351733217 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362216701 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.362450206 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.354309918 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362175137 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.363950402 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36119106 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.385343012 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.351429535 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.351365038 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358375784 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.362259394 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364571763 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354219032 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355229104 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.372690413 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.351849998 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360325079 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359226213 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357703544 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.352615665 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.360261492 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.363015175 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.348163524 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.362128297 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.3645579 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.362273444 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354234489 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359397755 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35281621 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.4296259 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.36841989 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.361930626 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.357777993 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.366287926 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357755663 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.357868193 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.361327532 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373131284 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360979949 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.36741434 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347806034 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.352171601 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374434159 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.363672366 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358813273 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.347162035 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.352006222 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.374050933 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.362450823 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370158546 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.358984247 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355212602 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.388512132 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370509102 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.364514351 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362590706 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.359153704 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.366516955 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.362226658 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.367481699 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.358541808 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356750008 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356324247 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.35957785 seconds)
done (took 107.347365827 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.487113499 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.352642518 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.498062909 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360997459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.51736464 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.488629613 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.359278185 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.359563159 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.358781934 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.185789043 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.35996131 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.359237832 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.356155916 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359049338 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.487107638 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360847932 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358541749 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.076114491 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.362224584 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.500417867 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.3528368 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359865941 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.361125161 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.187931811 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.354731599 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.351868572 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.500218804 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.362390938 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.07709378 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.353201279 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.354178814 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.076708649 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.503154013 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379650139 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371310245 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.36999521 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.519718371 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.365419582 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.485834837 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.484371436 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.5012784 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.401622655 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.352000184 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.357784001 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.366399528 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.363099097 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360987618 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390229413 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.356763849 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361784102 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.07809968 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.372790879 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.371703649 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.361744142 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.363058752 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.383162788 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.362648668 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.364784805 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.503269171 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.36576381 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.48524541 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.190889834 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.1894111 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.364066706 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.356829678 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.363152022 seconds)
  done (took 110.25138376 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.42604577 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.435812355 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.4672436 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361858843 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.409747062 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.467174758 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.360665963 seconds)
  done (took 11.173646406 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.364897335 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364557235 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.409048327 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.40806731 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.363355842 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.514105379 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365325408 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.369507961 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.364470103 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.411034611 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366602016 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365845139 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.372513924 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.35907389 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.407883173 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.370799985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.474857368 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.361011536 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.366064554 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513804834 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363971514 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372709588 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.410738823 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.371052379 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368286398 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.365254537 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.175945461 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365848469 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364420835 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.367748485 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365422702 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.413206217 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.3676321 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.359518175 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366599313 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.477182436 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.366761623 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364138898 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.369962006 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.363663947 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.37057202 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.366521843 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369868037 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.367045829 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.369514636 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38445561 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.369216733 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.367672443 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.367525342 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370878983 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.411259198 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367663075 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.367140071 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.366733204 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.418673038 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376234679 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36878711 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.364763755 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370379666 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366294442 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.516925315 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.411249863 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36994487 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.410054085 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367969719 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368483324 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.372062794 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.368383859 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455837942 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.367645483 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.410613699 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.36801384 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.543608221 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.3871103 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37324876 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.365520425 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.365725853 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37007415 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.359248145 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369282435 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.367550508 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.364863382 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.369583581 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368361529 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368283631 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526940704 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47294516 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.368780921 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.376982279 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.371606554 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.368854723 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416371973 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.369953016 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367827105 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.417195232 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.478951693 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416371918 seconds)
  done (took 140.675539452 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.37660211 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.377410579 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.367310907 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391446358 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.36538458 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.364550501 seconds)
  done (took 9.493494569 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.366193853 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.371974227 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.370124303 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.37055997 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.371371751 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373369711 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378143486 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366948764 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.373226708 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.374309011 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375713906 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.376147668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.383731361 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.371563691 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.374566582 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.373682612 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.377405626 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370432359 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372323554 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37209844 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.366413825 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.371773655 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371957376 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.368136886 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.379254639 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.373926353 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388053473 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.37611292 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371898133 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.371708894 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374194159 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.37470227 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.369235216 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.370978569 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381700782 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.369350305 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3742914 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.378766887 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371453715 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375141462 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381378985 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372362319 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.374698944 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380392683 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.368929519 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.371201163 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382549689 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390538508 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.376562878 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.379282002 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.380220706 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372955448 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.376884756 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.38011482 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371087282 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372345905 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.384342942 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380152462 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.374100865 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369295464 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376173334 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377267476 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370542643 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380523507 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373973666 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.380784306 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370368008 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376744526 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375320282 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.373788951 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.381174832 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.373655638 seconds)
  done (took 101.246403419 seconds)
done (took 374.080732252 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.599851609 seconds)
  done (took 3.853814714 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.399920507 seconds)
  done (took 3.654130145 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.780750604 seconds)
  done (took 23.038193628 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.396305439 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.461505136 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.374254896 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.373081731 seconds)
  done (took 10.858781513 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.665507592 seconds)
  done (took 3.920400037 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.370626062 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.367830849 seconds)
  done (took 5.994218926 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.57023551 seconds)
  done (took 3.825266671 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.571396363 seconds)
  done (took 3.827541039 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.394145283 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.384715294 seconds)
  done (took 6.04183213 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.357985196 seconds)
  done (took 3.612930808 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.706869802 seconds)
  done (took 21.961915658 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.377658758 seconds)
  done (took 3.634621888 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.419604102 seconds)
  done (took 3.674223463 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.924385534 seconds)
  done (took 6.180312382 seconds)
done (took 105.334024015 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.364116794 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.370330756 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.371355566 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.37047495 seconds)
  done (took 10.732125614 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.432369721 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.430715121 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.436572168 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.431496854 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.430564668 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.431347247 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404755913 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.405021586 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.430516544 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.431591582 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.438097755 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.431865873 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.431258983 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.404755332 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.430637467 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.438588777 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.433294944 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.437514352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405461205 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.431068335 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.38051447 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.432700563 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.43198788 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380435582 seconds)
  done (took 35.431318488 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.888587627 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.443338564 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.525302256 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.423248866 seconds)
  done (took 7.53809862 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.46029503 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.46189266 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.478462278 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.515908108 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.544446316 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.478729015 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408539634 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.401649668 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389773717 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.46270026 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.513144758 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.452848259 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.549981133 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.382465134 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.667183101 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38133459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.381530731 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.462641209 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.514083123 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.530373725 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.381352177 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.459788259 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.466041782 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.451377387 seconds)
  done (took 36.454683361 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.387271483 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.399723993 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.381064068 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.394946299 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.380202016 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.38159005 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.381854702 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.386568924 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.380912599 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.380731488 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.38137174 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.395355636 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.38129003 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380568377 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.386371765 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.3817629 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.383148177 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.387716625 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.389510356 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.38193408 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.382483809 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.388946958 seconds)
  done (took 31.734985553 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.369772839 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.369155795 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.720881401 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.626259881 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.369951895 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.373448378 seconds)
  done (took 14.088992381 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.445077195 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.585211352 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.381797671 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.72454744 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.814209242 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.381488535 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.376212356 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.620291849 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.921074035 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.915597296 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437726011 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.446321567 seconds)
  done (took 20.310800802 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.374531895 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.374741435 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.378679593 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.390029407 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.429431941 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.380210807 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.382927582 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.370245711 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.436477294 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436346565 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.381690942 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431799041 seconds)
  done (took 22.028990017 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466253249 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379249943 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377358915 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388303624 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383413192 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219072563 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404896892 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.07903344 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.382529839 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652431531 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385389021 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471902173 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631950008 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380169864 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384286795 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35640491 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611726249 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88649574 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38385146 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390602945 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416328225 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379363574 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39379336 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596746167 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22249399 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379727471 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642308542 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380515404 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668955605 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645446065 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647582916 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380851239 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653853577 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013040658 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475974943 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590430086 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38150285 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402056237 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.372009097 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.382517211 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389576035 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381612043 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645700081 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382266401 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381069956 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379694463 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088685706 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.386606293 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.379597136 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380119372 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648658392 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480135272 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385849086 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382481328 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43224379 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386361456 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.387033323 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508173431 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944176221 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382208111 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389602954 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.387574618 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383763946 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387698535 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015907749 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.392224015 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386405159 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387052731 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38246412 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38283072 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426000626 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383094083 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402244826 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383512657 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109981096 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393018614 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389274977 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954103215 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388879131 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.387025727 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613682483 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382467548 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3837585 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.382805735 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384440721 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084787252 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392834695 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.369227026 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430320729 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.079553935 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593866076 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401977257 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414841596 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605999794 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.35929103 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383858912 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.387085177 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389525676 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405842699 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.085579446 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383366226 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.388794004 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642511926 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594367746 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392446165 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.368881565 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865090641 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38408787 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.410270902 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394687262 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600625048 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.989619649 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659466325 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388410657 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421815292 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384684333 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139696008 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389569075 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395579318 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397422051 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663518625 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.173066229 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390914578 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454059897 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39128443 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386388592 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38589114 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392566879 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386907525 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.593191678 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391509454 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.659421611 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.389171352 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387490814 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.399567718 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392098127 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.408909516 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60764368 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386538715 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669994546 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38900461 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387726328 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386712332 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.608949059 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.385773644 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.393030983 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648781483 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395343705 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401655595 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660894554 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418455993 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496429777 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416564376 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.395437948 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645658688 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.391966284 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.393541675 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387866245 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394405621 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389707692 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.395450391 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401231531 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00332839 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368654219 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39171865 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390476944 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40297963 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456940456 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395671925 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60219978 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.385840555 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401458352 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.399448943 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.401702454 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616101362 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657345936 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.402087124 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470533074 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.862886665 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998732837 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406100839 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.390056068 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.388338243 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.387939687 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389096053 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390605593 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389776362 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601664377 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660255127 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392566938 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00757711 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397308668 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390747553 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.40203092 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657286183 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.39738733 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391613614 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.389722164 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400703737 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39656182 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66588064 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528856538 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.403738761 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391563929 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909283924 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398174755 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391477628 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391822862 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423526283 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390641009 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231491844 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652258297 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401179259 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664868217 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392811002 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.432351174 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.389581067 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399076138 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397274401 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.411143464 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399665555 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.603832853 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391541218 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398837722 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952269667 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141462473 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951740141 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401140812 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.408609171 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398529675 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.097848061 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392247158 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393094969 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629922047 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097816334 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392620684 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867256537 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.391255927 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150989645 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666005371 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625459394 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394619016 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.403113155 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668009754 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602890345 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425972265 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392839106 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399695066 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.369514723 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946809627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403163099 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472255752 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095995354 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402198653 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399096434 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.460076533 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.408577649 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785480307 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393699598 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394416088 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399211346 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398697835 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255206709 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397021474 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395726389 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027252136 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400187245 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.874784389 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395455518 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608096793 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665328766 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.657957424 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.407111018 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.393407074 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.652003354 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662926081 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39532886 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39533069 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965769671 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.330179769 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.401834103 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397407724 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154285585 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403924736 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695448818 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.408268848 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.405136319 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40132467 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397054495 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396663255 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.395188353 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40302897 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371897857 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907884117 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.411493568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402155297 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416109233 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401969748 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650090971 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.410414366 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010102897 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629728571 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412831339 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431776935 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.401942685 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411098734 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.37733612 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397408381 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397708878 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481584683 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622130281 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398531284 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.376814984 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411694998 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611549622 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397584891 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397900644 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62647664 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.397730368 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.419460201 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14268843 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429328427 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398199857 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421253633 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394087497 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443951728 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465003261 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612061521 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.667732071 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669265827 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785525756 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401256636 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404714593 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.412970257 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495030994 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403101801 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.411900189 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.17787401 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015478366 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148756357 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.014358051 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67463179 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400845418 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407067828 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399167465 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534425088 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398567847 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67366399 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399446733 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.402423537 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426055927 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400014565 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426129361 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614271915 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676796514 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399847931 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410007664 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405308988 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.400356216 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674226301 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.611773251 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915511788 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980845344 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406090305 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412394955 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109818277 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674970467 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400785954 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40244388 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402966228 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.401520943 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402078757 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.431202601 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40130258 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539772625 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670027644 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040362519 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.670566325 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.438380071 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.919414855 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401772681 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660359445 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16604001 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612971508 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017317627 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139287587 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66959672 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472761289 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616320776 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.399450042 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539133152 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.412331117 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406156104 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403574426 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402743488 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.401620393 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673863239 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024551803 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671731382 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.408231679 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.413507643 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437851958 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.616661159 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625422565 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114109053 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630696977 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677156113 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410629099 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40538604 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021891223 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680486631 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404738711 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.408375453 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634513407 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404852586 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430640201 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.922233223 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.402114313 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975612343 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.346826293 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424470853 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406841505 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14507095 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024933653 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.423590173 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92531072 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409209495 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405571566 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685684136 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.411126684 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414214689 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686698031 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409547363 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413653391 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624589669 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.020691809 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174990345 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.432541311 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407097235 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.41251451 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405971284 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446725319 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410139022 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416370445 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.817851446 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410334956 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407672603 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419374306 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.403530316 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410171366 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.411472852 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408369568 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.413261509 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.38722507 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.385637229 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413880838 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534397323 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961884245 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406416283 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083028089 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.731028957 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.661881367 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408975345 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.388666768 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.413857144 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407068112 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40866015 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407425411 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428446602 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984787516 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.413417989 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.686269086 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414345158 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.618335436 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618718906 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409402275 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628879481 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409766653 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434426446 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.383455499 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409041987 seconds)
  done (took 989.996786775 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442816035 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.404788391 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.433347227 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.47649854 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.404916205 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.414999205 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.424341352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.437624683 seconds)
  done (took 20.728278766 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.41085445 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.414147548 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.411747018 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.416015159 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.408895618 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.892003594 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.410096416 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.412938314 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.425417695 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.406850579 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.410128755 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.098497137 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.437507928 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.413939472 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.403608915 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.419865644 seconds)
  done (took 33.082901957 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.556943689 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.609761754 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.414940206 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.471715378 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.457290421 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.42003449 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.661580171 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.43585026 seconds)
  done (took 27.318691678 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.416421143 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417628739 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418300886 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418887626 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.417894496 seconds)
  done (took 8.378898564 seconds)
done (took 1259.08294371 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414815592 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414808465 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.415454963 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.417342418 seconds)
  done (took 6.95252486 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.387338755 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.387413521 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.38698973 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.3990314 seconds)
  done (took 9.85213318 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.117631043 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.023136763 seconds)
  done (took 5.429982828 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.900339759 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.903946581 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.899405643 seconds)
  done (took 6.993575868 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.699832485 seconds)
  done (took 2.990321435 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.32990566 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.40996626 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.069202784 seconds)
  done (took 8.09954805 seconds)
done (took 41.609111211 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416999704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.651620402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.560882664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.417204841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.566739135 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.572542546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.214428349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406449336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418723429 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426189858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.420792643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.569407812 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.129700494 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.652770307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.130360867 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.655176767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.5691858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407138784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409020686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.406960964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.230712873 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.409332945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417732754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408017132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.591637518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.557569118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.405944602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.658693815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416806935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411637117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.552494115 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.407593657 seconds)
  done (took 83.763247349 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.415841827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.41674418 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.416862702 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420722653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.407042618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416197047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.408372316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.407929046 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414037691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.409427506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409605175 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.425892729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.411196123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.409141074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40940222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.409415449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.408693162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420963561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410412317 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410972821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.409935227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421082458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.410286874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.409222535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426408431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.423461872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.409350331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.417665052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410013216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409808676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.424365832 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422419802 seconds)
  done (took 78.546316718 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416361044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.41044584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41060148 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410125483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.4106192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416104426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.410605812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418751288 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410173747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426286875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411353392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.410584758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.413093104 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.420185063 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.410892437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410287567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.40982493 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.427770277 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419565183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410393016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.412490061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41174525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.410739894 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.431236603 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.416355844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428498367 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.411688257 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.41528631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412538064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412059638 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.413821706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41191071 seconds)
  done (took 78.567866644 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.651417134 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.427578693 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430102057 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.423224818 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.429634837 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.426071426 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.419852622 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.657861232 seconds)
  done (took 15.161982741 seconds)
done (took 257.331111855 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.41688915 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.921827112 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444499083 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.417894543 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.442091591 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.442249163 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.637524684 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441449738 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.642406815 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.439601937 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.434171052 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.421650632 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.223253002 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.569330525 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.270204715 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.388977656 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.300840785 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.434328041 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.991041142 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.705377993 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.442734309 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.415203019 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.263409681 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.320305342 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.39719855 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.504977988 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.517779929 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.641951778 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.579430534 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.500234797 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.931590069 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.428533312 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.42884197 seconds)
  done (took 65.656088242 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.420891044 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.426415339 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.429650298 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.428938108 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.426493277 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.429099364 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.420026637 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.429380816 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.429800381 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.430697182 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.429574383 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.428337507 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.427859106 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.42635918 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.427111356 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.407176236 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.421860977 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.426452284 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.421443207 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.407290132 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.426612329 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.429992536 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.429778489 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.427355784 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.43251721 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.431636838 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.426653645 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.429678217 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.427271757 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.427987342 seconds)
  done (took 44.082933484 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.43213865 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.998883334 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.156717246 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.434505023 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.423635743 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.42736158 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.711760574 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.437921911 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.425541488 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.427024509 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.921906806 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.441117016 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.456882746 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.162197486 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.431874535 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433523126 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.43361914 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42456397 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.004279331 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436996881 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.712037705 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.438192274 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.713405521 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.438687772 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.42773281 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425457568 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.428842749 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.254405767 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.452081135 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.918807984 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.218578396 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.712589991 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.191973435 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.209046203 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.216911145 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.440264226 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.433772676 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.937064961 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.433595179 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.425644962 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.713229534 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.432052522 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.169246248 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.112347256 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44529755 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.43671538 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.280424294 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.956573014 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.675893865 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.437206103 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.200467101 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.435931421 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.436576862 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.429670713 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.669731826 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434673242 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.425949079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.279127836 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.454105096 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.7124637 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440489612 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427847593 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.003841356 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.43341956 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.000059228 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.435266586 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.434600065 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.427656468 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.180466401 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.433522103 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.114434675 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.445325963 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.435676318 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.916701471 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.006255594 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.337995759 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.434121157 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.009947389 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.212253462 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.734970244 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.437367177 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.241873634 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.738271225 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437094676 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438842924 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.437826778 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.436780232 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.499361047 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.71251553 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.042033608 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.110295661 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.287383827 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.738978546 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.44171902 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.430182419 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.281236637 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.458644684 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.438082642 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.167124361 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.120182787 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448246954 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.437177269 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.097392246 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.449299574 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.717452753 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441365742 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.205057765 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435746521 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.500550934 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.438083535 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438008012 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.432974381 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.718113654 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.439672068 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.438561275 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.099130337 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.953110622 seconds)
  done (took 199.344794497 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.425066815 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.425032603 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.427283603 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.425740211 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.42594522 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.433803289 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.424904978 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.426112733 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.431315669 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.425230119 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.426624319 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.43470969 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.432282075 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.426228807 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.425759645 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.42653926 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.425696162 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.447019578 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.426542473 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.426650605 seconds)
  done (took 45.87697299 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.441607006 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.999854741 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966994737 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.445223786 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.436502924 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.432519161 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488119903 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442953758 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.437873205 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.73479127 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.610604292 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.448518247 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.437804375 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.437795223 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.963954329 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.42289846 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.735650802 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.005380261 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.448747134 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.998849346 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.422274896 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.441875937 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.432024097 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.000310857 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.748978654 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.72489013 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.496371708 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.008143287 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444294523 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.440135923 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.00257844 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.448255291 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433899268 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.992904503 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.447213172 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.455073091 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.439372295 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.493104862 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.498465128 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.743611634 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.012168572 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.734014152 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458220185 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.610700345 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.447182744 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.419595443 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.012485754 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.44888444 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.419388542 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.442359466 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.448062721 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.973694823 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.441633572 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.976055771 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.445925319 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443593673 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.004504878 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.979960541 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.972542161 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.611459255 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441332179 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.722656 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.446369711 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.013969948 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450249441 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.4451887 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.44571344 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.610087063 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.01514243 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.728929488 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.746419528 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.747999916 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450694935 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.500861085 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.448952887 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.741905392 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.504885321 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.859232536 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.74711175 seconds)
  done (took 130.132580565 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.698383788 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.550452524 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.825347275 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.033092862 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.95290734 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.576866786 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.55485202 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.680603294 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.452460359 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.531096512 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.090717001 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.559087952 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.175097836 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.534298745 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.549377862 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.568726305 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.841616589 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.430005984 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.088639958 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.065748408 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.447733658 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.543400523 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.988183272 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.635022415 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.442786421 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.986158888 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.402018425 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.965546473 seconds)
  done (took 54.484354468 seconds)
done (took 540.875070814 seconds)
SAVING RESULT...
DONE!
