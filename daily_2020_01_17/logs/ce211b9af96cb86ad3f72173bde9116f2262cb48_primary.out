cset: moving following pidspec: 16625
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.38422238 seconds)
loading group "string"... done (took 0.58105548 seconds)
loading group "linalg"... done (took 7.202220156 seconds)
loading group "parallel"... done (took 0.156673995 seconds)
loading group "find"... done (took 1.139596284 seconds)
loading group "tuple"... done (took 1.791544254 seconds)
loading group "dates"... done (took 1.304463653 seconds)
loading group "micro"... done (took 0.218277673 seconds)
loading group "io"... done (took 0.951216296 seconds)
loading group "scalar"... done (took 37.453576859 seconds)
loading group "sparse"... done (took 11.888039012 seconds)
loading group "broadcast"... done (took 0.943361497 seconds)
loading group "union"... done (took 12.137868627 seconds)
loading group "simd"... done (took 4.487964508 seconds)
loading group "random"... done (took 9.031145118 seconds)
loading group "problem"... done (took 1.823103377 seconds)
loading group "array"... done (took 20.807516164 seconds)
loading group "misc"... done (took 1.682525157 seconds)
loading group "sort"... done (took 3.332986604 seconds)
loading group "collection"... done (took 17.300639914 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.520092464 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127234052 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119322152 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120984099 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148597917 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114505203 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126230751 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087407121 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.788814291 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149586453 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119208016 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43126416 seconds)
done (took 5.165884977 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176255298 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084097852 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084553205 seconds)
  done (took 1.29925073 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066671681 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123121693 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067709426 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0677799 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067947901 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068023353 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067600802 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067686295 seconds)
  done (took 1.664951752 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074262872 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070312908 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067696923 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069019606 seconds)
  done (took 1.414797501 seconds)
done (took 5.764833492 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.789610674 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204611949 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192306674 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41320079 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131942518 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159710391 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641935071 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324954642 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191665806 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082142639 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109785103 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.330354693 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110304895 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636984261 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078898992 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09179689 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138408561 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429289033 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068517414 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083179282 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089883946 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129709652 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085950888 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0759658 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146615007 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068967496 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138089344 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.0818035 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067526773 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214436425 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173462419 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651650269 seconds)
  done (took 10.306352649 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097651318 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098195489 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070369798 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124907866 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099082201 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070331856 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072366324 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068792436 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087839065 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129486337 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090528904 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102785678 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067572191 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069854792 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085920264 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206041291 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083681722 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083080693 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071874823 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076470952 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106220251 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081102892 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077812372 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07820891 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130863497 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182328849 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101184393 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100297867 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070592616 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08168644 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116142371 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126151902 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069013875 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06826447 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125218952 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097860323 seconds)
  done (took 4.639253946 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.008796791 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145648841 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091392797 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136713019 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066061273 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110566916 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066922314 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082242215 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211241826 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.454122249 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.59845877 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112593692 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105103562 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06888535 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073232345 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068423653 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.502051122 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097883242 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108719442 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083840196 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072142395 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070462315 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35414973 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069656872 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065389895 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070000549 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059352925 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.112389691 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06448861 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125484779 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069185082 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.948531589 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127911372 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068074997 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10260365 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162179935 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.224160272 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145152776 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069969069 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066237026 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154169244 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07144083 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067946142 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085726153 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105027892 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113551224 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067639661 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067341771 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166381922 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067297174 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080740742 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.665169863 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15571913 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080378593 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066304496 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255623379 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089719125 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071296157 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065950269 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.209806978 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13271828 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069296291 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068844479 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06968284 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070268475 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.3626977 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067431355 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.168450532 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068488481 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078801649 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0704865 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070830436 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074566104 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073634441 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089398761 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067511195 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07672536 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067269031 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067541714 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067884264 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084577777 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.381219 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067938879 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069194882 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06623497 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089682207 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098059976 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070033664 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066727581 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065782451 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101183001 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06979905 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067815908 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108674056 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067571533 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08481521 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17201387 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114368607 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069062513 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.118249286 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068735314 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097694777 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071417901 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102014033 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082862068 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069306344 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.422010765 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065549757 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066587695 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067015889 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069788712 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067061227 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068891098 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068592892 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08021871 seconds)
  done (took 21.62943 seconds)
done (took 38.718559139 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235212839 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078960061 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075420454 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077959574 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075246998 seconds)
  done (took 1.767831719 seconds)
done (took 2.974543799 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124574721 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101294075 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065436444 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099407388 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065317333 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103584082 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102752856 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083562281 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102060343 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065526276 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099228971 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065685154 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065532792 seconds)
  done (took 2.372432912 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084424054 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085504902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071360386 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084188447 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064020566 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084377441 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083268454 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090144513 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083095981 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073909901 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065058356 seconds)
  done (took 2.06942446 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084081172 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086363419 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070673224 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083224819 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064988005 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083469969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08333625 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087221271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08298409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075585106 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065138105 seconds)
  done (took 2.06605557 seconds)
done (took 7.705721861 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079559376 seconds)
  done (took 1.270220475 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592242585 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.114128866 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083696752 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113093004 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190770135 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119715729 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273818718 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088787934 seconds)
  done (took 8.948401117 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10274021 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070254439 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070602469 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07221703 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073206687 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07334213 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071165656 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070225727 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06933093 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072375373 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069318809 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069917643 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073682864 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072724331 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072295786 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069993169 seconds)
  done (took 2.436803847 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093077717 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092232373 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074080632 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075841401 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073285149 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07324362 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075671869 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074463787 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07169487 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072715975 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075772541 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074351648 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072728301 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06592965 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074766973 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075941675 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071487509 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074694093 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075821223 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076213119 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075606147 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065290961 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073076041 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075364653 seconds)
  done (took 3.100663801 seconds)
done (took 16.958186265 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1149639 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07229707 seconds)
  done (took 1.383801351 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083375385 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083753992 seconds)
  done (took 1.370364096 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083350422 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065527966 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091484706 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079078939 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067129174 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066970443 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089063839 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066849691 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067167631 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067006016 seconds)
  done (took 1.947751705 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069201313 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078808026 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070862421 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082031412 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074746522 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065731351 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073564204 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068649377 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.0784856 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064157217 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072094432 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083528076 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072295911 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085322664 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072706674 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069589703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071534633 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068455699 seconds)
  done (took 2.528552804 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066387675 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067167756 seconds)
  done (took 1.343373683 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067349806 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064951641 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068011921 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067437054 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064839569 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063418374 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064235523 seconds)
  done (took 1.666667178 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.375620253 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114770332 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311852246 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07250613 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082952788 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258482375 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067090276 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072343029 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072322717 seconds)
  done (took 2.678284763 seconds)
done (took 14.130794087 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081633396 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088173609 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096824307 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37606423 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092209035 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067212869 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115191935 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188918835 seconds)
done (took 2.326842203 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214788839 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.634128248 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404119768 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20665594 seconds)
  done (took 2.45746798 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344871019 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089203819 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060589308 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068930547 seconds)
  done (took 1.783834589 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067731568 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07080344 seconds)
  done (took 1.357831289 seconds)
done (took 7.034574905 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066896436 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084729222 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066775652 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064774122 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066773069 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064418186 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064507421 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066793865 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067337733 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067049735 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070200504 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066664833 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06705875 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064333221 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064321848 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067265123 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066819201 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064354086 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064797561 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064625785 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066972901 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064591163 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064630531 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064201387 seconds)
  done (took 2.854777656 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085547871 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067225565 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073001079 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072423278 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070826181 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072293249 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072046394 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066880581 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072557803 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069040999 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070045972 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070180316 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069042811 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070077978 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068853629 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070756202 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071840127 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067540263 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06923922 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070414173 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071951281 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067119215 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069875839 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071920022 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069787868 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071992651 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069621313 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066749021 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072629254 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070292793 seconds)
  done (took 3.349476875 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070531742 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06455345 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065073565 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071683763 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064658882 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065417486 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064311842 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064666346 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065250863 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064243597 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065416252 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064141242 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064115078 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065231778 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065390575 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068514671 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079858563 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064888475 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064292576 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065242735 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068355107 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064381406 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064844498 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064689075 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064458682 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064003858 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065172927 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064172283 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06536965 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064341893 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068019733 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068367699 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063951936 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071511432 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068123813 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.176379302 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068884052 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064139482 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064970285 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063955582 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064189597 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064806949 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064456628 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071664644 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065051344 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06592348 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065118226 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065374627 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065289288 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067528147 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064227306 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064790254 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066501131 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065244335 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068823789 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064153162 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065544249 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064139505 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065118296 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064813365 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064224493 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064300231 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067314699 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065026847 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079853958 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071543065 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064555415 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066920114 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06544585 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067981756 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066450587 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079152243 seconds)
  done (took 6.117300773 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091247253 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088282922 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0668195 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066153385 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062579715 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06517696 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070749527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064654943 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066541508 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082559852 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065042893 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065919019 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066662862 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068663143 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065227751 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066063507 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073628106 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062469704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065088128 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069046621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065190621 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07067979 seconds)
  done (took 2.770037855 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155775258 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071314144 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107009423 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076329874 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070737919 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07683945 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070711908 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071062926 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071207259 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069032233 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068443252 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071048799 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070808378 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0685476 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06861894 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068793774 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0706012 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068721436 seconds)
  done (took 2.632453189 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076941956 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067695118 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088021108 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066929281 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066945739 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069072671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071167267 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074843932 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06904092 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066824221 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075300924 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069372739 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070026727 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066705851 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069975428 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067074895 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069086005 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067331447 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07554091 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071247373 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07091511 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075135082 seconds)
  done (took 2.798373972 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081008801 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069378217 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082950503 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069500428 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062910578 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065522925 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070927838 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066634191 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071212634 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068889563 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067331548 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065264648 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069338151 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066898607 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069643241 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067072066 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068733947 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066632628 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069203035 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062747712 seconds)
  done (took 2.616377263 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087612264 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069438939 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069293221 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076418075 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06890385 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068607858 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076065878 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069029744 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068745911 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0894174 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069221878 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069222075 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076839122 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073500834 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069086705 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076173584 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075814037 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07622941 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068797625 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068751974 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090139975 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068751389 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076373466 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069258683 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069481221 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069292023 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069208117 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073717664 seconds)
  done (took 3.288856188 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068111186 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067218174 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064613976 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065046153 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06445659 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064253516 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06447434 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064733905 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067123759 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064682951 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067698022 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067043143 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067533566 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06757875 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067286479 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067082192 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067761182 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064935823 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065029239 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064636206 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06707846 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067935354 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067121911 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064565373 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064679708 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067192265 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064373169 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064768115 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067364076 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064806842 seconds)
  done (took 3.219567806 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077035693 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074695567 seconds)
  done (took 1.391372438 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064074651 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081186627 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064614244 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071916013 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070865033 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067586918 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074661804 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070872838 seconds)
  done (took 1.801834673 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083246353 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078855698 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068221222 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081249293 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078038867 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084236112 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136986982 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068449976 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075003933 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066041757 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081389158 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067399342 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074048759 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068164809 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073952285 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074186106 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065272852 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073994979 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06964677 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06652974 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069200602 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076485734 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070485766 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062738501 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069030453 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090364357 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078508299 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067348319 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071040312 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075432308 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073964783 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061356928 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068014548 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067932535 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06591086 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077161477 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082314238 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069897455 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076271551 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068814153 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0770073 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062631755 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072028637 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074199626 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077449299 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067803504 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067902969 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062597353 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06531804 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070184122 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062530725 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070035076 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061744403 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074670338 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071203418 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078492741 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066210718 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069030486 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070233782 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070641944 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074121397 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069547426 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070431249 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067146852 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077758654 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072211763 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07652555 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062459523 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061506404 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065445245 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077732144 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091160067 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074095043 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068527534 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069188535 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06557677 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070729675 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068558691 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073228672 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074183717 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067755844 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073276394 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075147799 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068242867 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070495321 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075502408 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065937265 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07034879 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066074613 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084227382 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066708112 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065568165 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065740324 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077978612 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070647894 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066920179 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064967902 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074524636 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061291281 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067106114 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067917058 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068045421 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077091287 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071115085 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071250784 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074942796 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073703852 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066947044 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069267012 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063330795 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067483959 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066212324 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074071153 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060927573 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070002343 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.191703943 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069554952 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077572509 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066771112 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068326661 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075667621 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074308526 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067489405 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064744998 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071367741 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06804126 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07131047 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076493062 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06622413 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06348273 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06286306 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071465318 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067227239 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072224916 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072692506 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070628167 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062788425 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06604664 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072757528 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077018295 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068401533 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069073926 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073826705 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069696351 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067393579 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074771805 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070365691 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067525787 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074119447 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068801159 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062698473 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07021156 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070754557 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066706769 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072352401 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071449344 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070050942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068614656 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065917129 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075206699 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068442435 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067427459 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067933702 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067589364 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077773137 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070307367 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063308395 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064828136 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076205888 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065563369 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067072619 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066581565 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070130585 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069574757 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065984771 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067519375 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070049251 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078176026 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070947054 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069724513 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073783631 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078879175 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067406094 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070316867 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06696974 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068598224 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068111385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076707928 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073253451 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071950331 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070399837 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06404082 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072918012 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075508996 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066926826 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065431342 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066503163 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071696333 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073646305 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071396235 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068413611 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066065782 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068847362 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07066973 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070962639 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068071067 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066938144 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073411625 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065790859 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074355534 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067946629 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077871625 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070914969 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062256092 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069976683 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066171563 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073796988 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062007489 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065408487 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066871486 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067408228 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066075351 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069623974 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060777504 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073630769 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073781128 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067015949 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066413895 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066542649 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073723987 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068577535 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070371325 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070168201 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072728955 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.204483872 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067650815 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072654299 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079323477 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068266547 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062474935 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074135276 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067235421 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066281898 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067287546 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06687932 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071218941 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076224201 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074340448 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0618364 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070762078 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066286928 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067281574 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063647104 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072601497 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071916634 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068408292 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07499777 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068514521 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068635627 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072283472 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067325158 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068668583 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068326056 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071355669 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068277343 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070256762 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067388638 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072228667 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06712489 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065704486 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069976215 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067964487 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068608931 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074078795 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067376754 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068114166 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070435818 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068565516 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06892412 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067787983 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067070854 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071471747 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068772604 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068094148 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070941093 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06285476 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075362107 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067037452 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075195637 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068164479 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064699077 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07439652 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070394145 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072890788 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069264145 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068589138 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068790312 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06705983 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070131292 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075139251 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065631223 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078471071 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075232178 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068017797 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070866102 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068008337 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069579723 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066537608 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068986663 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067961023 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068464642 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067391685 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072766059 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070388175 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068483578 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069251213 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068945401 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068366487 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068978767 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062260054 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067056836 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067219694 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067785869 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077388478 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068728552 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067839378 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067549353 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068677588 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067221736 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064786608 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075491436 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07624917 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068435422 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07501469 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066675319 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069018557 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077720186 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062086218 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065801537 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064766168 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065355316 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074331855 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067440061 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076289881 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066946575 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065669511 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064040675 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067766664 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065463867 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060714458 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064426381 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070382839 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065804194 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065855075 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066447034 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069677788 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.19815563 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078322968 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067523733 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069431212 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070142398 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064953064 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067926649 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067950343 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071391461 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069932637 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065954898 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065422083 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068078923 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069808588 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069971877 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06973207 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069786159 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075293696 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067406331 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071111707 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0709394 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062514422 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071575358 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068146672 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067700236 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067767287 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072330337 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071589818 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068796112 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07711434 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067948291 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069326305 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067553676 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065481169 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067182625 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067426674 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067576426 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067657281 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069735973 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076189832 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06533812 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071018749 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06785229 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068652358 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073895574 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06882996 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071642382 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073758147 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068914099 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069792278 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07569632 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071506211 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071275439 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069406406 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069864786 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074081812 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066626839 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074312741 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068701643 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069220739 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069483024 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066336198 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067293283 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067976965 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06732946 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074374931 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068834495 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06712739 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06736294 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065769487 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069383171 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071303876 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076069619 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069946895 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070449848 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063075774 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064675119 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068147856 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065808872 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069372694 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071134592 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073474652 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069763996 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068025541 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066995714 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076914613 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073658206 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072190275 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066079731 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071751892 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068860811 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070472906 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069228375 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068060869 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069362916 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071772514 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070254612 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067945893 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075146538 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072086229 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068880503 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068847841 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068499535 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06810476 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062531123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067708681 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069298886 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07266637 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070038697 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067640595 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077478822 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064738171 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067764489 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069538596 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065647818 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07119354 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061657331 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068722035 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068086868 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06724489 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062078789 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066225327 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.195108166 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071396068 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067795124 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063353203 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079722202 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077909231 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071825103 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067810067 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066969899 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06339018 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063604709 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067171021 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069431572 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070227094 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07852801 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067174977 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066825591 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063293048 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069413083 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070865645 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071091825 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065356273 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063412249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06834189 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071791689 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074823362 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067178821 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068621598 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070973291 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070344009 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065733745 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071772445 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06495578 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072057512 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080704016 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069213484 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068849807 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073855421 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075922734 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068772507 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063195883 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067638501 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070939543 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068597317 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068582928 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069379698 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083050097 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0716036 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067460649 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066011841 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070681004 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067600038 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076288504 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068943667 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068653458 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071991242 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07011801 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076570413 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070479839 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075344579 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070763916 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071139562 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067172155 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068411068 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06613498 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066573223 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068583706 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067996498 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072231706 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074922921 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066993114 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077772776 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076566873 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070194399 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064282235 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067206436 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067799558 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062638178 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069275652 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066020548 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066375255 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066082746 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066935774 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06937717 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073237574 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068831692 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067937561 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067877701 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062029866 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070921067 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070553044 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069190049 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065637814 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068527201 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068748746 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072642675 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07177452 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066059307 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070239282 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069593574 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069443234 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062869862 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074367899 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067144741 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069730354 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066869077 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067637757 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068529321 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070978601 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072099658 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068963909 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069981477 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07120814 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068969701 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064234456 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063899281 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072541028 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06470044 seconds)
  done (took 43.3876542 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104444879 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065197827 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063935293 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064046982 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074589731 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064483827 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062863643 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064388784 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064615852 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066116619 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062545275 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062816912 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071188781 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078769286 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0738785 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067984432 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062875774 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064490739 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062947228 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064775669 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071473644 seconds)
  done (took 2.786947746 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074918082 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07844108 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075966243 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083216585 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071600039 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071573352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076431052 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072052171 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079389885 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073656455 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079316944 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071577875 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073252527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073487222 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073944309 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071667445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079542526 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071719787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071210019 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076460888 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071574397 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075924442 seconds)
  done (took 2.965653897 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068850938 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068329587 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068997969 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062296632 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067058644 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062586709 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071253466 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065223907 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070208928 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066527697 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066960174 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066227826 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069459331 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062359319 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067028974 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064932918 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108975259 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070344183 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067421194 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067747091 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062821048 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069129887 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06353566 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063075827 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066183963 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070361505 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068004241 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066202708 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067909866 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.0667106 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067735805 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065160127 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068904329 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068054472 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066481683 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066400005 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067286142 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067466033 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063057872 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06534058 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067736379 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06366702 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068278865 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068704111 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065703044 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065109362 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069668609 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067395308 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062467043 seconds)
  done (took 4.632900325 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079943649 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111011949 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068468396 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089882059 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083358657 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073872269 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070614763 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090645445 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064351107 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065932669 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082190172 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080018079 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066381301 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07148873 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073515964 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066388267 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067573339 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065634086 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070464907 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066417527 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070310413 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073459876 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080887348 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078720836 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070570637 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06563422 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066365091 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071195015 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078702293 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071551577 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071488501 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071756407 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081468711 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071882757 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066112806 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06845169 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082623348 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066801024 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068884438 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065202459 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068854745 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070733792 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073204718 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082325933 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066808468 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071632927 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066803501 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06448884 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078657679 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069471897 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074459605 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080784289 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070649003 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066844865 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071186718 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081277825 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066803421 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065400384 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069525836 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078217598 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064760524 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070910534 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079441807 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068394564 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073435143 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079839584 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071669005 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070808475 seconds)
  done (took 6.430242935 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076965428 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097265357 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083668357 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083970759 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076491798 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076688664 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076724376 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076768966 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07631471 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081121526 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076800291 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116667327 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071823172 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079015545 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076801634 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076773923 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076498793 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077178128 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076599252 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076379328 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076673597 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083745167 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076582715 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083817613 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080127815 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0727032 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076627242 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076407558 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083967759 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076995522 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088899419 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07655308 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076766268 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084017273 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080416607 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07615411 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066779833 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076060033 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077042814 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076631733 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072488951 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083923479 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076353827 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072214864 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076557208 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076186543 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084458169 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080677249 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078845286 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081667211 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076576403 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084270511 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076588629 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077526493 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084328142 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086824977 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084160462 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084399126 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07674765 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084287793 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084168383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087190612 seconds)
  done (took 6.290482267 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084134061 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074404131 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083185366 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062964978 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065037124 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072969008 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065607187 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065254621 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074797212 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075881313 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077501991 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073101908 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07549295 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077631173 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072661613 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075550793 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072570083 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072620142 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074737259 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07287785 seconds)
  done (took 2.813117642 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075754475 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084476743 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06837238 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073194442 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070224965 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073108105 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069759931 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069911293 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067533239 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070165464 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076831231 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07709174 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067966999 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072336138 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077345939 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072587209 seconds)
  done (took 2.504293556 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085220591 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073871332 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081316741 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067733975 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067979844 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063843236 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066694321 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062765464 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063449257 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079511477 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067479591 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077551749 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067146605 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06620574 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063583528 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071998306 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063667448 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064253064 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066594757 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079480393 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071351461 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065347694 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07027772 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06719746 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069451042 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071690299 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065707754 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067326062 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06396886 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067535254 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069839794 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070137139 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064064385 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064883678 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065670915 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063949253 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066848716 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066801697 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072735275 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067192788 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065514475 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069138832 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066954414 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068195342 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063519037 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067428252 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063127924 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069415122 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064418355 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069750824 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067464004 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070057085 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067768977 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074528482 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070684122 seconds)
  done (took 5.108579389 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081156917 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070925405 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062875232 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06599765 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07014693 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068220481 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07042233 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067982447 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068409696 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064937857 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068150076 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06988943 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068640513 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070619305 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068544495 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070729553 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062787484 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068126264 seconds)
  done (took 2.587743395 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072194154 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067237518 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074217567 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067950586 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067123934 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069544702 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062823972 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066530347 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065632979 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06676441 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066885023 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069597797 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065574768 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069384131 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067436565 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066775801 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070011719 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06597737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066860207 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063002333 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069249534 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066425146 seconds)
  done (took 2.830255084 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094739852 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084233921 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141139043 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079794876 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085443544 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072561168 seconds)
  done (took 1.902993316 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093064782 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101077981 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068249228 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070806848 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076921422 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070671252 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071441898 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071209086 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079460312 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076776219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071151759 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079399707 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079067701 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0788859 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076688984 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07726852 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071269935 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071124292 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066909113 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084413729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0713465 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079781797 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071035851 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070534167 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071246548 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078472496 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079383352 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077007161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071191346 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079262396 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076552919 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07148838 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079157338 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076661408 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070161774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079497459 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071703939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085093058 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076941221 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078974769 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070685916 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076953972 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079393858 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076020419 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079532969 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071415918 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076204027 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071171558 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071401043 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086833862 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0769202 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078788437 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079896826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079888794 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07935025 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087689865 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077041784 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078791012 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077340013 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077228339 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079466295 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077112161 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078862126 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07762696 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077312639 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078994611 seconds)
  done (took 6.420522095 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105447888 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068351316 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071100438 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076919236 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078819607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071547621 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071600686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071486522 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071389796 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068433651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109149696 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071510415 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078689827 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078675817 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071158196 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071766676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071248825 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079244637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068374368 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086714594 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07121099 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078759199 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078533161 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078605248 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077668032 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07692789 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071231551 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071353323 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07118433 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07139364 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075921412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071194826 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078951816 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068385072 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079026896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07125655 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071642734 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076006745 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071477832 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077167073 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078674297 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085019688 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071119416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071182548 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077217633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071476513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071233446 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068280038 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071608885 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06850593 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077411754 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07743677 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077170477 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078576558 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071895951 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07130502 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071624864 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071530506 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071377826 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077663408 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078995643 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071289698 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08718231 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071536138 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071439351 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078825825 seconds)
  done (took 6.330829289 seconds)
done (took 131.051023082 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194745452 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166204897 seconds)
  done (took 1.702111257 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070002769 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100253563 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077996366 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129956039 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067441715 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101741674 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100958134 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079130628 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067203588 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067408865 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067599842 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070286608 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132689836 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067357483 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067523129 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069654716 seconds)
  done (took 2.691568181 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101467813 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163440677 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10446365 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066235155 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100394747 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074446288 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066056887 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076945677 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072019925 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066767461 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074085583 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071906054 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066621736 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071962773 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072254725 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074143611 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066555487 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0740433 seconds)
  done (took 2.819879077 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100224593 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093673159 seconds)
  done (took 1.552171074 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156887492 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134489906 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20394671 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353759524 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165245754 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149490759 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145948423 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14419189 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117874993 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140514593 seconds)
  done (took 3.066703291 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100767564 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154568215 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.270848404 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121976448 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074958399 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095155765 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120576837 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079755438 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082112953 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081637704 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081988147 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077838819 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100879603 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074779364 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075643673 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077652962 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104792244 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074349614 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07583643 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077481826 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102219195 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067363667 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074975509 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074368542 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078643673 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07899891 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066932378 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067601875 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076884565 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07583813 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077232826 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094064067 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078276633 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107255241 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072669699 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108916445 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078056911 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074817558 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07609309 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074556945 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07964869 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079412206 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074759612 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077847147 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067586816 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078515536 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067817703 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067669311 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079490801 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068840905 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079559136 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077973824 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107258258 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068639363 seconds)
  done (took 6.065402568 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105094377 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107326362 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072829922 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113966555 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104197725 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073216871 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103961054 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097151142 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105074443 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071522493 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069886378 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072106084 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083300823 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084610645 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.1166782 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108313642 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075218721 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072611145 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107547601 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106276499 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069966626 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098549416 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092270668 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104638647 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068423367 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071974607 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069016493 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071230688 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078021684 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079825934 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070829497 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082229866 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085879551 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079078885 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068698169 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069346541 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06963525 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08110432 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080481849 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080311922 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079096291 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070001561 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069704034 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071020682 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071582696 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069207092 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079930018 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083402718 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080176201 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071107632 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071939631 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069304128 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070893877 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081724882 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078712456 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08237192 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081437684 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070155846 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07032754 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074079726 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081887737 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080561479 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081717081 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071102271 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080740111 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07004742 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081960912 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085973816 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070212698 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071709721 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06997315 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071105521 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071408298 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079733674 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079354952 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071189873 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071334046 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069788826 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081386879 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079752948 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069881805 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078311393 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068949545 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070168227 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070888994 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070878237 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079397795 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080568443 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070841763 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069513662 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070631849 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069832082 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068489325 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077501706 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080140106 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07872056 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078903543 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070792408 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078928329 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078870844 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070781946 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079010054 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06897244 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070163206 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199884684 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080693117 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079538154 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081353032 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071820813 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070158076 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08065549 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08279444 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070135937 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079525705 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081816356 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080745054 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069402413 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082773053 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070060242 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081462007 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071266602 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081424806 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070170335 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080407602 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070353705 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070324609 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070372367 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080815373 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074457569 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070055203 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071214594 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071364084 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080339715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083874147 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072120793 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079050276 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080042595 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071896969 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080283206 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070848393 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081635601 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071169495 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071964473 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069900736 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082703923 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069796346 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070635545 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071143672 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081719819 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069883955 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082482417 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079216705 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069646645 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083086687 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082155159 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078070565 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081651635 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072302172 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069735364 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069483292 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072102534 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080082596 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081395272 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072328956 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07048961 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07960289 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081679872 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068438144 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07997635 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078933642 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07915473 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069557168 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070900428 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081657906 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081872178 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079469554 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079559493 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079486484 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07019342 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078734437 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080157339 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070368781 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086530199 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069809745 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084483518 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080267341 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078093039 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080620415 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081595062 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081623875 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081570566 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084769802 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070121085 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06932319 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080287485 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069664721 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070241534 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078582153 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070223263 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070279948 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083040896 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069395726 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079531721 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06830054 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078592417 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06827222 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07115385 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083393076 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068538658 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201088519 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082038595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072204706 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079481035 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082578866 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08195433 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06999004 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072574435 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081436969 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081620648 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070004079 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070648046 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072268717 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080443446 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078956403 seconds)
  done (took 18.98678214 seconds)
done (took 38.24988696 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213232874 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155280252 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176019743 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121132955 seconds)
  done (took 2.130937404 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119085162 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103236832 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095181088 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066799789 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10051397 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067467721 seconds)
  done (took 1.951316428 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315192075 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214960585 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190606536 seconds)
  done (took 2.115374679 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203545662 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191369045 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.422757838 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26598702 seconds)
  done (took 2.592828669 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146349908 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091127168 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069192804 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086461558 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135204015 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162889744 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102612437 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128024482 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081537577 seconds)
  done (took 2.452651687 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151068165 seconds)
done (took 12.801078045 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.224901199 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096216337 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081239025 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.194003347 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075801035 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.240531418 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.179402873 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078555404 seconds)
    (9/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.161823585 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085014612 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085097932 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.125100728 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.190595874 seconds)
    (14/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.18914928 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078345831 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079798836 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.218914433 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075180283 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.178558718 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102021619 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.14664618 seconds)
    (22/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076039356 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077525718 seconds)
    (24/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102018373 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.20347315 seconds)
    (26/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064041636 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074791781 seconds)
    (28/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074560841 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093299247 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081814758 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.102927871 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075145547 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.162857788 seconds)
    (34/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.169614912 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195438538 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070130009 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085132459 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064413556 seconds)
    (39/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078477345 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074837735 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.146965378 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074060514 seconds)
    (43/309) benchmarking ("sort", Float64, false)...
    done (took 0.133446557 seconds)
    (44/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053282005 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.101833073 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052905828 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076247259 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066733479 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092996565 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.221125487 seconds)
    (51/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054439693 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071087437 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075137669 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092365907 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09272157 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21265366 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.179729895 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074934639 seconds)
    (59/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122100179 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069220591 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111601707 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094811611 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.218968647 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074828943 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.167054852 seconds)
    (66/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.156243495 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075775633 seconds)
    (68/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080945201 seconds)
    (69/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.10268937 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157493226 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149761891 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083270339 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091363343 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092102301 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070867226 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.164101664 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151039409 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077827935 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076441889 seconds)
    (80/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077423055 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1574494 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.067871249 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111536154 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118809891 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174578109 seconds)
    (86/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083916258 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.213953161 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091611514 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094764191 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096472184 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053746791 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18985925 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066025719 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069705007 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118081526 seconds)
    (96/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074352394 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090305669 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096029135 seconds)
    (99/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.159699066 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06863461 seconds)
    (101/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091425173 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067809833 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087723463 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073920166 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115180247 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125007524 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.178524638 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.374110749 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147804186 seconds)
    (110/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076449572 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185378111 seconds)
    (112/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123258386 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067386076 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084110282 seconds)
    (115/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055945801 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065522709 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.165669925 seconds)
    (118/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.112246785 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094869354 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099229001 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052335137 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.13885569 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076386396 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05251748 seconds)
    (125/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10692985 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158547064 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074294129 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101539196 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.210985534 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077735404 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07331291 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052320381 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.086925497 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066550924 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074732918 seconds)
    (136/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091755207 seconds)
    (137/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077064873 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.078638626 seconds)
    (139/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053704791 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074125562 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077697369 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073840907 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071822259 seconds)
    (144/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068701733 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185834635 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052678182 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187334676 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09158199 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139911229 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066728091 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074721382 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089061197 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.0962322 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164212885 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092402798 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113155658 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072050003 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081768068 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067254223 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067119014 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.146688261 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075225563 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072242096 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052471069 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179154676 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095864451 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068485782 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.210623966 seconds)
    (169/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.0657903 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054410706 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074998783 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106476036 seconds)
    (173/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065056013 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196558678 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05316393 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07394025 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05233118 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052606305 seconds)
    (179/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06478906 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053103902 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081461239 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05234188 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090890374 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073798152 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069754124 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077581037 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 0.141991939 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112477303 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078871508 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052534586 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07576768 seconds)
    (192/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080641202 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182657931 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.211866725 seconds)
    (195/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201443957 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08932092 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132855885 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112578614 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067196358 seconds)
    (200/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.0691616 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141360727 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092102776 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067931275 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175344579 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15804169 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.158575549 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05471439 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077570479 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075264121 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068040292 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.1444669 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071386061 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067547412 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.072501461 seconds)
    (215/309) benchmarking ("sort", Float32, false)...
    done (took 0.134028009 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072948068 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073620932 seconds)
    (218/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054300616 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067721357 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070821992 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054143665 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067384006 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189864404 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066505539 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075656124 seconds)
    (226/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053841418 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073973409 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077699958 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102523337 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158453935 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067709534 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142636084 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073597995 seconds)
    (234/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052330905 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052138613 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056030673 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053696944 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067219408 seconds)
    (239/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063966768 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07789226 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09097423 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127361348 seconds)
    (243/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068381019 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054251315 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06690392 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055110955 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069099252 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063580371 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06674237 seconds)
    (250/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052386152 seconds)
    (251/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052566961 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067104663 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052426999 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053419501 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068864987 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052239756 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052110015 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073323818 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052227215 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053503222 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069096729 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130316233 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07543734 seconds)
    (264/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06961949 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077057931 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089897342 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052644311 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089394714 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052673509 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073653804 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062590328 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091894195 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095815857 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077976082 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053311094 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096818677 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052295728 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067631185 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053186356 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066725918 seconds)
    (281/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179067035 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067257325 seconds)
    (283/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063181207 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075112936 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065770663 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068078924 seconds)
    (287/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053482008 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067451564 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052356441 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066015077 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074343036 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.0685468 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067206198 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070737465 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074801675 seconds)
    (296/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075822222 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067455247 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073269438 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075250283 seconds)
    (300/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053322019 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052314823 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054637831 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053431219 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072643406 seconds)
    (305/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063601349 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072379883 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092524241 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05337292 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067707895 seconds)
  done (took 31.572847361 seconds)
done (took 32.982221407 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086998485 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094907681 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077939472 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095853275 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083922536 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078419234 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074794027 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081219266 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082120214 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084191507 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080549974 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056356513 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076517079 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076563344 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077036361 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093368251 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080633883 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075033697 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074782416 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066473823 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075885617 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066859501 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068826147 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055361618 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079814454 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073194418 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074023769 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075870465 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06739697 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066995948 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070460053 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075537541 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067649476 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080102579 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073656675 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074893582 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076276988 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07819054 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068750629 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067919618 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076419953 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067000338 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074553749 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075496396 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073587917 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073016391 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075317055 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079170428 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093269342 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069284906 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076089328 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077974874 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077713141 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074518259 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070978341 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074822008 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072535377 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093179759 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075231734 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069927652 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07598767 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076062492 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073146484 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074596254 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074822999 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077382083 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077864125 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073169711 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07616599 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073365242 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067073072 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074633049 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070650635 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067037123 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078093121 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07938571 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065534468 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073523417 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074994332 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072667831 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066473671 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069199092 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068635896 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073572041 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068860862 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055588046 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071573998 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073640139 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066475803 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074853233 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073672462 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074301999 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068627156 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.0774744 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065930928 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072772022 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067063724 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06697679 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068313277 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071814347 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067112844 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068801613 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077359954 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068150484 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07342849 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080477409 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066748889 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074595526 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065551264 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066191454 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08075702 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076013204 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066549491 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0694043 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065434896 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.0741009 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065985343 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066188189 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066644024 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066424877 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072627013 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065625112 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067442929 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073781462 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078745989 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06555943 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069612361 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067730688 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065716376 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071946096 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.0659346 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.201106129 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069231611 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064524235 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070149013 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067788244 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076200891 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06952116 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075134875 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068522719 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075890477 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073024476 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073284159 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072895209 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06621896 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06033675 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069636864 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069538223 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068313088 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066737664 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069286008 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067167506 seconds)
done (took 12.72641738 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067207284 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142077347 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098860023 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09707301 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087439806 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068434634 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077014728 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101692184 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069070752 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102206188 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089022735 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087708047 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115365275 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06617741 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067004565 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07078931 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068275706 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082505514 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100972563 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088272048 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11745639 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066959934 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09430963 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090673954 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089878393 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105259549 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070646337 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07111465 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070923452 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094398845 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090461168 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071437141 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068138534 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100376596 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095664314 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085604406 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06756006 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084355505 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067900927 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066994582 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069118101 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100508053 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082215183 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082262369 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071284481 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07764358 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068137914 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085302542 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091255753 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080735232 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087312593 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103056328 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070395116 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085787682 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066278272 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088523832 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078665382 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070363613 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067604565 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075490361 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067777544 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070866237 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082452556 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081738771 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072090804 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086857169 seconds)
  done (took 6.953576729 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085488052 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092970877 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08441196 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085332904 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066769125 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067319874 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06767797 seconds)
  done (took 2.054884105 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067940805 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090487551 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090453736 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090831864 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082512547 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090105012 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07719524 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068055721 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089182699 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069450673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089077164 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102483707 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071405895 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076059268 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092353206 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068021785 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092453832 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067713189 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071712941 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091549088 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070151358 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097162608 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071273585 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068324119 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082240301 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06802355 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115508265 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072481043 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070060299 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070919495 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066111162 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108932224 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082027488 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07559887 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067738213 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082862441 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082957669 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066399747 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084883396 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077120622 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082504594 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06845208 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069112401 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065862568 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072180325 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078766905 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069058629 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068610289 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070964012 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088195913 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068809392 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081617917 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07248574 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073767259 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069706821 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074711326 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078467107 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068974614 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087903891 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06917303 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084972456 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084344813 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081973414 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084663755 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070283516 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081933902 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082079774 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070258618 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069989977 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071515873 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084385773 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066659034 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069846049 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079626607 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069966378 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091044065 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090971342 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070075171 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081785855 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068586657 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067823464 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068044061 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090969198 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073395519 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068081857 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072212605 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071271444 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066324519 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067020181 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071727149 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066331206 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069549096 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070941927 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070689489 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071048801 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084553568 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071026844 seconds)
  done (took 8.96985888 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070403353 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069286336 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070779513 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068333497 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069226852 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069694187 seconds)
  done (took 1.94544774 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094674778 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069802347 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08182988 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07218875 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106110834 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088343272 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08940163 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079697911 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084898179 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079826106 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087715603 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089636918 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093341334 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073384854 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088225764 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072783615 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088231063 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075806371 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079485639 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073691953 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087536902 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073125523 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073869999 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083305007 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076556875 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072897742 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07958346 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080035359 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080053796 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079233394 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073285176 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076918141 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071990169 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079116912 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088392577 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071866384 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072712647 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07832148 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073408797 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076759941 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091203119 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073901207 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07533931 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078157108 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078936627 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072383612 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077951717 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080534803 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08789853 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077886863 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077217478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072616796 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076586119 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078033855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072596759 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079189576 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07765704 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089421338 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073656198 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071736032 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069938532 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077062577 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079382648 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078276417 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079927355 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078046434 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072354129 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07422784 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074155615 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07311084 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077949638 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070283421 seconds)
  done (took 7.191629752 seconds)
done (took 28.609404138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537953413 seconds)
  done (took 2.032316869 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617247678 seconds)
  done (took 2.134789918 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.052837126 seconds)
  done (took 8.567619232 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400660989 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.527824696 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.726089467 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13369589 seconds)
  done (took 3.341466312 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705069052 seconds)
  done (took 2.22921818 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215209983 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202872014 seconds)
  done (took 1.952281433 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380163307 seconds)
  done (took 1.893674027 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.137346014 seconds)
  done (took 2.653301969 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258760267 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176584739 seconds)
  done (took 1.956931539 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473540786 seconds)
  done (took 1.992670054 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.883160355 seconds)
  done (took 6.403666606 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211660551 seconds)
  done (took 1.7790772 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235045142 seconds)
  done (took 1.755696069 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.737692903 seconds)
  done (took 3.2580953 seconds)
done (took 43.473859156 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082584129 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082366607 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082729239 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080028346 seconds)
  done (took 1.835826185 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078852534 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073794167 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078361618 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074558568 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07804827 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074414958 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075959082 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077465123 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074280097 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074651225 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074479619 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074424321 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077108362 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076063626 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072868798 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076911721 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078275953 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074876507 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077070205 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074783529 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072889156 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077114904 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077292328 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073354101 seconds)
  done (took 3.341639222 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079373601 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07482908 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076489178 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073208694 seconds)
  done (took 1.832606601 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080263549 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094377017 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094278039 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079963626 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094211887 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088457281 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071405028 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070523119 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072008029 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079634827 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069600411 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098258773 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090569092 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07926262 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081545076 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067302436 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070281472 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089270128 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080171258 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081122986 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071772551 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079735812 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070051795 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090671261 seconds)
  done (took 3.470467405 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087757215 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106401075 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082990578 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090718676 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093384208 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067905705 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089474376 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093513002 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129081358 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06737078 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072074465 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06726479 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074752353 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067211201 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082964124 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110031601 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113591724 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070647936 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099143974 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067238251 seconds)
  done (took 3.267679633 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074105934 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071690942 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067318764 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070166919 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079205497 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074178442 seconds)
  done (took 1.973277769 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069815375 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069658039 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069063909 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068916407 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073964787 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069299004 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067720221 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069412482 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069310725 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069248407 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069438341 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068060392 seconds)
  done (took 2.365932352 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203996051 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070247975 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071384187 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067796637 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072385521 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068243113 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083228723 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070500243 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093956615 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068593844 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069517294 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070368058 seconds)
  done (took 2.544621968 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208811805 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077818813 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243673523 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153571988 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113347076 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117428147 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114620085 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115180692 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144259273 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103021676 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170198224 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169401003 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109700532 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140090296 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091414809 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103288666 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157174828 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16578313 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10789355 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169793158 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14841264 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12875889 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155350489 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103986744 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108267666 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124311149 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073658771 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082300766 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172544471 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135446699 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146930241 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113043033 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094240471 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178850845 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174055546 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141884102 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148958006 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086283172 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107769831 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135720604 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20147609 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090033961 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165188097 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249493886 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083954806 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136363629 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121096243 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121441371 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107361845 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092648094 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148422155 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185670493 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139439729 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090457452 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126648039 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116941071 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116715742 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115141918 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185246558 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163655436 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130418145 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073771404 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111719614 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156552286 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133972465 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110478193 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12714654 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094437468 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1372529 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157195679 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12235252 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147610826 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.119458764 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09038476 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119803213 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142206203 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129130594 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164747919 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126287078 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075232917 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125964185 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104021864 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083019616 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148060132 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077515005 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178008591 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100579038 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110212447 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127285757 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110431917 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110780372 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160507958 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145121177 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104480695 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.210492269 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108269238 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124116887 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148803953 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089376621 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110202864 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120667413 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079512455 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138874058 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077437612 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124811034 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079326321 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126435689 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135168932 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079598873 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124642861 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106203895 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102284816 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135638219 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163310218 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090518035 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08453211 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1709827 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12540321 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106337532 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145710017 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158336911 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102556889 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102721507 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150929247 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181444929 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091663914 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165468955 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108489789 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085744774 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090305934 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125796973 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114034232 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125556891 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083600541 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119712666 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171045519 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076844991 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097957017 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13620233 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080209418 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082620514 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106512433 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106898905 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097469662 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101800952 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104517716 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137846563 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124877253 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107287861 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123586419 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24397292 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173879947 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089724972 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10508298 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106834847 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071981226 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13825225 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160053645 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081923685 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164912808 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1238307 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120537543 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120461563 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08620098 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142023191 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081516692 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072214961 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145975991 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11167915 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113097019 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152676569 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11816603 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128127553 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121756282 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13515575 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133906286 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132582609 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107919406 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089307647 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112891689 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128649538 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075261459 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093072579 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081611134 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106399528 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098089176 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085340253 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143654258 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126066111 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111780906 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113890454 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099065434 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149455522 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078412181 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130710832 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120638122 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097288655 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154250259 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154555857 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133576524 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101087542 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1384526 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07185249 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075277099 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089435311 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121777393 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228782241 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086375987 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118086924 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150310849 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131615683 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138716454 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127711693 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123332772 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15729512 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071768308 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120560194 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150025902 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124217963 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106950498 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091561388 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100931897 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144771722 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109220846 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185722897 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117471347 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124238778 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154442694 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103230419 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081469211 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10364299 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137883603 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106075151 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145731971 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100772456 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0903978 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110516445 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.0761207 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100525386 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129070135 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120413042 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13577138 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117725901 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135500406 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07946525 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117817427 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125398812 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123986319 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066388639 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121342265 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162640868 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095937919 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118661847 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154872903 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080626383 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135965184 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175410916 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290608446 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088761655 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110910049 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12252852 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131195996 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121710591 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142946552 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109597863 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138180318 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111982971 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087229029 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089576126 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099256887 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107646854 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096926062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108187218 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116129457 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098039607 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134050599 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106191139 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112634933 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1200625 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10154965 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09293197 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09839426 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179945399 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120790053 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172235103 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101573756 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146233826 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165399575 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076906122 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08108177 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079896733 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142027673 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086053279 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132585095 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10945208 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119554427 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125672229 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145118232 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097592398 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070213043 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110015937 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13507579 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127467953 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100418018 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105700735 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164725113 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102341066 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083557325 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115674316 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11770444 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104577363 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172842425 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062748156 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105726187 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076691829 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224815938 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132189606 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156076988 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082214888 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105704752 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120291524 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11520092 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130883208 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102331478 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110380813 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128535561 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151256627 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130235825 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091821009 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114154275 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130308384 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158616157 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106852979 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098657408 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175602199 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154735558 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16254994 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090178058 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115453794 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11517319 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109514937 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140151295 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085237302 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165305071 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084213479 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138143512 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105392082 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090591903 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131209594 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110502258 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09006913 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150343395 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119540715 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084886159 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079354367 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120235021 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121847646 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108381506 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077187754 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140242839 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075193914 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133401115 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161000027 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082203994 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106641428 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096665907 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080447102 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255005335 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106334381 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090412877 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101683963 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174876388 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088434849 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152350014 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135368745 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115184547 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136872398 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104757336 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641942644 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079673923 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155325327 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118123495 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176713996 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102566915 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118770014 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111260766 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123941701 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146940272 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105874844 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182956488 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134420574 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11823037 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081287917 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103643798 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105975116 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089340515 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109226066 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114169405 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117067436 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094385806 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117863558 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126178947 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083695456 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098012189 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157958757 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119197779 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146233665 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14307223 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087844166 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11929269 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140595431 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082403029 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121970235 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153368492 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107616989 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10113014 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082421811 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101808226 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158295889 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.22070655 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164951998 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123252388 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112354706 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114772198 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115677647 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13315801 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10966945 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124248966 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09444106 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109537681 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115431988 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084293752 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079826553 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107399915 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113776823 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099868237 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100130339 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101488227 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154475871 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074642949 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101414914 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11786993 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146008394 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176835951 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090603955 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084939661 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120549578 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116217034 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114726097 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123535491 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080471191 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084481976 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081984977 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079708572 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110821124 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114849335 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117006943 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111993761 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165688408 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084635326 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233124051 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097174411 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107147482 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071765272 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08025271 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098216261 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100390659 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109482866 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112171237 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161345867 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097338535 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091130945 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092001967 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075160001 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084192999 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129086662 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109884906 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118676939 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24630841 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065001777 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110304951 seconds)
  done (took 60.040952322 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111052177 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084594218 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097370495 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146798293 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124366566 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204792326 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156051619 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190538463 seconds)
  done (took 2.750080385 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070655942 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098414545 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106263838 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085580493 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06838959 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070884649 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234889162 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083960874 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068571966 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100709276 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081395036 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07113206 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431954826 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067992295 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069763193 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063893736 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068982241 seconds)
  done (took 3.47096222 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392663963 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614639468 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.356382953 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074200731 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.47396974 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086743743 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.13633525 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130106999 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075078111 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526112894 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411981154 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129746583 seconds)
  done (took 18.044620219 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077787271 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07139472 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085299292 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085559779 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074127873 seconds)
  done (took 2.026388194 seconds)
done (took 108.541702826 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082499508 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.606370374 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05476205 seconds)
  done (took 2.324944946 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085007629 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087078516 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088026167 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085828209 seconds)
  done (took 1.989684915 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076340473 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077692165 seconds)
  done (took 1.790446501 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236879716 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165670069 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097952013 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084590573 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08119468 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081200811 seconds)
  done (took 1.886692719 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074625427 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077779949 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07485747 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077691208 seconds)
  done (took 1.939785917 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079092885 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053715132 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057149782 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059510353 seconds)
  done (took 1.885382243 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089618268 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080581241 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080315284 seconds)
  done (took 1.886670195 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103472691 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088068093 seconds)
  done (took 1.827536392 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083197089 seconds)
  done (took 1.720265623 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097173029 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103499149 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133550011 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112765273 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142185248 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111339671 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086592563 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087087485 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07763308 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087930857 seconds)
  done (took 2.677123191 seconds)
done (took 22.146220917 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08122052 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.465578609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361955843 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092250677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671642096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358774111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996837457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094436783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117409036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069150051 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086385402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651780895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985754312 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.414870314 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972545646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324606349 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6502474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070561372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069678681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070533873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979689207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069569321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070335263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070197803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649507391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374030562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070505288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325576319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06996559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071835151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356619814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070033863 seconds)
  done (took 16.408202822 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071615343 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122293895 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075168395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086052365 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071788064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07152098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073477642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070473711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122766472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069390415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087086827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069119909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074457288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087135404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089443767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070429742 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070819814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070557761 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069781383 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070405731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089160704 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069774799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070394609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071244381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069767589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082911439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070378386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069983761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070468176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072227701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073005758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071107407 seconds)
  done (took 4.125970787 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117185374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125660078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076047462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106075308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113461852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072022698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1453178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09536599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129151512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069804538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087004325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069673935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104705434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0706509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090518264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070087171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071416379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070354359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070236557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07093244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089800157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069977517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070212465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07096672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070926127 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084310613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070374939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071018168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070485213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072398458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073502402 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07054156 seconds)
  done (took 4.364404532 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075084068 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077444582 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085898783 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08641999 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071937785 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074134063 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074232322 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071612884 seconds)
  done (took 2.277592876 seconds)
done (took 28.820992005 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080578943 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07151343 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074893828 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084279185 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075667783 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081121673 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06897733 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077758259 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074868363 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075317199 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077652452 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069760277 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073928425 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069569158 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07637972 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069224998 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081225529 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075817839 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080539828 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080792649 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071543743 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07477781 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07622564 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080620482 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08031739 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08112769 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078929846 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074392673 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070483265 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07213794 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078626929 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085845485 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070645833 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081357803 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069403493 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069822649 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073177151 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069393508 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080964307 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078609616 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07142657 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077966038 seconds)
  done (took 4.822041803 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089858202 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094945453 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087141182 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063698797 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069060734 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067487703 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091355202 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061501837 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06153667 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090529537 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05723295 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061559523 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064981733 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055122294 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062272259 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058807663 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063765315 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057820684 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062185069 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061550814 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09349534 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055513438 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080190103 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065154657 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058212424 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063783074 seconds)
  done (took 3.461460828 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077121248 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087382092 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092215927 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133697297 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108056489 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081741084 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081220309 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097056833 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09117152 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06913937 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073272062 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094941044 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092429547 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076129171 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069383145 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088594346 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085690603 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071957882 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075519296 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096955924 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08883561 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087967309 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098474703 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085347128 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069153044 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071513045 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072765248 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083168342 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07402091 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078393632 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073036091 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073698961 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071517187 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080981818 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072507626 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073218506 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094375572 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079535786 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080629336 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069900267 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077291949 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070269101 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094183603 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128143631 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068742127 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075720175 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0731344 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079180328 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069122466 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090283739 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081153396 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069176245 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072473281 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068715973 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06953963 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083135871 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071614536 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.0718362 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078755006 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075013811 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094809675 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074131119 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085646393 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069319632 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07725054 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068789239 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070090643 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068378566 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097626812 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071225258 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113131827 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070336481 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070857379 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078615286 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077225969 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075666462 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07001358 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085207802 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080616924 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073519367 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078583253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072603892 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071915871 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093608524 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072023838 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071348217 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070446106 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076892961 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072420928 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.082084073 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082758674 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06891229 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072028318 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087056111 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06924712 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070628954 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075365736 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074545082 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0693811 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080713909 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074528114 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070199786 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079239223 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069300642 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072401855 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082225636 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075743242 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068279882 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073482626 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075403061 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070025562 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07093284 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071936253 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070961257 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07786579 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075953559 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074232646 seconds)
  done (took 10.893286104 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167352254 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160712236 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072778167 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151255486 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078573337 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081490468 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153815185 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097206881 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070275808 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070550489 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070978977 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112805357 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108665394 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118685469 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080987659 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069699986 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086959353 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117134893 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15615364 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152304105 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087409525 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079251772 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072390841 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071527323 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07231313 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080816585 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087360544 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078634727 seconds)
  done (took 4.502143356 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082410247 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108117528 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076527264 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093794665 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092333568 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069490494 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072620859 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071202626 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083109317 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080138506 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069485647 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075427411 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076463534 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072876058 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070553566 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076784782 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077369798 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070877047 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073409209 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075337171 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08078642 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09462175 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074504326 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069393661 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074849187 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069183549 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065720098 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087026591 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070250635 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098520884 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068782936 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075364042 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084688247 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070864862 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070354507 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070155512 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069669398 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069882976 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071261911 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068562988 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067971587 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058917704 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069088843 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081105094 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076497558 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.0579105 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074130646 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075212513 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07490374 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067504333 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072586729 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072655102 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072532248 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077057784 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073783928 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075114247 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071192576 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07601063 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078580484 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069556543 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066530029 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067926863 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074299112 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066888991 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07828315 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074190484 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068231613 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069002927 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071471633 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07648059 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069561351 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074158032 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067177258 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07133356 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073942157 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071266704 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07093509 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067774269 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069227771 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070512029 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056868775 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069930444 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054802246 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072619152 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067748831 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067936183 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069383099 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074477458 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081986764 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071051257 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075943054 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070890565 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069145939 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073026753 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06233385 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07254672 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086460824 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085002254 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069900967 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067678158 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084080567 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074489981 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070139104 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057570558 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075083159 seconds)
  done (took 9.398807968 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092894332 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072190122 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086771316 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093374841 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089185348 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077485288 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079469003 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07123709 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085394715 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076102615 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080038382 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070108274 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081000304 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080115052 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07174081 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08004113 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074174804 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087638104 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085004155 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070068749 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078618335 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082855737 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093257843 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08449357 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083209486 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084387198 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09303049 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079564341 seconds)
  done (took 3.985373399 seconds)
done (took 38.71403019 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.741174166 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.908707567 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.730047594 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.095684319 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.009330287 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.756749357 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.882933572 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.717974583 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.864335602 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.756090535 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.939143198 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.849525448 seconds)
done (took 64.922263211 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.754023217 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.85588216 seconds)
    (2/2) benchmarking "String"...
    done (took 1.946193107 seconds)
  done (took 5.457779305 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.931864581 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.275627218 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.968372033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.714730774 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.721374935 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.057280667 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.532796429 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.22743694 seconds)
  done (took 30.153304479 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.864943782 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.944103421 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.41575204 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.4496504 seconds)
  done (took 15.384625824 seconds)
done (took 62.426216914 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.742075372 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.729959335 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.742292061 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.700526273 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.776299095 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.722805999 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.842650059 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.913220948 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.714991117 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.706419172 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.714251892 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.137867223 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.713510678 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.827498878 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.713141549 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.707132777 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.738929277 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.115575076 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.86741233 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.717306897 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.708085323 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.734242687 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.711658714 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.709436339 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.750920187 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.706446073 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.10355159 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.713152632 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.316415709 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.708776119 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.734433479 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.008393332 seconds)
  done (took 202.404488096 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.705884827 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.622781918 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.688938592 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.707065862 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.060631296 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.888434517 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.825070153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.123156659 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.708134007 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.718764852 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.903815401 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.705948473 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.916802056 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.652848903 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.731547461 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.804362046 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.882530379 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.942135889 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.736527073 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.877743716 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.714328143 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.697843099 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.648263017 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.898284904 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.743947947 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.707907336 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.867759148 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.710793224 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.897314076 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.860045547 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.74770155 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.726306578 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.937773853 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.580638711 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.723470573 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.720016013 seconds)
  done (took 167.032231858 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.101053182 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.705026816 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.705339062 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.704578195 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.717652932 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.705691092 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.827627078 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.82888772 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.293354095 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.764493245 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.757686905 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.515832673 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.704936689 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770700727 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.718384169 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.705595984 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.719380689 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.730760909 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.707270777 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.704809541 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827846598 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.718312012 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.868192867 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715490454 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.704969794 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.709893829 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.075585806 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.704154304 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.703911368 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.704960666 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.710182543 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.966346346 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.704566494 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.704398111 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591535293 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.333187366 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.788306127 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.706648165 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711984895 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.705407234 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.924722655 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.705750314 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.706662735 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.708788773 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868299817 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.708272978 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.825175707 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.708001734 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.20591529 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.708822841 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.706172681 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.623468972 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.38206042 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.711823194 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.705205079 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.709418317 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.705633719 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.705280201 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.712273121 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.667716735 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.780665822 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.70714952 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.709704247 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.71256185 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.7082521 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.873457673 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.706213796 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.142982938 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.766793999 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.951627787 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.826619986 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.709866816 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.773596041 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799481183 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.708909036 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.707123174 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.707217001 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.706552463 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.788270793 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.706689086 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.829942667 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.714657011 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.708105669 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.758116597 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.776605377 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.707941773 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596098119 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.709360825 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.707435363 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.708302209 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.996630382 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.7748859 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.707709665 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.707823193 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.707729358 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.836065041 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.829190693 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.475745586 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.710913139 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.603179589 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.712145678 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.857289272 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.710023808 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.891264372 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.712477109 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790397331 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.712517322 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.708928963 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.710523489 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.709256141 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740644518 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.709028811 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.767505925 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.710949239 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.082656563 seconds)
  done (took 394.888373694 seconds)
done (took 768.137567172 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.367705682 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.322824739 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.439881058 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.351119664 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.320802032 seconds)
  done (took 13.450320429 seconds)
done (took 15.098472496 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.796808296 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.802177475 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.732714086 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.798684617 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.729923719 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.79951122 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.782628565 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.73593249 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.766611426 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.735395524 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.768083626 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.735118468 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.721326873 seconds)
  done (took 24.554280355 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.949223641 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.952792855 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.782857025 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.946824436 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.759119404 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.945063636 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879981988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.863612826 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.864476911 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.726694416 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.723018559 seconds)
  done (took 22.045298423 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.952710525 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.960955127 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789524749 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.957988573 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762597924 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.962613146 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878705024 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.870555832 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.866623955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.726201548 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.723510506 seconds)
  done (took 22.102443072 seconds)
done (took 70.34901459 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.718712458 seconds)
  done (took 3.371455061 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.745450659 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.899720307 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.725549018 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.724011507 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.718775627 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.720529615 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.722801756 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.719888577 seconds)
  done (took 15.628341963 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.719328191 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.715404796 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.716233904 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.71793149 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.719024111 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.718661029 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.717136626 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.715955567 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.716049475 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.719332002 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.716135554 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.716249185 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.720087872 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.719941479 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.718116958 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.717127022 seconds)
  done (took 29.135036287 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.717345531 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.717909906 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.716247157 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.717494386 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.716838445 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.717951373 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.718619127 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.716668637 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.716521442 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.717359729 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.719398664 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.717430792 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.718373495 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.71680781 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.717223874 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.718398956 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.716820299 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.717096195 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.721296269 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.717695022 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.718613473 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.717812065 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.718631269 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.719352873 seconds)
  done (took 42.882631238 seconds)
done (took 92.667051128 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.626909513 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.127066828 seconds)
  done (took 8.406845647 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.721789453 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.720584115 seconds)
  done (took 5.136321046 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.719803623 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.720126965 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.721644639 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.721090123 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.721236205 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.721313088 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.720963363 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.721346149 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.720086529 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.72141283 seconds)
  done (took 18.861951015 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.721614613 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.721309865 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.719601555 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.721292933 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.720274426 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.718788532 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.721175597 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.721408335 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.722521031 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.718800841 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.722394299 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.720318766 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.721330938 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.719296298 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.721221906 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.719071486 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.718905599 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.719981553 seconds)
  done (took 32.623384415 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.722395118 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.722107692 seconds)
  done (took 5.098471157 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.719376092 seconds)
    (2/7) benchmarking "second"...
    done (took 1.719632113 seconds)
    (3/7) benchmarking "month"...
    done (took 1.719626693 seconds)
    (4/7) benchmarking "year"...
    done (took 1.719199264 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.720794412 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.720537967 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.719496028 seconds)
  done (took 13.693440077 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.723609055 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.883173716 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.953526944 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.355452092 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.724543543 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.726314335 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.638454332 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.726866742 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.728564441 seconds)
  done (took 19.116826168 seconds)
done (took 104.590937401 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.535066423 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.718288664 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.057411002 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.839098107 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.735351374 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.064733207 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.73251814 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.021202285 seconds)
done (took 42.358611109 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.789538545 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.273942864 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.314695568 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.161960893 seconds)
  done (took 12.406751079 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.705716027 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.279015271 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.767356097 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.382234556 seconds)
  done (took 19.992327859 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.100435669 seconds)
    (2/2) benchmarking "read"...
    done (took 2.07723739 seconds)
  done (took 5.841535851 seconds)
done (took 46.686708091 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725981314 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.723016264 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.728395162 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.724891745 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.727439778 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.724522365 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.724071622 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.727865896 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.727747485 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.727134951 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.729225594 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.727330667 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726995736 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725686023 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725444975 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.727055406 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726927631 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.725350263 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724160367 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.72582853 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728315978 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.725204795 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.725847601 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.725767591 seconds)
  done (took 43.089708358 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.729099184 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.725654785 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.728110652 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.728131495 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.72616138 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.728663284 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.729792621 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.725432281 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.7293452 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.72920662 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725404155 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.728065338 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.728330024 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.726294944 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728111973 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.725966478 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.728345214 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727192104 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729238413 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.725940921 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.729336981 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726662687 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.726691048 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731020269 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.726911328 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.727906607 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.728856737 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.727652458 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.729786673 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.727858706 seconds)
  done (took 53.495786248 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.734044122 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.736548555 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.729656147 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.729699943 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.731550775 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.730489622 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.729484771 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.729909437 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.730653407 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.732097424 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.730823945 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.730320477 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.731931927 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.729839504 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.729995545 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.730989472 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.730335188 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.730144877 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.730221243 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.730990776 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.731039687 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.732327938 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.730989844 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.731100577 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.731085737 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.730282728 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.730851863 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.731834161 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.730500691 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.731257652 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.730520101 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.73136382 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.731885388 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.730356663 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.731040556 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.730826744 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.735724379 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.737919029 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.732067947 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.731564054 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.731261108 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.732464579 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.731993271 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.732235849 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.732095455 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.731356823 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.731953828 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.732304136 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.731822173 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.73222196 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.731832984 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.732405523 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.732257824 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.731997313 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.732581422 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.733156797 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.733644335 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.732234166 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.732598729 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.733566031 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.732612834 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.733537218 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.734134353 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.73273181 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.732871178 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.732788602 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.732677289 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.734102372 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.732663417 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.732726093 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.733479391 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.732596583 seconds)
  done (took 126.360821607 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.734391333 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.730998767 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.730731088 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.730507797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.730155206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.733573539 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.731832346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733390063 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730759187 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734617727 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733418964 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.731445963 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730714334 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.734061401 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733162903 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.73080052 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.734920022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.732344995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.733553127 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.733543474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.733863838 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.731370197 seconds)
  done (took 39.779542755 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734267961 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.734884527 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.731276462 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.734588562 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.731441479 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.734260643 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.735085736 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.734078863 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734940281 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731661762 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732016048 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73481356 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.733273965 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731931315 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73229319 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.733249545 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737665659 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.734798804 seconds)
  done (took 32.872876376 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.733204997 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.733317807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.736289623 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.733326213 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.733496922 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.735329888 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.732684678 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.735303184 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.736198148 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.733078763 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.737221638 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735785637 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.736072757 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733279984 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736060768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.733056191 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.736879393 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73322332 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736560669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7336649 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.733622217 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736975523 seconds)
  done (took 39.832801411 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.735701272 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.736397301 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.733880121 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.733439864 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.735236877 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.736047058 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.736276127 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.734074891 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.736392003 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.736861903 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734535542 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.736396732 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.73454121 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.735026685 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.733966022 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.734354582 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737076421 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.735588316 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736687212 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.734422473 seconds)
  done (took 36.375301598 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.738439092 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739025272 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.737709221 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73835006 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739421097 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.738646176 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.739521264 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.73850505 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.737894045 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739099276 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.74024778 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.739589027 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739941981 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739386507 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.738849811 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739537007 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739469856 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740108044 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.739628676 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739352502 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.740216934 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.739310885 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.739970646 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.73950095 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.741067842 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.739491188 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740631142 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.740504933 seconds)
  done (took 50.37398285 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739841515 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738653143 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.735520466 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.73646318 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.736912755 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.735670068 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.736902157 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.736627013 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.738329752 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.736086962 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.738903789 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.739143152 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.740959034 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.740153947 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.739767155 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.739805868 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739707925 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.737027642 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738257511 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737175378 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.739664129 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739346566 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.739632918 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.737321166 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736759013 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.739805818 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737600549 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.737755139 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740177876 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.73844267 seconds)
  done (took 53.819173049 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.758120627 seconds)
    (2/2) benchmarking "in"...
    done (took 1.75940669 seconds)
  done (took 5.188959396 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.736833306 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741341493 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.740421794 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.739421107 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.738869027 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.741348207 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.741037474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738565843 seconds)
  done (took 15.589086164 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.740632609 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.741658946 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.740675467 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.742210012 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.741688093 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.741816027 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74697165 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.741650931 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.742356753 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.742759742 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.747485844 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.748823006 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.7447635 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.74239433 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.741678118 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74417585 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.740929319 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.742265853 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.743228843 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.741045791 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742757874 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.745541703 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.744675392 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.740248786 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.744870802 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.752728846 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.747287488 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.742696908 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742002329 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.747199732 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.742316158 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.739706483 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.744722595 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.743802518 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.742460172 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.743057458 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750897558 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743545892 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.750211127 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743392111 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742745328 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.74017759 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.745037992 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.74460692 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744734932 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.744662544 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.743872362 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.741045677 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.742671221 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.74791783 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.747021144 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74351421 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.741546788 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.747798266 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.746291838 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751030163 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.74478265 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.747168071 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.752231638 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.753307353 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.756838199 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.752184962 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746177734 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.745545741 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754309757 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.767068145 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751606097 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.74171374 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.74218395 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.745714218 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.751685608 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757361859 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.753204943 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.745409105 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745361058 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.7453088 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746593926 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745598443 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752936006 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.747922419 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.745973083 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745678358 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754781302 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.765890285 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.745387073 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.74627774 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.746108437 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.7456161 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.747404284 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756604887 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.74655446 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.74552976 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.745952593 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.7454116 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.747297121 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.747001491 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.745723586 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.747081279 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.743385093 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.746618463 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.745999706 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748788332 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.755324075 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746021805 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.747717227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.752934828 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.746245717 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.745486904 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.752887147 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.746405611 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747221055 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.748674718 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.753721544 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.744448384 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.749636847 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.754787023 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.747888665 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.749794632 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.747344142 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.747614062 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757873942 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.772201177 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.747363467 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.747050348 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.752591909 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.758328788 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748639393 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.750782731 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.747473215 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.745019471 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.744910271 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.749710237 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.747975138 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.749127342 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.748005518 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748203552 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.745867262 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.747980491 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.748512768 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.749792599 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.749503252 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.748655901 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.749744066 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.749725997 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.749265582 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.750055963 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.755828652 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.748645542 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.748792841 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.749867698 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.746647059 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74793691 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.750397564 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.750004464 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.749393941 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74996505 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.749143875 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.749235373 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.750376327 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.748481902 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.749302514 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.750230785 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.753030497 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.750258543 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.754193641 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.749878784 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.747463747 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.748764406 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.749314915 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.751078295 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.750078969 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.749332838 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.753795756 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.75815062 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.750330042 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.751820229 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.753586716 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.751751494 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75169062 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750596244 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.753538843 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.758370492 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.750409513 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.757027142 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.751582482 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751460463 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.75114685 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.750389514 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.750201161 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.75058116 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.753459567 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.75742617 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764180836 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758874304 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.753551869 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.754678309 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.752768594 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.755241572 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.755418399 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.752457706 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.751521026 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752082758 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751513923 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751520185 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.753174291 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.751858305 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.751532832 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.751031602 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.752317538 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.753005238 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750890283 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.752587981 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753135828 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.748755247 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752506664 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753372243 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.752166436 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.749088135 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.751335619 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.752579973 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.75145069 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.753431462 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.758841469 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.74901288 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.75419446 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753861517 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.75483958 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.751905717 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.752387364 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.75551127 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.752560592 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759159069 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.754506861 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.754234913 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760470193 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.753385314 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.752980698 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.7557373 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.754218472 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.750785721 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.757093356 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.760652615 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.753875029 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.754201692 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.754198829 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.753699763 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753815971 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.759446694 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.75109432 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.753216181 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.753346167 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.756069141 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.75123259 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.756551742 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.755127861 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.75511211 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756486959 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754501369 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.754199931 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756444839 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.754062254 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.755139301 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.755103875 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757746301 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.762373746 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.758855558 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.755260395 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.75683072 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.756110432 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.757812546 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.755151537 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.75554044 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.755495154 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.767990219 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.763221936 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.760406316 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.756936471 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.755724444 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.76125903 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.756612105 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.760641999 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755800995 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75691867 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.756104217 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.755575965 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.752380106 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756843014 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.755977367 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756304165 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.757171587 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.759082733 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.756142358 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.755257949 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.756633041 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.757342162 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.757230972 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.756219859 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.756421345 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.759535199 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.758058586 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.757183651 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.757255829 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.762335033 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757530334 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.757854642 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.756504137 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.756692437 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.756895235 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.757578238 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.758442992 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.760264941 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.764627358 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.760686368 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.766364102 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.758726426 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.766756822 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.757865462 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.761210055 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.764842505 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.754204261 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.757448132 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.757526311 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.758143587 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764774174 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.758308306 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.75906205 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.761923075 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.758174677 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.758409031 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.758491841 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.759099556 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758868403 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.758543887 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765727192 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.758841111 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.762817733 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760074273 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.755945367 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.760100575 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.758524561 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.75895397 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763434517 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.759534536 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.759661038 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.759229954 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.760204573 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.760428943 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.759893585 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.759211604 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.755926149 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.760243687 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764497298 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.760800227 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.76389652 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.75924859 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.766822639 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760259473 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765712741 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.760769512 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.760276781 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.759937695 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.758847571 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.761559033 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.76046178 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.760513008 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.759575242 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.761538707 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.76381206 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.759670046 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.762264118 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.759929147 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.76103951 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.759810195 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768696556 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.782321161 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.761598825 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.763517271 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.756390608 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.76133893 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.765333677 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.761086107 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.760183055 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.763420226 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772225475 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768070189 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.762153266 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.762056879 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.761452556 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761410212 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.76012183 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.761500001 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.76233766 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.760898533 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.762024878 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.762059217 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765365173 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.761644854 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.763758849 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763095048 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.762778842 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.772304137 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.762590142 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.76348447 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762882722 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.762577712 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.7623097 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.76200455 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.762051216 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763017625 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762332937 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.763277 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768352461 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.768229218 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.765424391 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.764391682 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.762544948 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.763917444 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.764788451 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.763444442 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.763024148 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764226262 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.764318773 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.762965105 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.764393224 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.762752562 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.763660241 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.76360877 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763050609 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.7652557 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.770535118 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.763920214 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.761314187 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.762453516 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763502481 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.762416743 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.7641526 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.771093173 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766609256 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.772726366 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.771349083 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.768716118 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.764036327 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767443925 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.771193145 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.764499317 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.765395443 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.764245621 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.766225033 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.765734317 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.768063962 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764756143 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.771389655 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.764433468 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.764716233 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772302779 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.765927541 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765482344 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.766395276 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.767964151 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.765281188 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.762123934 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.764932763 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.76492527 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772035044 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.767420899 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766027402 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.767045733 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.763376699 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.766811674 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769110994 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766074624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.767492945 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.763120199 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.766389983 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766373566 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.765477611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.763326416 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.765261773 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.765622107 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.769045428 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.771952892 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.763188022 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768381276 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.766127491 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.766666804 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.767018102 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765883906 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.763549033 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.763240197 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.766415748 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.76729274 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.76705013 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.769285379 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.76730041 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.767217811 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.767464195 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.766707831 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769199707 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.776795404 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.774214926 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.765082171 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.766709781 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.768374762 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.770011379 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767825741 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.767369267 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.766784887 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.769353158 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.768291861 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.767610055 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.767321969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.771291649 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783435366 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.768573041 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767516948 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.767683423 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771626503 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.767854439 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.764815541 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.768254123 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.770888473 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.770827015 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.776681978 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.768968958 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.77435242 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769425746 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.769100056 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.772923656 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.771557356 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.776029193 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.771350279 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.768970844 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.770339581 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.772905674 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.784362019 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768522614 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.778200181 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796332445 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.771182333 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.77084087 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.770333546 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768227463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.769258843 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.771027482 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.770585363 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.7695143 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.769049136 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.770046199 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.770555078 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.775062815 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.771785186 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.769372902 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.769228211 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.770227099 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.77111817 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.767568047 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.769946429 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.768866641 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.770484835 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.770612035 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.770733679 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.771325287 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783846743 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.780812269 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.77143448 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.771006675 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.767544666 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.77464654 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.773848417 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781477279 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.77778788 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.770885624 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.77143504 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.772040578 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770946481 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.767945699 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.771833711 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.77095616 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.77252194 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.768436313 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.785576735 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.779127572 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.775818865 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.770822839 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773272198 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.772044313 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772496604 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772333256 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771626696 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.773571631 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.772641474 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.776039194 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.771680875 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.771253612 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.774510919 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.779924821 seconds)
  done (took 1049.728001131 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769508949 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76993732 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.768943401 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.769152862 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770243197 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769636108 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769403892 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.770145803 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.769076025 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.769982117 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.769922095 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769294299 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.76998694 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770180204 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769510643 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770565782 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770098645 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.770534935 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.76986997 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770072108 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.770764491 seconds)
  done (took 38.869778437 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.773071759 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.769976272 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.770641427 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.773917884 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770963494 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.773671088 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770629676 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773734018 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.774032985 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77117226 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.77494112 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772828874 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.77106453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.771289756 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770627792 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775031964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.774163925 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771591114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.773463987 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771788168 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773852629 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.771467338 seconds)
  done (took 40.697186719 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.775231889 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.775145762 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.773952594 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.771181549 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.77546574 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.771122862 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.775007357 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.773844645 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.774625483 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.776054154 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.773975217 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.775957275 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.780920094 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.779707038 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.776801526 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.774764587 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.918377028 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.775326872 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.776609641 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.77547663 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.772637488 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.781443723 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.77309473 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.773216934 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.775864782 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.775364696 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.776878375 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.774887126 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.775401122 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.776556533 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.779790602 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.774775214 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.776050804 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.777826477 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.775849892 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.776921887 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.780153625 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.776538844 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.773030597 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.776333875 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.786760419 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.795921672 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.776819364 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.782777464 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.775590774 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.776538964 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.779680411 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.783716522 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.773478118 seconds)
  done (took 88.909707277 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.775372185 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.776861211 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.773966659 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.776555321 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.776449638 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.776875177 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.775922521 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.776539026 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.7742517 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.774190878 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.777591496 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.773957705 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.774777937 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.777050466 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.77729511 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.773893044 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.774300799 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.773972188 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.774591103 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.774375376 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.774345894 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.777869537 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.777455181 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.774667898 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777089827 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.77503479 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.774684807 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.777706202 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.775194502 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.774484777 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.777188374 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777469652 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.777783934 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.77507791 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.774495689 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.778456475 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.777754718 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.775293661 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.778705054 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.775534689 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.777677304 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.7778965 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.779018238 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.778524293 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.776671896 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.77554005 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.775719972 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.776149424 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.775695395 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.779770233 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.779035581 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.776704646 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779253565 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.776798471 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779962263 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.77905439 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.776166201 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.777079301 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.779423949 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.777456955 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.776951738 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.780547666 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.777142766 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.780266302 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.780603329 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.777591456 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.776636303 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.779347212 seconds)
  done (took 122.526955163 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.78018273 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.780723765 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780503572 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780877241 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781057175 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.781282929 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78056441 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.780517432 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.781039621 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.781367412 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.780659224 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.780902931 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.781951145 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.780732158 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.781675478 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781468207 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.781300563 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781843121 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.781714409 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781106389 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.781159432 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.781722521 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.780690796 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.781400928 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781839745 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782130325 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781752553 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.782120859 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782773526 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.782585988 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.782358609 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.78190396 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.78210056 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.78267035 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.783029615 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.782956555 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.782178052 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782541211 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.78295133 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782568195 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.782911812 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783065631 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.783507446 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.78291047 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782618191 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.783460863 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.783346935 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.783520312 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782624898 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783296143 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.782620385 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783553849 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783343584 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783135348 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.783177979 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.782653077 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782803327 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782835564 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783088482 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.783137009 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784120688 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.782797898 seconds)
  done (took 112.205937923 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783055444 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782961883 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.781143731 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.780473837 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783301145 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781003007 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783589737 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.784481197 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783194612 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.78392949 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783756985 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781847899 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782223134 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784268573 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781549481 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783714697 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781927923 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782161912 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783662456 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781577401 seconds)
  done (took 37.366925343 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.781152311 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.784083018 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.781472374 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.783106336 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.784146999 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.781354272 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.784943764 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784997439 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781173881 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784865105 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.785074795 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78501721 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782115389 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.781759963 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.786145685 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.782682856 seconds)
  done (took 30.2483721 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.782435815 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.785575001 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.785271089 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.785976636 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.782527175 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.782449493 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.784998096 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.782295796 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.782920818 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.786650927 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.785792687 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.785564608 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.785571824 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.785595159 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.783612181 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.786543375 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.783136652 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.783532201 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.785902728 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.786103971 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.785280796 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.783948353 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.786159118 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.786224196 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.784179839 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.784989036 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.783344228 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.783363605 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.78375045 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.786221741 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.784088635 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.78424745 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.78381015 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.784594531 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.786532282 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.783641838 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.785692726 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.786602368 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.787361 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.7867719 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.786684124 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.784528654 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.788299653 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.788229326 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.785059751 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.788025656 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.785844328 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.785986722 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.785515219 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.786267562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.787532783 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.788540996 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.788825486 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.789529648 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.788337075 seconds)
  done (took 99.917549809 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788164221 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.788504178 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.784463006 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.788760611 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.789135883 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.785873846 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788477869 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.784965741 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785692134 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789690082 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786101712 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.787944722 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785702406 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.788322477 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786712849 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78804171 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.786058879 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.786840551 seconds)
  done (took 33.887833375 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.786277179 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78669457 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.790295666 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.786030901 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.786504036 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789501543 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786721703 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.789471104 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788530172 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.787337588 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786538138 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.788796143 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788905233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.789586217 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.786776313 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786415108 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.789301051 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789137008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.787696242 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787498456 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.791707406 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790300413 seconds)
  done (took 41.058662401 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.790240014 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.789227815 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.806174862 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.809864236 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.811010794 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.826274483 seconds)
  done (took 12.552209043 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787067892 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790899869 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.787834243 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79004499 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791467199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787883701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788365498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788102925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790533999 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788819634 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787735408 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790271511 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790480784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788574712 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791241062 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790524739 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789535723 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787641726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789269332 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791604252 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789131028 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792059829 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78912188 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788869148 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789199564 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789576085 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79123198 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789074382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789419935 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791620409 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792158762 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788960604 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79221246 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788934812 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792243896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791631578 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789713792 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792347533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79263605 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790074981 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.792853325 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792279529 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791506906 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789396395 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793171431 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789592208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789610863 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790374667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789459762 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79388233 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792674641 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790376744 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793320734 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792650958 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792761788 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79433134 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791254151 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791564348 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793070059 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790978678 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793182627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794573561 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791399021 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791180417 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794500293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790862679 seconds)
  done (took 119.911771777 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791306619 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790260641 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791182963 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791730414 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791913097 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791949077 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791545907 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791662272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791750427 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790813027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7942639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791292332 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791605528 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792647239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791713939 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791703008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792397347 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792152877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791595576 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795077176 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791912576 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792292645 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791659526 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791915812 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792958319 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795286612 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791764053 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793726447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791981224 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79270306 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793336915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792852613 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792166825 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.792264326 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792235506 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792823766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791900627 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792252227 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793598163 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796262357 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79403567 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795810119 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794061429 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794030654 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795172271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793502714 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793832833 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793982227 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794251428 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794914227 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794193247 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79463815 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793886791 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794095116 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793227332 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793929285 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793113485 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793329359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793895779 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797138865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794803627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793416694 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796965765 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793989312 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794664806 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794055335 seconds)
  done (took 120.074165343 seconds)
done (took 2446.391533116 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.836697988 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.8331319 seconds)
  done (took 15.396011363 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.958087229 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.912054068 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.796220498 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.810982671 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.796314133 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.813550691 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.813521945 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.796006992 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.796675361 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.796574428 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.795739182 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.982871119 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.794608429 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.796867862 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.796955639 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.889319306 seconds)
  done (took 51.077288484 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.801328311 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.801348103 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.812311614 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.802881044 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.800283817 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.813834792 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.836925009 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.804096517 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.842644109 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.815005315 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.874716819 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.811258732 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.799555477 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.850292165 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.815002069 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.815706698 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.89330305 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.877354047 seconds)
  done (took 34.596189704 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.878817025 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.805777571 seconds)
  done (took 10.420043286 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.81246367 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.794993427 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.809873699 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.802499026 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.807164718 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.806132867 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.829206407 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.83496514 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.820168376 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.803554161 seconds)
  done (took 69.854239508 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.806080374 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.802437455 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.80206621 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.799764858 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.793640966 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.797223812 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.800234978 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.792843883 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.459377366 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.841220971 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.808596051 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.807036175 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.800380063 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.802911415 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.798556895 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.825283018 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.923162046 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.798519638 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.799098794 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.806373139 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.8008 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.871442701 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.815726215 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.803475177 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.832310517 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.465039645 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.811097671 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.807680911 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.922531483 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.79899485 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.80107353 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.801854871 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.803358207 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.185218943 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.084035651 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.802018323 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.816311933 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.81009565 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.799206056 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.931124906 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.802667656 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.808175485 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.712135301 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.064290614 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.913043166 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.850004324 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.150483411 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.818741366 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.804527192 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.833107193 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.804256296 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.803608245 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.815992168 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.319866424 seconds)
  done (took 128.865074585 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.798031769 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.060537534 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953525205 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.799772351 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087159061 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006565633 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.799120591 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848547397 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.800607249 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.028502978 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.019395513 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910182304 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.79852403 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.795155815 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.799137932 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.7970822 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961319247 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872440046 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.801271291 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.797678676 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830624894 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043502783 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.926983342 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.801374542 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.820907187 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012627787 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.925777174 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.90781931 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.243829904 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.797512096 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.864790715 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.800421064 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.799297931 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.798026286 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955939258 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896506979 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887934803 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.800434848 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798044862 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.798938467 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.475595033 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996648883 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.898330689 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.942870556 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.054497519 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004906724 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.587011309 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.798262041 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.539749782 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.961552439 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.035292875 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.032148633 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.924823087 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.801736395 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.060451296 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.797745113 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.79873168 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.035604308 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044888496 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.903038885 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800325106 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.799848681 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.7986797 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.049783601 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.802671932 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.897389113 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802764927 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802222813 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.898135741 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904717461 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.050109597 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015215053 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.834739147 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.099778212 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.265456662 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.049006361 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.870708218 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034428563 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.802974453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799764959 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886444794 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.649624477 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.00203195 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.051393178 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.056561011 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839840563 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.527381841 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.800025562 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.029656433 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.02548448 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.055196445 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042080316 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.95511321 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.118001757 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.801257297 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.801295312 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.042797406 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941737523 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.805549355 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.164235293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036913719 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.382881777 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.833538664 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113870758 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936867581 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.804852707 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.445145875 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.800604364 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029945633 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.846177255 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.803141819 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803549422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.025809633 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.78365872 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.802390131 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.515207497 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.867645767 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.806006961 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038185478 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.806899656 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068641794 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805650718 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043355233 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.393803881 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.837991768 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.977165223 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.045917158 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.805602447 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.062521842 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.050396201 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.923149447 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077601256 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.72866506 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.804461453 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095017958 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.804983172 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.802479159 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.977472708 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.805057743 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.031905811 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807163226 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093689393 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830888998 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965379489 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806654219 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.063148622 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.841240832 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.858307146 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.806529297 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.939128128 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807161624 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.780004741 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.959613302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805406126 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803733951 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.335557568 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.80629151 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96296833 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.038952515 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83116477 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.880498236 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.479638037 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.804772767 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892591143 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.833064361 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.149217708 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.805083446 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.02131332 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.806908856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.344223831 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.804486806 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.047914126 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.04002302 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.808278697 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.805868232 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.711564347 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.805142759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.804488877 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.968056915 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.62009409 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.804903699 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009764699 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.808364188 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939255968 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.810762444 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.884295104 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159339485 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.805317821 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.806192673 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.80717172 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.80604157 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.807843392 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016311942 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.838937521 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.338280891 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.947688653 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080543583 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.12907761 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.059264564 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.85457082 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.810041747 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.05526757 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.810115532 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.873462817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.810879441 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831205924 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042744029 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811011897 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021595497 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.094751726 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.792229474 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857476531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.811763382 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.80712133 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.722131464 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.961126832 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900345063 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.810305796 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.807305166 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.925916578 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.935624779 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026664846 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.808340227 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.036572966 seconds)
  done (took 889.138013352 seconds)
done (took 1201.072487604 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.806782307 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.806587937 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.79718736 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.813611922 seconds)
  done (took 28.968107979 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.818210622 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.8155714 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.816969909 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.816562621 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.818096 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.815651225 seconds)
  done (took 12.646896366 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.84430395 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809851181 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.812768914 seconds)
  done (took 21.212813057 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.886110811 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.200753325 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.932390103 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.239453448 seconds)
  done (took 10.005683773 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.819667989 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.818224961 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.818657344 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.819600177 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.820479066 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.821750335 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.818934515 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.82088602 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.821822841 seconds)
  done (took 18.128512522 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.148112942 seconds)
done (took 96.852546482 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.80764867 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.846742419 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.812678283 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.99710606 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.840807968 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.268910057 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.099333585 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.819893384 seconds)
    (9/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.243752828 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.952121578 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.957716489 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.728893797 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092585097 seconds)
    (14/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.428321924 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.818389281 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.137514906 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.122227196 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.845511911 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.831907303 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.496758093 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.200988941 seconds)
    (22/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.942017857 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.83528432 seconds)
    (24/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.950900446 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.280683307 seconds)
    (26/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.071487977 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.203485403 seconds)
    (28/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.841543652 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.831978433 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.897415568 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.873249646 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.8391546 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.979351606 seconds)
    (34/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.064598957 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.111993521 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.877458666 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.957223216 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.98124087 seconds)
    (39/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.836510746 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.081282401 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.16161848 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.931731552 seconds)
    (43/309) benchmarking ("sort", Float64, false)...
    done (took 5.583867557 seconds)
    (44/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.949277258 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.732034811 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.999316129 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.815089249 seconds)
    (48/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.291850492 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.878799047 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.398112549 seconds)
    (51/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.278568572 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.877687343 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.917026618 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.071950938 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.810984089 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.053779804 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.889378554 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.05269939 seconds)
    (59/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.934051342 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.866963196 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.791830976 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.700826301 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.804483749 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.224715646 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.815870413 seconds)
    (66/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.065806825 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.89819262 seconds)
    (68/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.485963724 seconds)
    (69/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.950328196 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.922123823 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.922671148 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.628434994 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.191372665 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.923751367 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.893836648 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.334621994 seconds)
    (77/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.864731474 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.813035729 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.886532461 seconds)
    (80/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.925300493 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.050844591 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.537535896 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.302686014 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.914847755 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.813502168 seconds)
    (86/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.704299963 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.143757494 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.771627562 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.625585214 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.161930854 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.115002288 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.816899278 seconds)
    (93/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.955430571 seconds)
    (94/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.901397362 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.885554696 seconds)
    (96/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.828899354 seconds)
    (97/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.929732324 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.48707458 seconds)
    (99/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.801062304 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.499469807 seconds)
    (101/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.895983012 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200506477 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.023139257 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.838652707 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.886605704 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.797466156 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.104958284 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.814828581 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.816350506 seconds)
    (110/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.90161029 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.151201912 seconds)
    (112/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.818634822 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.982581153 seconds)
    (114/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.387022516 seconds)
    (115/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.053809337 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.015683658 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.006808097 seconds)
    (118/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.983629876 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.012267127 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.919600758 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.952342795 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.288782749 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.836725821 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.160870194 seconds)
    (125/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.033253859 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.14970602 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.074987641 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.968489879 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.801164009 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.08575044 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.037989655 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.109515478 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.079356685 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.159297294 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.850318812 seconds)
    (136/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.848929242 seconds)
    (137/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.821138134 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.186351004 seconds)
    (139/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.37014309 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.93837075 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.125700355 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.906555665 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.901628798 seconds)
    (144/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.942418348 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.002509677 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.24640977 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.823156114 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.017452606 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.824057518 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.038571522 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.844908084 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.74821082 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.45940805 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.01984294 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.773488578 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.899892632 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.356851413 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.008156586 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.097399714 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.156962762 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.146758804 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.834203766 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.295471328 seconds)
    (164/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.015792684 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.812753234 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.911438568 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.810542862 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.984458094 seconds)
    (169/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.572083949 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.791346849 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.171868725 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.995238258 seconds)
    (173/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.7906365 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.964596639 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.740113393 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.997448845 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.709709556 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.084872535 seconds)
    (179/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.322175646 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.968876779 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.311236713 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.788382873 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.295176227 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.825226831 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.902871599 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.092990131 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 4.771602514 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.782764834 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.892711317 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.193386681 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.830873727 seconds)
    (192/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.307063412 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.80065082 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.834293837 seconds)
    (195/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.379507762 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.809583948 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.907554968 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.722171739 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.851627914 seconds)
    (200/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.786366703 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.932630705 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.710616612 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.117208869 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.002757271 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.855966867 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.773117194 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.849194334 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.656302172 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.981193277 seconds)
    (210/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.779884861 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.857062062 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.844546279 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.014073535 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.244741447 seconds)
    (215/309) benchmarking ("sort", Float32, false)...
    done (took 5.526695558 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.802526664 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.992656438 seconds)
    (218/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.104338047 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.39508875 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.913045554 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.7575984 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.903392875 seconds)
    (223/309) benchmarking ("sort", BigInt, false)...
    done (took 6.879869398 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.816649439 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.769410602 seconds)
    (226/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.588998782 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.805426317 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.821774114 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.919077431 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.878242724 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.161812188 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.768996471 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.865285736 seconds)
    (234/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.862708985 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.011556847 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.763109432 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.461541131 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.911109225 seconds)
    (239/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.061401425 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.790910174 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.775123739 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.911516114 seconds)
    (243/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.878295068 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.312291774 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.001132565 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.762672649 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.851490809 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.954613155 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.874588835 seconds)
    (250/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.973912446 seconds)
    (251/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.96223002 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.025291676 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.141175452 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.763949636 seconds)
    (255/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.966181576 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.074328352 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.217430983 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.805024553 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.922695416 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.742140886 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.978393872 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.961051311 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.155374677 seconds)
    (264/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.839110339 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.896960878 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.976845399 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.885591057 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.796447037 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.152815117 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.867145447 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.95304139 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.428026438 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.788668106 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.792064932 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.781472356 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.778412908 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.968702738 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.77979027 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.542057721 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.039680767 seconds)
    (281/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.781068679 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.449692304 seconds)
    (283/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.261665636 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.865173752 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.85958501 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.775804243 seconds)
    (287/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.987786344 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.075156302 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.04893133 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.902662218 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.802509113 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.777847171 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.944900279 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.845363548 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.508480655 seconds)
    (296/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.786465715 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.074684243 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.814003564 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.786323348 seconds)
    (300/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.906231645 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.971528743 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.082483348 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.37499489 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.811927827 seconds)
    (305/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.088318649 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.803970677 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.467951547 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.164506547 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.783161173 seconds)
  done (took 987.168103402 seconds)
done (took 988.971482553 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.813521846 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807561874 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.791458657 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.813365053 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.903764808 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.823893328 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.802298336 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.794802904 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.839285305 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.8417524 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.790345501 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.823292691 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.793316503 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.791746175 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.79128305 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.806013313 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.102165529 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.819817931 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.809516238 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.80142771 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.809684575 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.791047553 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.841235197 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.822973593 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.795905796 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.794136708 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.795949699 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.811724995 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.904345528 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.796512969 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.794652599 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.804478269 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.102199172 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.818676147 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.788197129 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.812368426 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.8031545 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.802047079 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.796337935 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.825629698 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.19478365 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.829099283 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.794691968 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.793797582 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.794167844 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.7985868 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.795280162 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.800468081 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.806499148 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807092775 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.190793937 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.843103957 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.795903457 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.79269516 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.803155792 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.793386536 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.794779006 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.80746049 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.810798353 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.807779617 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.0925187 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.820362221 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.792564796 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.80586005 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.797421058 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.222738384 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.822143299 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.792454539 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.188608541 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.829672704 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.223893735 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.834835389 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.789807945 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.803108751 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.822104274 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.097673281 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.812037187 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.784638502 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.792015746 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.783945403 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.795241669 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797805115 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.791664697 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.7845077 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.797327714 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.815548972 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.793266173 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.786979729 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.789426971 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.800026937 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.787380269 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.790631931 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.783965105 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.778615091 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.787293817 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.782460439 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.782271949 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.781095487 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.784757919 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.786988755 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.174443423 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.827835575 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.774475488 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.771470801 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.775237013 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.785795341 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.170455577 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.810253234 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.794747704 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.821072875 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.774737789 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.071623419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.803308239 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.788686459 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.782150207 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.776803423 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.766836361 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.069713741 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.195313441 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.821617392 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.773539592 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.766913752 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.784259044 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.770523832 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.764809341 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.521336207 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.794011422 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.779445241 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.887020366 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.77606595 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.797793846 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.765358752 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.76576182 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.796549733 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.779353157 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.795104674 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.767777692 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.777074339 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.777420162 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.758145499 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.773077902 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.771551464 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.764445486 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.765069248 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.754096449 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.791922385 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.774825006 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.772205452 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.780172098 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.879146269 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.754201739 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.055692426 seconds)
done (took 280.97640686 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.82382782 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.75156265 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.852571185 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.749439431 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.831740574 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.836502494 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.746879376 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.747203066 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.744408251 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.119593315 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.744559969 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.744930937 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.741055063 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.741886431 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.828159023 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.745147471 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.742555395 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.078891701 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.744018681 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.814662203 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.739487659 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.737635921 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.73954065 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.111231855 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.736733016 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.731963011 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.808339421 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.735885477 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.072904823 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.733463308 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.733272258 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.072143215 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.826457716 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.753215641 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.745479784 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.741057062 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.818470263 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.739660367 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.816748187 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.817013752 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.835169784 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.77608802 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.731643416 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.726968065 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.73827924 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.73628053 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.731974136 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.772459944 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.730507239 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.733312406 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.091388193 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.745677161 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.743133301 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.733378881 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.732379148 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.757602121 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.733578077 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.737046142 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.827432231 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.736766686 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.798250268 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.1078363 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.109827837 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.736023151 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.731986335 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.734593095 seconds)
  done (took 175.597622474 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.803023095 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.808674784 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.802824198 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.739344638 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.784468882 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.8043221 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.740216565 seconds)
  done (took 14.148365837 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.743091022 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.73694665 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.785921218 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.786045842 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.736668363 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.885832991 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.736995068 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.74801598 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.734300704 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.78959634 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.737982851 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.736841218 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.745175548 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.730596301 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.785253793 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.749869155 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.852856832 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.738837435 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.738758212 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.88878261 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.733880836 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.744614178 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.791400056 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.748737032 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.73937446 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.743685217 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.3213396 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.738400854 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.734931299 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.737465887 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.734345244 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.780244047 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.738040094 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.738839091 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.735425113 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.85318907 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.738014592 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.735204854 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.738080777 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.737453112 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.738511061 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.738571391 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.738254782 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.736203631 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.738328818 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.762131104 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.738232415 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.738152203 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.738581066 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.738825355 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.789291303 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.739625879 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.735437593 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.736731112 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.793956903 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.74611239 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.741092313 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.736185843 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.739881633 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.736556916 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.891051659 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.787788059 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.740043304 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.787379286 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.740740558 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.739671743 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.739291157 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.739678936 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.835213598 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.739946178 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.788370445 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.737155544 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.898034075 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.764195967 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.740520996 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.74245056 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.742468042 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.741418488 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.736278815 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.746627523 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.737890829 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.741522091 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.7465216 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.738098627 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.73752958 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852345616 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.848032889 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.738291237 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.752961535 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.748311223 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.738356179 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.792988069 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.740800601 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.739240762 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.795038489 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.85686076 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.796441376 seconds)
  done (took 193.000362446 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.745538611 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.748697707 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.74269434 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.758482715 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.741053414 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.74069224 seconds)
  done (took 12.147687786 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.744246937 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.743656328 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.74141694 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.741360416 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.742577367 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.742063612 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.742471148 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.742746109 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.745891326 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.742073058 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.742946951 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.743665558 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.743595321 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.743143562 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.743302919 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.74251216 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.744221041 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.739801102 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.741616067 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.743596606 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.901595898 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.742907269 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.74333912 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.744144335 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.747981833 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.742598869 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.751414877 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.742852457 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.742891874 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.749808263 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.747056616 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.743880296 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.743804264 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.748012032 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.748117011 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.743983464 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.74638123 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.74527913 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.740664334 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.744954501 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.745386755 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.744501959 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.74282689 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.745837244 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.746089767 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.748407814 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.748473252 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.75167212 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.744645436 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.745515848 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.745354277 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.743647319 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.745742459 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.744576745 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.746768416 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.749531328 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.748699946 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.745443057 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.74493163 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.745919609 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.745363121 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.745098379 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.746573584 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.748730044 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.743511204 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.745576703 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.745997476 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.749096813 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.745164498 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.745608585 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.746735222 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.742707128 seconds)
  done (took 128.466352543 seconds)
done (took 525.058708377 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.926737584 seconds)
  done (took 8.602030642 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.806600547 seconds)
  done (took 8.529029127 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.097493192 seconds)
  done (took 9.779674554 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.762798648 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.77935789 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.755112842 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.743065488 seconds)
  done (took 28.742419542 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.930180271 seconds)
  done (took 8.608428847 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.760911001 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.735300818 seconds)
  done (took 15.206497937 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.774132817 seconds)
  done (took 8.445867771 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.030593273 seconds)
  done (took 8.72585095 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.762099611 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.770636232 seconds)
  done (took 15.221012661 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.721028449 seconds)
  done (took 8.393303202 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.219363168 seconds)
  done (took 10.994372056 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.748166459 seconds)
  done (took 8.527833078 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.813659404 seconds)
  done (took 8.485921527 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.759677199 seconds)
  done (took 8.431207992 seconds)
done (took 158.368488183 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.738226633 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.73777735 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.738549808 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.738765314 seconds)
  done (took 28.625482658 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.776436837 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.776902704 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.777162114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.788037601 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.7794963 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.775781573 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.768982104 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.769878887 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.787525998 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.779850621 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.778770712 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.779452507 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.777550343 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.76950281 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.778843831 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.779624806 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.78746602 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.779382005 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.770064507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.779827615 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.74478788 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.787773715 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.779791876 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.744912618 seconds)
  done (took 44.291470553 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.94190722 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.816031838 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.897117106 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.796933755 seconds)
  done (took 9.124405663 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.795995159 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.797885433 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.808722424 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.848838687 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.870763611 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.806641947 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.771182933 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.766548686 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.751937038 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.797637372 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.872846843 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.7906686 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.897813698 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.744023185 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.931517866 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.744527813 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.745219778 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.797370206 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.848382909 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.863013318 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.746196199 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.795876893 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.800125281 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.791798632 seconds)
  done (took 45.059235983 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.740028674 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.747939637 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.74681787 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.741797145 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.74024391 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.739195717 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.743750324 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.737864362 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.758956817 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.738173286 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.737271694 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.731186113 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.730490554 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.730362954 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.730607589 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.743484339 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.746843448 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.728422447 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.733139867 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.734497793 seconds)
  done (took 36.454526902 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.722476582 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.576141971 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.074098682 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.979029493 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.723169616 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.723931764 seconds)
  done (took 30.45743509 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.742488491 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.73453287 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.728144875 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.786191373 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.86500634 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.734360002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.730551073 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.741462069 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.775494862 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.791647214 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.751827934 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.758217435 seconds)
  done (took 22.799201616 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.725303382 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.739243209 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.726240884 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.756748646 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.740203174 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.738817223 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.736801638 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.723166808 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.743522473 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.748700374 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.737192704 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.742919987 seconds)
  done (took 42.522252993 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813853994 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.615662493 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.779575225 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.446551226 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197320751 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937131782 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.23699813 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064305615 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.72866355 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999310437 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.738542149 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977422735 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.978960734 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817364917 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.7258131 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.21863177 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028324629 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964902203 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.75522538 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56948244 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911293296 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260607893 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.670170106 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920768477 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997497397 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.916990752 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.046811585 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.743317429 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926625726 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82557304 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796796922 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787335423 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061499252 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169595183 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885991076 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797164778 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.478343655 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.502874306 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.938112316 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.554251958 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.766732086 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.932538002 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800983576 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792141862 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.726402959 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268075812 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132500582 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.797302402 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.504122485 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.792241726 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804636001 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881765204 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.796877207 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.608806632 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786065116 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.073235222 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.789817459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79992399 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365355424 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904856217 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38589932 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.734980526 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.989720264 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.558777389 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28705975 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.950782092 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.801873918 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8018788 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732415581 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.559566921 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927827518 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945090819 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.819487344 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451413438 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105500854 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.882134848 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.889509918 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09706088 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.552495435 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.734735132 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027788608 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.756594415 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734718768 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.667624126 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.734211992 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08196806 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84000674 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.449732843 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841390929 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133442932 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.808052638 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814320724 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805244869 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021901382 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.679364094 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798289688 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.597595096 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161281656 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819489849 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13596847 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732249276 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.801718751 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052918178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.009093933 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.87978886 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.388608519 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962460818 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799139365 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.887129641 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.565123812 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906278879 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.081891318 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8626699 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895485438 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94466612 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.75983743 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11798707 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837897443 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.983026893 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.822367462 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078538291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.152238577 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103509472 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873266707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818558456 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.808878653 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.578732749 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444308778 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.080817435 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.815148266 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.163860076 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921488569 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.815268777 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750328922 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.426652631 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.83993687 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.92617245 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043347041 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.616971802 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18732894 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749728472 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961071163 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.934199504 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.040037709 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.478726579 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.903163051 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074082976 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.157263481 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.993058089 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924219241 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836102498 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905309217 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838114767 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.082726627 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.167623333 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.82032735 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.820888979 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.582957475 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.899192396 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821921554 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.826369342 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620864385 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11521408 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.852620609 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.825980873 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711883927 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.837222374 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889649689 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829040021 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.83248428 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.374734839 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.590249608 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.83341984 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.475953019 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067315924 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832533378 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.582792876 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016876083 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.909171498 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111289618 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891823865 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.761659034 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.539247456 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.520627548 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827938864 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76261257 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.827592116 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836632339 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839372223 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.207728146 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116152551 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87646183 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.613544027 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.949822613 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840692369 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.833528952 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828940992 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.354124981 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947058183 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312001944 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939705746 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9690128 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.844733339 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766385907 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.835828566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836559293 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832101851 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.7885504 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884524573 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.591459173 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292331223 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091047339 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.494719291 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850093284 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.61648676 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.967523514 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.851319934 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.656155128 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764372422 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.931264644 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92755244 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.872735926 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.604827834 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.641033446 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432277471 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186272539 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191146926 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3184484 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.19011972 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.229115162 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203482212 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100533772 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393941926 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92394254 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207986244 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808752182 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948853666 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.52539294 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225531605 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879988296 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092718266 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265507759 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.730603232 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030997797 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077218713 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900014772 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.635624418 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.889329905 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.070672689 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00960161 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.742219767 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091345472 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199216743 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.659765409 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.978520684 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.865619214 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.57977771 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951496215 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.582420082 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227986119 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351333078 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.904621525 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375054519 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868389369 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.312172819 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230538357 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.151599689 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.952305174 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800346042 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878153631 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.877647464 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.866981984 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.842528856 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.796643529 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.153365219 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875737579 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104838096 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.084947101 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14482604 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.774403353 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.872562064 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866352692 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180652562 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.507968575 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101586946 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.170417746 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.430709004 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874004687 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800023096 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802982242 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.559412035 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876103553 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.845777245 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101514497 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.057688124 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835154964 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216457328 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174327576 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122925669 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.883778162 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154021887 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147156395 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.604051402 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895473653 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.967189504 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.662198157 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.9886012 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.13673614 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106416364 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671117493 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099177957 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.942173282 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.691572546 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.866752131 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083622592 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.139223959 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.896194071 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130594993 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.591095439 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.880978565 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236124886 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930597317 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.886572964 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.047514828 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.063561944 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878609129 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95476461 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8806219 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.87997846 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.880743364 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915482341 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.909843472 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.006181922 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.884735152 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957589005 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.981678904 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.460650592 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.876255591 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158228949 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239905624 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210595748 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93734938 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870261196 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870539096 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803949274 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004519073 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.317207357 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144537477 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.000053046 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.171411738 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895061919 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.667186839 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.121566621 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173387005 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144867704 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.765998243 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85069071 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976116053 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.136153141 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881038887 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.080735827 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112398025 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205003913 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344379071 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.971237068 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303715523 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142843831 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.238937501 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87205558 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461347569 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.879920807 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.639930355 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.914828704 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899926479 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161614461 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882662189 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25421027 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893172154 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.072155139 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.388875506 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629160644 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237836571 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.865462458 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937983073 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15947171 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273403116 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188056051 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942323882 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88173269 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.576604463 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008742257 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.834419187 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.188746302 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870381096 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081810331 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.583117886 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.88183304 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163137361 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182835561 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.869277207 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.862696707 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935197329 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.88231635 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.09741621 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152858204 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128381271 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880807214 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881901191 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.687359567 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160561673 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938650261 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806940096 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.874257028 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972481505 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120435984 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893831628 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.392485028 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.583392346 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180299386 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.792945743 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894106118 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.236909185 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31479913 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214939979 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.426542112 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120981335 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.437036921 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.681849608 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241574634 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.878427719 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.238406508 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245946785 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.877989789 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343145802 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980362838 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.157134519 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19844425 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.882719796 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693495161 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.925178899 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098956234 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473441489 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814828849 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874867826 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.935146536 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87561596 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.006555142 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884586102 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.890319696 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.713837439 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.756302135 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370376088 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.877392334 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.864174667 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.023833396 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870053273 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99689465 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020639864 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883129926 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.58960742 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.170927369 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.131699203 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.454593135 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.957117685 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.881221677 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878868756 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804320242 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.070199929 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.258691059 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180753759 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.302990348 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.002382871 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881096967 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.093436588 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088823341 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.825818315 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037834601 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345864317 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003075052 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.644250564 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.558209346 seconds)
  done (took 1674.593460837 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.892082341 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.888974261 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.892004079 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.890781429 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907314252 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953200404 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.899714461 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.921463626 seconds)
  done (took 57.052514936 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.880656823 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.078174881 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.890962766 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.879736132 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.893962744 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.880727408 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.107348454 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.888692003 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.956207221 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.888272712 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.879500775 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.897245358 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.238289446 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.909628987 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.881220819 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.904764449 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.91476798 seconds)
  done (took 74.784918892 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.882249036 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.205588012 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.91768791 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.897664729 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.846556841 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.892274146 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.853884695 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.911785985 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.884149708 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.124349207 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.219385198 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.898127612 seconds)
  done (took 90.34231756 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.898466436 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.889234735 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.889366713 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.889027262 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.88872282 seconds)
  done (took 11.272694873 seconds)
done (took 2169.064770785 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.134482849 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.112029744 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.11620609 seconds)
  done (took 6.035530684 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.033974169 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.078601391 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.200784738 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.220620101 seconds)
  done (took 10.346656819 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.179599238 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.26892408 seconds)
  done (took 6.254885284 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.257254231 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.910951791 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.284104559 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.886791501 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.883692375 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.885630185 seconds)
  done (took 22.469899919 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.887931739 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.888785767 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.886068438 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.888792442 seconds)
  done (took 9.359776004 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.868998544 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.619511491 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.86875267 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.881490334 seconds)
  done (took 21.046638233 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.635883583 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.287254898 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.630564532 seconds)
  done (took 9.362489788 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.62493476 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.100813412 seconds)
  done (took 9.531468159 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.148597725 seconds)
  done (took 3.956211034 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.916186545 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.159042979 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.429701093 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.456620175 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.542354557 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.139105161 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.238550386 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.123567798 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.335903632 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.378601215 seconds)
  done (took 25.530967834 seconds)
done (took 139.286970955 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.4596902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.269312171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.097308535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.24926919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.182930463 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.095411105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.075825603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.260738943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.757160024 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.770444613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.280385569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.122378612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.028718018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.260900434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.04477059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.134239948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.11959619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.292625331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.926156932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.13304807 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.089064567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.857517602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.116061386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.871504943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.122676284 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.045170956 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.432755024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.13583357 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.076858303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.443961713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045123469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.275316107 seconds)
  done (took 171.882352856 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.88662401 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.883803123 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.88364319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.884663166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.254294031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.887687973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.886873447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.885767836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.220907238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.218981738 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.885954004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.241865798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.8886676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.886216435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.887028903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.886498317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.440409687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.889103811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885757183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.884133822 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.884585854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.075434832 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.887192817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.085456228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.39210964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.886879017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.886941434 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.887147087 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.884863988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.885728622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.887346922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.885183119 seconds)
  done (took 209.012588375 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.889812801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.888208098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.887154877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.886589395 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.890885516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884929052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.887206623 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.887362217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.472792868 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.471010098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.887499642 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.892161025 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.889189897 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885369086 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.886998849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888128188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.887219015 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.888183678 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.88747816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.888586845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.889076376 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.512359404 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.889633802 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.501177956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.88748141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.886804378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.885985896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.887474607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.887800022 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.889798137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888982227 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.888751578 seconds)
  done (took 220.636646776 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.097355799 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.896383859 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.898586083 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.836531509 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.89954033 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.89785522 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.835501086 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.086904736 seconds)
  done (took 19.26616602 seconds)
done (took 622.615539565 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.368049959 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.216584031 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.072953125 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.920083508 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.157151511 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.955983488 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9179855 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.989248146 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.658587311 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.992258489 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.610269402 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.939700184 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.703372823 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.949756215 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.047012538 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.97535811 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.46641226 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.561122403 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.097999009 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.968918856 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.101500535 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.862837399 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.003214583 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.683208377 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.726554093 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.907698617 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.105815556 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.474197236 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.926848697 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.088827645 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.679645 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.3262661 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.934352104 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.91741934 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.976436454 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.953275777 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.281938076 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.930278954 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.03948574 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.658999933 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.991378458 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.538681117 seconds)
  done (took 104.49290611 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.888210616 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.887671339 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.886928661 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.889266208 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.887819663 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.888707136 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.888251582 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.887113829 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.886748827 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.888065637 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.888355596 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.888908428 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.887143666 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.891193314 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.888607284 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.887735765 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.889119776 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.890928762 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.889558827 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.88878975 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.889128663 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.887597562 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.902777304 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.888053737 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.888108092 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.889028515 seconds)
  done (took 50.944032478 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.901960213 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.052460277 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.170059071 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.920511273 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.902956558 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.904070417 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.919715703 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.907255366 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.906323291 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.905568207 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.999187712 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.90975233 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.922648016 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.171520081 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.919568175 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.902241263 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.903282381 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.902170906 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.06163997 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.918440114 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.922633887 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.904873388 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.924235967 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.915904358 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.902540791 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.904416835 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.906295834 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.377362756 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.914376599 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.999125347 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.956681978 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.925965446 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.322808417 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.183403253 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.960046288 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.911113225 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.901876787 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.001955872 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.911483914 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.90254279 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.919768993 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.910114403 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.169193239 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.402868852 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.92114758 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.903915948 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.387357662 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.012645088 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.946844361 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912266349 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.171961528 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.921883594 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.904707354 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.904449161 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.939222824 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.913179983 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.90321856 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.228000527 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.913717282 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.920395095 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.910156066 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.904961561 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067778444 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.913798125 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.054609618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.915038279 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.913800508 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.904688685 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.169218982 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.922747275 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.415684957 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.923911433 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.906105779 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.99866168 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.061811702 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.41826148 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.920102044 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.067908411 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.339133707 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.930404417 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.913987587 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.366057444 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.934398917 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.91405487 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.907558058 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.909209933 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.90531545 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.003776641 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.920102844 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.350180201 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.41502018 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.247185416 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.93656939 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.921441765 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.907322612 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.225958501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.916057899 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.907673836 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.166094093 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.421783546 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.92314596 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.914458273 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.401688203 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.92331797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.925743952 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.915898871 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.175040232 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.926027849 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.951672104 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.908661474 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.915825986 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.910742701 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.928213685 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.914829949 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.909126836 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.38812294 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.025050912 seconds)
  done (took 236.585393003 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.904769187 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.901085468 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.903183512 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.902622335 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.900701662 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.909760119 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.903057778 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.900350851 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.907528667 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.900395533 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.903783478 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.906733021 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.903369769 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.909086518 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.032410098 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.910583773 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.562738068 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.901456513 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.902775903 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.90024681 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.55333221 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.909456888 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.904591263 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.900851559 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.906483693 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.904551469 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.910360648 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.023023119 seconds)
  done (took 168.707560068 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.91143144 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.025840215 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.928555214 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.938326244 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.918414931 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.908873568 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.932363213 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.923733688 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.914904689 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.907474492 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.906910858 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.969782945 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.919757924 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.009979791 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.939604784 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.937509307 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.014473114 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.916626048 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.908970656 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.908231813 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.939924901 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.903846232 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.973446601 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.040818913 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.92693923 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.025753491 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.914382004 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.911979367 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.911189537 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.029620513 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.923729196 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.971636825 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.94145729 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.928759095 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.032410325 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.027576178 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.016063482 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.938935684 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.909884922 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.910919103 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.909003698 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.900646423 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.030423753 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.929489538 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.912178601 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.018710313 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.929869605 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.913013207 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.922479051 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.910263192 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.924506761 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.92931421 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.976162345 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.043524773 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.942320843 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.936299772 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.937416843 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.202070801 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.91951028 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.013143073 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.902969767 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.028456815 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.930540024 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.901170636 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.912899818 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.917902886 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.940542937 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.938828405 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.018345876 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.918825563 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.016012905 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.945300903 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.916405125 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.913050712 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.913077571 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.03083397 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.030187508 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.945528275 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.948128619 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.94278582 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.906019212 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.911945117 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.902013654 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.931434154 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.917541428 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.030819578 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.030098308 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.919701346 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.914356378 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.913997451 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.915756546 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.940218446 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.038901712 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.947918116 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.010226187 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.981033093 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.98798376 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.927755397 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.925900431 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.91699497 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.978122758 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.92566141 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.923429992 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.253265318 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.982449681 seconds)
  done (took 206.997235332 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.371558419 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.965914457 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.96894288 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.244877663 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.336352503 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.798369113 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.958510108 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.962676851 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.985873334 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.152652019 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.03230808 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.981699165 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.948824748 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.934508378 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.962905426 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.982596644 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.969461596 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.29143142 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.080933135 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.051987394 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.946054454 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.237471969 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.282915787 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.389632157 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.999204445 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.306717297 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.638453812 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.104423028 seconds)
  done (took 62.72542434 seconds)
done (took 832.264860666 seconds)
SAVING RESULT...
DONE!
