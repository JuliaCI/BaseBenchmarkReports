cset: moving following pidspec: 9394
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.366865365 seconds)
loading group "string"... done (took 0.658695298 seconds)
loading group "linalg"... done (took 7.866244307 seconds)
loading group "parallel"... done (took 0.167814879 seconds)
loading group "find"... done (took 1.280717734 seconds)
loading group "tuple"... done (took 1.896065555 seconds)
loading group "dates"... done (took 1.351214959 seconds)
loading group "micro"... done (took 0.235098585 seconds)
loading group "io"... done (took 0.992007595 seconds)
loading group "scalar"... done (took 40.497818032 seconds)
loading group "sparse"... done (took 12.551870411 seconds)
loading group "broadcast"... done (took 1.001709368 seconds)
loading group "union"... done (took 13.251223448 seconds)
loading group "simd"... done (took 4.884529598 seconds)
loading group "random"... done (took 9.35734794 seconds)
loading group "problem"... done (took 1.854230457 seconds)
loading group "array"... done (took 21.81996577 seconds)
loading group "misc"... done (took 1.89724859 seconds)
loading group "sort"... done (took 3.433503079 seconds)
loading group "collection"... done (took 17.912150742 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.561087905 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133601443 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135445971 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128140495 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154927703 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122556586 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134410359 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.094329231 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.843107106 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159764677 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125987488 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430860767 seconds)
done (took 5.528569169 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.18092213 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089548503 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091210533 seconds)
  done (took 1.325594301 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076133008 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13352406 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074556495 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07551059 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075295213 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.073929775 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074475049 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.075080094 seconds)
  done (took 1.728676764 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080383041 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07649472 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073194095 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075579803 seconds)
  done (took 1.452950858 seconds)
done (took 5.92007109 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.810064829 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219171411 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.196800274 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.417845878 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.140320188 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18552353 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.657278357 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330028019 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197469262 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083533196 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118326564 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.350746796 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132387805 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.654247131 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.085756305 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.100418454 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14452534 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425073516 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075200423 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090780165 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.097123597 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.137859672 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.096757244 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081974364 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152759256 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075115626 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143458499 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087977394 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074453829 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226566733 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.179612112 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666130536 seconds)
  done (took 10.6202293 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1076563 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.108140155 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076007014 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.132905684 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.11097286 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080345384 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085595545 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077657249 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.101173921 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.14326629 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.103335132 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.114227245 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075882401 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07838727 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.094820498 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.217023482 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088240931 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08885583 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077902297 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085199246 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115757598 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.087606828 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090569047 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.089442516 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137343827 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.187003576 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104076406 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10507373 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076319057 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090940911 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122123948 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.137224743 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075958149 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075632967 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137376051 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104243914 seconds)
  done (took 4.969695179 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.026092275 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150949735 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097707501 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141505815 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072448081 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116388357 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093317028 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.090667761 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217903149 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.411797147 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.075505656 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.637433509 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118513262 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112802548 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075099482 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075518368 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074183415 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.542434125 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10538628 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112625076 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087569867 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077029371 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.0754657 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36938646 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074408975 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.070840999 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077412643 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065861518 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13291113 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077921919 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.979219289 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167525756 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073030766 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106833116 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.298860106 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098554808 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148278939 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075104261 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072331019 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161524217 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099693284 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077397513 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073843226 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090811744 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110328112 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127211888 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074334162 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073646373 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171361684 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072657531 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086835175 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.089938735 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165059434 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088223465 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075068932 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288549445 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097346076 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077692984 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07496137 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186102823 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134701339 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077328942 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077117021 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078360969 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079040449 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371239714 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.074913336 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.929408677 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078407276 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08767718 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079729533 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076945633 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082028879 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082687075 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098317653 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076465091 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083338136 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074594254 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073733958 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074481765 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.091614465 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.40215783 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07353324 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074592755 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071911758 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09652803 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.205961677 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.078500877 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0758979 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110158341 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078099251 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.076225744 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123232797 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07725626 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092649195 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080971315 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.122705475 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077912645 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.105849327 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.075185859 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074781845 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106857438 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0781177 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108505547 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095421037 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078951991 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.44949037 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.074327296 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072444632 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.072542236 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077228528 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.074628696 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077334426 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077198593 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089549124 seconds)
  done (took 22.721899361 seconds)
done (took 40.485287842 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.267658777 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087113678 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08479633 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085057734 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085184871 seconds)
  done (took 1.848524573 seconds)
done (took 3.070887386 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.132209846 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108026102 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074324049 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108039707 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07433742 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113108378 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111929403 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.087720858 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111652866 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.073954271 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108057984 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073582364 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073981417 seconds)
  done (took 2.490501363 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091588845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09231468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079217888 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095313008 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07387249 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094817296 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09340914 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100077925 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09238268 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082354555 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073943655 seconds)
  done (took 2.185095004 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091412723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091810837 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07929436 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09331728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073023147 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092877849 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095168737 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.0974832 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092861027 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084293558 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073603902 seconds)
  done (took 2.177983638 seconds)
done (took 8.063305808 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.085796873 seconds)
  done (took 1.288989404 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584480557 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.908177724 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089159957 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116725467 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.20038504 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123105898 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.265749952 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.093733621 seconds)
  done (took 8.765040579 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.114011465 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08036972 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.081628444 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077912269 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078747265 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079609912 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.079521645 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080629876 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.078768164 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081700273 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079542592 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081755392 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080692637 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08112823 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078028848 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.077338358 seconds)
  done (took 2.58841215 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09967474 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.101878163 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.083387724 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084569908 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.082046358 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081189512 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.083301517 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08290642 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080821202 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080620615 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082114766 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081166437 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07939307 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.073026144 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.08332822 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084352389 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.080201875 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083310962 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.084832539 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.084947385 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.084398863 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.073612609 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.080988264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.083762273 seconds)
  done (took 3.312455221 seconds)
done (took 17.167333094 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112479323 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074960573 seconds)
  done (took 1.399651353 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087432608 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090275629 seconds)
  done (took 1.395814603 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088712514 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.072820267 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.095483659 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.083963242 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0741616 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.072992387 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092990611 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.073753796 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.073152952 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07367556 seconds)
  done (took 2.021467427 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075222413 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084607697 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.076731944 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.089862106 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.082537767 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071294619 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080074417 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075321396 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083711444 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069905895 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078113524 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089474938 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077565446 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091582104 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079571098 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07560529 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.078630896 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.075792376 seconds)
  done (took 2.658589671 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.073133737 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073833375 seconds)
  done (took 1.373500182 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073307142 seconds)
    (2/7) benchmarking "second"...
    done (took 0.070275827 seconds)
    (3/7) benchmarking "month"...
    done (took 0.074132255 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073486624 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.071064615 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.070233033 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070223044 seconds)
  done (took 1.724053345 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393727856 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12673098 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337642205 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081578819 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.092118777 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.273513855 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073466401 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.080102805 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.081170829 seconds)
  done (took 2.80893564 seconds)
done (took 14.609598176 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088008722 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095109209 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10526717 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.387182787 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098124393 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073708825 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.120431939 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.197794839 seconds)
done (took 2.40216929 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219887927 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.701157921 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.451733956 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.224306529 seconds)
  done (took 2.605035759 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358314415 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09879266 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068614828 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077279244 seconds)
  done (took 1.842009073 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074152154 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077238141 seconds)
  done (took 1.386646526 seconds)
done (took 7.287004121 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07446928 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092175688 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073888579 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.072794655 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075586921 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073057328 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0728179 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075821325 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075723164 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07668438 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.075683121 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.076038644 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075702621 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072531202 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072928423 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075067834 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072833442 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.18743307 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073799499 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075133835 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072549979 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072354941 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072731217 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07570224 seconds)
  done (took 3.181681488 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.092769864 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073364754 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.078616768 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.080019554 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079360744 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.080875364 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080954472 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.075849091 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08096228 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077054872 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077366877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.076986426 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07554945 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.077685971 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075656041 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.076939296 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07876718 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072705707 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075258706 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.076853526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077914508 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072754843 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078471384 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080709139 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078504442 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076334166 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075951834 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073291279 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078103888 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07647297 seconds)
  done (took 3.575650141 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07735355 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07109501 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.071162672 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077861643 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071288735 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.073905767 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073434462 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073959209 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.074106377 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.072994741 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.074008245 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072398293 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0725373 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071700194 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071320998 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074244028 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087305954 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07092494 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070662303 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071428382 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07556494 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075154012 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.073081753 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072485272 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.072715267 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072584966 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.073692768 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072555285 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073374092 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072960661 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.0757718 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.076795221 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073285105 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080062103 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.076847514 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073066627 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.078042377 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072666708 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.073239508 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072735167 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072668276 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072441363 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.072864386 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080625335 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.072989363 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075175707 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.073210236 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.074059575 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.073954784 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.076454069 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073327454 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07282032 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.075335687 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.074262257 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077293023 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072790804 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073921984 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072784715 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.073573301 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072472934 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07324861 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072876652 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.075751545 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.073781143 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089065965 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.080639194 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.072739254 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.075288429 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.073581765 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075471862 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.075553177 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.087836316 seconds)
  done (took 6.612703483 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096979711 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094337535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072475795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072456425 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068818341 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07113686 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077502379 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071439385 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072424759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089275893 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071294133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072671107 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072552996 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074621861 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071604962 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072228818 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079166817 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068856187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071215471 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075733735 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071532155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077377163 seconds)
  done (took 2.923994742 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159909897 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077164631 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112852043 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082389776 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076887439 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082404669 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076511022 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076659203 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077154322 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074685457 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075635879 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079113888 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079249514 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076799916 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076766172 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077046944 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079352866 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076589589 seconds)
  done (took 2.76811742 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082587779 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072351736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094822958 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073118043 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072728483 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075856679 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077040445 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080608627 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075593742 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073208665 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080845812 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075416821 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075379043 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073097622 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075854371 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07328408 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075283498 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072983477 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08261706 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078493432 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.078482549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082414052 seconds)
  done (took 2.954746482 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086089309 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075664181 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087672497 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075130532 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068649689 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071330405 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077121021 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073196457 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077189332 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075509799 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073100258 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07187541 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075189122 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072763279 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075483905 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072752763 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074694352 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072956231 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075472561 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06939735 seconds)
  done (took 2.755680908 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093111347 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075982671 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075223561 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08225461 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075310702 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07533018 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081941036 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076069319 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074981421 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096395205 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07502748 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075519344 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082252259 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07968547 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077329565 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082055483 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082005688 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082210106 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075282088 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075914355 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096110784 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075039762 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082298597 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075588076 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075747463 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075762293 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07566678 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079843566 seconds)
  done (took 3.486212892 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074768153 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073815138 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071128032 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071283712 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07107474 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071614202 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071422818 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.07125567 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073635561 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070797901 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07340619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073574159 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073223193 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073782362 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07432015 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07373573 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074478348 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.070917553 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070592826 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070968115 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073411685 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073869903 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073523088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071278597 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071275953 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073458419 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070903008 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071203209 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074556037 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071556279 seconds)
  done (took 3.434118177 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082782933 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080429338 seconds)
  done (took 1.423422291 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070292148 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087815174 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.071677721 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078254167 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076404618 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074423942 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080505845 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076663015 seconds)
  done (took 1.872299557 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090428176 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.084589474 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074535431 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084902658 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084045936 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091313138 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14503962 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.074431189 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079756636 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.072187763 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087559659 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073502533 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080169092 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074596788 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079837904 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081169308 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.0733013 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.081949951 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.077446103 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.072799439 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074765815 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082933464 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076686744 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068976124 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076934256 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097426244 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084972974 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072866817 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077672993 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.080958849 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080118012 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.068055342 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073571097 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073979867 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071780316 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.083686801 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088490863 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077462881 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082949718 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074509534 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083006635 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06886017 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07893544 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080834784 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084337427 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.074248392 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073678166 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068484552 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071972661 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078669873 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068730458 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074532644 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068585886 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081399229 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.078081988 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084489963 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.073052046 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075888701 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077091765 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076933351 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080779888 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075674763 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076558345 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.074030199 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083542007 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079361095 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082531645 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068881181 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.068122312 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072740191 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.086073421 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099909486 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080176404 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.075047676 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07601556 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.073890701 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079391601 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076464265 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080238023 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080656344 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073526911 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078600231 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080180491 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074629665 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.075858114 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080307194 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.07199616 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076326157 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.071512405 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089533257 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.07272418 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07098494 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071809026 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.086258329 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077242167 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.073014098 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071891934 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080655734 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.067425602 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072750626 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073550363 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073945414 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082362264 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077082546 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076915629 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081500917 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.080434486 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07313841 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075302731 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.070202681 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.199356834 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074328497 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082257447 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069122991 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077901834 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076478877 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075173367 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083243434 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073271952 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074164741 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081739203 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080651607 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.073418839 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070835312 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07708089 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074257626 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076677558 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082697955 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.072337703 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068914486 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069769282 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.078416324 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073675189 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077517165 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078819872 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078028885 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068442473 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07275197 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079707346 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.08291193 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074895755 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07507769 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080045709 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07570511 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.073434887 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080904636 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.077133949 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073621633 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080603277 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075100835 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.069224661 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076740672 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076811824 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073567373 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077457584 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076824981 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.076381344 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.074660994 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072727382 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079570788 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07467698 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073111864 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075117731 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072666187 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084680718 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075979998 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068455999 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.071366102 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081458819 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071930587 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07301784 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073740444 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076353174 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.074350397 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071547733 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.073584845 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075676542 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082684905 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076704996 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074304372 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078922807 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085960331 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.074073899 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076481092 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.074982763 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075896014 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.075042572 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083455075 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080510104 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078949698 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.078276917 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073386976 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080593119 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081677634 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073521151 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071434493 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072591878 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077154327 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078953239 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077231225 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073939422 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072558089 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074236088 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076260363 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.077194165 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072695949 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072858599 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078689133 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071612995 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.080164455 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073480299 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083181501 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076225165 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067657395 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074328366 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070938776 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078810606 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067926596 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.070874281 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072303226 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.073064894 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071705226 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.074928634 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.067107658 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.208178067 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08308521 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076841603 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074395863 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074074072 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082108289 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076379568 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078032521 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07872418 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080406622 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084303666 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074370814 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078445502 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084766444 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074797726 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.069038845 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.083196875 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.073020292 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072989139 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.07527809 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.074979746 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080290135 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085001137 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083817577 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070513668 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.079396963 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.074486686 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076432282 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.071940803 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.081078426 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.079819612 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.077603408 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083810807 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076994097 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.076677001 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081068636 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.074661719 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.074766899 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07510833 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076576507 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.074967051 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.076190464 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073189842 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076503306 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073274718 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.072047883 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076072227 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.074190083 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.075863549 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082481133 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07557903 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076582975 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07923189 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.076141759 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076848019 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.076153869 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076047018 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079540456 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076793176 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.075974793 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.078652053 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.071781324 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084235853 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.075549749 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084251971 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.076399019 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070508457 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079945918 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.077084121 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078791046 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074278573 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073802194 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075349097 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.073293026 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076325592 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080687499 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.071879081 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084298434 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081436339 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07480151 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076334771 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.075105114 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075947961 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073578678 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075699879 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.074404872 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074676417 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073795056 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.077978216 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076738197 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074259381 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075576767 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073876716 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.073920832 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07419523 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067973132 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073254444 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073766296 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073824713 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083444925 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073398522 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074533619 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.075064807 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07699072 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.075163133 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.072413349 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.082550332 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081760522 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073080979 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079015968 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072691756 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073844429 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083211476 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067040146 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070991685 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.070537216 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.203580165 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083259807 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075612522 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084765148 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075816424 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074540092 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.072598596 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.074901218 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.073022346 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068725662 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.072231639 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078573991 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073524117 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073911038 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.073843566 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.077027383 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074896087 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083682473 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073626934 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075438277 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074794057 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.0725174 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074734756 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07596895 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.079584658 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.077173098 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.074655033 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.073593678 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.077030287 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.077993455 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.077955597 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.076169302 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07841159 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083964379 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076068442 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.079706077 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079487342 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071161557 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.079724221 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.076561976 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07638862 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.075019574 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.079442748 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079337581 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075397715 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084246889 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.075045083 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080083358 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075863831 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.073683881 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.075474153 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.07590709 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.074323923 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073488431 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074568078 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082188293 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071253344 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076163007 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074031407 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074149243 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080674875 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.075040832 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077159891 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078919245 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07470991 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076425639 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082767967 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07724213 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077488059 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074214465 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07512558 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079740652 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07291823 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.079767094 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.075072605 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073689374 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075491417 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072020011 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074918265 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.076197665 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075336884 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08211472 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.075796149 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.074118072 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.075207839 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.073637464 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.077519339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078257328 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082624261 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.077790403 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079344717 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07075068 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.072920076 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076281744 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.074529731 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.077588764 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.079380704 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081456167 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076907105 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074395837 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.073375276 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083650589 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079753566 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077381067 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071705698 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077098944 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073891284 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07518564 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.075040051 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073155568 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073618353 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077527573 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074505284 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072087871 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079232959 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076620174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073317201 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.20582597 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076501938 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075346982 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069906992 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075418797 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076742458 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079160889 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.076869563 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074640602 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085177433 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072288847 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077195083 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078264154 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073693331 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078565648 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06912159 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.075492386 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075017415 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074616821 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069389502 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.074840964 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072429253 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077149571 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.074991797 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069844085 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085961045 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.082784762 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077676318 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073574049 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07202271 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069113638 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069273662 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073291295 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074588322 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076625821 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084585787 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.072702642 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073123283 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069819141 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074129102 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077298759 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077135572 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071015396 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068671311 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073994629 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077948757 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079132935 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072435287 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073880578 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077266032 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075845504 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071831025 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076438047 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071372016 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077219252 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086727254 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073814314 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075329843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07994959 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081263664 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.074203601 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06914876 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073599397 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077215808 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074726884 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074510109 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074315357 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089639294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07679302 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073509365 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072425886 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076593892 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07332104 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081810746 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07531937 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074775315 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078930214 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.078093434 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081687501 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077540283 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081590092 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077743969 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077100063 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.073279762 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074816103 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072070278 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073362268 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.075250446 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.074340774 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078422355 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080619317 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073750087 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084594517 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083132303 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075447193 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.071376908 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073594917 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073275901 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069108378 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.075329446 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071656044 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072221111 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071785665 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072526837 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074187073 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07838151 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074520698 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073696339 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073856585 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067972215 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075391201 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075505282 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073808493 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069383882 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072666033 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.073205403 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07615479 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.208746023 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072894005 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.076203812 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076338942 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076344362 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069795871 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081751472 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074345959 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076965224 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074229517 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074483921 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07469846 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078070378 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078534216 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074776792 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076542357 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078725966 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076565194 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.072051555 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071529586 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079744804 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072638042 seconds)
  done (took 47.448100918 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106870172 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070784675 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069021495 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069117352 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07907522 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069743907 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068737698 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070126134 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070115142 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071759716 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0687951 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06883613 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076944193 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083364844 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079126593 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073448 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068971834 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07007028 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068893115 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069886243 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076590019 seconds)
  done (took 2.894204473 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080369455 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084281875 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08201725 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088948626 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078116165 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077090915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082340985 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076744677 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084718231 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079122668 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084277283 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077001567 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078767472 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.078800425 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079363004 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077538002 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084942318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077344798 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07663743 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081884499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077092718 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082324283 seconds)
  done (took 3.104772487 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074613378 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072979193 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074747366 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068348506 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072520325 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068390459 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075915004 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070831102 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075742348 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072376692 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072949172 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.074805668 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.077365289 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.070181484 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074068869 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.07137771 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114970422 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.076008818 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073204302 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.0742243 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068324065 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075565661 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.069758605 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.071771319 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.074402506 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.078979846 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.075874598 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.073762859 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.073085625 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072417004 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073154862 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070932218 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.074924534 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.073694167 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072386439 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0727291 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072839797 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072911889 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068761588 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071075619 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073510885 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071632821 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073234783 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074142441 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071040605 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070604322 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074738677 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072718076 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068652448 seconds)
  done (took 4.950919514 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084498119 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11822191 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074102318 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09611946 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085927632 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079231403 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076606121 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097463614 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070453118 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071012523 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087827142 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086129953 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072098664 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076656857 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076599568 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071989858 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072939666 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071853019 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07654566 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072096159 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.076602842 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.080519674 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086149801 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084801157 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075848616 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071438781 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071645438 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076640882 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084385771 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076484593 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076772926 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077692839 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087915323 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.078672443 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071436757 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07478781 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08796797 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.072554709 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07545351 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070220507 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074189225 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0765799 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079631583 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088152503 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072185021 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07805449 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072011806 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069670817 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085014244 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075186102 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079716661 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085942459 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075866856 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072815617 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076739337 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087026021 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072609157 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070474285 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075275536 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084634819 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070133905 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076359395 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085258658 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074603378 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078979053 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085686647 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078446598 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07589293 seconds)
  done (took 6.8281419 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083570705 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103552521 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090056947 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089177369 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082122426 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.082581739 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082216984 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082467116 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090620992 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08666154 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082482623 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122811797 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.079149012 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084136861 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082899947 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083100689 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08245899 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082695416 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082564296 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082497337 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082486331 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089121554 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082473451 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08875264 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085687936 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078330299 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082239205 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082372622 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089194088 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082205466 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086231684 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082800054 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082357711 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089331094 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086196064 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082153173 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072452665 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082689397 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082208999 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082782294 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078415741 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089456277 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082212599 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.077997199 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082841781 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082077969 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089443694 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085527073 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085046202 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08674072 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082366894 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089197769 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082049371 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082599752 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089753304 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.091121142 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088753977 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089021598 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082394735 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08871987 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089556836 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09134604 seconds)
  done (took 6.656487352 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089253037 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081029838 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089479125 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06867597 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071285639 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078791417 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070942521 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071589191 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080401817 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083066991 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082609948 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078836671 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081288998 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082115827 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078499298 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081190195 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079200235 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078906544 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080336512 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079223583 seconds)
  done (took 2.946086426 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.082180231 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090262024 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074273324 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078253457 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076133304 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078218291 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075871002 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076442246 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073984898 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076354911 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082649727 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082395233 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073890539 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079297568 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082128648 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078217538 seconds)
  done (took 2.612996334 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.091911264 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080243941 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.086872872 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.074182882 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074336344 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069863902 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072680044 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068791438 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069231105 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085274213 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072968308 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083472579 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072746666 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.07231633 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070257554 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07847034 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069523526 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070355975 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072997652 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085268555 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077430288 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.072869312 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076542598 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.073041735 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075873945 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077369983 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071377872 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073027402 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070477233 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072979368 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076221723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076827869 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069914083 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.07060083 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072794037 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.071381863 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.073439601 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073707995 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078200684 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.07289764 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07149212 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075421641 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073181556 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073831439 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069664297 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073066942 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069357268 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075082349 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070615653 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075863068 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.074161856 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075758464 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073824227 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079426478 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075983694 seconds)
  done (took 5.459418162 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086676233 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076961189 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069412089 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071904457 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076367411 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074707838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076254833 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07434537 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074544689 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07134155 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07412801 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075749218 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074387663 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07670459 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074057982 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076625994 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069224985 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074246344 seconds)
  done (took 2.713415907 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079471885 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072671724 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.081086625 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073622171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073056151 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075997176 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069171312 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071460148 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071755063 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073106042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072782285 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075788134 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071912106 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075741606 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073482538 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073888439 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075951121 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071782341 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073133787 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069304056 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075267011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071723788 seconds)
  done (took 2.980194173 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101483492 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.09045979 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.149836104 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086384463 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.092774432 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.078765361 seconds)
  done (took 1.959978112 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09904686 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107297909 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073425771 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076363187 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08270842 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076663004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076647998 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077027353 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084410328 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082303953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076731804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084883948 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084996171 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083657973 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082044019 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082452484 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077092313 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079536051 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072952478 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089865659 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076998419 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084918829 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077101785 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076694172 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076736903 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083860345 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084365902 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082513907 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076598136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084289759 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082631326 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076971159 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085218808 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082470537 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07710901 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084705939 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077376404 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089972224 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082539504 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084254793 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076480481 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082533454 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085230227 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080862592 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084979035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077482204 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081283449 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077086375 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077847258 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091841651 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083314155 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084588392 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082256287 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084940203 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085174959 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091584461 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082922801 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083688888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082457101 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082557969 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083550287 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082927613 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08359188 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082276624 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082992269 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083925457 seconds)
  done (took 6.804406238 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111260288 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074231472 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076895738 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082290525 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084634004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07736634 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076849282 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076980391 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077035721 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074188395 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115039258 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077395949 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083638622 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083552686 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077586079 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07757053 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076719029 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084016816 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073776291 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091594383 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076690788 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083835804 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083640645 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083647105 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082367323 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082258104 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07675743 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077308495 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077521699 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076758673 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081131089 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077006723 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08368239 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07391012 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084013602 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077116238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077320287 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081705537 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07699014 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082302397 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083801298 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089962661 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077660463 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077677183 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082561471 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076964327 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077359345 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074190725 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07716688 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074408793 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082854305 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081954583 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082244861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083759287 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077464996 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076989516 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077687241 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076779033 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076824858 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082183114 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083725916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07678512 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091274752 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077136247 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077675696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08396879 seconds)
  done (took 6.711474602 seconds)
done (took 140.294783863 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194255218 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175917285 seconds)
  done (took 1.73147549 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076380679 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106578702 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084514216 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135995887 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.073539232 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107149569 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106023116 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085690466 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07370577 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07389308 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073779561 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07603779 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138620701 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073736033 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073285954 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07614876 seconds)
  done (took 2.808461058 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106539133 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170363438 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109907751 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072429553 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106158082 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079413959 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072378834 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081849031 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077778167 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072537369 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07935615 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077457929 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073479246 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077242339 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.080271277 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079251728 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072335926 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079275652 seconds)
  done (took 2.945186406 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106029858 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098872211 seconds)
  done (took 1.582186546 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160952355 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.140801118 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210124366 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.354111213 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164748654 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.153484622 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148782778 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14802911 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120011421 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.144416134 seconds)
  done (took 3.118813833 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107721586 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161608776 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276995244 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126024344 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080352589 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099613811 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127885382 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086155373 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087577512 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086995915 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08687433 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083558968 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108057326 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.081171705 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.081445027 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083477892 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.111871872 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081197935 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.081999625 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.082886093 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108295509 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073326314 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079739445 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081338836 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084416528 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084580993 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073430377 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073652239 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082694021 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082280448 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083494636 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098726008 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084479107 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.112041423 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079094796 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.113077323 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084371923 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08211409 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082361043 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080203162 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085551535 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085238586 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080287303 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083813647 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073279079 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.0842566 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073867008 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073613333 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084398237 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074469451 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084419422 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083896542 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111603136 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074479284 seconds)
  done (took 6.398650121 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111541873 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112797953 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078146867 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119656908 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110660321 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076579036 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111233451 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104119321 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111835151 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077336475 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075612784 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076830174 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087341572 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088348736 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122402552 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113740738 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079591378 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077182558 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114750443 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.113413065 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076343448 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106564166 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100106926 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110913927 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075268307 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077094162 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075740459 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077007065 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083125768 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084924593 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075285961 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085864086 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.091544296 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084359624 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074152153 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07530757 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075942778 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.084869108 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085857255 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085594331 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083853498 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074603237 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075526065 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076370667 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076236356 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07519855 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084464115 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08580458 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084759566 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075472198 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07690868 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075874378 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077099276 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086191632 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083288769 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08630399 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085456661 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075575364 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075537438 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078898522 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086572812 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085648635 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085321262 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076256421 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085746533 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07581115 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086397554 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089741494 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075258797 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07663288 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075832234 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076090055 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.078595077 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084057527 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084421115 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077049171 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075871557 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075963348 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084639592 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083553325 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075573651 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082322698 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074073275 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075258434 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076624295 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076755749 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083118564 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085253745 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076257374 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074945519 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07479731 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074533501 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073767822 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082202302 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083581517 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083229806 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08238438 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075414093 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083065669 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.213512386 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077491607 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.086971288 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076279497 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077378254 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077579812 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085722852 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.084252163 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086763996 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076039973 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076112373 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084257106 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087639501 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076640504 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.084891709 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086647803 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08475094 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074912204 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08811726 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076341124 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086644408 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076456783 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086522888 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075995793 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085929958 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075979221 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075482122 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076034254 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085730183 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076500451 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075658062 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077249066 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075866952 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08511087 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087537319 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077147616 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085591505 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085073877 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07678438 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085430826 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075729687 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085593743 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075343876 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076870587 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074339233 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087552317 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076302327 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07550122 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076076038 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086823168 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076428123 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085855281 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083516862 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07473516 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08878555 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087498339 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083719912 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086484169 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076390602 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075974994 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075271346 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075764456 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08412755 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085012305 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076224491 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075050914 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083359587 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.085648991 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074400647 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084100834 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083730319 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084098249 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07536435 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075920208 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086590967 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086371442 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084098579 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084811783 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084740264 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075833774 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08411056 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083691743 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074929343 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089303295 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075511377 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088642538 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083889652 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082501125 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084528801 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085960238 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085600619 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08560322 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088166083 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07404643 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074225856 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083324462 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07452548 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074164127 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082491252 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075445947 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07599392 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086579161 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.207258059 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.088071716 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076934676 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086220658 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075408748 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077658551 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090471425 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077255149 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076917668 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085750129 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076138379 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084916825 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087221275 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085965242 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075698523 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076977657 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085658916 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.086273796 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078639874 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075967668 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078177298 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083621939 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084904719 seconds)
  done (took 20.156142899 seconds)
done (took 40.125632333 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210857317 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156741798 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176614509 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122356463 seconds)
  done (took 2.14538416 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122271225 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106827478 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098565508 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072279688 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104532103 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072512722 seconds)
  done (took 1.991453139 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301821542 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206427513 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18685768 seconds)
  done (took 2.107049021 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2119211 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.201307486 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.454120371 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.278186252 seconds)
  done (took 2.66626931 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149420542 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092601079 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.074355155 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.091512599 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136195926 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162900508 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104697273 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129220776 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.086323563 seconds)
  done (took 2.492927848 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151346884 seconds)
done (took 12.971556978 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.125988244 seconds)
    (2/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.099144534 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.121114744 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.221802774 seconds)
    (5/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.10843785 seconds)
    (6/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.200132163 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.185148247 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12924412 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.079611108 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.232845208 seconds)
    (11/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.192876758 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.081617405 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08631442 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.081822169 seconds)
    (15/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211179164 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112615602 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082866681 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.080228288 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102546384 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12035465 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081657681 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.220029111 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.22101455 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096883454 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.165969487 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.212439189 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.099272471 seconds)
    (28/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.083498854 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111323457 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169570636 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.085124803 seconds)
    (32/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.174646133 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.381719675 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.082269229 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111607851 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079828 seconds)
    (37/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.162461877 seconds)
    (38/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058125745 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097803 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.235772017 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.202161184 seconds)
    (42/309) benchmarking ("sort", Int8, false)...
    done (took 0.151529579 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.085331261 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.080864702 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08930135 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081579233 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184148418 seconds)
    (48/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.166366315 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.096973687 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080697462 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092453775 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.099804528 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119100946 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.18353264 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148688439 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115375587 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108543931 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108084398 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.094342293 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.235992962 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188553355 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074726222 seconds)
    (63/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.121261583 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084938086 seconds)
    (65/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.123403542 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.186432506 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080757331 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.118438124 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076311697 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.084117595 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.109669608 seconds)
    (72/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.160704687 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.074151985 seconds)
    (74/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.069596965 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096102888 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194796488 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.072286612 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.175640894 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07843473 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.226822918 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 0.143691525 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166359059 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.059093102 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.073738683 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076903206 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085931903 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169003873 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.074551844 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.071986216 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08066503 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.149756799 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.100137581 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163188351 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19292842 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.074025354 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09816767 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.085872438 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.200340574 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.078653964 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156874778 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.060541505 seconds)
    (102/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078892408 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059782944 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.104492339 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.197003107 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095638913 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101676384 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203406158 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073241451 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.0581952 seconds)
    (111/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.082167097 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214068048 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081200414 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159199948 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.082199818 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.060133459 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.079544653 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161714444 seconds)
    (119/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.080369755 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080563574 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.089284947 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074100474 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154308279 seconds)
    (124/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077000007 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072833655 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080172847 seconds)
    (127/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086582742 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.147388752 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.083946818 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.08111813 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080454403 seconds)
    (132/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077287086 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.079102542 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.072648069 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146446586 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07962315 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07725839 seconds)
    (138/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083040248 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118220293 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058954123 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089324893 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059964121 seconds)
    (143/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076851169 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.058391039 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.227369235 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079355835 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187720221 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078650869 seconds)
    (149/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.097007795 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.058169381 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150197013 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074373898 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.161516365 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072716194 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.080843591 seconds)
    (156/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.120818611 seconds)
    (157/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058576586 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078990914 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099311293 seconds)
    (160/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.071774452 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059201035 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081572385 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072589412 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.083095538 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195347525 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.072913665 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071631325 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.060844956 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.058796178 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.119387793 seconds)
    (171/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081176062 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080044257 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.072313889 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058912077 seconds)
    (175/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.109306915 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072607332 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.081069102 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.200839505 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083166791 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093738491 seconds)
    (181/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098866025 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.072727931 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.096736696 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071817082 seconds)
    (185/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.278699775 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100058612 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.0730653 seconds)
    (188/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081243043 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.08188802 seconds)
    (190/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163607291 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.083584045 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.101414605 seconds)
    (193/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076031679 seconds)
    (194/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058968776 seconds)
    (195/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.071092792 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119478301 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.119582725 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.058419444 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.125786602 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.072830412 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.074127932 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192351545 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071921704 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05840022 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07597039 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201625139 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089553231 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073630291 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083012368 seconds)
    (210/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.073257357 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082097469 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.08054072 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123792031 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058240134 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.150411869 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074758146 seconds)
    (217/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.071761958 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074801483 seconds)
    (219/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.155621914 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073166995 seconds)
    (221/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081549933 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134598216 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.078927856 seconds)
    (224/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057970841 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072441613 seconds)
    (226/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.060104248 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.058273264 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071827164 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076896261 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14894584 seconds)
    (231/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079874547 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085512121 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.080437214 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.058497027 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094288835 seconds)
    (236/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081580525 seconds)
    (237/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.071047167 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.073265081 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.058365932 seconds)
    (240/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079384952 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123431241 seconds)
    (242/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.059439854 seconds)
    (243/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079459339 seconds)
    (244/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073052353 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141294672 seconds)
    (246/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082147712 seconds)
    (247/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073936232 seconds)
    (248/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.060995033 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100698381 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072434378 seconds)
    (251/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.058484858 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057990113 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095237767 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.084383197 seconds)
    (255/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073818312 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073288494 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081643259 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.079901928 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.07386388 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07371205 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072892562 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059159523 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081488997 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075862256 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.058510948 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058518019 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137302582 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112571102 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060259296 seconds)
    (270/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058664692 seconds)
    (271/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.058637709 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.058458732 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.058163626 seconds)
    (274/309) benchmarking ("sort", Float64, false)...
    done (took 0.14041328 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07352755 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.058088632 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.080869422 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.075958563 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071287534 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071043804 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057934779 seconds)
    (282/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079981867 seconds)
    (283/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.087091413 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05783031 seconds)
    (285/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058813862 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146523419 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094814826 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058897516 seconds)
    (289/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078813664 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093768351 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.161693686 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074033689 seconds)
    (293/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.058893684 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072313938 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058266093 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057373898 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07930574 seconds)
    (298/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074420515 seconds)
    (299/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129385744 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142468938 seconds)
    (301/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.058675045 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.073197532 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085167456 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077805403 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.057839677 seconds)
    (306/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.057380717 seconds)
    (307/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.057628649 seconds)
    (308/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058647064 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221055117 seconds)
  done (took 33.587238315 seconds)
done (took 35.013073268 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09107515 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10183389 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.084295458 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.102883955 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.089436173 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.084828471 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081374525 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.086953192 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.088240968 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.090730467 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085685528 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062414344 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.082590912 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083156064 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083750204 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099527266 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087624 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081535396 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081693723 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073342394 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081887297 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07425396 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07537448 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.062645905 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.0869483 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.080553365 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080116646 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082545725 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073701582 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074521707 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077960908 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.081984102 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073794214 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086640995 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080624326 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081063535 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.083176965 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085013601 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075274314 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07418667 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08312953 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073327716 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081318733 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082439569 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.079974413 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079036414 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081395895 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085161261 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098425415 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075573919 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.082396526 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.084241322 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082968773 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081057239 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078297302 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081192981 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07852423 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098756253 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081847671 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075774227 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082836944 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082730737 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.078976518 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.080830299 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080729729 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.083694114 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083789486 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079253131 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082778 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080031015 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.07395467 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081672011 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078226055 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073288988 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084408682 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086748755 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072010794 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079459354 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081100089 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079572081 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072722303 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075175246 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075227495 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080481553 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075567537 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064403045 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078318173 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080562287 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072576459 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081703491 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080211203 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081405615 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.074991221 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084804894 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073251718 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078914525 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.07350991 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073144381 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075071348 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.077479782 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073013282 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075135714 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083217139 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074316155 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079948699 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085710948 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073096348 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080516587 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.071948713 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072812457 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086318044 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082645434 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.072702299 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075558703 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072839836 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.079908136 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071390268 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072057514 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.07223472 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.071827364 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.078171483 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072080338 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074395263 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.079691655 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.223578286 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073820422 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.078923307 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076535457 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.074446753 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.080371471 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.074469679 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074509882 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075730182 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069919754 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076314186 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073450003 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.082092433 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076039796 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081714934 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075231386 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.082479045 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079341365 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080822688 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078668852 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072362027 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067790315 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075396556 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076190146 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075123926 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073943499 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075725915 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073952489 seconds)
done (took 13.70626121 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074400484 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145748549 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102680497 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102990653 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092825539 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.075199575 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082973179 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105435619 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075253494 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107532187 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095570199 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093744523 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121179226 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072545266 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.073628244 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077719097 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075388385 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088817089 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107184085 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.095085991 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121499788 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.072907344 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099626275 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.097465696 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09501932 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10953262 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074772326 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077596725 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.078000733 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099168055 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.096796957 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.077793802 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074377054 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104553338 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100151314 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090530223 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074297233 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090617546 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074610455 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073925495 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075520016 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106091355 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.088265886 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087165849 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078117064 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084642213 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.074633399 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090212238 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097098461 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085866897 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092345595 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106973583 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076854699 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091669345 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.073170808 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092822209 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084434336 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076969098 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074023545 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082321385 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.073846754 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077435469 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087977584 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08767846 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.077833611 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091632458 seconds)
  done (took 7.358256828 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.09218606 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100226615 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.092069035 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.092991136 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073297918 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.07535538 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.073992004 seconds)
  done (took 2.1276482 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07526861 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09670416 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.098168179 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.097613575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.090160009 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096872473 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086851743 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074906337 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096033352 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07579017 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.095905959 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107952814 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077727673 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081301057 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098802785 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074074883 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098894557 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074409501 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077651868 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.099116633 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076500377 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104276776 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077665756 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.075823944 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088873458 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074433061 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122963261 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079521381 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076470067 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.078424362 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072181543 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114712415 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088459948 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081912133 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074849655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089364636 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08920009 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072907326 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.092044868 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083872291 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.088888353 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075570252 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075463341 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073356154 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.079000606 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085382286 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075972077 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075527313 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077871389 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094725188 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.075836912 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088436861 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077273257 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.080285133 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076747969 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080976139 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085401406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075807812 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094563177 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076957012 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091605059 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091542633 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08883702 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091322351 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076933456 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088199787 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088819424 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077583596 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077074904 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078776014 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091085081 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072968202 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076429083 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.085797366 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077066106 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098309882 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.099093284 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076357272 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088300293 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075930553 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074997721 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.075017042 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.098120423 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079756808 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074966594 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.078827087 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079012536 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073182681 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.074154551 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078920849 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073099236 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076575256 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077880062 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077679511 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077306854 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090745561 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.076866848 seconds)
  done (took 9.64722258 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.077400463 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07604814 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.078302287 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.076181641 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.076599889 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076457559 seconds)
  done (took 2.011015857 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101328944 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076543886 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088148234 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.079106508 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112904954 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095327043 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.095570277 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085398577 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091605411 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086841414 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.095138964 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.096158258 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.100162982 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079948033 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.095026493 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079330384 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.095673523 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083498208 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086333143 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080534471 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093465981 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079957067 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080450955 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089845426 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083667985 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079268278 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085692852 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086580385 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086049132 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085495896 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079411354 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083591127 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078926117 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085767245 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.095329165 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078458667 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078852969 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.08599772 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079577044 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083745418 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095751443 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079877679 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081350479 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.08486388 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.084878279 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07861713 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.085573291 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086484424 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094635303 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.085640701 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.087610738 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079172298 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083424498 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084489309 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078626404 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085120126 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.085131734 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.095330037 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.080169011 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078804946 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076306249 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083893932 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084749745 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083743772 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085010507 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084496573 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078706197 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080362512 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079800167 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079564768 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.084597005 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075977004 seconds)
  done (took 7.684252958 seconds)
done (took 30.34415484 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542059187 seconds)
  done (took 2.058400379 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.6367847 seconds)
  done (took 2.177537678 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.519404421 seconds)
  done (took 8.055165404 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396146068 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.497062749 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.742936458 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142521086 seconds)
  done (took 3.352377445 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.731016513 seconds)
  done (took 2.278832752 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233295835 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220986559 seconds)
  done (took 2.010219865 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386592756 seconds)
  done (took 1.923243209 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.153937843 seconds)
  done (took 2.693309245 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255724008 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184743061 seconds)
  done (took 1.983440952 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.494438194 seconds)
  done (took 2.034682651 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.892876876 seconds)
  done (took 6.434892785 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229362147 seconds)
  done (took 1.812790747 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243712968 seconds)
  done (took 1.786042528 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.756823981 seconds)
  done (took 3.299834584 seconds)
done (took 43.447460684 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.092579659 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093692981 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093174372 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.090497983 seconds)
  done (took 1.90083926 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08547137 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.081591723 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.084691294 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081196582 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.085176667 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080676061 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.083078661 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083806924 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.081098822 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081628795 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080666271 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.081157531 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0837105 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082661898 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079767376 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083410247 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.084545256 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.081071046 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.083601061 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080821965 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078936243 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083129798 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083839534 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080262431 seconds)
  done (took 3.521948892 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086830292 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.081761264 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.084059046 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080881084 seconds)
  done (took 1.884300101 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086377492 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100930784 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.097665393 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.086784959 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100820641 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.095287471 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077680971 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077373337 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078693786 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086372371 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076462859 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104100334 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.09713364 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086311728 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088924429 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.074104864 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.076496067 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.096705692 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.086839966 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.086831022 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.079029844 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086692755 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076835474 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.097519938 seconds)
  done (took 3.649337708 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094497053 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110755916 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089588853 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097523276 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099637148 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073664537 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096089462 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09936914 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13648063 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073321028 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.078978772 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.073818472 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.082054452 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073314844 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08991345 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.117836914 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.121120153 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077355114 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106480551 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.074368778 seconds)
  done (took 3.423569003 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081061192 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.078044328 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076673858 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074236719 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.086336855 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.08156708 seconds)
  done (took 2.037162633 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.077124075 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.079112646 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075137962 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074940549 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.080370338 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.076168532 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074100657 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.076622688 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07670544 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075431579 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075022963 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074567285 seconds)
  done (took 2.470055572 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208083793 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.077227766 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.077346484 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074519329 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.079017473 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.07479836 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.090058391 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075791909 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.102081709 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.075274673 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.075174976 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076930497 seconds)
  done (took 2.643562134 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216116494 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085307976 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246001859 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160298077 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119949508 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124662586 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120901725 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121422679 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.150376078 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108831659 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174172471 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175121604 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116345516 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145789056 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103217253 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107495724 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164488608 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172427964 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115651598 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173804104 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154451162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135220791 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155620698 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110422467 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114241021 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131386668 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.079945636 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089140388 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177204213 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141865239 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152233662 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120421216 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101407327 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184826827 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178894843 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148872428 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155685337 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093373404 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.110535315 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.140591068 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206904827 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098956355 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168002019 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261853862 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09136896 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142379948 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127864028 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.129013653 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114300229 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099051136 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154201752 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192243976 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.146547032 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097223776 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133680676 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123102407 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.124196876 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122210422 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189634515 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168148227 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136076999 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079775619 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117445883 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159536894 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140767478 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.116272824 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133731114 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099695135 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144121103 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16275053 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13198082 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151476672 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12625717 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097265666 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126604394 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149490857 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135486348 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167631804 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131664796 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080976077 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130992533 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109349629 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08825786 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156398539 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082999973 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181677703 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107517596 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113238425 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133225519 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116311138 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116510097 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169097322 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.297516847 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113603809 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075147608 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115220599 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128191636 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157253148 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096495098 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116084889 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125063291 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085849461 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146298488 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.084144129 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13190829 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083494795 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133654868 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138033485 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.087183622 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131457683 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112818577 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109105327 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140401485 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166848058 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09668152 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09088012 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177306461 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129397091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111559177 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152082798 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16440387 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.107142525 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110810796 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159347958 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179563533 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098647437 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170169395 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115494258 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092326403 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09615371 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131206096 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11975512 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133678059 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089689387 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.125716942 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174045611 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083280022 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103330985 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140884985 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086384037 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088265031 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112763339 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113296486 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104332327 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.107293581 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109609167 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14491477 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13000122 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111651161 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128016556 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104758363 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173309376 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09365927 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10808127 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109456962 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.076574256 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138457375 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16117261 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086082546 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163228189 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125300294 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121419824 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122767536 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089408958 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143102699 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084354991 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075687287 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1434188 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113309858 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112281305 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148376887 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118439407 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124776229 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1191517 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132117446 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129256115 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13102578 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108778424 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092401831 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114455667 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128418549 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078596314 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093562639 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084329007 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108051891 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098954375 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087309834 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13977489 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122448026 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113055374 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114320941 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099500997 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145435236 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081222617 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127143257 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120999814 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099168228 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150240294 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149394903 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132180188 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102036026 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13483568 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.33465998 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085144396 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.100307042 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133507001 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095281577 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095193252 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129210671 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159396391 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140288474 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149640843 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136109228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131197644 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167533581 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.080303242 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.13205997 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154823138 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13197404 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.113266305 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10128886 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.110578141 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152923862 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117683904 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192220233 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121645414 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13334351 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164076339 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.111223985 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089709714 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112078581 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144778981 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113609696 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151900223 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109404458 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097205965 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117582373 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084533244 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106705328 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135738798 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127852396 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143188278 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124130713 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14170523 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086664498 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123732821 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1315171 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129949631 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.072308939 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126914049 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166839016 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103423992 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124880312 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157863841 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087244694 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.296282814 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183346911 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153526385 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094751606 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119287494 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129438325 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136120723 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127632972 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148196976 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118203828 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145630288 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119120955 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093856236 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097080275 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106442325 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112962442 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103438564 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113450873 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122366421 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103629888 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13968611 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112014429 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119065787 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125764096 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.108773283 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.100078979 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104920391 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185006801 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127078839 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17779798 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.108592337 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.150397383 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169822118 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083480825 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087337519 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086039851 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147648702 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092471466 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138119429 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.116314992 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125326936 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131249592 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149045037 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103296785 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076225619 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115889845 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141020167 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13288408 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106200002 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111350804 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167997747 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108077509 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087373862 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120707599 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123364915 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110700502 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174384795 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069545437 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112478754 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084304061 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088408851 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13293698 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153431658 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085678216 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105034686 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123303143 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116830607 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131092787 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108587107 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113735685 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132215234 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153782022 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131486688 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095030307 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115897665 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1305021 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156707121 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106752978 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102718767 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174265611 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153414845 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16027169 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094039449 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118105237 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117920284 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116267292 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139929563 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089690072 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163289216 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087202604 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138619195 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108965519 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093069787 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133010732 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113800561 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09388652 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148255781 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120749729 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089226086 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083163291 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122635989 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122756272 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111024048 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.082090187 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14118087 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.08088531 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136204278 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160849151 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087007459 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109400136 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099185569 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084100257 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109551835 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104979837 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091355732 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099864767 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166338284 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089751502 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146501447 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133445581 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114845491 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130621944 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104606542 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642903905 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08190789 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150278249 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118546172 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167844061 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103993179 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119351784 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111971068 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123126538 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144492497 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104458808 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.187505861 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130143866 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116486481 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084620546 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104566596 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106643933 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091920207 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10948457 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114879598 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11573101 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095133036 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117522494 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122566289 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08715052 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099565322 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152546426 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117510838 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141609165 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138664851 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09058535 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119443494 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134452272 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085043877 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12007181 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.521615191 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118314501 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112610154 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.093081181 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.113844848 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171526298 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.085610769 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174194417 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133136182 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121067057 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124073235 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.121025832 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144080735 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118372321 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132746547 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103016981 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.118274598 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124677887 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092241993 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.087138222 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116710549 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121159891 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10857178 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106921203 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.110485986 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161723888 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.082915568 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109864059 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125891184 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155144046 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183208105 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.0988348 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093684608 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129333831 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126724227 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122887263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130725305 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.088499982 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091915617 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.089565169 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08901369 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118094862 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123461049 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124872356 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120107665 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171124209 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.094125588 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254933906 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105731016 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11493871 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.079585649 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.087172461 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105213849 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107033541 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116991851 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118955169 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166580665 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.259994755 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.099651515 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101911273 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.0832577 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091880142 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137089074 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117985061 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127237239 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111246071 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.071466586 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117651827 seconds)
  done (took 62.317429008 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116918475 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.090929955 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.105432209 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15372138 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131453192 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210611916 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.163066576 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198744741 seconds)
  done (took 2.925634757 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.077361961 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.105368408 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.112016528 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.092729557 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0756715 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077030309 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.242286398 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.090984795 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.074955661 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105837299 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.087456666 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077367887 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.447128991 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074375206 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.076076738 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069956689 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.076085326 seconds)
  done (took 3.704777721 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.416662422 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.627819441 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.36294136 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.085142188 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.96508799 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.100991829 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.161674733 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.145094801 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.087483934 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54700201 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41947448 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137822004 seconds)
  done (took 18.808134265 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089621039 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083920125 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.099590381 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.099206733 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085912105 seconds)
  done (took 2.209134336 seconds)
done (took 113.094602518 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090969861 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.632417136 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061414762 seconds)
  done (took 2.473627627 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092382808 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.094541914 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094782473 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091997052 seconds)
  done (took 2.131477919 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.083756686 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.0852073 seconds)
  done (took 1.921393242 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.246568715 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177519436 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105411326 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091544409 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08835885 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088394611 seconds)
  done (took 2.029107075 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080460174 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083911911 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081688688 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084766816 seconds)
  done (took 2.086047228 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.085517237 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060171329 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063147588 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064850993 seconds)
  done (took 2.030612801 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095262334 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088008809 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087395353 seconds)
  done (took 2.028504201 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10979487 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095307418 seconds)
  done (took 1.962693282 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090155809 seconds)
  done (took 1.847903172 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103449547 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109757323 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140330712 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119707914 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.148709445 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118786492 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092435078 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093199 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.085693928 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094756285 seconds)
  done (took 2.864005301 seconds)
done (took 23.744893195 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087026442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.38282821 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367944249 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098852771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67856384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.364522286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.979311203 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101806341 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124606951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076722914 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093356155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657742472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970483825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.338235735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955516821 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.338166104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.659098774 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076841752 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076754409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077067059 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963255135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07608183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075555289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076410254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.657562333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380269658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076025224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.354838359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076553651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078990987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.363486608 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076522816 seconds)
  done (took 16.506330853 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078610999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130321336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081638472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093402903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07864105 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078499157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.079236843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077680164 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129983178 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075950829 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09385058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075746202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080001754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0774734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096040435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076313081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077193615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07729301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076801161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077210799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096370455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076593439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076462567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07745161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076142782 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.09003242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077931195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077145403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076868172 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07907353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07930281 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077974084 seconds)
  done (took 4.444846201 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124555952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137756235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08184402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11412685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120814761 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078801081 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153703664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102394222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137089497 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076430437 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094512767 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076437314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112862244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077874653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097834376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077065303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078074989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07723788 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076616934 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076744133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096477937 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076900361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076970102 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077939924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076857052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.09173259 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077586541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077223934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077322793 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079457143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080527796 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07814498 seconds)
  done (took 4.713372142 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081729095 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083616502 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.092043795 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.093467972 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077843941 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.081219027 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081784227 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.077897417 seconds)
  done (took 2.446283873 seconds)
done (took 29.875002899 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.0873155 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077044012 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080884165 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090586371 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.08275014 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.086644527 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.075258093 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.085308457 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080904198 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.081931374 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083599112 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075657497 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080322271 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.074726479 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082874416 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.076020499 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08981108 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.080730049 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08869688 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088361451 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078163549 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081576564 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.084030531 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087912628 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08832598 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.087842149 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085458657 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081393053 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.077331213 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.079364819 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08662892 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092564397 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076741415 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.087858024 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076807444 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076318393 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.080216856 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.075924595 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.088451593 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.085265421 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077825482 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.085108395 seconds)
  done (took 5.225133016 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.097383575 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.10238241 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092976396 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.070769968 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.075116051 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.073745697 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.097794859 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.068269305 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067804391 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.097268131 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.064196988 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067836388 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072484979 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061905356 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.068887782 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064622822 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07046045 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.064145969 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.069273415 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.068516997 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.098308121 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061642149 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086329794 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071641527 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.064163517 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069696795 seconds)
  done (took 3.752162929 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082804818 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.094849529 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.099743898 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13948786 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114147132 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087838529 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.088705763 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104653289 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097701263 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075193128 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.080207419 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102039065 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098312804 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.083286231 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075944607 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.095241028 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092930001 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07746081 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081704687 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104268197 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09600515 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.094626962 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105474387 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.091947695 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075155678 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07876228 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080644388 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091118399 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078943374 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085850665 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079043373 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.080262727 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.078869726 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087603718 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07860669 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.078399335 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10396515 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085960503 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.090063613 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076885858 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08431933 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076878844 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101254878 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136380043 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.074868388 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.082094945 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.080017879 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085919989 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075801571 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097430157 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088379077 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.076245297 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.079325662 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.075307785 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.075323078 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079665583 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.078475962 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.0791858 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085320741 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.082137956 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101176747 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.080941917 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.094218829 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075684462 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.083896134 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075512168 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.076704238 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.075467242 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.104458785 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077271616 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120056761 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07677628 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076670561 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085283177 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08357738 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082243876 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.075996714 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092293721 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087114166 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079942623 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.085350904 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079751429 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.079631598 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100633216 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07843961 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07812009 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.076915564 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.082088623 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079183426 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.078020951 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089483576 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075141137 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.079003712 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.093304748 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075388996 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077318943 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.082016932 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080839391 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075751959 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08757613 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.080098012 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.077285767 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086164652 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075864794 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.079082899 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088336814 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082090527 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074810605 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080719687 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081286547 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076425314 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077558769 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.079113384 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077647474 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084737519 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082704699 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080173882 seconds)
  done (took 11.780877671 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176747719 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.168713734 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.079554675 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.162551387 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.086756854 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.088786155 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.161663924 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104436403 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088522947 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077680738 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077302829 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.120526481 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.115326947 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.125215893 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.088392854 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.077385777 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093553349 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.124130598 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.162729881 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.156965619 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093560976 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085924585 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079025588 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.077457074 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.079033617 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08715361 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.094544258 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085296163 seconds)
  done (took 4.842206708 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088272333 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.115642606 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083430505 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100499362 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098735852 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076267216 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078719201 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.078741025 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091166323 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086146282 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076028708 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.081750784 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.083163666 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079274736 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076773745 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083611287 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083229986 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.078659727 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.080257087 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.082602995 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087564639 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101299279 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080341776 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075565255 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080905406 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075556292 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070603419 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092127744 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077028384 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104754057 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074142254 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.08167602 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091460187 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077181677 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076018439 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076296305 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076164197 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076289701 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07852306 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.077304136 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075065355 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065866971 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075292719 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08710023 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083562882 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064566101 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080918505 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081680412 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081704177 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073508505 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.0801441 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.0795976 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079489761 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.08479721 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080725731 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082237769 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078002333 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082454162 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.086655541 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07608851 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.073354276 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.074245827 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.080927205 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072796938 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085643489 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081034163 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.074953283 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07611647 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.079263434 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083819261 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076231104 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081262189 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073938864 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.079010604 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.081084966 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077818866 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077888497 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074581872 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.075908325 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07655785 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063362781 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076082612 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.061244428 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.079720082 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074723201 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074394119 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076088763 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080749125 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088077719 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.078083965 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082685729 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077001171 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075010536 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079066736 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068519826 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079610367 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087779515 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090434465 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.077049395 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074635806 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.090850042 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081309689 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075472093 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.064165424 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081108766 seconds)
  done (took 10.219486875 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100246164 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078837097 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.094162345 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.100349092 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096416556 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.084175462 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087153039 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078535514 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.09278209 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082814564 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.086665674 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076417559 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087186344 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086454897 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.079250865 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.086897299 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080451892 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.093933191 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.092789255 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.077127856 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.086058522 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.090522457 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099531839 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.090650159 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.089908053 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090926789 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099772362 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.087210383 seconds)
  done (took 4.306639662 seconds)
done (took 41.897214105 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.8942904 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.045115327 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.86937597 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.210161112 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.942067116 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.092726721 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.054243403 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.863762275 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.039016937 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.901149719 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.14392552 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.077681 seconds)
done (took 67.066409603 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.89170336 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.0082805 seconds)
    (2/2) benchmarking "String"...
    done (took 2.102226389 seconds)
  done (took 5.907635551 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.200977261 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.675426167 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.111905595 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.860997758 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.869296164 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.182555173 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.658741457 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.37314699 seconds)
  done (took 31.528779304 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.042568567 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.08795208 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.574129398 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.597516389 seconds)
  done (took 16.151224441 seconds)
done (took 65.561186995 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.86447811 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.864679616 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.866419352 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.846224518 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.92338631 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.879698301 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.349165713 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.997139352 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.863608454 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.854571301 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.865967481 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.351086432 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.866489858 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.335249288 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.865710086 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.873468849 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.928055725 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.30470899 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.022729613 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.882804416 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.885440036 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.910540066 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.86495733 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.874234618 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.910634005 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.864665018 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.277674097 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.872520851 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.719862754 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.864868196 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.914924722 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.338656668 seconds)
  done (took 207.701176015 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.864359774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.922866614 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.975838402 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.870470847 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.348266951 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.045438692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.96896253 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.371943417 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.869040062 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.896210357 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.021468595 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.866751289 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.046449328 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.814107301 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.893023211 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.950369252 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.993823354 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.056804019 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.896355784 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.015239904 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.882243299 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.888912987 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.838081184 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.005330911 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.908551922 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.883124811 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.875458655 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.882236252 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.058571093 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.97910679 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.909740779 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.888015527 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.073771665 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.738773004 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.868518796 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.886844611 seconds)
  done (took 173.054968625 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.0310829 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.867613436 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.865679667 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.866029624 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.871657971 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.866081451 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.865419989 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.989433972 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.50890175 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.318591233 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.001237226 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.916889594 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.685736897 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.865979437 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.933042713 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.878937329 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.869042663 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.881753152 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.893005462 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.866910549 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.866156166 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.99442931 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.881825156 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.008447832 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.877642116 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.868160802 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873579828 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.236847831 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.867353275 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.873648581 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.108299462 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.869008207 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.867002297 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.730237938 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.391616756 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.959036903 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.868670928 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.872983792 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.867013987 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.08471955 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.868789154 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.868194177 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.869097082 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.871308898 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.023348331 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.870761963 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.998980877 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.869032261 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.344145297 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.86718123 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.866912521 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.578012395 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.455786589 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.870721887 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.868484817 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.871294615 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.868350315 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.868512005 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.874661398 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.539656215 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.947840922 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.870305239 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.872305806 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.874385153 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.869803635 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.013526374 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.869059201 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.521106444 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.928879051 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.090721042 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.993873112 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.872473778 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.935943907 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.964803629 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.870086618 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.869352487 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.870470629 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.869289182 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.95065084 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.869841547 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.998308797 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.877804056 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.871533132 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.922375088 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.938588503 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.870456162 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.7146386 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.872515901 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.870069169 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.163468479 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.936873955 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.870299055 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.869917567 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.869731324 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.996169942 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.995127185 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.583790808 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.873849105 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.587929445 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.87805809 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.870357443 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.007757818 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.8721331 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.018322301 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.874575788 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.953149916 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.875419735 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.871763924 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.87129052 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.871148521 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.905041309 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.871863089 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.926960487 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.874115223 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.243102327 seconds)
  done (took 413.097076925 seconds)
done (took 797.734926831 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.538089327 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.504316696 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.600494219 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.519886112 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.497723225 seconds)
  done (took 14.4649551 seconds)
done (took 16.269018801 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.959597341 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.965551448 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.896780914 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.962900766 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.893467235 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.962100251 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.945278229 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.897260995 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.931795453 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.896353218 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933548082 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.898307926 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.884274445 seconds)
  done (took 26.832669769 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.096601084 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.105815424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.941251629 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.127248691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.918611758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.097863737 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.034243533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.0249126 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.023451731 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.889538269 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.885286225 seconds)
  done (took 23.951688478 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.100914284 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.104990312 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.949127072 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.10463231 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.921981357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.108441985 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.032285362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.029797998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.029408619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.890340333 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.885667127 seconds)
  done (took 23.964499664 seconds)
done (took 76.553888714 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.88267354 seconds)
  done (took 3.690008561 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.910905719 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.079016419 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.89018375 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.886499554 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.881834188 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.882167605 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.887224276 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.881659938 seconds)
  done (took 17.107985856 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.881083279 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.881333674 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.882120803 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.877925126 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.879470568 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.878568899 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.878291933 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.881444067 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.87905342 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.881184118 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.87836751 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.882063207 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.881600836 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.881595477 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.878944455 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.879052805 seconds)
  done (took 31.890233218 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.880767824 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.87910862 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.878711125 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.87950978 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.879317582 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.879641594 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.880673609 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.879370101 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.880395046 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.879747415 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.880741312 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.878918942 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.87935914 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.879651085 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.880496248 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.880499612 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.881151454 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.878970182 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.884261572 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.878788404 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.879761314 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.87835525 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.880387275 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.879548781 seconds)
  done (took 46.929722323 seconds)
done (took 101.424649548 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.648623236 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.498778725 seconds)
  done (took 9.955744989 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.884655985 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.881942829 seconds)
  done (took 5.624749132 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.88234521 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.882699088 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.881816739 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.882931784 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.882850141 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.883150578 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.882473976 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.882167502 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.883258403 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.882892241 seconds)
  done (took 20.635592664 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.884026696 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.882099414 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.879563606 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.882575863 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.882533351 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.880212255 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.882154962 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.882774956 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.882525067 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.879917836 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.882663759 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.880696575 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.883018606 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.880836078 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.883889262 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.880790768 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.880101064 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.881120386 seconds)
  done (took 35.681581632 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.883212863 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.883845901 seconds)
  done (took 5.578028829 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.881161489 seconds)
    (2/7) benchmarking "second"...
    done (took 1.881060665 seconds)
    (3/7) benchmarking "month"...
    done (took 1.881057304 seconds)
    (4/7) benchmarking "year"...
    done (took 1.880595375 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.882175821 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.881145234 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.882593522 seconds)
  done (took 14.980612394 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.885586492 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.04644103 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.118196645 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.512523012 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.8857417 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.888203173 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.882371285 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.887887425 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.889153448 seconds)
  done (took 20.807295638 seconds)
done (took 115.071799412 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.681096389 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.884020129 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.126511584 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.932785859 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.945559475 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.180995 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.916997435 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.18546732 seconds)
done (took 43.664280788 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.886690102 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.200428196 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.248927599 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.905464036 seconds)
  done (took 17.166358008 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.86532002 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.418084938 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.922701817 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.547184307 seconds)
  done (took 20.789635042 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25583875 seconds)
    (2/2) benchmarking "read"...
    done (took 2.249788834 seconds)
  done (took 6.323024993 seconds)
done (took 52.979322275 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.885747087 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.883249227 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.885172689 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.884091263 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.885122603 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.882134823 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.882767112 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.887223335 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.88558215 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.886796081 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.886155706 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.886605329 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886293569 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.883402826 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.884106188 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88707122 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.884965017 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883973042 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.883601144 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.887100082 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.884370153 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.884386805 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.885203127 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.887622795 seconds)
  done (took 47.055857735 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.887241161 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.885587767 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.888194794 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.889092103 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.885493418 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.887376433 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.88768751 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.885843969 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.887954018 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.888231231 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.885116485 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.885231655 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.889044999 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.88595254 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.888096045 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.886336147 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.888350711 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886092939 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.889343413 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.886046927 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.890389348 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.885663184 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.886942484 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.890720622 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.886401406 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.88590868 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.889524342 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.886828069 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.889001451 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.886737638 seconds)
  done (took 58.435610149 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.89303439 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.896648344 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.889442102 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.888640113 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.888674357 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.88960775 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.890012327 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.889798731 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.889552822 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.888893137 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.889502833 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.888543585 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.889336111 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.889928762 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.888621238 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.889646989 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.889677155 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.889543055 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.891251458 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.890261253 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.88990452 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.890040199 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.890194946 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.889679274 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.890040268 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.889874198 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.891018243 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.890543441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.89171935 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.889995563 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.890313306 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.890907942 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.89134092 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.891876825 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.890816512 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.891108199 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.896300548 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.900159454 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.890925191 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.89126627 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.891512004 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.891833233 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.891387224 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.892609074 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.891442987 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.891830283 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.891785561 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.890847111 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.891048012 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.893674652 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.892429643 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.890665836 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.891377068 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.89122873 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.891580824 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.891678782 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.891014339 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.891290688 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.892208722 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.891619585 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.892536902 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.892418119 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.892011691 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.892011 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.893389446 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.892820215 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.891390992 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.892537737 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.892800011 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.892200274 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.892565952 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.892699461 seconds)
  done (took 137.988785147 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.892249483 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.890141272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.88948231 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.8902294 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.890233151 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.892496187 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.891220692 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892980369 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890253572 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.893568994 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894111654 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.890210602 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891738278 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.894236579 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.894434394 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.890369154 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.893577647 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.891055929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.893054061 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.89493279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.894403231 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.892622145 seconds)
  done (took 43.446736723 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.894493555 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.893457016 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.891452373 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.89461429 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.891246241 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.894030651 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.893972316 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.893537969 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893846905 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.891675222 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891867654 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893922387 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.891919309 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.892049319 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.891447082 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.891821936 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.895133189 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.892421219 seconds)
  done (took 35.89424782 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.892930139 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.892223039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.894918386 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.892567419 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.892960831 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.894565898 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893680915 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.895747506 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.895080914 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.892925146 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.895554233 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894844632 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.896153543 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892467421 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896014074 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.893540666 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.896188312 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.892925968 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.897273856 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.893081517 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.893527322 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.896783074 seconds)
  done (took 43.49751917 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.896446045 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.895814487 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.893731592 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.893682928 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.894111661 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.896630823 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.896847916 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.894013615 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.897367439 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.897350539 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894649988 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.897273855 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.894544274 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.896114191 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.894391188 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.895011402 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.896924803 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.894931703 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.896947915 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.893691797 seconds)
  done (took 39.733345979 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.898278613 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.898976313 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.899107524 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.898690301 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899780989 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.898551869 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.898826726 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.898959745 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.898854078 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.898938548 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.899151276 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.898304521 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.900590765 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.900356507 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.899995489 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899877252 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.899338018 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.900385219 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.900552215 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.90095109 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.899812115 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.900414436 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.899911297 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.900000561 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.900076038 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.901000733 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.900625533 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.89991138 seconds)
  done (took 55.014172459 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.898556173 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.898844134 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.895439312 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.896379745 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.89598733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.8960936 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.895836063 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.896878681 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.898876303 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.895695742 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.899522636 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.898722992 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.89908025 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.899362659 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.898608711 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.900557811 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.898983115 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.897583571 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.897429891 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.896656435 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.900386546 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.899746944 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.899975242 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.896747128 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.89659263 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.900754114 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.897257097 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.897225049 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.900496063 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.896401597 seconds)
  done (took 58.767031859 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.917424361 seconds)
    (2/2) benchmarking "in"...
    done (took 1.919009312 seconds)
  done (took 5.662611007 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.896497437 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.90060706 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.900271261 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.897788196 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.898756554 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.900784256 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.900714726 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.897598699 seconds)
  done (took 17.019413282 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.900592618 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.900964621 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.900130087 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.900868285 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.901473694 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.90119461 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.907182434 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.900788398 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.902546567 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.903602348 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.90889657 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.909674619 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.904190065 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.90209807 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.901781317 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.90334227 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.900935186 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.903198429 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.903455411 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.901957066 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.903184091 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.904659808 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.904164145 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.899346265 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.904118019 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.912229169 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.906142662 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.902266513 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.903144284 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.906907154 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.903650987 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.898441998 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.903516013 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.903379138 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.901621296 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.903884127 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.910895749 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.903296514 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.908956775 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.903509366 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.903382038 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.90036344 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.904333154 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.904513557 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.904337464 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.903505922 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.902901407 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.899534847 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.903100673 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.907308663 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.90812216 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.90332344 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.900263336 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.907471795 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.90574377 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.910606712 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.905175557 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.907353814 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.913140917 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.913041678 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.918690627 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.912248324 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.905650952 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.904879631 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.914160372 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.928806956 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.911056838 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.901040019 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.901129888 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.905635003 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.911356101 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.918979403 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.915035398 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.906139624 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.907506458 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.903932709 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.905172059 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.904307949 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.911625278 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.907195922 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.90632091 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.905440833 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.91465276 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.928860459 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.90480402 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.906246951 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.906475289 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.906089817 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.906999113 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.916288018 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.907067372 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.905275222 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.90514594 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.906226745 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.906988425 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.907856098 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.904473343 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.90741978 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.902357066 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.906439021 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.906819719 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.909954132 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.915959891 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.908377957 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.908108405 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.912950691 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.907183107 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.907072404 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.912517831 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.906922072 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.907252321 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.90837256 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.913485052 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.903472507 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.910179961 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.91652776 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.908006936 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.909109995 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.907996647 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.907061383 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.917437566 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.93479962 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.907903213 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.908206239 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.914504306 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.919857175 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.909764607 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.910658021 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.908566428 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.905613051 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.905635355 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.909000505 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.908605506 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.910164161 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.909659671 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.910242259 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.905058441 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.907874168 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.909521602 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.910047255 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.909542125 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.909349568 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.909828605 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.911124932 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.909817939 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.910961579 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.914391143 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.908680885 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.911111798 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.910323293 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.906050255 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.908433518 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.90937343 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.90983268 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.909791073 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.910993695 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.908838371 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.910215059 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.910318321 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.908767409 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.909667084 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.911777085 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.913748497 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.911412705 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.914021137 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.909862689 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.906834981 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.90885227 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.910060176 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.909881264 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.910588761 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.910238186 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.915137314 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.918997397 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.910538842 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.912486531 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.913237341 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.910909878 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.912548757 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.911576044 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.916763177 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.919334052 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.913350738 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.916621799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.912172783 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.91264117 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.911002609 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.910786018 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.911391107 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.911293489 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.914734756 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.918427603 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.925083292 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.920074339 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.913353159 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.916063632 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.912764262 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.916417129 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.914899027 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.9126133 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.911247326 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.912325992 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.91158297 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.912246083 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.913407327 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.913247886 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.911917523 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.913299276 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.912375348 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.912708685 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.912573518 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.912925517 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.913730824 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.909027477 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.911828847 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.913547329 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.912777557 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.910217365 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.913187856 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.912653642 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.912646557 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.914579348 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.919926314 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.910077664 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.913913377 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.914341385 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.915033427 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.912632059 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.911575861 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.91555713 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.913282638 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.920349268 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.913084697 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.9145016 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.921375134 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.914399466 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.9138005 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.916722321 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.914194841 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.911674156 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.91829638 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.922114323 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.91384821 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.916023851 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.914443171 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.914351161 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.914047488 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.919615052 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.911611321 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.913766899 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.914080184 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.916030517 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.911769989 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.916142282 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.915326647 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.91639344 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.91775265 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.914448988 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.915391399 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.916227333 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.914965827 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.916051525 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.916788292 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.918049074 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.923457205 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.920053269 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.916003232 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.917163929 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.916501373 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.919468482 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.915417851 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.916895405 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.915676025 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.92933051 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.925845742 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.921717402 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.917867854 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.916695567 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.921414894 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.917868919 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.921592289 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.917795486 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.917341452 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.9160382 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.915579686 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.914129958 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.919225778 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.917185222 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.917901498 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.918245096 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.920263916 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.916470763 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.91746239 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.918493172 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.918007882 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.916373183 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.916997316 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.917799632 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.918297421 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.91954055 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.916721305 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.917534173 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.924182332 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.917950293 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.918216326 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.917089614 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.91642316 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.917120165 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.918545053 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.917870159 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.920511279 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.926238407 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.920867538 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.927283292 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.919386254 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.927700063 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.91885733 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.921726546 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.927909131 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.915398583 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.91682689 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.918656731 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.920186542 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.924759468 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.918907854 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.919767173 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.923120683 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.919713769 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.920432178 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.918158291 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.920961041 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.91905152 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.920209318 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.927645921 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.919917701 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.923448058 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.920851845 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.916024056 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.919474148 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.918405749 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.918578519 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.923283417 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.920021798 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.920439994 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.920054391 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.920570228 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.920000851 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.921352099 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.919705215 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.916640247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.919457822 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.926182528 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.921027087 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.924964834 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.920377515 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.92695341 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.920578713 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.927281247 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.921255245 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.921417764 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.920459871 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.920116417 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.92215925 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.920336158 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.921840296 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.921600382 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.923005246 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.925003866 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.921198412 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.923129683 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.921780457 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.922431888 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.920602393 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.931394765 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.945909918 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.922556088 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.925565466 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.917622944 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.924036822 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.927267028 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.922952589 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.920562108 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.924964057 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.933264805 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.929767708 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.922993234 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.92302011 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.923119354 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.922898597 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.921505159 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.9224727 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.924108318 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.92302629 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.92418269 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.923853348 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.925485419 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.921903151 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.922966956 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.923630367 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.924398887 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.931574107 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.924629139 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.923467105 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.922900949 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.922282687 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.923192887 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.9239918 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.923750784 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.923677892 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.922631571 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.925314057 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.930758942 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.930434104 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.925449793 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.922499799 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.92420391 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.924359586 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.923424424 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.925304264 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.924310651 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.924193959 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.925635048 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.925189553 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.924821563 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.924253895 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.924056877 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.924452807 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.92360157 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.926967551 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.931227461 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.924659931 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.921625008 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.924884136 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.924804273 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.923451758 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.925622102 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.931652871 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.92758795 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.935464746 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.932858205 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.929269125 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.923293152 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.926674817 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.932674313 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.92319638 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.924559653 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.924634117 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.925198554 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.925172303 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.928815212 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.925052976 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.930264612 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.923491415 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.923962646 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.932320215 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.925402912 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.925432918 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.925919001 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.929057691 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.924429306 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.921115436 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.924729599 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.925241171 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.930991975 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.926590845 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.925844731 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.927454435 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.923866548 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.926975218 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.930200642 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.925180665 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.926178289 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.922000695 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.925804649 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.926382268 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.925742677 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.922169301 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.925172176 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.925282584 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.929149086 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.933226846 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.922576149 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.927594544 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.926260948 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.926578011 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.927290904 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.925425302 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.922538308 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.922449042 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.926942916 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.92743529 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.927050495 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.928767153 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.925671184 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.927651937 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.928096625 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.927791029 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.930745046 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.937789479 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.934541195 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.92406807 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.926994349 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.927525593 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.929365827 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.927647311 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.927184434 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.927354498 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.928483844 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.926804843 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.927552772 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.926485882 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.930465083 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.944053943 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.928424883 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.927952132 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.928283527 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.931266414 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.927075016 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.924195022 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.927085881 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.929762546 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.930591424 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.936869017 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.928878456 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.93493049 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.928297929 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.929923214 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.93251864 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.931452744 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.936982011 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.931545132 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.928639874 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.928237661 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.936043368 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.94458696 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.929707205 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.939049188 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.959577975 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.929439779 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.930212563 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.930959444 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.928493772 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.930214543 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.931158129 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.931543265 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.929775492 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.929927737 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.93012515 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.931626256 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.935881709 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.932098336 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.929043673 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.930006534 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.942356163 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.93096243 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.925745088 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.930833971 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.929143934 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.93108556 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.929465827 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.929771865 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.928758752 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.942251567 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.939925967 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.928265343 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.929310451 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.925619197 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.932068107 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.93239902 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.939173696 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.936793098 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.928687387 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.929756852 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.930616183 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.930557093 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.925631403 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.92812039 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.928504567 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.927848108 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.927623022 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.940771298 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.9377545 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.932368092 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.928427434 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.929861622 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.928284378 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.930317819 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.92959429 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.930513593 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.930037736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.927745946 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.9316698 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.92760935 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.927394084 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.932818793 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.936693985 seconds)
  done (took 1145.404505095 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.925941565 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.926585289 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.929094939 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.919042 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.919147997 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.919428428 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.920796606 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.919918089 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.919967613 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.918650177 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.919479729 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.918731327 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.917748013 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.91946454 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.916811552 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.91765022 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.917368756 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.917443982 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.917874768 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.916870021 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.917961621 seconds)
  done (took 42.169481204 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.921620163 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.917542791 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.91828799 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.92067948 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.918458911 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.920661859 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.917765424 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921529926 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.921251197 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.917828653 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.921625019 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.920657124 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.918751792 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.918102331 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917716011 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.921132469 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.921199909 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.91810201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.921838136 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.91863526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.92126972 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.918670152 seconds)
  done (took 44.079886 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.92371868 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.923504644 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.921539088 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.919351365 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.924167735 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.918026272 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.922845274 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.921459938 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.922181815 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.922569405 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.924158886 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.924561441 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.929594005 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.92702761 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.92395224 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.923012953 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.065561967 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.922361162 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.922516633 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.922068371 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.918791746 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.927703548 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.919167844 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.918512155 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.920483364 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.923980052 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.921069407 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.921476242 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.922074182 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.923262673 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.928346908 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.921478679 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.923015661 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.923878003 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.92187004 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.923118666 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.927539609 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.922652073 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.918497646 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.921028063 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.931356235 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.942323237 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.924003559 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.929018741 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.9216075 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.921950657 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.926774547 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.932124554 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.919441902 seconds)
  done (took 96.249465206 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.922188285 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.923526177 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.918798601 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.921012316 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.921550609 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.921069891 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.923389664 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.917024506 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.913390735 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.913641258 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.917168049 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.914095504 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.913582303 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.915707883 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.915557815 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.913728274 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.912943545 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.913931712 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.913990342 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.912895465 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.912893299 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.915702757 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.917807474 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.912233762 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.914824231 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.912666443 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.912236893 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.91681584 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.912016269 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.912104266 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.914915713 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.915311789 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.915193743 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.913614273 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.912351369 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.914823937 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.915795178 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.912734688 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.915724037 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.911973022 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.914995059 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.914893828 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.915435006 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.916169481 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.912541808 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.912638683 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.911856006 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.912494434 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.914064119 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.915332674 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.915255625 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.91300188 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.917088049 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.912577058 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.915232543 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.916341892 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.912592876 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.9135272 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.917176543 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.914449069 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.914042586 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.916334277 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.914045465 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.916494721 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.917459202 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.914383419 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.913389302 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.916940447 seconds)
  done (took 132.081624835 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.91773793 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.916927706 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.916870651 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.916801507 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.916708652 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.918338849 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.915844137 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.916483258 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.916315276 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.91690582 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.91666509 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.916803409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.915078419 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.914668151 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.915968129 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.914747183 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.915605091 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.91351391 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.913581953 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.913884634 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.914445791 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.913877286 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.913810806 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.913527271 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.913098011 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.912994262 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.914315751 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.913191241 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.913013504 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.913259 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.913152029 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.913742108 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.912312904 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.912510804 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.913739208 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.913185778 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.913482216 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.914343335 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.912493792 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.910640019 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.911675482 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.910844515 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.914031272 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.911361442 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.911263862 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.911887104 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.91153713 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.911033407 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.90928895 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.91022693 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.910366857 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.910524636 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.911819529 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.91170668 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.911196457 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.909050657 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.910542899 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.910815829 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.911783284 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.909870089 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.909780608 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.90890673 seconds)
  done (took 120.468278536 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.90929819 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.908974833 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.90522544 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.905566275 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.908813654 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.907296219 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.908259928 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.908040856 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.908893616 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.90915847 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.908838237 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.90639585 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.906978872 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.908643805 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.905692059 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.907464851 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.905230764 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.906545295 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.908280171 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.905814627 seconds)
  done (took 39.983419921 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.906372122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.908751662 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.904951988 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.905221105 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.908030932 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.907244993 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.909257148 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.908155678 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.904704587 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.908163239 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.909795321 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.90827499 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.905581697 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.905251598 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.908046439 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.90526059 seconds)
  done (took 32.347136609 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.9060326 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.90801273 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.908783174 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.909339451 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.90648981 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.906049018 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.907952642 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.905313163 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.906126978 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.90821961 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.907195525 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.908208809 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.908249353 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.909999222 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.905764049 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.908233106 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.904434051 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.904325275 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.907737012 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.908695374 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.90673067 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.90459925 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.906523411 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.906704318 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.904507784 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.906106949 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.903417794 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.905145342 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.905089853 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.907892296 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.906022749 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.90441839 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.905583465 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.904128969 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.907636284 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.904998587 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.907294936 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.90674119 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.906678407 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.906758424 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.906119911 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.905357888 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.906800831 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.906198515 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.904392019 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.907734446 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.904718939 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.903226532 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.904868978 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.903261525 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.906388864 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.909156254 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.906286277 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.905929925 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.906276388 seconds)
  done (took 106.685506139 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.906188305 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.905102457 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.902547125 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.905472461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.90628488 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.903154885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.905906953 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.903111617 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.9031036 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.906179322 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.903920314 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.90607143 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.903194126 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.905274849 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.903760767 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.905842326 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.903837086 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.90365762 seconds)
  done (took 36.114776008 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.903492781 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.903206351 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.907326942 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.902441716 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.903814314 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.906901465 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.902585551 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.904499078 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.906201335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.903079839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.901769696 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.905774812 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.905084131 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.907338869 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.90280128 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.903922878 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.904463222 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.904327034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.903732798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.901864478 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.905026813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.904394124 seconds)
  done (took 43.725749865 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.905065651 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.903497352 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.919190895 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.921809793 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.9248905 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.934781194 seconds)
  done (took 13.3389271 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902038777 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904514803 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.901640628 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906259301 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906321081 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902552496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903357056 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901896619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905834861 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90259548 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901750132 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90525036 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904448434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902061052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905038046 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906188873 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902073068 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902248927 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901677202 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904917747 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903100421 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904710892 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901321413 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90224549 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902783212 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902374476 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904368439 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903019796 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902409445 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904515816 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906743383 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903740435 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904764976 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902830179 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904801781 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905957361 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903675017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906733638 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905089696 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903283837 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.904821516 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906183354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905984705 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903589876 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906742646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903759312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903699765 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904117568 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903800644 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905846133 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906160606 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90534351 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906139915 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906252348 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906914813 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907254484 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904779585 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904926157 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906585468 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903852077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903002322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905916197 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90441138 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904253042 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905728502 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903834253 seconds)
  done (took 127.518342076 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906272516 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.905790731 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904386231 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903908497 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904457298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905090374 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904573518 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904376688 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904776829 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904430591 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907143902 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905016326 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905579028 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904723558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904491951 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905153157 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906227374 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905970124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905506415 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909476879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905210376 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905145987 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904952857 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905364945 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905711949 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907977028 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907662789 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905346252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906983176 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906245821 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905984175 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906180044 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905717601 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.905572197 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905677546 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906337104 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905894699 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906368915 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905990736 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909579427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907110938 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909308189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90691786 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906162646 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907030516 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905884564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906955057 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908530875 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906558567 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905980449 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906878186 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907005824 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907051598 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906732692 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906913497 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908127131 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906897475 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906741189 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907742945 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91034004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907864823 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908133175 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910008747 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907858351 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906595747 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907437361 seconds)
  done (took 127.659559479 seconds)
done (took 2652.158638667 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.993740367 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.001690384 seconds)
  done (took 15.830428945 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.071880039 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.025140449 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.910019502 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.957674316 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.909876932 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.932639241 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.930791102 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.910254136 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.910422654 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.911311983 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.91123011 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.095393789 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.960642473 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.912440843 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.909510854 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.002208407 seconds)
  done (took 53.101959621 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.912794264 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.914438945 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.924142334 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.915366549 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.912662475 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.924435197 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.946901815 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.916470178 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.950672551 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.925334751 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.986200975 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.928448696 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.912425879 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.964272039 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.926733662 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.927722714 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.006726002 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.988680768 seconds)
  done (took 36.721297658 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.989843409 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.912518087 seconds)
  done (took 10.746322772 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.922111654 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.934878114 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.978693182 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.909838201 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.914876158 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.937889712 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.909424514 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.910195151 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.922145892 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.91439748 seconds)
  done (took 71.098325943 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.919230188 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.914763737 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.915361375 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.912318865 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.90613217 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.909523354 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.912474848 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.912363645 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.583268068 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.947952391 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.920790705 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.918489135 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.913712616 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.915187548 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.913931108 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.937133176 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.008746311 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.910278755 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.911296203 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.921832337 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.914265608 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.964191579 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.92714357 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.915053729 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.943419802 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.581687887 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.92364822 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.920336664 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.007194108 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.911930271 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.915069215 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.914783156 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.916909936 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.26889633 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.188486886 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.913347186 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.928077448 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.922871189 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.912192831 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.005860618 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.915881912 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.919845699 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.499474573 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.168937972 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.025077192 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.95618806 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.222779477 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.932150916 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.916914065 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.943688816 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.918326986 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.916626216 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.929142101 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.39262755 seconds)
  done (took 134.502149963 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.909009838 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.262478644 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.080979729 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.911744266 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.202927968 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122893492 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.913143007 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960929033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.91234666 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.145062913 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.167528492 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.022218176 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.911924763 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.911282905 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.913029209 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.910112114 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072616259 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.987112552 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.914374135 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.91074307 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.943644407 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.158385469 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.038216547 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.912214464 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.942390629 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.126325252 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.038026942 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.020721385 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.688107876 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.911252821 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.978455631 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.912962287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.914374181 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.911345902 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.071567232 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.029372644 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.998439752 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.912342899 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.910929607 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.909869781 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.67350407 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117063207 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.013119707 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.054417067 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.06498309 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.122922713 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.700395875 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.911255862 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.659674308 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.080845741 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.147821062 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.1443066 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.038146699 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.914317861 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.440620527 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.911420169 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.912567509 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.166577817 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058549545 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.016491264 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.915325229 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.913338109 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.913108753 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.212379592 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.915572582 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.012388428 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.915259357 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.914892519 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.012601872 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.02002021 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.054464801 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.12892435 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.947782692 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.64798986 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.133534842 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.164967599 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.982684746 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168356292 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.916324624 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.912683944 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996159545 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.763750781 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.171124682 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.205278306 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.170853345 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.953201755 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.64090089 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.913173491 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.145657496 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.138605268 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.166709526 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062767781 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.157584087 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.237473457 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.914585686 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.914591 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.135948117 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052588946 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.916160805 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.262015566 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151158617 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.485442105 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.937867527 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.224419066 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049324204 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.917920205 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.559595384 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.915250214 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.141677359 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.959029004 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.916211489 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.916538152 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.138681048 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.89186844 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.916148914 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.575148641 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.982618694 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.917290775 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.153647727 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.918796592 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.180644023 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.91950804 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.156292859 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.033044928 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.951933311 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.149495446 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.062129718 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.919969279 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.166602716 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.164167219 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033232361 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142108739 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.610080341 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.916867712 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.207605855 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.916947048 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.915981668 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.091208772 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.917239094 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.065411981 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.918542062 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.203308521 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.942003584 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.157254725 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.920370463 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.174865981 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.954962227 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.97032138 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.919462733 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.047218203 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.918536152 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.741554423 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.080041166 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.920750648 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.918111063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.693327288 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.916332148 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.077632456 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.1524359 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.942908133 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.992559327 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.593294833 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.91815577 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.009981287 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.944458985 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.305078369 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.919349399 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.173455099 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.920501729 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.917509567 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.918281479 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.214816907 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.125417859 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.920853901 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.916860179 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.81892009 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.918578646 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.917375388 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.106200873 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.266724219 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.919239604 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128644912 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.922240041 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049056803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.919980063 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.006146526 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.264550262 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.919967377 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.918554325 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.918072574 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.918819539 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.917985599 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.184422991 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.948112663 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.457344448 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.059285165 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.191650315 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.234789459 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.17156796 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.96685786 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.923505869 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.177358666 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.922094106 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.987490163 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.921289541 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.94429842 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.155621098 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.924470288 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.214792489 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.20192082 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.960401901 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.971176513 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.920918124 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.921865469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.919922913 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.068269569 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.013345038 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.922404696 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.919864308 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.038867041 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.04691456 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.133928833 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.922271554 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.965526155 seconds)
  done (took 914.889683145 seconds)
done (took 1238.724856233 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.923246763 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.921114402 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.911792987 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.926299576 seconds)
  done (took 29.535174399 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.932252078 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.927793765 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.92997626 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.929381017 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.930851736 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.929942917 seconds)
  done (took 13.43358739 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.972800566 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.351064179 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.925444153 seconds)
  done (took 22.103431994 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.997325535 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.319471955 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.037591222 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.352587589 seconds)
  done (took 10.561581193 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.931912632 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.929954293 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.930723792 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.934343055 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.933257535 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.9341002 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.931364311 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.932427454 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.936982851 seconds)
  done (took 19.251233945 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.380963876 seconds)
done (took 101.118258262 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.938464049 seconds)
    (2/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.049611722 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.713409688 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.102182299 seconds)
    (5/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.030544103 seconds)
    (6/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.044320221 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.929325835 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.0024228 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.055274544 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.307339919 seconds)
    (11/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.911865181 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.086046629 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.966897707 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.950145523 seconds)
    (15/309) benchmarking ("sort", BigInt, false)...
    done (took 6.926262526 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.570879061 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.930866142 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.081097774 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.210125574 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.913653251 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.202316475 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.292497719 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.22062623 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.175226227 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.009509419 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.266089974 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.847160749 seconds)
    (28/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.027869654 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.926436014 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.151141428 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.934037607 seconds)
    (32/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.087893793 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.964246325 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.013435566 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.542466338 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.030391639 seconds)
    (37/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.16782495 seconds)
    (38/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.277496827 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.942349014 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.49752779 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.833535335 seconds)
    (42/309) benchmarking ("sort", Int8, false)...
    done (took 4.895444114 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.931053151 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.034341442 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.117857083 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.16849791 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.929406437 seconds)
    (48/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.260251526 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.948953889 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.093175282 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.178962221 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.71755685 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.919949038 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.924198082 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.959695541 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.968520213 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.883624115 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.498317423 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.865492508 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.917234558 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.395590788 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.986351989 seconds)
    (63/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.178327718 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.934290061 seconds)
    (65/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.428461659 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.405011826 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.017474479 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.055992196 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.999635994 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.169440068 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.006773165 seconds)
    (72/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.166831485 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.936817926 seconds)
    (74/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.163680598 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.314187204 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.934311332 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.608075737 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.355540786 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.155445057 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.259903842 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 5.642066159 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.039903117 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.986864117 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.262949374 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.021620176 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.934447176 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.181213512 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.590780175 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.981494941 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.262082138 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.921066344 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.702036029 seconds)
    (93/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.043878672 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.935629396 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.217833683 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.900151277 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.955792029 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.985537101 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.03666653 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.93415164 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.160584886 seconds)
    (102/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.415671372 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.996453036 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.01275591 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.239706034 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.890162498 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.940185506 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.009868325 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.381245351 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.035595225 seconds)
    (111/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.958955364 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.91919287 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.030239122 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.027428174 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.038980549 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.432295746 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.031791508 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.118523111 seconds)
    (119/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.025130971 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.125716579 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.443646873 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.943000936 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.024791299 seconds)
    (124/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.042496222 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.20993609 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.322735654 seconds)
    (127/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.449847272 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.164034893 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.047448678 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.954705247 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.187564731 seconds)
    (132/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.920675976 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.667494312 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.326194363 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.940133434 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.190755096 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.030879383 seconds)
    (138/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.937651173 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.00283489 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.00131205 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.410430265 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.92430809 seconds)
    (143/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.095182097 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.065789486 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.914716031 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.039485788 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.937874833 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.962134925 seconds)
    (149/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.937511835 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.48866168 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.940753029 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.075868378 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.036338228 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.1690399 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.965785001 seconds)
    (156/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.083839184 seconds)
    (157/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.057265059 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.082345353 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.042097122 seconds)
    (160/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.113713832 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.230789541 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.959214393 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.111148533 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.028319583 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.937165343 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.232603746 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.057352453 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.920870223 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.005943088 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.387251179 seconds)
    (171/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.942296667 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.283440258 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.288504579 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.360460455 seconds)
    (175/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.043462932 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.168879245 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.941175665 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.845945215 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.078112946 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.955355436 seconds)
    (181/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.021706125 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.2367592 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.326637476 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.326107767 seconds)
    (185/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.926697758 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.815446579 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.361954544 seconds)
    (188/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.097186034 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.963940812 seconds)
    (190/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.122258841 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.981641128 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.30802818 seconds)
    (193/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.942992737 seconds)
    (194/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.442861341 seconds)
    (195/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.178508286 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.928326 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.67187114 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.92939652 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.589949764 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.618422938 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.941032203 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.318010588 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.006934446 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.367175653 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.082410207 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.15042252 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.939869183 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.945894939 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.075990906 seconds)
    (210/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.85439471 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.667856368 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.140713018 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.014746942 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.109877241 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.036023683 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.025213638 seconds)
    (217/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.102690358 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.070164795 seconds)
    (219/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.210828036 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.945347978 seconds)
    (221/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.040804158 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.014910449 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.959658653 seconds)
    (224/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.007371389 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.042788488 seconds)
    (226/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.103706859 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.165977273 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.987090722 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.926578248 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.879670546 seconds)
    (231/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.348609148 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.646396631 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.962437876 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.279178824 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.091031446 seconds)
    (236/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.975135764 seconds)
    (237/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.010627734 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.269426834 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.296650294 seconds)
    (240/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.034826155 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.030678703 seconds)
    (242/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.373811839 seconds)
    (243/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.450282774 seconds)
    (244/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.072920384 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.962859391 seconds)
    (246/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.952285469 seconds)
    (247/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.943376628 seconds)
    (248/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.477360357 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.067314415 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.035092926 seconds)
    (251/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.038593269 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.238869026 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.003115781 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.973843503 seconds)
    (255/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.945307133 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.400941903 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.956424122 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.968425895 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.943431672 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.025017785 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.235424023 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.920902321 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.278251971 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.007392183 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.233447286 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.294997066 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.039037128 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.017105481 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.929553946 seconds)
    (270/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.360979767 seconds)
    (271/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.017503765 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.263026328 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.136149662 seconds)
    (274/309) benchmarking ("sort", Float64, false)...
    done (took 5.696745084 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.249163568 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.136497162 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.058898591 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.007792041 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.035528978 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.112014989 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.852183358 seconds)
    (282/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.694705852 seconds)
    (283/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.853874722 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.147825132 seconds)
    (285/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.049778808 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.947882189 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.110213893 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.245214747 seconds)
    (289/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.98193999 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.908795334 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.573224603 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.996950863 seconds)
    (293/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.037502571 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.947809889 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.482484194 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.245145812 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.983932992 seconds)
    (298/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.026030902 seconds)
    (299/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.947569975 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.044723504 seconds)
    (301/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.930462378 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.005179931 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.727047866 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.970466661 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.180972618 seconds)
    (306/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.132288314 seconds)
    (307/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.17673605 seconds)
    (308/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.406871402 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.934809922 seconds)
  done (took 1027.231000655 seconds)
done (took 1029.146669227 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.983146846 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.975008988 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.959321474 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.979654473 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.070688679 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.984586227 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.968543909 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.960355471 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.006851607 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.009076452 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.956686207 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.982631178 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.961043031 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.958586475 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.958200827 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.972174152 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.268576853 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.981699635 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.975725213 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.967288236 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.975091264 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.956713435 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.008444852 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.983142147 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.962911148 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.960689478 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.962351995 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.981155353 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.071414996 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.961757671 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.96125887 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.969210464 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.269341773 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.980834181 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.954113556 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.978723357 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.970451991 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.968820981 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.963634322 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.9915223 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.354988723 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.992379926 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.963253634 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.960150788 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.961026472 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.963611376 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.9614403 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.967317506 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.972459615 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.973671206 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.354151726 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.005736666 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.964016678 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.962022549 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.971933398 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.959574487 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.965759843 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.97676852 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.980050932 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.975726428 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.257230853 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.987496189 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.964344125 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.977341508 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.968174196 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.393112084 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.987582548 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.964957051 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.356747997 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.995249195 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.392370792 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.000990025 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.963201447 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.975368734 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.992664593 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.26921246 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.979829754 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.962841003 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.969530921 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.960427414 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.97094209 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.975374868 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.968271933 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.962657862 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.976299561 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.98799953 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.974341145 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.963581921 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.970959174 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.981347019 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.969046248 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.974560978 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.966116642 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.959233795 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.972800645 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.966697137 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.966254694 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.966808134 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.967864975 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.973775756 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.357361418 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.010029687 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.960293732 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.961661123 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.962931288 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.977446315 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.357188657 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.993996629 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.985012623 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.010412925 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.966352709 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.262850711 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.988633725 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.980044288 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.973667828 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.971660349 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.959970349 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.262983422 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.381690154 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.008873582 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.966288396 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.963534461 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.980136324 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.966254627 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.961021775 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.273184696 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.989538294 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.977598826 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.085609382 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.975994424 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.996573174 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.964280361 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.968370272 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.997524143 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.981031812 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.996022119 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.971564325 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.981299918 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.98100541 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.963828639 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.975999395 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.976750687 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.966898631 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.971625017 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.961779622 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.992965748 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.978477688 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.978847408 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.988347951 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.087655388 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.964006005 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.265194101 seconds)
done (took 307.990427613 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.030430033 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.960229519 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.060232869 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.96001494 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.043166794 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.044910689 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.956977546 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.958516515 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.957656962 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.331735197 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.958363276 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.959037121 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.959742158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.958277914 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.043418115 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.961114968 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.95836409 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.297534719 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.962543723 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.032513795 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.958140491 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.957624942 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.960942157 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.339302372 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.957675608 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.962771936 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.033785242 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.962920914 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.332211027 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.960538945 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.963417428 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.328330898 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.054699713 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.980168556 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.972222192 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.969169605 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.043200825 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.964716226 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.04254566 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.044086482 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.062889659 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.002908618 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.956605448 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.963050862 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.9672855 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.96540258 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.959854919 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.990417012 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.960648961 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.960366033 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.29697597 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.9745408 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.970024709 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.95978939 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.958927449 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.985978012 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.960043603 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.964559072 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.053389025 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.965346602 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.026450663 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.336257674 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.334633112 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.963509117 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.963483287 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.961831711 seconds)
  done (took 190.532822763 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.031686461 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.037355603 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.029261454 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.966801544 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.014227279 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.031288304 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.966897913 seconds)
  done (took 15.96409574 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.970042941 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.963796562 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.016123389 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.016011045 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.963844911 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.113055461 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.964515719 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.975668298 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.961005246 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.017751169 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.965233374 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.965071523 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.971715775 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.962672285 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.014855357 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.977892879 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.084485561 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.966536059 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.965907732 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.116104117 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.96169193 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.975274444 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.019320833 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.97659497 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.965658829 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.972544324 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.551012293 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964905644 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.961596958 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.963915574 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.96171509 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.009222801 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.964482401 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.958309835 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.963209776 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.081075095 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.965253289 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.962316553 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.965777798 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.959320492 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.965211192 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.968599981 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.965851103 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.96240889 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.965513533 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.988363085 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.966808644 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.965593923 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.965279705 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.965242484 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.017568364 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.968293759 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.963949785 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.965576945 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.02246119 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.974136019 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.971310079 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.962830655 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.967414538 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.963596447 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.119127921 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.018249087 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.967195945 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.017942813 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.96761061 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.967988201 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.969579773 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.96664192 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.06404801 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.965889894 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.018170197 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.965163239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.125849095 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.990480502 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.968420865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.969637853 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.972706861 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.967444898 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.961662154 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.978263399 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.964779853 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.968338363 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.97475638 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.96407526 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.965716711 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.07961676 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.075699759 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.964932259 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.980998898 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.975798249 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.964963524 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.020757078 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.966896857 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.963622859 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.025161849 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.086260705 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.02277888 seconds)
  done (took 215.309119678 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.972546774 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.976377462 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.969612582 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.985272558 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.968488757 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.968335259 seconds)
  done (took 13.731995134 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.970488463 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.968477583 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.967496105 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.968394297 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.969707279 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.970175049 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.968545981 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.97008107 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.971875244 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.968406159 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.970447497 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.97092852 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.970077045 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.968851077 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.971370705 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.968692133 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.969541931 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.965673558 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.968388266 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.969654034 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.121799928 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.970322611 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.971488799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.970633486 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.974352211 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.968462579 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.977752959 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.968638889 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.968419593 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.977142405 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.973164675 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.970447039 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.970287323 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.973972304 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.975648981 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.970456082 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.971854478 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.971810992 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.96717325 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.973069374 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.971043351 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.970289986 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.971004304 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.971654356 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.973509086 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.97380591 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.97446912 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.979372077 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.972447161 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.973233843 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.970727093 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.9704276 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.97222188 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.971906627 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.973371821 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.975526785 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.975480684 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.972680229 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.971890988 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.973009208 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.97034545 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.972292775 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.97266383 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.97594542 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.977722383 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.972958195 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.972525125 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.975031958 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.972595376 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.972811051 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.972527097 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.968514533 seconds)
  done (took 145.002596166 seconds)
done (took 582.436488799 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.12060964 seconds)
  done (took 9.014995885 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.047739584 seconds)
  done (took 9.249047571 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.79535746 seconds)
  done (took 10.704930431 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.994570082 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.999790416 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.99422948 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.990572316 seconds)
  done (took 29.914181142 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.023019176 seconds)
  done (took 8.930358885 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.004264256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.978899874 seconds)
  done (took 15.916388227 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.117333033 seconds)
  done (took 9.02507932 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.146370283 seconds)
  done (took 9.090093028 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.001985262 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.01068707 seconds)
  done (took 15.933608655 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.96471632 seconds)
  done (took 8.872203574 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.570466059 seconds)
  done (took 11.564559614 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.000746103 seconds)
  done (took 9.007253997 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.032876957 seconds)
  done (took 8.941843522 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.093187036 seconds)
  done (took 9.001361557 seconds)
done (took 167.059909168 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.984524995 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.985639419 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.986413405 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.98318205 seconds)
  done (took 29.84854679 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.020207032 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.020912298 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.022777697 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.031498437 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.023433122 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.020040512 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.013477141 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.014299815 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.03154021 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.023882889 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.022678181 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.023407108 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.020467285 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.014288477 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.02474449 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.022620266 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.031899599 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.023092731 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.013649816 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.024401269 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.987793392 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.033039455 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.024852635 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.988065394 seconds)
  done (took 50.386496584 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.186374392 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.062935245 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.143666947 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.058274307 seconds)
  done (took 10.36060702 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.041007832 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.041707039 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.053038094 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.092686335 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.115123084 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.051137295 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.015906165 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.010272278 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.996025738 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.042850477 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.117585763 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.036450929 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.138237662 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.988067694 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.176006728 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.989211931 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.989831748 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.040999007 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.092416948 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.106376507 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.989747132 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.041711759 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.047485821 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.043856736 seconds)
  done (took 51.168002076 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.988000398 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.99620492 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.99497641 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.989312152 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.989768746 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.988912152 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.996286493 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.990125689 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.010226519 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.990600753 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.988397595 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.98947825 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.988371893 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.989203474 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.987348155 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.003093748 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.002563139 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.98911845 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.99200388 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.99641815 seconds)
  done (took 41.772351851 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.984755435 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.838120636 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.33748357 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.237877839 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.98431622 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.983194409 seconds)
  done (took 32.277199362 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.00409361 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.996862055 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.990489234 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.050347525 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.134122689 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.001678962 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.991576079 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.004481853 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.039649121 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.059101602 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.014248188 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.023861129 seconds)
  done (took 26.22493922 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.988513383 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.997959966 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.98887888 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.013301697 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.002955475 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.000275891 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.998033186 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.98562911 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.007169436 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.010805045 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.999775104 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.004880414 seconds)
  done (took 45.915479963 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075178571 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.874347244 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.0240155 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703409754 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.525976535 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.196958866 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.50867739 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338205516 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.98951465 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261864709 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.006336007 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224508708 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241655785 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987019032 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.059961735 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.425512759 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283291992 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208987235 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.011116199 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702189781 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102229591 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.603752743 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.663910832 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10802068 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199993591 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.120725783 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.24728212 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.946324679 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120888163 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023517549 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997041091 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.987421551 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263501732 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371342721 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102251152 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997897341 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650934516 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.707707776 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.976174754 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.679095055 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.820233874 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.114712856 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99516246 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987700391 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.923361428 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.602286056 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331625447 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.993237357 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.690081878 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.989703163 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998880175 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078902166 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.992471123 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.803648396 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943116644 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.271214266 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.986367819 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995264194 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.563050116 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.049362607 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.573075387 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.057280118 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.083340934 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710324773 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.450256992 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.13637046 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.993059444 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992990705 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92334506 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.633621556 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109185619 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.136592534 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.009607564 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639290933 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312662293 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.027282359 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.065440245 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275538373 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.741275166 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.039565152 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218944156 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.946022497 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924572813 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.852964729 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.924980053 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262052958 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023712844 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.6012287 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028220838 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333918667 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000300023 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011259457 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997979839 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.215348846 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.873922374 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.991984712 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.715739271 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270475585 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013324308 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331920145 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.925647934 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.995489711 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246003518 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.202906727 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.199784523 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.544044225 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154540918 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993277485 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.078756578 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.871361738 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115906679 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.269784679 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048511986 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.049042522 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120095797 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.947916846 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286590606 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016526192 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.167568837 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.960268096 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252660167 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.299058308 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241241979 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077229164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.99678771 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.993395568 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.678670625 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.616010738 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.218060127 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.994254039 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446790805 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116154207 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.994851267 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927839471 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.629089394 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.955098853 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.10004278 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217283698 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.910865207 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.380854703 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927200868 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139234307 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.109661009 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.217133301 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.643248204 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.071265656 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254885473 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458005177 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30134821 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119411701 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01417692 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087976351 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016161156 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.394799239 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361978284 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.997807487 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.999673057 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.735419307 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.06202882 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000415103 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.99910447 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827673356 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275851226 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028176935 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.003527945 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.930249704 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.010324964 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062721094 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00038655 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004774674 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.52517664 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750191862 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.008970306 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.703705031 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239921362 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00570113 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.739560339 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181408699 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.082080048 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276424237 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053841787 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.931504278 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.699449665 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.69812387 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996231143 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931948805 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.996867221 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006726542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008007113 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.195871289 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283726161 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.040290569 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.659889552 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.110049862 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008876411 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.001088378 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.997844558 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.489924274 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.073281691 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.56975935 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119676094 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134375149 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.01092582 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.931826431 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.000455529 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002256329 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.997455429 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.955332061 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051459427 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.652120862 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451951075 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258973727 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.653062213 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016752572 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.687433744 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.125497611 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.02131138 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.738065334 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.040503549 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.101952025 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073040113 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.008528707 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.667333238 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766996935 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.563746807 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331363856 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306435697 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437660109 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.465054187 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.332441698 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339866848 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234729993 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.528724939 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061035667 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3507343 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944437429 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089605443 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.650905001 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353755115 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016290651 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228494569 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394528132 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.804765203 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156224718 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21087736 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034832817 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.891979087 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.040143737 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.203876765 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15604938 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.748357431 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225726378 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345699911 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.754594927 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.107877965 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.999622773 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.697969394 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083042463 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.710678413 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.363023163 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.493195718 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.118562327 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498346035 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.011419597 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447554555 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352467547 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292282614 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.206049902 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936935997 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.012013757 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.012273614 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.003012584 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.980855235 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.94485153 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.286699777 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012180928 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236527386 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.241000798 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37338064 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.904433285 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.00662989 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000932349 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2990521 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.744068864 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250734883 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.420409217 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.592781902 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.014695777 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.937475633 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935853315 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.705755684 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.003443659 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977696769 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225230229 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.109391557 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957414108 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453483332 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325019727 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258669515 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.015979301 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276952413 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277923807 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.741559149 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03564896 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.103959146 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.749299962 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.745555671 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.22601801 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238571498 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809237093 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.235945641 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.052799481 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.965407986 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.0058569 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219082801 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.227646745 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.998920885 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248998351 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.72718367 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.01662308 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399954399 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061125531 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.982350239 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.214854612 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.098982133 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015319417 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083676361 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013952288 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.014540672 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.015218711 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05551277 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978448869 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.135751091 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.018698622 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096020217 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.068503323 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.595683835 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.015809074 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283674673 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397165736 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334825353 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063776697 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.006125892 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005723565 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938984847 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142872526 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.450404496 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279115063 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.137909297 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.147642744 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03106721 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.739216371 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373121124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325831139 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282210543 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.900243306 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.007648536 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.096546768 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.231195849 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017335547 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.217774394 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231962889 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31912462 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475471209 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.237839248 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457923951 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280306199 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.383749657 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.006965969 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599331537 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.014272095 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.763714785 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.044574974 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.007168013 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291647973 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017985787 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39093327 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031389547 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.202263846 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.525019711 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669008569 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370646603 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.00352388 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06513077 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289686881 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403459406 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321246283 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076460246 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01994698 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.733161606 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146111449 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.980580846 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.280894087 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.007999618 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218885448 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.719000753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019742367 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292868007 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318279931 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.005913108 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.011159709 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064304312 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.019544605 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.23454247 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.264703443 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257907696 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019138523 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.011147567 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.826158947 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286038203 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065080425 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944466683 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.01441695 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104535793 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255521205 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029618183 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.52718695 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.711629937 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299600515 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.922799455 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032068953 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486688917 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45688099 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339174771 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.534843197 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236335971 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.566297725 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.926945019 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.392839121 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.015085073 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.485406345 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.394170865 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.013648648 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.603247071 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129337248 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.278516447 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329977148 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.02507215 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809260392 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.055301557 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235532264 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612672382 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954622756 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.017710473 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.073214563 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.012258149 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.141501384 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021918822 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.013313971 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952972966 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.855550291 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50464999 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.015477821 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.998668834 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.780865212 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.620951087 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128627619 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169804963 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020469264 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.748009172 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.307083168 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269868067 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.585025897 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.09441237 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.018365659 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.015842978 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.942261625 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.211573116 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.213473584 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307974427 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.432280801 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.132369076 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020718602 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.22995963 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224772789 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.946811611 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169821111 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469536584 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134981068 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.935313492 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.731043588 seconds)
  done (took 1750.483094609 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.019392958 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.038729938 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.029473454 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.044851384 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.043455063 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.035639909 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.052727154 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.021241371 seconds)
  done (took 58.229328314 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.015834789 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.240437161 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.025668143 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.016720034 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.050312196 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.016573924 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.225148474 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.030702165 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.043371303 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.027330704 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.017339767 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.029983345 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.355726106 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.045478366 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.028903201 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.028815436 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.036394504 seconds)
  done (took 77.18645651 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.020434881 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.212270619 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.03409455 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.041694834 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.898886224 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.021033277 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.033733593 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.05196434 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.019964791 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.194025969 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.356709009 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.075156351 seconds)
  done (took 91.905356012 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.033426551 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.023697601 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.024150559 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.02429768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.025623166 seconds)
  done (took 12.083493549 seconds)
done (took 2279.762150453 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.275125542 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.242236508 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.251172042 seconds)
  done (took 6.437031952 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.167064811 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.212652202 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.339836981 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.338822172 seconds)
  done (took 11.005283186 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.307796624 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.401142399 seconds)
  done (took 6.652483309 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.356011543 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.037218221 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.43882378 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.014673001 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.018655307 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.017528673 seconds)
  done (took 22.99963486 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.020913164 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.024243376 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.022288302 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.023598417 seconds)
  done (took 10.035494779 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.001591619 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.744192413 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.00298085 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.01585123 seconds)
  done (took 21.708708508 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.769327888 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.417537993 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.763144405 seconds)
  done (took 9.89413207 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.512120209 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.189091263 seconds)
  done (took 9.645205283 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.2671229 seconds)
  done (took 4.21459062 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.052937386 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.293470244 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.584677096 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.542407446 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.635625184 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.844876066 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.32622238 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.259693346 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.461727529 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.478071476 seconds)
  done (took 26.428370334 seconds)
done (took 145.070594757 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.441830326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.057323451 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.219289535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.378703142 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.253608072 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.221287581 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.23867188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.371195413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.903325945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.899596585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.385034673 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.27819246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.189023634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.035398874 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.190266211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.034783602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.239991002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.45779089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.099895965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.280550148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.248505282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.027564313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.228383175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.041763195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.248665374 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.175086602 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.570907942 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.037374937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.238411041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.583300998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.177105152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.424000498 seconds)
  done (took 173.125282393 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.020261836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.022057871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.027983646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.020413449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.355563154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.030517533 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.021182564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.019954393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.114449953 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.102105072 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.039958078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.386022115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.04654846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.018207872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.047429862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.018355771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.306020636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.043456404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.048695604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.049994226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.050811489 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.226776091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.041364439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.261260337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.264051567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.044687295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.019159815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.044488878 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.047069306 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.04747175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.048961136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.017165869 seconds)
  done (took 212.800924072 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.016581454 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.019135589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.027713288 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.019371248 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.029770866 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.032115952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.017932601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.018103921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.544500853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.550147313 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.032482013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.023589908 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.024340175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.012526174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.024643668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.013388518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.024205395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.024338097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.026128607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.028132857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.032271122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.680911468 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.030460295 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.671994844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.022667571 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.024634821 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.012771877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.026007474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.029749902 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.028595237 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.033573438 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.013357376 seconds)
  done (took 225.094645812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.203670704 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.019306424 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.020830353 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.940039397 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.019549429 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.019870565 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.013422926 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.203821065 seconds)
  done (took 20.404714849 seconds)
done (took 633.37998399 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.505467044 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.349335701 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.203654568 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.045236263 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.312834003 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.079984223 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.039765571 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.110319469 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.77307273 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.112727721 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.687890896 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.066519369 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.780089982 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.072165202 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.165749534 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.102853623 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.589210683 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.678470676 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.217716805 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.136185376 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.211931136 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.016714127 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.123993471 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.805750386 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.801920373 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.06824103 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.226589507 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.592627636 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.052946898 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.201238687 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.816533156 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.437466303 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.055728307 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.039704584 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.097387167 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.075952368 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.387565857 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.054075586 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.163319914 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.817782692 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.126956804 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.645988964 seconds)
  done (took 109.791356298 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.010822261 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.00920233 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.009254286 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.008889143 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.010118765 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.008792858 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.008619619 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.008412796 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.008715742 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.008561879 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.007972787 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.010297946 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.009341116 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.009741386 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.008549747 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.008682882 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.009847658 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.011283167 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.008342663 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.00864827 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.010452752 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.008561616 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.024863032 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.009029078 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.009966297 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.010337793 seconds)
  done (took 54.210342295 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.022731307 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.174920364 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.262503366 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045135352 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.024095384 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.026576838 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.042027674 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.028318031 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.026362301 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.025767198 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.122014394 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.030967876 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.043028314 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.262152485 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.043466976 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.024704809 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.023461404 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.024355808 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.181667026 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.040905677 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.045167648 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.029348682 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.043774153 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.039381395 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.026964374 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.024852837 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.028129505 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.489204077 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.036143575 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.12101048 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.069594428 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.048623453 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.435135762 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.274445825 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.081604373 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.034048027 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.025424932 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.122565093 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.032202314 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.025870067 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.043344111 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.030716684 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.264243566 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.527764306 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.041026266 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.025815346 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.501341093 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.135465661 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.068513688 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.03731795 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.265688117 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.044920174 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.02667285 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.027172686 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.063302892 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.031103405 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.026249391 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.381245551 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.03871265 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.045244879 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.031612689 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.028818613 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.189264526 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.036318503 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.179201273 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.037695877 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.034171304 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.027861687 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.265303888 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046578922 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.520513546 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.043254989 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.027442274 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.122013968 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.183164695 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.528143764 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.042335645 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.190472653 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.453680434 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.054062353 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.037355157 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.480421217 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.058722596 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.036310939 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.030710967 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.029122509 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.027378636 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.073587656 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.044554318 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.459852395 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.530127771 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.399120063 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.058216457 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.04403553 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.030010507 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.38062594 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.037660044 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.028584596 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.260629068 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.538498606 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.045200732 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.035952837 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.515183671 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.045023976 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.048415099 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.038626763 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.269008076 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.048057809 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.073988854 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.029744429 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.036788969 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.032259055 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.048906335 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.03781613 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.02942787 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.509108388 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.145320743 seconds)
  done (took 250.700102225 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.025469405 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.027666775 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.02467458 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.027971615 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.02359476 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.029016187 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.023387311 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.023779518 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.039088606 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.023538381 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.023624959 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.026074297 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.026142195 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.024870671 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.726140779 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.036643363 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.636318578 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.028707722 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.02844328 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.032664845 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.807651465 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.035267079 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.029136246 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.035165479 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.025331692 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.028502575 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.092041725 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.030805649 seconds)
  done (took 172.895410177 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.031398472 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.214662876 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.053267306 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.071431818 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.043343433 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.030753444 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.055947848 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.054950604 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.038596912 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.030141843 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.02949472 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.094722695 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.046926014 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.1701714 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.065156481 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.066537611 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.137655813 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.040428924 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.02901591 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.029187998 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.061413286 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.027479592 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.095350213 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.163800241 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.052783115 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.150792804 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.039852022 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.033674898 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.032556031 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.151845173 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.049317994 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.093125457 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.065342068 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.052199952 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.15713438 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.151528169 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.138399408 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.062994301 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.040197664 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.032456389 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.031198334 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.021670945 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.152251862 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.054188919 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.034494622 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.141079018 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.05461786 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.034156895 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.042743079 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.031905117 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.04803608 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.05227673 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.101700075 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.169682247 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.070060442 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.059651093 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.059197448 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.316683631 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.043437619 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.136143749 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.02813776 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.152206745 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.057904083 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.022473276 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.034790335 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.040445589 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.063412044 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.067210046 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.140358323 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.042103178 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.134989278 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.069232798 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.043270118 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.033092836 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.036381795 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.152558103 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.154177884 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.070134889 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.073115142 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.069872491 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.032093064 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.034664174 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.02288345 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.052740526 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.039430268 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.152202374 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.157831974 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.044191342 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.03712871 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.036852292 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.036245583 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.061539632 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.16292047 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.072462739 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.132015283 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.104697818 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.112725743 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.052388693 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.048055788 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.038600017 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.101506145 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.051279807 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.047444019 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.36810077 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.108076846 seconds)
  done (took 220.192099254 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.484577135 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.089439689 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.09585625 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.357343948 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.462966244 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.906866592 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.08783996 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.085601814 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.110000629 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.276269006 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.155369493 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.104495787 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.073951209 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.06020978 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.086421108 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.10681451 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.095915669 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.393784106 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.220522565 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.171449828 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.069384305 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.353925055 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.407494248 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.471715404 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.12134582 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.442026612 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.774797969 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.22847974 seconds)
  done (took 66.260194007 seconds)
done (took 875.989532151 seconds)
SAVING RESULT...
DONE!
