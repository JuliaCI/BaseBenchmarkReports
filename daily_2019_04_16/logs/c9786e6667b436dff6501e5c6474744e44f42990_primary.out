cset: moving following pidspec: 3793
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.298661921 seconds)
loading group "string"... done (took 0.585256462 seconds)
loading group "linalg"... done (took 7.155222399 seconds)
loading group "parallel"... done (took 0.169143358 seconds)
loading group "find"... done (took 1.147018613 seconds)
loading group "tuple"... done (took 2.028537868 seconds)
loading group "dates"... done (took 1.295453624 seconds)
loading group "micro"... done (took 0.240957574 seconds)
loading group "io"... done (took 0.9907157 seconds)
loading group "scalar"... done (took 40.07315895 seconds)
loading group "sparse"... done (took 12.669416612 seconds)
loading group "broadcast"... done (took 0.979151719 seconds)
loading group "union"... done (took 13.485613553 seconds)
loading group "simd"... done (took 4.658575724 seconds)
loading group "random"... done (took 9.021670368 seconds)
loading group "problem"... done (took 1.931850698 seconds)
loading group "array"... done (took 21.42680194 seconds)
loading group "misc"... done (took 1.93469446 seconds)
loading group "sort"... done (took 3.237920894 seconds)
loading group "collection"... done (took 18.120845524 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534970849 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143447959 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116770636 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138506972 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183485205 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133661591 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.149444495 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08716107 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.015472212 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170221116 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141929428 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.472035429 seconds)
done (took 5.036116397 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203627582 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087142405 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09652278 seconds)
  done (took 0.879294711 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06822805 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12706723 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080699847 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068966776 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067177262 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081442944 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067531956 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066165444 seconds)
  done (took 1.262275362 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074840126 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069020568 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08477107 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069718243 seconds)
  done (took 1.000037939 seconds)
done (took 4.126321627 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.898699805 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240811302 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188819327 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450854775 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14971974 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188747567 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672501055 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.35071731 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.215740552 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103331367 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108075364 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383919876 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109734085 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673353868 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078928886 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108738847 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162105953 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453519872 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083374194 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085281919 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105806622 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144634626 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102940581 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080327519 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16987036 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070217832 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146796714 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095007295 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068543061 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242886953 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190278539 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689349104 seconds)
  done (took 10.550265057 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100575176 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117055436 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069043845 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140091691 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.117387648 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071808689 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07137311 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084150308 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092415858 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159348145 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114660952 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106508835 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082057874 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070886905 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10107218 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21343664 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110394074 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085123889 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087768882 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076161229 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122411088 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083622386 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094612771 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07973673 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153173879 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195212858 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113935139 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11375713 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071913622 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08344437 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133089091 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144324681 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066268507 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082511765 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139924107 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110258035 seconds)
  done (took 4.572067915 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.066220238 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1598285 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092959291 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152087222 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085846621 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109573944 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084110755 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101528191 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252270104 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.078231743 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.459462792 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133188071 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088696215 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101122323 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071854288 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070904688 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086689435 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.519396182 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110372366 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136427074 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084021422 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091991789 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085515705 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366737942 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07085912 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068680574 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086919089 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094200714 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.077262863 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129626075 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086104414 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.181284645 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.113464853 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069885368 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124399326 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185291778 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113009102 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125646166 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07004186 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068050972 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172765061 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093975588 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068763569 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108420331 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106928726 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122670864 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0849543 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069686675 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182402771 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06927382 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102131264 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.87416701 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16777398 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079794168 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06837492 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293441053 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107650885 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070197807 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066378938 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.25210977 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.154897293 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069819703 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085981384 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069357557 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070034823 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.394121832 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070097789 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.721097874 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072582283 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079179448 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087832974 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069962646 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091742542 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075028588 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102893523 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0693634 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07006227 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085693238 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068532966 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086115901 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089081822 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082767468 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206516998 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069590905 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065288456 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086074446 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067387053 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103419866 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099746235 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087529692 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06870601 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117004 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072654444 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069616541 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122859017 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069072501 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105667268 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087490917 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116816191 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084785176 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.119544298 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074097627 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114739718 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075142321 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117850207 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097272977 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070686581 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155809423 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066486891 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08379785 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068841617 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066705687 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087464185 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071427845 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100581239 seconds)
  done (took 21.064762902 seconds)
done (took 37.953563978 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.293077802 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094228809 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095073148 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078356807 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094777951 seconds)
  done (took 1.428367639 seconds)
done (took 2.173720102 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119435897 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116743285 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064822309 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114017601 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065949882 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119971188 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116662174 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083810595 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120419272 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066667572 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114912638 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066003192 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065240861 seconds)
  done (took 2.010489501 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08372473 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085838367 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08535227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082532256 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079137015 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083369119 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080687017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105049844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080716328 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088892292 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066464045 seconds)
  done (took 1.668223178 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083338413 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08425983 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085961673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082102052 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080789341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084608985 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082938098 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105300867 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08359435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091588176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066392633 seconds)
  done (took 1.67919663 seconds)
done (took 6.096778878 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079335884 seconds)
  done (took 0.820121945 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.689289111 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.21349059 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083397557 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132651288 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.219842589 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.150581204 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.41906987 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108796664 seconds)
  done (took 9.940795651 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103581528 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085929569 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071357575 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087818758 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071291916 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087474277 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073108423 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074544819 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089385389 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072134045 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089286337 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073177884 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086824667 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072482568 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075016841 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089690111 seconds)
  done (took 2.113862756 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09432625 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092889207 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091290634 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076988487 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090173836 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074148871 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092026072 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075779677 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089029972 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075218642 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092150876 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077581443 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089023462 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068414482 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092425083 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079257096 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089478177 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077857883 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094197215 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079045033 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093475189 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067843446 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090199012 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077610929 seconds)
  done (took 2.873409265 seconds)
done (took 16.494782144 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132164115 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077334228 seconds)
  done (took 0.959530852 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082214139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099038649 seconds)
  done (took 0.939736114 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082194995 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081701543 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090116624 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093047866 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082762511 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068568654 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104915756 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069363719 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084355433 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069198908 seconds)
  done (took 1.584389575 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069241218 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094422966 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072253673 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099818963 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.0766819 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082208886 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076024671 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086499071 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081161357 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080855678 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073927306 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101687126 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074131334 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102223745 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076646422 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088321549 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089056347 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070198982 seconds)
  done (took 2.255849026 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066567091 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068900292 seconds)
  done (took 0.896449217 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067887923 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065054598 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082890891 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068330878 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080334182 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06595804 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081850838 seconds)
  done (took 1.273010326 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397879672 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109277306 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242220283 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08790597 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104583407 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266895284 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.086189721 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073843339 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091537463 seconds)
  done (took 2.261678789 seconds)
done (took 10.926829637 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080592763 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087006983 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112313649 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.427875088 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109168954 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069422907 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145533559 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.209168972 seconds)
done (took 2.000614109 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126151848 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.630653116 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.412372046 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218728961 seconds)
  done (took 2.023058943 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.382003986 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094930907 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076636006 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069766147 seconds)
  done (took 1.390054513 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06703485 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071008086 seconds)
  done (took 0.905987663 seconds)
done (took 5.209603022 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067683379 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103445558 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067032788 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066046724 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085132801 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064972218 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065514624 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085392706 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069078176 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068629623 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082017246 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.072253371 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083892779 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069268639 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066664373 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082309532 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068260382 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066281401 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082379946 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066671608 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065904365 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084283211 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066439333 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066363572 seconds)
  done (took 2.567928421 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086585663 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084796361 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074000042 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089873789 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07423234 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090559671 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073866419 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069527114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090680734 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071547131 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088948499 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073715903 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086694092 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07469181 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087027639 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073841896 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09046319 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07293207 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071215208 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089545457 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074736833 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08636874 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073478646 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090428399 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073672171 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089095774 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071668693 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085404648 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074887277 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089905434 seconds)
  done (took 3.195202912 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072195846 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065586476 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081586463 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072439336 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065747072 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083687269 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067249462 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08342059 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067514151 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066590777 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085117 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066982359 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066990508 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083495374 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067513856 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086116776 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083411736 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067528153 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082728157 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067441086 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069763112 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082788332 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067244349 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082986968 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066772415 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066529546 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083011868 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067157154 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067665676 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082432678 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069500945 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06977113 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082817933 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073716323 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086959048 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066383763 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070899604 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082352248 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067588404 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065917483 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082143368 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067111155 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066483933 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089492061 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067683487 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085342394 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066625574 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068120979 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084049846 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070124955 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082912512 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067109318 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068777961 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084035964 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070269805 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06606084 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083112531 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067158941 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083465843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066252499 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066513573 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081997695 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069330985 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067483378 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098217863 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074106673 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082321364 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068382279 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068443683 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085257726 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068520014 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080204758 seconds)
  done (took 6.125004527 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117628156 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093681131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085812144 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068704637 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082074395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067072321 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07100237 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083238981 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069210261 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088954159 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067353669 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068204848 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0850548 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080741931 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083056369 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069458689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088903589 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065166919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067288096 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086095336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067873388 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086842716 seconds)
  done (took 2.520201737 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187453735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090063604 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113167126 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09324058 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08777154 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076329268 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089198651 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07372859 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073694653 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08971028 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07200336 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089479149 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07086736 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087078685 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072289512 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087885314 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073595766 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086985992 seconds)
  done (took 2.388987526 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078869724 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067290665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10606626 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067308272 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083409704 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070454682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089704172 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077965938 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.0877075 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069874383 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093475916 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072336059 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087986488 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070113108 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071439112 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086048407 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072040395 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08594898 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078356087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090238102 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074772032 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092761271 seconds)
  done (took 2.550513336 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081383193 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069160378 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100313808 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087070487 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06446414 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066144977 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091045539 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068291316 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091138453 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07087806 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069311812 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084352746 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073343869 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084317603 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.0732585 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084701577 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070587917 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067597448 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087259888 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064729884 seconds)
  done (took 2.326444927 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088132499 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08529635 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070377819 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094037778 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071040616 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086367388 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078930726 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087472759 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07070134 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111672352 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071114868 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086286592 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079526519 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091853937 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070627166 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094787117 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078999158 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094213624 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070604552 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086860621 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111112094 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183126894 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093876739 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071542433 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086597435 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070738189 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070909969 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09097398 seconds)
  done (took 3.229281402 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068652723 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068167159 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081097451 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065465725 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065606102 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081820028 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066188356 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066133758 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084137508 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065816324 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067364126 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083176723 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068603201 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083766643 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067690523 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068468042 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083565299 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065393757 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065497708 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081159997 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06813833 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067059816 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083153954 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065843304 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081980372 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06745944 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065886799 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081796292 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067362525 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065644714 seconds)
  done (took 2.943320403 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07733879 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091557109 seconds)
  done (took 0.953874544 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065693354 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081569122 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081188516 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071731352 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088375699 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069009202 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093325489 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074502162 seconds)
  done (took 1.407634963 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083213351 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079386266 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088051582 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081848625 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097408437 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08585037 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158230481 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088395911 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076234134 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084849861 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083715344 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06834739 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092257969 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070061884 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091628622 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075729835 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067750234 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090741141 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07274442 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085231381 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07181917 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093810426 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071535833 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065810758 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088273522 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07898046 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097620716 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070639261 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089941539 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076620787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090084855 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063851641 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070458187 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086002277 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067823469 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094882967 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084348252 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088073574 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077976458 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070767479 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096571575 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065357941 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090488016 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075742023 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09610633 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070117094 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086387131 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065198743 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066335772 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086782802 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064726251 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069289639 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081868106 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07613209 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089684097 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079671091 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087359305 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070795149 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072821378 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089903174 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076218564 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087882732 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071561932 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069123414 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095776859 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074519833 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095509706 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065269011 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063105558 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085355105 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079661228 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108862868 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076060255 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086817439 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07115679 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08373529 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072578694 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0712233 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091783763 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075994766 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086779545 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075696757 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093893031 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070162062 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071560014 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093551583 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067756382 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088216551 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067645516 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102032202 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069138829 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083696307 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067126568 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080010831 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089780623 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070515966 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083750665 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076017791 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064232112 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087217887 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070942579 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086040266 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080347849 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091552912 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076308798 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095184832 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077895789 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069064018 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08928898 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06690971 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087354946 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068447818 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076320351 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081039978 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072841163 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087191127 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070629231 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094972307 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06823974 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070026437 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093393598 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07495672 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084651319 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066376255 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073322234 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086196692 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073425577 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093358452 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069505126 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064522397 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082027816 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073523898 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086154555 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073481486 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092040373 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073181502 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064421362 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084779257 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074546832 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095740784 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070285744 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086833749 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07538929 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071305007 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086250584 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076897073 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08916631 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069015774 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075075465 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08731399 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065980748 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090077765 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072365727 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068320515 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090020873 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073078707 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088954087 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070630441 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085147808 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07496053 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071250572 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085262459 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06976888 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084717528 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080592011 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070522086 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082429661 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067659954 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093454332 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068003515 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06882749 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085613657 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071386091 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087096186 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068034146 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068351729 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088887181 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080249486 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091201004 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070587804 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092594226 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080517765 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086596514 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071789675 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070021443 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088016972 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071130334 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095491998 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075309963 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091949029 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071906221 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06615729 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092739959 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076844183 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085559677 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067987122 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067582146 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090420853 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074976342 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089843922 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.072396302 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084402121 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071103809 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073056257 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090430512 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069564645 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084914934 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074495171 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085297966 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076541099 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070288592 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098019502 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072988284 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082159056 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072795398 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084976633 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076131771 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065209024 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084920576 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069174693 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088012391 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068594204 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071742843 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080891809 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076912472 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093637298 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069713971 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068708779 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086364084 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076448823 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087437367 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073876062 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072317549 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092740177 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079453917 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085493455 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073350834 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096340671 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07036752 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06370059 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091437604 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067267713 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083348698 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067144344 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065704038 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087935023 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076043802 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091550923 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062495158 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08636839 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067161395 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067151961 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079684191 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07219141 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087105692 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069001715 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074736268 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085306247 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068864742 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08833292 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067973131 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068177984 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086739016 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070335117 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084545442 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070618946 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083219352 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070327041 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066913526 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082979828 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069919733 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085120434 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067711664 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073378395 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084257074 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068545767 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086673778 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068881292 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069086037 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087216189 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068470693 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089258303 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070148381 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069599575 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089136151 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065967536 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093675309 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070969668 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077764684 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087575964 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067433877 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091240788 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071891249 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090296655 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070388207 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070613522 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087650139 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069344566 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087928721 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077122965 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067541326 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097424899 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077574883 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08720587 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073559862 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086476652 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071715225 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069437887 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087660902 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070768446 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086226055 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069979264 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073905298 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088793688 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069165456 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087799974 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070996753 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068690675 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087231696 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064347647 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067449312 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086659456 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069610069 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09653805 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07039438 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086267778 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069354993 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070743555 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086682276 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067045354 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094534539 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078459104 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087582279 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077307731 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085850053 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070772497 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080011305 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08140404 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068750062 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084550249 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06707575 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075567131 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08557284 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077211963 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085126631 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067751177 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06650166 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087414979 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068777893 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081405047 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067874023 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073706864 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086009641 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069716605 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087475568 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072580071 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071822443 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097387041 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069634088 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087947552 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071306249 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066314195 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086220397 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069096352 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089379339 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071070023 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067021679 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084597461 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070126185 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087280766 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070742314 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069998099 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088380592 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076673654 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087339718 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072750405 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073095466 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084482271 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073665575 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087339956 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070382938 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068481984 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090673129 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073058319 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087609297 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078643092 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085695588 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070292776 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068831598 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084336333 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069492063 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086249192 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069476105 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068296101 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087664127 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077382503 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084908093 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07269714 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069189658 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086553519 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0760361 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08730381 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072816711 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092839953 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07074353 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071305496 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094005312 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073487493 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090416201 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07255376 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088263958 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075434968 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068766751 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09287805 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071015801 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087630023 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07170427 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068010575 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088001578 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07036776 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086290713 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075983717 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070696014 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086565118 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069140616 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084550927 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070751497 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073394873 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094867257 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072537842 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090328013 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066293577 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066340533 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088425109 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067993369 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088891551 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073606211 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074657581 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089943373 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070328238 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086705541 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079678606 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093038497 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073416527 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066866961 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091088277 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070963834 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089578789 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071247218 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070101028 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089278169 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073653556 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088694924 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069079294 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076448991 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089960041 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071366809 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088770431 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070749709 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069266691 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084152325 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070861687 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089521148 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075232331 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089450739 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070561378 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080198007 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084694171 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070247134 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090173947 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069925572 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07357498 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083403194 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071719986 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088614563 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071839705 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065387941 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087582696 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067749638 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089056242 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069216778 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065833793 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098035318 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079501251 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090997254 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069475909 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085873042 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065253735 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065506103 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086008158 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071608576 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088295237 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079822981 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06877689 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086367509 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065380865 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087364854 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072415345 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072927707 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085089727 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066620053 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067808402 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091565143 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074940423 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08611237 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06967993 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089774602 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071982687 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068286798 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09039546 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067237113 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09097066 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083281704 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088152091 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070348347 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075629195 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095043271 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070977081 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083197269 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071079471 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072088792 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088151823 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07124169 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088647005 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084497488 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090681123 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069204648 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06824278 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090830996 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069568516 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095203927 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071778518 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088045091 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074321693 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071636923 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096846453 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072420273 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095195331 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07290123 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09020125 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069590315 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069335092 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086504025 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068745477 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088169543 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070918328 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074054175 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096377898 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067949426 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098070793 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077463279 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08956051 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06691327 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068455879 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088021001 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065815189 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088983403 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068284991 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068266537 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085697997 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070846525 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088746116 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075384949 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071165841 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089071678 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069863085 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082063847 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072075967 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072176999 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089129643 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066853094 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087862108 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069543252 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071570059 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089287881 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066446695 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086161472 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070628032 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068191963 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081673203 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075040481 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084696743 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070778859 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06706733 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085907729 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069594248 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088017145 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073732323 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086235425 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070436486 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076450265 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087269192 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065647419 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08274753 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073833893 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066045781 seconds)
  done (took 47.692600788 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107774666 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082911177 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064022539 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081031235 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075728018 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082271252 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064128921 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065019341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081862599 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067586879 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080737448 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063636383 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090113273 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087367372 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095314369 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067487832 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08205435 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064809496 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081653606 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065095326 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09089667 seconds)
  done (took 2.475356884 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076639189 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090052723 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074795461 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095288082 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068953389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090164179 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074834367 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089667286 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096745757 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069970723 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096422379 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073860841 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087743866 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070699047 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087170843 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074531981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096693258 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072134946 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091987075 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076354707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092395248 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076555857 seconds)
  done (took 2.654560354 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068414566 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067266567 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086664274 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063606222 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06697969 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080444485 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071227927 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083753929 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071096412 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074327254 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085347248 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068241683 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087942331 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065249662 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068691362 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084835055 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132916906 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073063612 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067953799 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089629582 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064198046 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.0883436 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06513829 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063845104 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084772346 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072015228 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087144868 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06614197 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067524127 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08400234 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067940797 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082055562 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068475862 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067368633 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083947659 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066546862 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066811139 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.0852603 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06380053 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082981217 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068237713 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064414847 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085410159 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068617021 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065951471 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083414707 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068685518 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084816859 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062867619 seconds)
  done (took 4.524573326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085854963 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130015683 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088502701 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090544182 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101763515 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092379547 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072485716 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111122366 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065274519 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084479989 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084403784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103470303 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087160775 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074530834 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089509819 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069047355 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06861572 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086195363 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072226838 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086080086 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071806029 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092094426 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102014946 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083339001 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090250469 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067258095 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085612388 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072884183 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098935809 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073355414 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090639693 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074675665 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102528096 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070123951 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084602125 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070364325 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10202189 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067799365 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088195827 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065595666 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086973891 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072668539 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092352597 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084126199 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085951931 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07325249 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085505226 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065177504 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098038253 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071203528 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09295801 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101088621 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071591993 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067708882 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090221535 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099888312 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068189288 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083290445 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070600245 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097620501 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065898843 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070788691 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10049289 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086460586 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075166987 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099340432 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07270326 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089529681 seconds)
  done (took 6.674003766 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076583325 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091208379 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082422933 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100486876 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092604007 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07559251 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093076046 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07551585 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093192414 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080947175 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093716605 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115461107 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071806312 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0971572 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076439074 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094684496 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075717954 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094441734 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075163247 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095156689 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093408604 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083998617 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094199477 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103035747 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106146732 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08955 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07691046 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094214194 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083856247 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096070611 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106025452 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075795674 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094212407 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102653092 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08837857 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094290857 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068659355 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09444873 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076399255 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093604736 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07122132 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102408723 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074956562 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090501496 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076290692 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094645634 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102239807 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087531195 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097035967 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099084146 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076240219 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102629968 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075341154 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094827156 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102973581 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107838677 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102481429 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103611703 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077414583 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102618581 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102432383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109331923 seconds)
  done (took 6.461230531 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08884587 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094116037 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097800323 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063959012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065995182 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091473384 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066901125 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084584777 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077622447 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095339138 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080801469 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091481603 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076888457 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099892279 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091773833 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077600747 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092043718 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073896839 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096019402 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074405224 seconds)
  done (took 2.525863532 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076881645 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102916645 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069473823 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072605278 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089893425 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07396615 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088731124 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070987883 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087381874 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07138071 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096047611 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078693573 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08765727 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074270802 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095738643 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074317543 seconds)
  done (took 2.160332928 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080314371 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096055031 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082089194 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087283461 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066919698 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083220277 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068877985 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06374821 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083388735 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082544937 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087501719 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071039825 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086983855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067445356 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064751312 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089031812 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065222408 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083844346 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068781108 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100976554 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079607234 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085251409 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069419369 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068798776 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088997597 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073286477 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086439814 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065538138 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084190576 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068309854 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086223413 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076129531 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083583147 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066985338 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067212025 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084809872 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069105799 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088474237 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073070467 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068555318 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086932447 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069423678 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087533534 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071051293 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084142161 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069974329 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066009663 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094611458 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068233514 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088697636 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07011756 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090422656 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071141577 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07889215 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092390062 seconds)
  done (took 5.155179454 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081380253 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070741931 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082600814 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066101375 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088823091 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069857246 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07091672 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089033969 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069743493 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084985525 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070652095 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090249561 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071124944 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070501417 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087873804 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071301097 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081441743 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070095244 seconds)
  done (took 2.240541759 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073318336 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067499372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093359401 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068300719 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086082682 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07100402 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063671156 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085238324 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066930184 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086084992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068253591 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069697963 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084514377 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070028621 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085220039 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068374965 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069778693 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084600547 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067858067 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081876602 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070858251 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066296917 seconds)
  done (took 2.503753472 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072961168 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094297341 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162436817 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107836043 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083629159 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100352536 seconds)
  done (took 1.477584964 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091425544 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099428403 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069097232 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106920659 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075952143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088497719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070125509 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089202964 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079019358 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102424281 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069522669 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098000659 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097525484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08010035 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096091952 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076707159 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090394765 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071448458 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089451748 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107730764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072064369 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098515679 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07185377 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090224734 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071869163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09849651 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079902733 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104445971 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089356205 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079885719 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097036841 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07119418 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099232689 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104175869 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073216871 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098788542 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072513213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107353559 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075995139 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09737716 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071589475 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094625433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096772545 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074812328 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096773756 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069627874 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093581119 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070323744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090760166 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113878944 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077652143 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099586365 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096658828 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080612487 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098799409 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115743273 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084942692 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099723269 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096977598 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086089412 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099615312 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077173584 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100573386 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103963413 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078137738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100271161 seconds)
  done (took 6.728757918 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087236879 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106592672 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070507779 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101821748 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097456685 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071075841 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089399666 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071110648 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089472083 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071080217 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131740152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071592955 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099148732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097451277 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072314487 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09024589 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070991578 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096541235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070220407 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114894999 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089458473 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078301786 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09793982 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09640608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085554695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094462785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07054142 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088710747 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069875879 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088436814 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074995544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089342728 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097310324 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069745412 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096911748 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071537664 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088648188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075197182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089056769 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075339685 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097262366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10794143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070874551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089179764 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082894305 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08830357 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069878643 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08849299 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069705367 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087619655 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08254668 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103935578 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104006066 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099026672 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072900793 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091269065 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073174634 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090197752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073219861 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096536459 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080414473 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090586742 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115281795 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07292102 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091189268 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08061478 seconds)
  done (took 6.589423642 seconds)
done (took 130.839618397 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218486195 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.193835624 seconds)
  done (took 1.268760828 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0699788 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096100669 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098029499 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128775182 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087039492 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102292408 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118523028 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080112356 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067834792 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087383211 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068577643 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088753247 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133400275 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06805892 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087854286 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070013868 seconds)
  done (took 2.316228382 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103340299 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195878604 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109355973 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067624156 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099024501 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079745262 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085563785 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077838243 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094804805 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067414556 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07895702 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096382575 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06630286 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095903236 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075530736 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.0983199 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066875363 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097646958 seconds)
  done (took 2.523999068 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103994836 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141374243 seconds)
  done (took 1.110263347 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199562779 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122563863 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201689028 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.423562386 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206750691 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274994945 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17186046 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171400885 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154799475 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168324977 seconds)
  done (took 2.956921782 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099954043 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169958351 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309659068 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138098928 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086073387 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115767584 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138025052 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089956022 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101292346 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100469394 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081736788 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097578814 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09816156 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096086294 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076553803 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097722419 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120869736 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076136537 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077816272 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096681569 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117894119 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068475205 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075584118 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095190111 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078544191 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097911375 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06775974 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086984651 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077491647 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095015416 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080204107 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113858369 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097403295 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129225046 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.08339715 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130635213 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097777245 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0738273 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096084689 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074080166 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096611355 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078376379 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104871741 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077479767 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086795142 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078571765 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085563597 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068359856 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098768696 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078880325 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099110039 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08018716 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131151217 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097481321 seconds)
  done (took 6.231033968 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.750467182 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110797089 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095553358 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.807518899 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090515247 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105438131 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.718151708 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117938616 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2094971 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76734748 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090402469 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099118881 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179447353 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23214054 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.8775074 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.278145292 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636558897 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106965769 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107775703 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131869413 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137110387 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174006557 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147134658 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435774215 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075242225 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092478004 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134995683 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075182142 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157891334 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084757264 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093036389 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153954844 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.221775189 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.152854578 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097325787 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070635647 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092148734 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145918869 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234677439 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167174457 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157659527 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069024854 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091256662 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137771425 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130358025 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068882038 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138314826 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170576026 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.14803079 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074099507 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096551572 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141400169 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136973649 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140176498 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100614724 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.259793806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28159029 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090931446 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097863231 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103727371 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232480874 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083320134 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196328129 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138018768 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.163227546 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090861693 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.726219146 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.143725817 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091565672 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075386643 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117417625 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094368186 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138070729 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145207574 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367847808 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141402486 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073613812 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090465488 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207857991 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102216237 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071452693 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138237471 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095964725 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100685285 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163941361 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144815754 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.148473914 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.203685142 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139424213 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159278528 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076758282 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125155177 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097344331 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19264835 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171645097 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.137591413 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208265556 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138295351 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140333677 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.145491657 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095791206 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.14782869 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117141192 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081913485 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135729127 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188596007 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122097483 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082032433 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094382531 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138573139 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12408477 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08440986 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160145832 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.146901515 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455858849 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.144474296 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08822735 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086481438 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137901867 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160461412 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076645101 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.229017938 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101117239 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164808028 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119539871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069927754 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118098887 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141896873 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078529439 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122870874 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16074309 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080258604 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216531033 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190563475 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080484026 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216487218 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163111393 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078525428 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14945333 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122635109 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148320672 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100629663 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139249445 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077714722 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773585222 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144860923 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124210995 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074358891 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180313021 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092667161 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084930819 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106050734 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069635401 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.748255691 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088145508 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102640823 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105323978 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078443218 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123097855 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137875858 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096096274 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141015545 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.181627869 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099430395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120654108 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085175706 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141476219 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10029438 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106677861 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087578177 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107054775 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125616166 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076631322 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106790196 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145454412 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.138534093 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191704185 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.545925634 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072508247 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106935892 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2005298 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074060213 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260461156 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140500474 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198971534 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144194174 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081846245 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287119213 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.144777836 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176668064 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10476351 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151688961 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069739798 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137005566 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143058238 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093047544 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077375376 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142560227 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167413139 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146553845 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.939600671 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07188911 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202731577 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068068062 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169434202 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077092274 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097051918 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.235375332 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091159486 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14492113 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142217202 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092842458 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084484693 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.676219405 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104902688 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138901192 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097462062 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170994699 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163690179 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139013727 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141463292 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077877699 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.140202943 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208119342 seconds)
  done (took 40.357716312 seconds)
done (took 57.629349426 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25728506 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177679424 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240048646 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143855235 seconds)
  done (took 1.778678981 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14458811 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106424195 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119373179 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088148094 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107064505 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089381265 seconds)
  done (took 1.541580869 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409242039 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271397786 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236854665 seconds)
  done (took 1.806424048 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260284608 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21324965 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.444970065 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296866077 seconds)
  done (took 2.232171839 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176413815 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114204361 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06936382 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106713034 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15814042 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.25666981 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128313236 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.189117977 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083217535 seconds)
  done (took 2.217077026 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19973952 seconds)
done (took 10.666048311 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097736412 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.350972408 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.177260203 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.220862208 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.291231818 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101857771 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124644775 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.276714601 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078798418 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106085097 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.171075752 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083103346 seconds)
    (13/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.178922921 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100680015 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.283043582 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078216251 seconds)
    (17/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.264949837 seconds)
    (18/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135163425 seconds)
    (19/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.146692422 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112987271 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088661592 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094980874 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.098994193 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07549621 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.200183143 seconds)
    (26/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089625818 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092710607 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.259899914 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.132141645 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.262423932 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.235405244 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096636412 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.235631588 seconds)
    (34/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.237274492 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088482621 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075206846 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.117783314 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080085617 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097263946 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.226174238 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053590377 seconds)
    (42/309) benchmarking ("sort", Float32, false)...
    done (took 0.127630848 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192325641 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112820622 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080703041 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.148267267 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091109377 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.258865064 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092072139 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.226616946 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.097312561 seconds)
    (52/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087176286 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.089811637 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069290617 seconds)
    (55/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109972013 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.255715374 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098733421 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076883033 seconds)
    (59/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108448005 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.20765286 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075336466 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068038554 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.250563107 seconds)
    (64/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.105521902 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093258127 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080782152 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.131231121 seconds)
    (68/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11648667 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096459836 seconds)
    (70/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079566368 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.122773945 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103541021 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115646567 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151708858 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104992257 seconds)
    (76/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.15635503 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.245440654 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096239544 seconds)
    (79/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102039952 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117825517 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067968243 seconds)
    (82/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054309431 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119894394 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067131443 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.084125016 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096973159 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102672762 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092629756 seconds)
    (89/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097407041 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074544048 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.067395273 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.172548797 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096011265 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079000255 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06617358 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.189713236 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12203639 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053306335 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.250945069 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078126214 seconds)
    (101/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098197198 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054050286 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071120331 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074491157 seconds)
    (105/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208887557 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077315604 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.248498012 seconds)
    (108/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063776062 seconds)
    (109/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10074477 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053598509 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076409474 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200758851 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05352946 seconds)
    (114/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163957694 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169352109 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080145492 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099609796 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055157294 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073293702 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07473653 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076249343 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096255611 seconds)
    (123/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120946222 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055492577 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.075205 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.157209233 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076584449 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152429912 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075386868 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12158886 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067835615 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.101052261 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094738226 seconds)
    (134/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.246311486 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073188284 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115827408 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085086649 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138396946 seconds)
    (139/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092168658 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094917745 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169538099 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097291388 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069274783 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076166689 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073773343 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073176742 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.24037409 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07030336 seconds)
    (149/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.136447679 seconds)
    (150/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.249766257 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.239072345 seconds)
    (152/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112011305 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151917313 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053759589 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074809302 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08833932 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054137434 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07414 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.172148314 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088475246 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089455041 seconds)
    (162/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068213836 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098937827 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076755641 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.259349461 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053761649 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111045279 seconds)
    (168/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076094925 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121991787 seconds)
    (170/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054185726 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05271863 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096928933 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070465521 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158579621 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147086536 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053277074 seconds)
    (177/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064105761 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.24247668 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053915403 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124146765 seconds)
    (181/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055188503 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.14108652 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179992857 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.340574098 seconds)
    (185/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.238977652 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069063463 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054492762 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107344448 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09594616 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096915525 seconds)
    (191/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076287993 seconds)
    (192/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108215937 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088977393 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054004134 seconds)
    (195/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08801823 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067660964 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076751072 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091857464 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054667016 seconds)
    (200/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054163233 seconds)
    (201/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063036407 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089102231 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06751474 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062639723 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169549154 seconds)
    (206/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053550134 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090550135 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.100593367 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.095596916 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053449637 seconds)
    (211/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052692032 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092193221 seconds)
    (213/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068386949 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09287115 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055062499 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076552882 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09730494 seconds)
    (218/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075191663 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066915956 seconds)
    (220/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.085248693 seconds)
    (221/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090345164 seconds)
    (222/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062335143 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0905861 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067962345 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.08963731 seconds)
    (226/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076167181 seconds)
    (227/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194220208 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080862899 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094795206 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068267835 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172780941 seconds)
    (232/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053794551 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088794912 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053915312 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.242795083 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067302336 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055431484 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.138992381 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070424471 seconds)
    (240/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092368992 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140277227 seconds)
    (242/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090634875 seconds)
    (243/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092792057 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088745505 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053026624 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055845354 seconds)
    (247/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099906876 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081462231 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054354794 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086167344 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091524008 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121967502 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080239326 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089757549 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053055958 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069065901 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097527965 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054808846 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.152636984 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067063752 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066962495 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112531442 seconds)
    (263/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072143921 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054135009 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.099313136 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055100278 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073451363 seconds)
    (268/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096748971 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193501414 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090701097 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097152429 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053376119 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164368066 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074895635 seconds)
    (275/309) benchmarking ("sort", Float64, false)...
    done (took 0.125997666 seconds)
    (276/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094801244 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076901182 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095772213 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052913402 seconds)
    (280/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073262726 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110186331 seconds)
    (282/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053019949 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157681506 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053180924 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163569534 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089771149 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052931665 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096634586 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053653254 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066547112 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087769837 seconds)
    (292/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054323508 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053309141 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096791157 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066695239 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111618958 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069708236 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075786876 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.099883548 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06955015 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.164313354 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065896124 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096660295 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 0.16888796 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.094082261 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076069137 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058406929 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080073351 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069395135 seconds)
  done (took 35.174847703 seconds)
done (took 36.077093244 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083066154 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118829384 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078694663 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119989922 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084212979 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104502529 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077020116 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105368659 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084429082 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108231547 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083044627 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058222569 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101436617 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078699672 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102194004 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09641077 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105508312 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076641382 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077351421 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091931971 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077851299 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091919967 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071106339 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057841227 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10483268 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076890302 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098912345 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078090254 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069535968 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092426211 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072199511 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076705202 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091811903 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082243366 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098525534 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076625024 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078666539 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102947677 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070973235 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091302248 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076682724 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068749625 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098394275 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077163438 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074799568 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097188159 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077140105 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106073815 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096089272 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094955324 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077302839 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102879283 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080164689 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076068287 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096963099 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078619034 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.097563075 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096195988 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100427402 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072234695 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077124259 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101680939 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075081728 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.100229145 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077164798 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079210478 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.102975161 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074910115 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101298622 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075110487 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069023015 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100464315 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073939326 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068905996 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.102907609 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080723905 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091141979 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075570595 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076185273 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098704901 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069177241 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094995838 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071261673 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076024881 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095167724 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058699973 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073174578 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097922174 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068925671 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077900877 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098316067 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076067672 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093630546 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07926103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06846098 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094538351 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067882584 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067975917 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091172857 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071459872 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068126726 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091245035 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076895315 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090725982 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073696702 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082038676 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088794547 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073504499 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088572478 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066838155 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083201025 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09887701 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067510687 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091994444 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067013243 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075026986 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088696469 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067285108 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067332588 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089396102 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074069489 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066889518 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091908732 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075205486 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103518061 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067469096 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07102885 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091768154 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067834033 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073033754 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089618883 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068153552 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0915133 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065220823 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071112994 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089953108 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075981134 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072710677 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100729053 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071695407 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100682559 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074037182 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075239924 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098047053 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06841874 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062492021 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094864392 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072051114 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071572663 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092532795 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071808893 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068902598 seconds)
done (took 13.619286699 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067356774 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1714002 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130198763 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099255136 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115273289 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069295092 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105516721 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10747267 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.094832125 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131855131 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.0903918 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.10902512 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115381776 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089291002 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067391593 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0719346 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09329672 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.093109826 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128916791 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113417151 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119888391 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09217273 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124417711 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093118189 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.116272951 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106678151 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093502294 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073730486 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096140599 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096720663 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.112341188 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071303925 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068297437 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124095762 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1176095 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08657542 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089716654 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086258735 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089610421 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067826583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115637021 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101121618 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104781617 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105579686 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074463693 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070501409 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091842905 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087174039 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115339219 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082191011 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111262088 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134483994 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071672022 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106373008 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066535727 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111000809 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106197973 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07062297 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068404005 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093094883 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067391497 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071520516 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112374873 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116832318 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071716754 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106411767 seconds)
  done (took 7.374740707 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085893113 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117575228 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086791436 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111262682 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069674233 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070078339 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09398646 seconds)
  done (took 1.59252835 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068389746 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09049949 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113227866 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093800762 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113455991 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091012427 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104110902 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07067105 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111952402 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071495974 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092470374 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132644963 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072342034 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102038906 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095376156 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09424577 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095228913 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094432113 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074400369 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118447524 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073727525 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115197878 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072686186 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071034874 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108560403 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070472239 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143003878 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075335702 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095471037 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074303619 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069392898 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144774703 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109429157 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081970403 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070097777 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109264231 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085964752 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092402415 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087239832 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099155739 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085006575 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071895577 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096663167 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068768338 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075532595 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101963758 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070634334 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092038216 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072324098 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091261678 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095264987 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085500613 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09466174 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074845705 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07254988 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100301462 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081072239 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095270866 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092270447 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072345617 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111665919 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088120472 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.109316172 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087837597 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097511832 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08492092 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10830979 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073391167 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072872196 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.097399228 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087143196 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092571277 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072533952 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08136237 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096076702 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094439118 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.118375838 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072839713 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105346547 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07106377 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071657972 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094582132 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095107375 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098400042 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070798256 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075259855 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0974195 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06943685 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069457433 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098072838 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069893047 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.095024964 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073757472 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072366291 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09737873 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0882071 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.094786795 seconds)
  done (took 9.655589954 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069844003 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069504844 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093006406 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069714596 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069421436 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092319173 seconds)
  done (took 1.432804681 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09914231 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093743214 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083811917 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09731673 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107454144 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105760148 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084378853 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10719408 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086841417 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104158904 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084126923 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107052434 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089641199 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098672027 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08515247 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097743486 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085544093 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104973229 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081520045 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099654018 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091124922 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102210999 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078121965 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.11084961 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074071271 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076677077 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102955155 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081725036 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103742777 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084861188 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.100434356 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07621008 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100388228 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.087431225 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110636462 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076177421 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100750345 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076159123 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104984967 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074849299 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110880442 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078116469 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.082429254 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101158949 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110407054 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076802587 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075137221 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101264987 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083155891 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095194588 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073371768 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097212049 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07253952 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096288165 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07409504 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109376909 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075658074 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111179277 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077413398 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075987064 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097992419 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076092826 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110629059 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075305458 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.109703743 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076144881 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100729442 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07786168 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101175218 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07758115 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076068096 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098797919 seconds)
  done (took 7.54481916 seconds)
done (took 28.55834988 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.645029232 seconds)
  done (took 1.612377251 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.787154314 seconds)
  done (took 1.756706382 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.399578555 seconds)
  done (took 15.374363962 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.614116776 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.740999461 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.798318066 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159111962 seconds)
  done (took 3.280832909 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.876118434 seconds)
  done (took 1.865373311 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232939088 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223450405 seconds)
  done (took 1.431505857 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729717159 seconds)
  done (took 1.712623456 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.267506187 seconds)
  done (took 2.243931834 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319101615 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181170754 seconds)
  done (took 1.484822677 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.525947566 seconds)
  done (took 1.510630178 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.539467563 seconds)
  done (took 7.528970644 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229835429 seconds)
  done (took 1.227231861 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268176595 seconds)
  done (took 1.255092963 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.092852161 seconds)
  done (took 4.082183621 seconds)
done (took 47.343763835 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078489285 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082914073 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104682428 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080373263 seconds)
  done (took 1.327340243 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079453833 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075332732 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100412584 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074622985 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101667532 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075298072 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099887813 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079423079 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074560356 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098582062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074954265 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096442156 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07673095 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099126469 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07170181 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077681739 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100843151 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07515515 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100195829 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075239331 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072496493 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099667461 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07762986 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096366562 seconds)
  done (took 3.046478818 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078495601 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074651469 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097641958 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073529336 seconds)
  done (took 1.314090743 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078686202 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116196869 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090170053 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078868386 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117115224 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111233863 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072267493 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071503585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097545663 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079116874 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093522106 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100739973 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112103676 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078517911 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103294281 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068149813 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072282207 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112306301 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080841081 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105110771 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074876973 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083925789 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.0963183 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094763641 seconds)
  done (took 3.185190516 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078507084 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104945546 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102636504 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091175403 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117773967 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066898533 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101454438 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093419598 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149521376 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067858259 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095516186 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067709232 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09747272 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06709434 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079994922 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134606342 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113694595 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093526214 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09868517 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090958443 seconds)
  done (took 2.913380895 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075817114 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07167119 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089853057 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06961885 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078121385 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096838614 seconds)
  done (took 1.47837379 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069394273 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068635548 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091439327 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068004726 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073156903 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091680884 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06794403 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068472058 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091863012 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069994702 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069519624 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089616379 seconds)
  done (took 1.916582718 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.42883434 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069883911 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092807274 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067378468 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072517777 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090654145 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082038799 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069394139 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11617912 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068592673 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092409282 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070221235 seconds)
  done (took 2.321902593 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261005306 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078900175 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321935496 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167736577 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140384172 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155206612 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104802641 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140355791 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197253559 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138380538 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200148653 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222383544 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134479643 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167668633 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116127066 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133298243 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185922316 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220400565 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105964386 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224150282 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206061705 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156274134 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182041216 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129406396 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135918589 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15085055 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073705065 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105971017 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230405399 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160342883 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200683287 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13936264 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097959883 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23152233 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230025725 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200318582 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166162714 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089115177 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158300239 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164542127 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256041847 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116764347 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199095112 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139111503 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111006994 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177308392 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151417045 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.15147207 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141250775 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119256776 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178696045 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244964734 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171054736 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118310813 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140584202 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144067144 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146241033 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107410616 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274326554 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199999812 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163359271 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099580426 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101787298 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216955008 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161255019 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144806728 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.157061728 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123332703 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171308455 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21737346 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152278115 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175597571 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185639237 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094071094 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149503881 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194340188 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15592669 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226277899 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15472075 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075684219 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151947099 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130998576 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108227235 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145280773 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101933786 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207759618 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126680795 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140313597 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138098428 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136351646 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113053504 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196356276 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203439548 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131060596 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067991418 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130977702 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149001249 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176235468 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11492328 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135747095 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147846613 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080303056 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190605572 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078017727 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154193772 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107632513 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15716071 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166835146 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080219346 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160147458 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132488588 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133189932 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168278096 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224189265 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094999714 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113209992 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232616743 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160027847 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13715283 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181535176 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22045961 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106202581 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135479795 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210056998 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247665278 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094391028 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229454474 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139467018 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088369178 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118107562 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159566927 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144232588 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151953988 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111638419 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157537096 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229912234 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080448859 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126460412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170322566 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085666919 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112106843 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145288366 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129690858 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096886255 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127465545 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133305409 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168557372 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178497239 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109587561 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180991979 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104488803 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232412158 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120014212 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13567113 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110001172 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100303443 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170183298 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223373955 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084902852 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230605209 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159353169 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136723404 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152523858 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088025144 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201583199 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083826592 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075452868 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206360471 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142803744 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141694907 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189526587 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134618549 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159343858 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.156237911 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16755552 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190715199 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167048531 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138598072 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092233758 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145818092 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158154467 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104137588 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124375141 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087236495 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135386197 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126887625 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08866949 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202674559 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160223336 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10280442 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144767233 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126316053 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206152503 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080953727 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161410158 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.151771887 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126124084 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217936503 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19273982 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169685425 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131620751 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205693591 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07657086 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077840764 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122126535 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159115614 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114871458 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088712645 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17524824 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185903076 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161267438 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170915856 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142740554 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1542964 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219422798 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075686833 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147281391 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18403594 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159371109 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161899341 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118163799 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103765482 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206164949 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114150856 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277805099 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147168477 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158087948 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187018697 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135259274 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084628641 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137217212 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197537216 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138391365 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186159949 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131632841 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118362023 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11612874 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.112505537 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135673438 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159032061 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152359689 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194191052 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148193883 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166446897 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081478329 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154073792 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1804238 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155397158 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068866411 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152396985 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22457122 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125544203 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150976761 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189886402 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110080619 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12998592 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241920975 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2054536 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089025428 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140619259 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151592268 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187746269 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152476386 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175045264 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14374925 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167645911 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142514632 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089851994 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119002192 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129651826 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138506763 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100207511 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14284987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148794528 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126032722 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163419096 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14395329 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143340525 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151903358 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128618945 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095836048 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128778394 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240523623 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154869268 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238590613 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106230277 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.21087258 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230768367 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079574788 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110265348 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.084929252 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173619719 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115994199 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16720319 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127827546 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136103799 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160001354 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178402728 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127494649 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073090922 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142763804 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16696494 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142952453 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129674481 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137346642 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225054869 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1092979 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110957339 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158586034 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109641913 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135106686 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239313171 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065401071 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128727621 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105508143 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086181336 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161456419 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2166568 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086747909 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156577296 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145780923 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149339773 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159028772 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132195039 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131126726 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144192677 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186476954 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16145173 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.122872138 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144681614 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162456353 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220733504 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137977044 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101044821 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236759104 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216490378 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.200455549 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119943386 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149405749 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147633249 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1423649 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201286047 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089449241 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229293093 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087094416 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197918209 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137338641 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096869896 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189602647 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.102111082 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120312451 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200936035 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176726929 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088953269 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109581275 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152362603 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155399798 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139418373 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079956926 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199277204 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077322964 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171138786 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233915653 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085178023 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138577528 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128189083 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112806116 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139353743 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109278677 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118817047 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.127748788 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230970689 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123251234 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21419485 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175941486 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147128504 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198247487 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10512644 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667143501 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108786361 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190610791 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153045789 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269748279 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103044501 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154148986 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144563355 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155966098 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205855369 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137332599 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182947686 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191186433 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155103541 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084842154 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13543474 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142796821 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122947893 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137764567 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143465695 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146068002 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105268092 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177811365 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1616788 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086781244 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128001543 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21775861 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149291832 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177848149 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175393864 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116745021 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152189508 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174795911 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112032215 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156351122 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219583006 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140226879 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103389705 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.112271443 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13824802 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236899757 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078345128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225010987 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157005941 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141866041 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147652042 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152715311 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166045162 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141584451 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158774023 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128013239 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.144487458 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14999456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116652266 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081618295 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13823131 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144073152 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130795313 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132799332 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124916498 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213825502 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075876274 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129430208 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13383574 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180862375 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242488473 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119752263 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087995162 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14890946 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140927616 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144490905 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153385507 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109107804 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084040288 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109671744 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116063931 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.133926159 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14448773 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130744209 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139829968 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226315354 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089194411 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258650898 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126883835 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111621229 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.101274061 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083068744 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127818038 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129730414 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141009446 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103028249 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237328061 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128309179 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095141323 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125872604 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103793541 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088963707 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163940862 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143204413 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155014888 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130975087 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066884552 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141768173 seconds)
  done (took 72.998378847 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134979332 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103815095 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116851571 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172656092 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145938961 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236660579 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181342836 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222732498 seconds)
  done (took 2.402734884 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069919211 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117154718 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103390796 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116313925 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09044939 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069507688 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.292055146 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110653094 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067912107 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114540961 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119991721 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092161288 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.465568584 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066898265 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095273696 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085150233 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069054839 seconds)
  done (took 3.216500584 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.422539343 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62646388 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451756098 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075098167 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.842594229 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108038458 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.343811663 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161319499 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090846181 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.4292216 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72874736 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148017115 seconds)
  done (took 17.508600165 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075500131 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070455878 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109756508 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083817332 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09888559 seconds)
  done (took 1.519288979 seconds)
done (took 116.130538424 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081079017 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.343941307 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054683908 seconds)
  done (took 1.511526584 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084461729 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085683662 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110374864 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083760913 seconds)
  done (took 1.453220345 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075232246 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077423351 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110856388 seconds)
  done (took 1.350854393 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.276713955 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165417435 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089506526 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083850938 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078630871 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105198631 seconds)
  done (took 1.355845206 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073530092 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07622704 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100077388 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078035331 seconds)
  done (took 1.411047257 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077395494 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054085132 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055912896 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082258428 seconds)
  done (took 1.359523575 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090543478 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10640445 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081963447 seconds)
  done (took 1.363395345 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107701586 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112899459 seconds)
  done (took 1.310353281 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083039294 seconds)
  done (took 1.167912295 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092623498 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140660893 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155057595 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136372918 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16563796 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136388281 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087420763 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113906235 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104652866 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089531342 seconds)
  done (took 2.312768112 seconds)
done (took 16.285996307 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078701305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391617184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361684719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117062312 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669265956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357127784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.008640442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118686711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121574773 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095564095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084695123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674821362 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97306324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349567726 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960519347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319934736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675439892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069370205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09377194 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069616508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966598094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093933414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069135287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069311546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674945315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371158363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095282865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320294349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068558894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096230356 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355503357 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094569046 seconds)
  done (took 15.945646678 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071540535 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143024529 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073899552 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084993147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097030595 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070137105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098303889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06981556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153300658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068993656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111488325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069587213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098732559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069659918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088354871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095492044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070507717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069866392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09530454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069390349 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113033212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068870596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06918392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094897426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069606634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106962569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069759042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068673277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095111816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070795532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097744265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069601412 seconds)
  done (took 3.85373749 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116471078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15328032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077818146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129409382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115829431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098982005 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17083086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093397691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155110835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0686212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111930093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069327392 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128078357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070427591 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114896792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069888791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069776424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095548098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068887822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095161729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088338286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094111714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069489042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071001397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095516372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082798876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094654073 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069741314 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069700684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097484845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073390019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095260527 seconds)
  done (took 4.171205615 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073522058 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07674561 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110042843 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084886732 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096858239 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073924626 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074007054 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096850696 seconds)
  done (took 1.77973558 seconds)
done (took 26.840479879 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080233135 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070893751 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099864315 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082606122 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10010833 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080144373 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068871695 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101375935 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078556411 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074344479 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102787334 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069019866 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098486372 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068649048 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075937971 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094702961 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080121517 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099397398 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080942762 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080114781 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098125238 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078623603 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100628587 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080914256 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106439697 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080205831 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.086904635 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10317682 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072135163 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100459147 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078429667 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087493292 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099257163 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083398514 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099877715 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071777732 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071262895 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098334423 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083100146 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105308409 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074724167 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105501763 seconds)
  done (took 4.739921708 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089803868 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089850733 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11358351 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.072875718 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09812669 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064095989 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116669922 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072747318 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.094051163 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089701001 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057761478 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08761247 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072573822 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062259691 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.094802009 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058275304 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061055241 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083922899 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061275322 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061335335 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085662813 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055962322 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062337191 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064528054 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08362613 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063886193 seconds)
  done (took 3.117757445 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076981617 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085461562 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11518726 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131275176 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.13369481 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07996012 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105255511 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089327098 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114992378 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068430525 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072205695 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125095487 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089614784 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101617418 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069321633 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115221266 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083394862 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070410284 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10146485 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091818452 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111594896 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079860218 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121830837 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083163768 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068148254 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097313437 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.0724452 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109128668 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07402054 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078159348 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099979739 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072777871 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097462201 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079904147 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072848601 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097052564 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091972486 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105214123 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081332927 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069282805 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099293885 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069963452 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118728097 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.116146722 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097747648 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078657541 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078767691 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105193649 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071086471 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117561618 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080798476 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069856343 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.10257933 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070796599 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097446738 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084638173 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072653327 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101563983 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080385554 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101179433 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084449591 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074322699 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114735406 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070733889 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106031916 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068825957 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071258617 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096004612 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095636689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071707102 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142470259 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072204684 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.100485282 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079703283 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.106249768 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077501346 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070590946 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.115288113 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081202404 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101303513 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080188056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071946177 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098039813 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090483579 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09821714 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071562095 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070904446 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102033656 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07159498 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096385647 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08179026 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069484721 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098341311 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086511251 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094714075 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071042821 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074803293 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100036484 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068655511 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107095591 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.082614146 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09523639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077610691 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068685433 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098739983 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078179726 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07274415 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094306323 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073402806 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101448957 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070076893 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070477774 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098944531 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070823358 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104866494 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074463658 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073235861 seconds)
  done (took 11.52055131 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.191934737 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.185732336 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071409723 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178908455 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077033663 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107015714 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182342406 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097024135 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097280551 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069296779 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070771016 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132903667 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.128072014 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.112241513 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108786389 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071315851 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118631289 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.108420135 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.188673673 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.181924591 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120428371 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080317289 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073186854 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.102423106 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074536095 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080344144 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114638086 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077928381 seconds)
  done (took 4.320497808 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083800273 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.138531898 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075051381 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093502 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120815181 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069316048 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101782952 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07198286 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111541118 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083123198 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099298476 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07705801 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07793274 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.110435163 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072219602 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.110244464 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.082442426 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072745015 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.103610905 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076637529 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.111219948 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084915892 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103941927 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069978706 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077832823 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098910296 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068993866 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117011436 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071707681 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123939875 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06995584 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07678579 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116007024 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06984891 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095945438 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072448423 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071688403 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099567007 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070599575 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067555958 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094407477 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059095103 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06814658 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109549391 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075517389 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088618752 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075913194 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101211829 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074274316 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066886545 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098502228 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071309732 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072193632 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10913853 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074005341 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101646549 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073643769 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067681046 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104536863 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073428727 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06641738 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096252281 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074437281 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.095597559 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078085503 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074352808 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096923585 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074309142 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076655105 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103177627 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073790931 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10065399 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068525589 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073420305 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.1046481 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075162846 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075472182 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097833263 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070946319 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099331084 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059546618 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071279811 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057457282 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102750475 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069865322 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097342894 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074508766 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077945559 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.112864793 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072995432 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105533252 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072381517 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070147525 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.102106515 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06732534 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102225318 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.090593365 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116611682 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071234203 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069709756 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.117182507 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075281883 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097601301 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059357142 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075994941 seconds)
  done (took 10.1209018 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098908512 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093977938 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09798599 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084699085 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124177841 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.0938885 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103862032 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075815912 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070172665 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11267792 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068576679 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104903701 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069704251 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078727948 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12485146 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07714075 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098462598 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078489771 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073582192 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138440589 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084979506 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110681956 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083764271 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096683243 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074440983 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080972543 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125339383 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081657254 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108253066 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087874007 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082356635 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.123862254 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088238512 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100626664 seconds)
  done (took 4.328082159 seconds)
done (took 39.241351707 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.176765978 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.388806856 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.172891671 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.056530462 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.180712978 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.196893883 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.188141173 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.171971349 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.291715465 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.178849631 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.412449039 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.808008325 seconds)
done (took 58.342604392 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.288046413 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.320296821 seconds)
    (2/2) benchmarking "String"...
    done (took 1.450013893 seconds)
  done (took 3.890990691 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.537079708 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.14662959 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461990761 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.178715438 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.179371874 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.605303376 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.806655829 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.992024658 seconds)
  done (took 27.492856411 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.186712633 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.530700353 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.476154581 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.476147651 seconds)
  done (took 17.790997782 seconds)
done (took 59.121121104 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.167949953 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.23221004 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217780973 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.162709415 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.281353268 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209382012 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.487807728 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.187834821 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.181715216 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184479553 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.18044661 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.18096153 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.175558844 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.513322276 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.183059106 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.189926666 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.263600118 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.706433062 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.558050625 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.193515118 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.195975058 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.250299237 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.181859525 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.192019517 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.246347717 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.185600331 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.176985099 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.203431651 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.36699948 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.18518816 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.266977286 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.670082988 seconds)
  done (took 189.703006202 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.180983814 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.179305091 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.254908484 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.213972636 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.604660958 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.380172137 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.317319992 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.688161962 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.19637339 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.194067114 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.462746403 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181276384 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.494657264 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.144053606 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.190689579 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.289685878 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.400245649 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.49511955 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.198205116 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.453941137 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.189129421 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.458415227 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.395813144 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.397609423 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.219380459 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.294839135 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.193455575 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.205066774 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.372560213 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.364430702 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.19147509 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.221608367 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.739497922 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.041065558 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.195295428 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.194968537 seconds)
  done (took 149.319574271 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.477328582 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182969019 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184050338 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183279706 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.212722671 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.182347918 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.704733201 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.704703551 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.685572927 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.221732588 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.241642011 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42006705 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.183014265 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.183754557 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275722866 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.193669163 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.182182524 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.198709376 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.209381388 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183927579 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183619168 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.704727051 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.1970794 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.236063992 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186908535 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.185527918 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214347727 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.183881628 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.579478796 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181564112 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.213162883 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.498942821 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.222111018 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178324296 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.481764937 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.404427051 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290525609 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179595954 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212871819 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.182588829 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.450570867 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.179286357 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.183705183 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.187431434 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.760757971 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.182546921 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.707103681 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183682978 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.099505079 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.184481937 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184839523 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.649221802 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.671588905 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.182643936 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.183351333 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.185646575 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.184649822 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184344053 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.213537821 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.627760464 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.280002582 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.183835645 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.187427895 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212529172 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.183539347 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.253315384 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1863267 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.430314118 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.236590468 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.291379788 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.708764508 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185513119 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276044878 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298638095 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.181001521 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.185005258 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18406883 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.185232445 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.291847402 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.181518217 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.571823392 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.181254028 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191141159 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.187813881 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.184898177 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.244852531 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.277622101 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.182936163 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.484828112 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.186576401 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.185957483 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920042641 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.277359138 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.183655322 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.187363677 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185873945 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.574356688 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.709551959 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.343482855 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.188150051 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.597100585 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.186292154 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.589691004 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.684035617 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.770952091 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.186790437 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293086952 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187213812 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.18883585 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.186286416 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216404188 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.188177634 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.245093152 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.18692586 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.581733894 seconds)
  done (took 342.633358493 seconds)
done (took 684.255581695 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.859930533 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.840069422 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.951244325 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.841986678 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.817662973 seconds)
  done (took 10.441119304 seconds)
done (took 11.567256469 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.365820198 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.368320339 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243279331 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.369312531 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215962183 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.383433033 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.345189252 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.206900268 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.28472514 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.260036366 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.287526382 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233182609 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214417703 seconds)
  done (took 17.907923015 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482903377 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.473774382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246769765 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.481900414 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225059394 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.488673247 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370259391 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.378067738 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.384429321 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.199836568 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202699968 seconds)
  done (took 16.066329358 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.4843419 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.47203884 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250760198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487773985 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225940828 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.495721791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.371847686 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.381907506 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.372480365 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.200054512 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202353988 seconds)
  done (took 16.076663758 seconds)
done (took 51.180950838 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.198433377 seconds)
  done (took 2.329583637 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229106911 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.392468146 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.212546758 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.203222334 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.198063188 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.200709542 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.202470941 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.199527944 seconds)
  done (took 10.970944493 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.198990468 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.19598087 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.194339786 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.197520957 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.196925741 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.195100135 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.19853778 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.199270167 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.1984357 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.196387517 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.197659129 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.197873971 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198058437 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.195599581 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.197160209 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.199082464 seconds)
  done (took 20.29012464 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.19746194 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.196154336 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.19659365 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.196659888 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.196795309 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.197529535 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.197996935 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.198292703 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.196275324 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.195659722 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.198103623 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.197026582 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.196786731 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.195285381 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.195758626 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.197454291 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.197659498 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.196837122 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.202661994 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.196140676 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.197384688 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.199040844 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.196173466 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.198168626 seconds)
  done (took 29.870344449 seconds)
done (took 64.591702013 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.200813033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.806510761 seconds)
  done (took 9.140187816 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.199768973 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.200259867 seconds)
  done (took 3.536445777 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.199736499 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.199237991 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.198983842 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.199130382 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.200596309 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.199612476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.199698255 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.201657517 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.200819066 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.200372429 seconds)
  done (took 13.133340887 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.19975589 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.20046424 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.197477152 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.200878896 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.201977039 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.198471632 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.201282524 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.20157474 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.201467954 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.197977573 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.201872931 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.198173019 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.201331285 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.199547185 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.201502218 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.19946719 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.200588333 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198540956 seconds)
  done (took 22.73770303 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.200701212 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.201731313 seconds)
  done (took 3.538413791 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.198788232 seconds)
    (2/7) benchmarking "second"...
    done (took 1.199113396 seconds)
    (3/7) benchmarking "month"...
    done (took 1.198857415 seconds)
    (4/7) benchmarking "year"...
    done (took 1.199156386 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.1985683 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.19892897 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.200054413 seconds)
  done (took 9.529486063 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.202382617 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.385445792 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.464419724 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.771351832 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.20317231 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.205381555 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.063514383 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.205907465 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.207903165 seconds)
  done (took 13.845362104 seconds)
done (took 76.594198465 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.20426262 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.193522451 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.03669626 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.208686646 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.209951484 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.494569855 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.195426976 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.315011484 seconds)
done (took 36.994959001 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.209723312 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.890176218 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.934103604 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.196048597 seconds)
  done (took 11.156150364 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.190102029 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.102923613 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.196587603 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.195836151 seconds)
  done (took 17.823900523 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.798119994 seconds)
    (2/2) benchmarking "read"...
    done (took 1.530111846 seconds)
  done (took 4.466962604 seconds)
done (took 40.792993478 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203188934 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.20345695 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.202909829 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.201692667 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.203520856 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.201444299 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.20115645 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.203207255 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.203930928 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.203020888 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.20109669 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.204180672 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.203949651 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204001987 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201685527 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202924991 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204453504 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.202572878 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202186329 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.201931983 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200116318 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20337885 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.201376957 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.201709007 seconds)
  done (took 30.000162609 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.205988836 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.202811608 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.20366436 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.204252569 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201645597 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.204955043 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.204076001 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.200353068 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.204683911 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.2042785 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201921267 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.202651677 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.203806654 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.203798556 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206529748 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.203622764 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.205228094 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202575643 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20536494 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.202733591 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.204461959 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203701811 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.203097012 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205915702 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.203122543 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201990597 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.204868437 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.20378978 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205667578 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20297373 seconds)
  done (took 37.254088092 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.210139616 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.214237644 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.206712251 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.207091602 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.207787965 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.207105007 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.206420563 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.207654342 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.206440788 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.207096439 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.207135932 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.207006688 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.207605032 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.208451492 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.207356405 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.207557661 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.208884132 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.205138765 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.208355164 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.204996023 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.207640428 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.207849224 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.207865424 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.208516258 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.208303763 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.207569043 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.207460413 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.208057738 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.206676571 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.207400649 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.208010139 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.208814876 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.208208219 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.20679777 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.207596403 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.208780509 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.213454879 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.215965613 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.208243953 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.206415626 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.205714615 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.207401067 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.207200104 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.208556033 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.206525987 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209145146 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.20910824 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.207358608 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.208579957 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.208283112 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.207675449 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.20750034 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.20850696 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.206967226 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.208293915 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.207284941 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.209284063 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.20837134 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.208440928 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.209578394 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.20900971 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.210215527 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.20843443 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.210256759 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.208802621 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.208285756 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.209980142 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.208484046 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208325865 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.209311587 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.209800711 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.210413664 seconds)
  done (took 88.1354115 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.209224195 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206618432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.206640249 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205590843 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206526981 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208862919 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.20767115 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211439701 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208626409 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.208994042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209903641 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208327618 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207269984 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.210540074 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210177936 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.20726668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.209387342 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207520927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.208776554 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212284701 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210824809 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.208708534 seconds)
  done (took 27.734406561 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209566549 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211705221 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.207358284 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20986682 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.206817395 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21034411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.20964777 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209914585 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211563019 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211081864 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208742736 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211167906 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208928485 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208099883 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208717245 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.207858929 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21137949 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207792533 seconds)
  done (took 22.916064219 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.209518196 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.206823588 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.211068144 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.208746011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.208972428 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212289999 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208706561 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.211923434 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.212413444 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.208980027 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.212091358 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211639334 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.211977127 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20843357 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210109353 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209845372 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.213074246 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209337215 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212299731 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210470752 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209385014 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211713454 seconds)
  done (took 27.776562252 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212357561 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212918907 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210913486 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.209449696 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.20994628 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.213354505 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.21097458 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.209907256 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21243412 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.21219578 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209625385 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.213489414 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.209354911 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211482699 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.209250596 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210707516 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21303723 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.210090517 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212462298 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.212096353 seconds)
  done (took 25.371339064 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214448148 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214954606 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.214155326 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215613368 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213512987 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.21341419 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215709118 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.21364419 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214953973 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215240843 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215884664 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213761066 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214912164 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.215346949 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21417986 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2142543 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215174687 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214263176 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.215274183 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214499669 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.215227283 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214806805 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216105146 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.213996249 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.213165911 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214126125 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215976984 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214666823 seconds)
  done (took 35.159674756 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21541299 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215429789 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.212445422 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.213093522 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.213524694 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.213372558 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.213537597 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.21304344 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215650078 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213100771 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.215089541 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.214115522 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214900383 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.216508973 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215387574 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.215631345 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216021728 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.213968876 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213978558 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21288277 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.217428355 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216456988 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.216808023 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213944269 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214092745 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.21807966 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214264236 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215081803 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215696825 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213267561 seconds)
  done (took 37.593328091 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.236737424 seconds)
    (2/2) benchmarking "in"...
    done (took 1.234149483 seconds)
  done (took 3.621121701 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.213001719 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216626579 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.217619863 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213714821 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214237753 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217321331 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216682345 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215842608 seconds)
  done (took 10.876745227 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.215797724 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.217421472 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.218420871 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.216941177 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.217141537 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.219282452 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225726829 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.233471263 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.217359309 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.21927922 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.224041686 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.226875171 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22286739 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.219306346 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.218932393 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220492242 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.218910729 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.218071715 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.218398631 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.217729916 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21912027 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22222112 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222945847 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.216455169 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.219757157 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.23376047 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.226761847 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.220173788 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.219084511 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.225872965 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.218759229 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.216651841 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.218909964 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.218674098 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.219604806 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.220203905 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229346946 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234986504 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.227461709 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220370478 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219569424 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.217451854 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.220631099 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.222222339 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222141939 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.219175196 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.220762079 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.218202525 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.21935473 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.221389065 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.226271843 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21896215 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.216044372 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226099668 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.222345309 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229610296 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.237108284 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.222238124 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.229568701 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.233950211 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.235670961 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.228827246 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.222802197 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.219570965 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230942313 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.247727302 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228973786 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.234916014 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.21885081 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.220272611 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.229881411 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235667955 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.232478016 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.220471543 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222475247 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.222003312 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222052316 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221814476 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230737925 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.24336406 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.22010667 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222537497 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231521662 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245099939 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.220400189 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.222254163 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.223217517 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.223194122 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.222634063 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234979143 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.238854773 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.221870056 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.222348854 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.222024539 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.226749934 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.222709891 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.221291468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225606366 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.221969925 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.222952721 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222975573 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.226894478 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.2337131 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.221973389 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223701045 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.233819457 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.224237876 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222340629 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.235631232 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.224058058 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224117749 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.22314742 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.231990063 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.221719676 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225676875 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.234507106 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223046505 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.224454043 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.222818436 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.224065585 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23489809 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.252783277 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.224387705 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.225792616 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.228091514 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.235776101 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224713583 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.228409822 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.225839191 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.220279934 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.222643775 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227523408 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.224619188 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.227182768 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226017558 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227713741 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.222390655 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.225516375 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.223836036 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.226670633 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.227940104 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.225577912 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.226476598 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230307987 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225279632 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.227130375 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234551292 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.22872972 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.225723341 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.229338422 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.223591015 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225043523 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228866038 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.227030949 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.227263889 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224442567 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.224393276 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.226075977 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227400635 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.22698305 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227260503 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.227530986 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230903228 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.227123985 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232178236 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.22558394 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.224392217 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.227462461 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.228286173 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.226975 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.227622733 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.225390437 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.22813006 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.236280092 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.228701845 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.227052192 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231417882 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227501075 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226530075 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227917539 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.231141415 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.236010194 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.226156271 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.237328149 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.228259694 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228195404 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.229248453 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.228200715 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.227043086 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228147549 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.229233931 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.236553384 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241886423 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236438543 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.228865491 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.232377945 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.230077439 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.232031357 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.234701966 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.22832544 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.228726849 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227951238 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227652927 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229009667 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.232322965 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.228057028 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.229985804 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.229159894 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230069774 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.230130009 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229438901 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231101473 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231270095 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227139515 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229088897 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228024258 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.229087534 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.225565575 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.227494032 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.228299606 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.229664996 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.228592684 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240540522 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.228150434 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230353899 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231223362 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.229201782 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.229501888 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.231838511 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234122988 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.230980815 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238853622 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.247486766 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.232169377 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238941147 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.248577507 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.229269204 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235318978 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.230049706 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228925017 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.232273621 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.239445426 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229738051 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.2294345 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.230266005 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233094851 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230791084 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.238996877 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.227896374 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.231378291 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.23211879 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232970095 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.228293786 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.23347349 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.232557108 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.23252373 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234426944 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231342694 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.232215466 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233554692 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230640415 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.230570044 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.230925657 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234768268 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239928104 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.238220305 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.23441182 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.235939332 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.233881919 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.237149506 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.233743565 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.232510094 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.231055503 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248616482 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.240513733 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240380321 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.237258123 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.233066498 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239881388 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.234950778 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.237530813 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232386758 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234125995 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.233593248 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.231548211 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.229877827 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233236144 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.23313252 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234590864 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.235337937 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.23702125 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.233658685 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.233872827 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.232603425 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.233353294 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.234175319 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.234218413 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.233476707 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.237703974 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23546829 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.233400844 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.233072766 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24423462 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251376113 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.236269627 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.232721777 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.233239044 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.233274632 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.235252523 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.23494274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.236973503 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.241569712 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.237559914 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.245304815 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.23758184 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245397028 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.234701406 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.236458012 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.242866193 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.232941646 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.232354727 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.234461889 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.235631693 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244442278 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.25012588 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233760529 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.238234952 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233664221 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.234459472 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.235871402 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.235224186 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234681417 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.234369337 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245020396 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.252714653 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.240039905 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236379821 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.233949831 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.235483075 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.23519347 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23472675 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243757107 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.23695493 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.236913615 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.235131075 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.237723703 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235895483 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.235054151 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.23625318 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.233135891 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.236841835 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245066934 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.253330107 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240709325 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235765628 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.250013737 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236829577 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246871422 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.25368193 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.238649514 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.237631232 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.237640911 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.241124039 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.237354728 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240044659 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.236760639 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.238467241 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.24222138 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.236157409 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.239090576 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.238107355 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.239075539 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.238468466 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245423274 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261294364 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.23806553 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242923498 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.235572431 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.239720879 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.242082531 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.237377527 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.236011219 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.240314204 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248853364 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246374878 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.239384851 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.238289079 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238623617 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236922769 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.239345974 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.238300279 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.238121303 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.239097247 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.239966449 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.238157033 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246069376 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.237614737 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.239083036 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24154946 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.240183803 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.252237146 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.238385701 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.241702402 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239082948 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.238787437 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.2404204 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.23925148 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.238446537 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240921352 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239097971 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.241249396 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24532548 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.247414655 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.243063868 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.239563596 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.239000171 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.240680983 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.24167867 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240658844 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.239664904 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239545448 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.240404535 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.240413802 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.241863684 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.237321137 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.240513282 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.24097861 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241665577 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241993248 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.247185617 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24060106 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.237856491 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.242107264 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240915168 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.239175002 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.241734889 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.252577036 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243043247 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.25228182 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.24962144 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.246876953 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.24256698 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243500016 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.251329965 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.240602192 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.244085486 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.241231097 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.244592384 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.241831546 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.245297801 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241261852 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.25227341 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.240781973 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.241097898 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252554077 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.261019684 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240500784 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.242564151 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.247429767 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.242984639 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.240986282 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.241403317 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.240472598 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25227012 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.263932605 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241484381 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245031661 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.2414249 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.243252938 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246378119 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241670205 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.24327696 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.238997476 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.243729924 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241810255 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242978575 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.239575172 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.243488312 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.240655941 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244878659 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.25193931 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.240834702 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245189015 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.243628162 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.245365061 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243011564 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243307881 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.24092785 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.240781049 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.243123867 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243790878 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.245363033 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.247970774 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.243953013 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.242687429 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.246249669 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243874054 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246082582 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253731483 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.253141673 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.24187147 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.244031078 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.246199537 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.248018476 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243609744 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.243859358 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244548058 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.248284003 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.245341708 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244816007 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.244045196 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.250130239 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263348383 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.262945171 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244935015 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.245807638 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251469008 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.246284906 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.242666957 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.243674526 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.248260648 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.248481561 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.253242727 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.243994696 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253030516 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263876785 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.245409937 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.249645574 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.247581056 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.253931169 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.249606255 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245398705 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.245082726 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.250735315 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.264123983 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246563455 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255637429 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280522779 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.263344357 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246926751 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.247227809 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246389998 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.245444058 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.24972407 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.246210466 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.245728594 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24689526 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246413927 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.248061974 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252679429 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.246601558 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.247689304 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245864509 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.249119922 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.251521651 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245015861 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.246786037 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.24799222 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.24692359 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.245992516 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.247416119 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.248740051 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262938428 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.26102484 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.250166374 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.250907568 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.245217723 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.254555941 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.250020139 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259474967 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.257566444 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.248539443 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.248606192 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248692151 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247483992 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.244670054 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.247143635 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.245700795 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24804004 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.245412551 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.265482429 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257975243 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.256426056 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.249538945 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249649511 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.248602029 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251804727 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248745209 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249926398 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.251787444 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.249535665 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251960388 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.247941127 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.249693468 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.252112136 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.257830598 seconds)
  done (took 737.983146741 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247580144 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246494217 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248400903 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246498704 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246589928 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248977889 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247248548 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247587509 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.248715462 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247070037 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247748 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248644028 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249416909 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248941175 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24817892 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248839828 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248201989 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248157362 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.247477356 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248821799 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248091545 seconds)
  done (took 27.389399979 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.249820753 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.247850926 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247066671 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251229227 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247796631 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.249371615 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.246955068 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251042863 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251293136 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248256722 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.249345947 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250485464 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.248534283 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.247885017 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24788248 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251116053 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.251109434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250154301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.251021149 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249607639 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252183095 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.249007359 seconds)
  done (took 28.672494693 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.251612451 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.24983877 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.251740267 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.24870401 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.253680455 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.249277789 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.250782458 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.252198336 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.252743591 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.253356682 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.250980365 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.252249811 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.259560514 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.258312286 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.255136775 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.251392311 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.396421853 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.251983386 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.252724004 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.25307203 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.250671955 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.258876632 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.25005559 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.250642981 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.252666905 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.253294356 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.252639025 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.255041983 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.25344111 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.254956146 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.256825556 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.253957987 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.253629539 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.25660467 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.252172884 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.254086798 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.256767056 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.254672538 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.253435576 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.252250945 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.265351334 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.275744987 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.252554365 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.263307219 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.254238443 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.25505103 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.256997381 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.261475091 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.252248858 seconds)
  done (took 62.794910009 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.25474526 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.255217549 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.253191102 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.25474606 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.255831686 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.254650978 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.254982006 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.253981051 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.25188622 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.252915691 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.254228758 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.250986806 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.251696615 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.254863982 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.254412351 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.251362761 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.253559393 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.252290529 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.254640108 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.252055738 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.25354217 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.255075778 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.255824527 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.252524244 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.254762947 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.253802057 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25423222 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.255727109 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.251883182 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.254260617 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.254555489 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.255773236 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.256901415 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.253921082 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.253464897 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.25555479 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.256454279 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.253322685 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.257408916 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.252683786 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.255609411 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256750364 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.255207509 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.25590804 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254586088 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.254571745 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254926662 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.25373812 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.253974871 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.256051981 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.256291799 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.254251504 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.256910103 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.254650786 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.25719704 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.257319351 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.255871457 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.255187907 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.256349745 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.254827239 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.253928705 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.256500961 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.254906427 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.258129436 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.258682581 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.256623053 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.25524048 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.257426789 seconds)
  done (took 86.514616924 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25635763 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.258377373 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256461369 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255297781 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258405304 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.257282233 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257265495 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.256348768 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.257390057 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258244776 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259219476 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258768066 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.258382763 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259349182 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258412066 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258634924 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.257533969 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257668387 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259353609 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256801198 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.257578102 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258866496 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.259633111 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259111379 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258780026 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258350476 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25932003 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257586661 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25958289 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259180786 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258322975 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.259613591 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258339312 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260116475 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.259207171 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.258074692 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.260619714 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259508815 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.258838816 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258985307 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260582564 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258221643 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260775518 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.259870963 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259238104 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.257467762 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259678328 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.261090388 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26167665 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258793847 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.260621843 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259564909 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259132911 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259068742 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.260072707 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.261154742 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260491582 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258147949 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260599139 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260075558 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259553351 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.261692425 seconds)
  done (took 79.245196038 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261246959 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260170015 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.258346838 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.259642511 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260779555 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258489372 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262066791 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.261815069 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261645436 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.260681373 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261324825 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261145228 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259646601 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262006044 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260796952 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258918391 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259588893 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260002064 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263039078 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258623965 seconds)
  done (took 26.403301726 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.258818153 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.261449949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.261494307 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258995378 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.262729577 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260193528 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.26264423 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262861332 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261455403 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263168667 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261446713 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26276354 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259435282 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261110312 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.263020519 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.260714243 seconds)
  done (took 21.377018286 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.259923504 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.262402334 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.264022035 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.26294597 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.259596153 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.260863236 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.263677151 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.259946337 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.259149254 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.264487953 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.264653329 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.263583465 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.26298342 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.262904486 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.259644063 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.265185906 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.260910317 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.260062166 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.263430558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.264451668 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.260720906 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.26137529 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.264163947 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.263570608 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.261068061 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.262099704 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.262109231 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.26162317 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.262625167 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.264735555 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.262194714 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.263467046 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.263209698 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.262297389 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.264894361 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.264349637 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.266935065 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.265245122 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.265425949 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.264463302 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.265434232 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.263090672 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.26525149 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.263572195 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.262073987 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.266361413 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.263362617 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.263528299 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.261762199 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.262993504 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.266884351 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.265774997 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.266657714 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.266474204 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.267103862 seconds)
  done (took 70.676876245 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264512753 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265463001 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.262571233 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.265403355 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.265153177 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.26324215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.265312438 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.263173098 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264131275 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.266599514 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.264067279 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267042529 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263144901 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.265997099 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.264258095 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267367137 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.264890975 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263583597 seconds)
  done (took 23.962258755 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.265270663 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264174476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.267695355 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.266120009 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.264759783 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26708064 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264612006 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.268513499 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267999641 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.265976548 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265052019 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.267900168 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266666349 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.269040818 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264777003 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266143022 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.267796267 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.267771498 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.265236341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263292855 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268101496 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268053857 seconds)
  done (took 29.05979306 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.266216933 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.266699386 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.283799799 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.312172792 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.299670618 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.266647302 seconds)
  done (took 8.892981223 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265335898 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268628947 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266655574 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269412595 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266765529 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265491909 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265114691 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266238749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268950137 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266304438 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266335366 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267811364 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26784764 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265853375 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268007876 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269247229 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266402396 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266144288 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268179977 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268688884 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265528504 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26832143 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266435086 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268014784 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266878791 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266415527 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269378357 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267414093 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266930338 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269182336 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270368499 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268514554 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269701613 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268024122 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269808668 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270443177 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265915691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269975365 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27025126 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269171251 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270676766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270390102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27161309 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267289581 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268799301 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267653238 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266877877 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268554866 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266782047 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271365782 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270588049 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267123245 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270305594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270434524 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270527977 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271061425 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269210403 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268764464 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270694629 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268761355 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268416788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271556401 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268657963 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269590371 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271653669 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26861271 seconds)
  done (took 84.916608264 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269631177 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268347081 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268835008 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269751385 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268411105 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268370369 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270678902 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268858685 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269888819 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269489559 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273234222 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26906876 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269502782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270461007 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267869124 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269358984 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269551494 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270339841 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270405108 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272874135 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270440848 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269930072 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270535777 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271048989 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270357814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272675551 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270827767 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271967459 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27018329 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269186743 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270493194 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270688091 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270978372 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270420352 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269960559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269492071 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271565028 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271661952 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271178839 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275226552 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27255332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27401663 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271581617 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27092294 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271665541 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271176013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271575939 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272601295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272133126 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271475138 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272485971 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270839601 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273111873 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272294789 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273074016 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271843554 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272091456 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273647087 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272829319 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275040079 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272252598 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273544593 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273355285 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273467895 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272734889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272124865 seconds)
  done (took 85.102463978 seconds)
done (took 1720.568180614 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.293619721 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.380817749 seconds)
  done (took 13.878814024 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.435930026 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.38719454 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.26971178 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.299009987 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.269151733 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.292898433 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.263187654 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.267170811 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.270717566 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.271463299 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.274074041 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.467184169 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.273918086 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.269287017 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.273921124 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.364763611 seconds)
  done (took 42.15961734 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.300833178 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.280628726 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.389689128 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.295900127 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.3003145 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.452362564 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.329832682 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.27709962 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.446430139 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.31798996 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.79663861 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.297432895 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.277886055 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.364703367 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.290736218 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.453663088 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.519068233 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.801631928 seconds)
  done (took 29.396676385 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.719025236 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.287051235 seconds)
  done (took 9.212448837 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.290034733 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.273761044 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.273303966 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.293602674 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.285499716 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.282229615 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.299746321 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.282321897 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.275246881 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.289798631 seconds)
  done (took 64.054600572 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.296517394 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.278661273 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.280076483 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.278719801 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.270559606 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.279082782 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.276387604 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.275620236 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.837312745 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.400269227 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.293363762 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.285148247 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.278666236 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.279392449 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.276738366 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.31416887 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.406115012 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.276706234 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.275621853 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.284432555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.27961557 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.406865277 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.316980558 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.276323246 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.40227078 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.850447587 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.279524376 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.28640851 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.396545652 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.277114229 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.278180764 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.279670487 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.279736472 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.844907822 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.765195076 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.28533901 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.312200224 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.288526429 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.275835058 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459409442 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.280100018 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.286181355 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.271391908 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.739923296 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.436966959 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.390167034 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.564951867 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.279694272 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.283452554 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.344921816 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.281259584 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.28170294 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.309619129 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.043151664 seconds)
  done (took 108.28900284 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33110101 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.762441469 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443474565 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.295781097 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.070771219 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.955813298 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.273574052 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.557004761 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.274473751 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269444459 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.609249135 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.778128791 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.273597895 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.28093466 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.973421864 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.348190719 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.274177537 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.056284223 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.275189233 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.277502127 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.688205645 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285632211 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.283818994 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.307102908 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.308430226 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.749580902 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.761253048 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.747967846 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.279821825 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.272939434 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.736739193 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.275176178 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.347765794 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.269795751 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.545995609 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633219568 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618767636 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.274351355 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.286501937 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.273616712 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.293647506 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742264808 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.627818443 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.276377031 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.275847854 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745807421 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.275914077 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.28111975 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.274951502 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.474519849 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.277152143 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.274785745 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.753055112 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.275635421 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.630424315 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.283300084 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.341966428 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774602367 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.274572822 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.359578549 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.324179012 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.273991791 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.281070613 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273697612 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.271053538 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625637078 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.652088869 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.271920184 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.623276829 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.727413647 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.273101617 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.802488352 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.125311614 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.287097954 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.339723242 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.271892776 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.853439638 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767224958 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.306517821 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.269646731 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.6117429 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.273387792 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.59293609 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.289739546 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.268942346 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.700573072 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.290308724 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.318728885 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.27286617 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.284300992 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.909244564 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.274983322 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.551550527 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.335702105 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.273201043 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.272830203 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.295784051 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270310101 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.269222779 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.271234466 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.797611143 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.276306924 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.575312908 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295356523 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.275289334 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.271319028 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.27527022 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.274218704 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49066225 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.714147726 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.28147772 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275870947 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.27147346 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.288714154 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.577951885 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.275743451 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.587099091 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.274791991 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270033072 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.2780456 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.990914259 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.284346091 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271161443 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.290480858 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.125065737 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.486464905 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293171411 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.271841149 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.276671798 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.293270197 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.662062152 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278853546 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.307692395 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.279294022 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971931023 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306275331 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.293730253 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.92466104 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.280950754 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.277404652 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.279355152 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.277457522 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579406121 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.550930086 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.578729407 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.276619599 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.277462383 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963140703 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.289868235 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.40566683 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.294656014 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.280980498 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.477086579 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.528353677 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.277689862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.851016403 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.278422082 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488868526 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.283490757 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.589987917 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.763013418 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.277680715 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.284179356 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977472816 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.949909469 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.89609594 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.282864843 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.609758907 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.291266722 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.737615313 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.277661416 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.278318363 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.716622884 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.280883673 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.28001646 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.276514193 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.27689644 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.335029518 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.455627761 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.78774165 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.281084018 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.730776171 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278756577 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.274720168 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.28036312 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.283076654 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.634093549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.351706787 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.280646326 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.321609683 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.279085887 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.28099241 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753744167 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.157783811 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.27990939 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.433567252 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906645706 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.279858979 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.281466063 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.943045701 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.521557324 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.7786597 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.284544164 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.58349492 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.276864269 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.318391964 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.003275539 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.285426211 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.752976967 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284505639 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.277117302 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.870830469 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.280260394 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.359218344 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.278549755 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.282224539 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.807922677 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.280593628 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.282017197 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.609176539 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.276128369 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523340421 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.280409445 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.325732705 seconds)
  done (took 1099.104773767 seconds)
done (took 1367.300450345 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.280423439 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.280637383 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.266612064 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.285409828 seconds)
  done (took 26.330288189 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.29015532 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.286981288 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.288747086 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.287753453 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.29144034 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.287539871 seconds)
  done (took 8.954706598 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.419387328 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.283782885 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.283546668 seconds)
  done (took 19.207641617 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.504747852 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.519157691 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.64400045 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.402581299 seconds)
  done (took 10.29232415 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.28842129 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.289348528 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.289813519 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.290431501 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.291089041 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.292112438 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.290627059 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.291476552 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.294330702 seconds)
  done (took 12.837429042 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.204342483 seconds)
done (took 84.04382136 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.385190121 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.568186195 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.273772016 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.576729038 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.282819967 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.30650482 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.000304551 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.862317089 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.299268187 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.570670918 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.152502981 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.68764986 seconds)
    (13/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.103501546 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.32211605 seconds)
    (15/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.516248174 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.31389084 seconds)
    (17/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.575604599 seconds)
    (18/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.313278313 seconds)
    (19/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.273241147 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.297897406 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.228199226 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.644569877 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.285976122 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.362746592 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.284139786 seconds)
    (26/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.325780542 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.290400624 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.625362775 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.000637445 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.859884076 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.188043879 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.70706756 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.668175476 seconds)
    (34/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.898390006 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.205721815 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.383137802 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.881031963 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.396053868 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.312411055 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.357955815 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.451847921 seconds)
    (42/309) benchmarking ("sort", Float32, false)...
    done (took 5.296021052 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.283828073 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.299061754 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.287625047 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.362624825 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.295604682 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.525617351 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.347763328 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.063550507 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.281052953 seconds)
    (52/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.281357295 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.742470559 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.287347885 seconds)
    (55/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.650268488 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.937136176 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.400005342 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.565312795 seconds)
    (59/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.647309838 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.198091371 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.778039055 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.949980574 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.598835898 seconds)
    (64/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.664834782 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.344867016 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.350238349 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.291445524 seconds)
    (68/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.825712752 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.681167751 seconds)
    (70/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.343450242 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.661866914 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.892056496 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.783402562 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.273320925 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.370563149 seconds)
    (76/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.477786264 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.305780848 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.308088032 seconds)
    (79/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.892176371 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.782107819 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.646270789 seconds)
    (82/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.373496752 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.197788366 seconds)
    (84/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.294505312 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.654065432 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.139412642 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.452074795 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.779594413 seconds)
    (89/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.316002891 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.128200966 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.468591957 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.271661067 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.114315539 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.404289704 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.038594725 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.285876455 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.126376328 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.681486499 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.694413151 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.375025008 seconds)
    (101/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.290780611 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.065002172 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.363499761 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.177077659 seconds)
    (105/309) benchmarking ("sort", BigInt, false)...
    done (took 6.290840383 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.745266428 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.614763943 seconds)
    (108/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.610580799 seconds)
    (109/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.289744599 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.78287764 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.489782548 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.29049491 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.165893814 seconds)
    (114/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.197407251 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.288522896 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.534450477 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.307112436 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.904035225 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.060610626 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.716470056 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.316229788 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.373411759 seconds)
    (123/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.291158044 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.273570718 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.478803361 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.793259775 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.315791254 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.314102797 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.553139882 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.435059394 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.943332817 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.899681343 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.375373126 seconds)
    (134/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.283350256 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.058652004 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.554253541 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.720849633 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.366544027 seconds)
    (139/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.289731147 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.756561478 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.367669865 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.435107991 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.292029688 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.09563572 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.38873694 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.310060346 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.070702136 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.395569455 seconds)
    (149/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.127363314 seconds)
    (150/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.694640098 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.638332358 seconds)
    (152/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.635138454 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.38913328 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.706180214 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.317519102 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.079573779 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.526750396 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.315363324 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.858452019 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.875071123 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.774566786 seconds)
    (162/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.84141708 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.701539611 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.327864624 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.120431312 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.879030299 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.686650477 seconds)
    (168/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.31140371 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.329607132 seconds)
    (170/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.487952588 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.086930864 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.321064206 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.420712749 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.39526767 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.348142667 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.662285435 seconds)
    (177/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.090474097 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.611178516 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.598252391 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.342412062 seconds)
    (181/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.589767708 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.397663761 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.290756937 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.336657096 seconds)
    (185/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.93647163 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.312964626 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.890054465 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.680004665 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.677167933 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.320345824 seconds)
    (191/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.318149676 seconds)
    (192/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.680040206 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.056362859 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.133281025 seconds)
    (195/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.678795044 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.653319184 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.348797517 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.95520139 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.298656384 seconds)
    (200/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.513034626 seconds)
    (201/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.658635421 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.351601944 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.185730337 seconds)
    (204/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.7346515 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.306684056 seconds)
    (206/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.279370136 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.296751527 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.275669494 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.591240142 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.888180039 seconds)
    (211/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.43391166 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.296731613 seconds)
    (213/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.386548005 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.775104463 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.280047178 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.854542394 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.501224754 seconds)
    (218/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.320279285 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.71567157 seconds)
    (220/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.081807822 seconds)
    (221/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.307768144 seconds)
    (222/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.779899548 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.37162412 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.295978232 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.95010863 seconds)
    (226/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.38992157 seconds)
    (227/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.296621212 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.008863233 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.334457678 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.305917015 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.313244352 seconds)
    (232/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.950002747 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.337103987 seconds)
    (234/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.927303388 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.292377995 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.536738142 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.297343683 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.367841897 seconds)
    (239/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.406409182 seconds)
    (240/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.361903663 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.296745383 seconds)
    (242/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.397945683 seconds)
    (243/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.379270969 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.220091707 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.818544863 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.296093021 seconds)
    (247/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.318234906 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.343818903 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.900478977 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.283408046 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.149041615 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.295003633 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.560950754 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.323600929 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.497458648 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.44129029 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.322717317 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.203114367 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.393648225 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.035579971 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.508441392 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.08456952 seconds)
    (263/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.40551313 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.283265165 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.407364387 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.291287504 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.322320385 seconds)
    (268/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.308542084 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.298836872 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.430028602 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.697377919 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.961682425 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.299133283 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.30979707 seconds)
    (275/309) benchmarking ("sort", Float64, false)...
    done (took 5.600854801 seconds)
    (276/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.319957871 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.406731161 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.324365092 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.44220851 seconds)
    (280/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.399688551 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.695942518 seconds)
    (282/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.902922981 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.299150156 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.498229072 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.326001984 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.253065986 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.64843207 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.391315078 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.466685289 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.395305925 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.416505204 seconds)
    (292/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.832895707 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.722572859 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.486070846 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.381292971 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.820953035 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.359801069 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.325319292 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.341063439 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.719271211 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.315162722 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.640198753 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.345937165 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 4.352258709 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.408183741 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.322750572 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.285570794 seconds)
    (308/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.586725893 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.383860938 seconds)
  done (took 914.108113924 seconds)
done (took 915.329622683 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.332541025 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326063161 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.310033641 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.331418289 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.423475841 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.340240087 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.322340453 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.31310741 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.357837418 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.359727911 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.309333856 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.337841014 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.310035765 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.308914441 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.308980426 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323013277 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.344193491 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.311360939 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.326702994 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.321386523 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.328645787 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.308652481 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.3606468 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.340033481 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.315678533 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.314397725 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.31504473 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.330315065 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.424489366 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.313867255 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.314140514 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.322887586 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.344049145 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.309892291 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.307467726 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.330991461 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.322415793 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.320819271 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.316035352 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.344810002 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.761235893 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.313074232 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.313653782 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.313050531 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.313344215 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.314580065 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.314725011 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.318765041 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.326539122 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.326697469 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.774755708 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.327841752 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.31622561 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.3126437 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.325278134 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.312973721 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.317328272 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.330121244 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.333363513 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328465667 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.300097976 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.314179462 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.313818418 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.330242871 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.320627478 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.76265143 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.303975451 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.318023318 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.764794886 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.320158633 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.817069654 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.323203196 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.315302365 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.328602496 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.346623096 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.352233823 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.309424305 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.313975386 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.322509376 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.312321734 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.32363068 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327909731 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.319453789 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.316556652 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328890915 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.345646248 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.325858251 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.317015169 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.324720045 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.33449571 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.322426203 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.325986277 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.317598229 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.309231241 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.325309608 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.318337579 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.318120107 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.319292997 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.322304585 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.325506306 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.757254748 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332486429 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.312341905 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.312226569 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.315570166 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.328478712 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.764144654 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.318113404 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.338468066 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.363342842 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.317515422 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.348482896 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.31822522 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332681897 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.328112501 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.321945028 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.313162721 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.349964338 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.779501084 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.33288781 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.318516985 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.316831977 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331782523 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.318094163 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.313851659 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.360947607 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.31803828 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.331274376 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.438015468 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.327415001 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.349372099 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.316410217 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.321755106 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.351002459 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.334070568 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.349339574 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.320131005 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33446809 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.33366883 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.313920943 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.32876025 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.327339284 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.319497402 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.324634382 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.311243666 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.348639865 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331188119 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331851557 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.338011759 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.439384623 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.314755246 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.353093941 seconds)
done (took 222.651913243 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.375653084 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.314790168 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.417000828 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.314330394 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.414551647 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.414586737 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.312811108 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.313500156 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.314982711 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.691648953 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.312518643 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.312930653 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.313765659 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.310781259 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.396875983 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.315358008 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.313645048 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.655056477 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.315100574 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.383128264 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.311670008 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.313211659 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.314699246 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.694916428 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.313560305 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.311868332 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.386078632 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.315800644 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.661276085 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.314414923 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.3140322 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.658329803 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.407779255 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.33339672 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.327279188 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.323584077 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.418776283 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.334691313 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.400253236 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.398028157 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.418683139 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.355508084 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.31040547 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.318268304 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.319546925 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.318297083 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.317080505 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.344303438 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.316312747 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.315937006 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.658455852 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.329905732 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.326515371 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.316785628 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.315622105 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.338589115 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.316649137 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.317997455 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.409689049 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.318603241 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.380488491 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.697762093 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.696547491 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.317935424 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.319549844 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.317676465 seconds)
  done (took 147.325672832 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.385299211 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.391900175 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.433369061 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.319015551 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.370100082 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.436372543 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.320133942 seconds)
  done (took 10.903854211 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.326638665 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.319274386 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370078857 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368606958 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.319068133 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.466533696 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319607614 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.331075009 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.31749913 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.370641996 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.318824938 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.32108436 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.325924438 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.312975102 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366131237 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.331195534 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4331968 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.318783549 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.319438934 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.473071276 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.317432146 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.327395168 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.371612006 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.331675602 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.321734501 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.325318087 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.883030291 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32102149 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.317292176 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.321362853 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.318665866 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.35800849 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.319888903 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.320809306 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.319085831 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435639232 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.318693192 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318054429 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.3231902 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.321492204 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.321592383 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.320769818 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.32073726 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.320453886 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.321245242 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.344301635 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.32047535 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.321917135 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.320323066 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.320990618 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.371550087 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319747451 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.318878218 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.319465439 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.375531379 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.329584539 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.322167331 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.319032098 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.322721309 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.31871963 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.474953501 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368326382 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.323483884 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369371685 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.321998646 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.324187267 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.322769599 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.322135638 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375939068 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.322803934 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.370713694 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.319656648 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.475179775 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.345425902 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.324869838 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.325370075 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.325271848 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32298647 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.314649742 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.329104178 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.321098224 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.325264128 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.329642633 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32077768 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.320353412 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.425940785 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43062812 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.320413568 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.337804472 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.330370086 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.321883842 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.378245038 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.324843369 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.322383573 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376870179 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.438896716 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.376565108 seconds)
  done (took 152.003782776 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.328103657 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.332903425 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.324997525 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.338941987 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.324797406 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.323522033 seconds)
  done (took 9.226075126 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.325498182 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.324229897 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.325196272 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.324659557 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.324977924 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.32560444 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.324023672 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324975729 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.328343373 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.326494821 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.326877805 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.328491471 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.32676419 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.32521332 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.326115092 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.325694029 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.323827286 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.321502029 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.326044776 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325774118 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.421110045 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.325865569 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324805696 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.324153096 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.329982902 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.325788474 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.334187159 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.324835088 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.326677279 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.334234946 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.327164494 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.325638201 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.326702223 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.331491999 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.328121059 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.326749648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330797849 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.328358626 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.323198354 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.326941178 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.327912506 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325350303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.326638451 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.328886554 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.327641868 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.332384079 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.33344638 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.334360564 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.32629365 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.328288726 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.328502572 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.327542764 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.327930175 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.327887533 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.332440515 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.332111866 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.331882974 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.325632216 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.326767537 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.327654869 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.328686268 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.327640062 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.330221875 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.331084883 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.333537546 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.329257629 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.329003876 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.331586227 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.326791073 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.327826207 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.331127386 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.326908249 seconds)
  done (took 97.946282051 seconds)
done (took 418.651461726 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.682601302 seconds)
  done (took 7.938304191 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.404554421 seconds)
  done (took 7.662999694 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.865667399 seconds)
  done (took 21.132654592 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.401292572 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.388130029 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.338940263 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.324464947 seconds)
  done (took 26.710587693 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.897053762 seconds)
  done (took 8.15808684 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.32913826 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.321840837 seconds)
  done (took 13.914164967 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.341766954 seconds)
  done (took 7.60339272 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.629593676 seconds)
  done (took 7.895635037 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.334040678 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.357027082 seconds)
  done (took 14.216633099 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.312456992 seconds)
  done (took 7.574764765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.698214676 seconds)
  done (took 8.960408419 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.339971284 seconds)
  done (took 7.603000916 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.385415053 seconds)
  done (took 7.647860866 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.098515842 seconds)
  done (took 9.359540274 seconds)
done (took 157.634595136 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.325105149 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.327588204 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.325651444 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.326039235 seconds)
  done (took 26.564545803 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.367908477 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.368140446 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.367964621 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.376954825 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.368874431 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.366628352 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.357604331 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.359272073 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.377643228 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.370530671 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.368822346 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.370948106 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.365746529 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.35930445 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.371357416 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.369830317 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.378203096 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.368038197 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.359389676 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.371502357 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.335526513 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.37824968 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.371084158 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.333627229 seconds)
  done (took 34.045916535 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.538992546 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.410988398 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.493768785 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.394539927 seconds)
  done (took 7.100863727 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.385308595 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.387594081 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.400351353 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.441309091 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.46278566 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.397882956 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.358450682 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.355225084 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.343431331 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.387448744 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.462387404 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.405143916 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.472508862 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.334371458 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.519395338 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.334050959 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.334187257 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.387528309 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.437982241 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.453986925 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.333907423 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.386036809 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.39012918 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.40411106 seconds)
  done (took 34.840002109 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.332597442 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.342613681 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.340611128 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.333595527 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.33584771 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.33570882 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.3398823 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.337106605 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.356258087 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.337354754 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.333879248 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.335197437 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.335636508 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.334803747 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.334024404 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.34831273 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.349611611 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.334602194 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.339083803 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.342064391 seconds)
  done (took 28.042746223 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.329113101 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.181938975 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.681103428 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.584295614 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.329152452 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.329163177 seconds)
  done (took 27.700485878 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.402711831 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.532868144 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.331676031 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.703718676 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.784883286 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.33611349 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.335380767 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.572873214 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.880630371 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.885274332 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.390291084 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.402552538 seconds)
  done (took 19.825107899 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.329381832 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.329735619 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.342156193 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.345686608 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.391281736 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.339869579 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.342666044 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.330422788 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.392812281 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.395376504 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.340947664 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.394441713 seconds)
  done (took 37.543261345 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417683282 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381125284 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.35120813 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160568226 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.713594994 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539169798 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.217398735 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.772538718 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.336975229 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606624804 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336972401 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422306313 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59024273 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328777023 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33446675 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.354385262 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55959093 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8453221 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335122319 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.335828675 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358783811 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34472035 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.430194023 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.359998903 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546657505 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.4652009 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.59338556 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333601696 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61762332 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343825344 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344611533 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333205309 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607590662 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015388722 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427034068 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345300701 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.193456175 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.047057848 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.340468718 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.329331083 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32612725 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336105395 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344357474 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334551989 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268715975 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341479649 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777869933 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.340592361 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.045721592 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335658775 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34553196 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42802435 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.33927799 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.153470026 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415484643 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330528808 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.332987073 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341608739 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90438903 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.879244237 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347514836 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.26931374 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.804259538 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.352807272 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968555424 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.43298233 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.337600193 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339435301 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270154279 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.42419877 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353049756 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473845556 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.352445237 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998142417 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050953456 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336681232 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267124267 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913982291 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341005253 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.269513691 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56772244 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336223268 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275663325 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.293873789 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2698957 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069421254 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344735976 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.760039929 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34351577 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.77746479 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348104728 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35403009 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360567105 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.562082764 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.22378405 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337504803 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.338428391 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456622536 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355412695 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.777657398 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273181469 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.338113544 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595392117 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.549908356 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339145487 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.361830407 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54661965 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799018797 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.351684489 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.340030821 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.34602838 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.925063313 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349256156 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.907354116 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355312421 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337707901 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113772002 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339772711 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.43973181 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3432466 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590425985 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.143327509 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340839715 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42012974 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338994186 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33495943 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.428994916 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.857955279 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336335955 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.340125184 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341074963 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.349414369 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.338186305 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298889878 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.338831623 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353539632 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.340530462 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564155936 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338343568 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613535989 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271984105 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475570108 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.399745438 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.559671902 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.571033797 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.335382729 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598105775 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347247033 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338910462 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349649417 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35733273 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437689107 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359272656 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.337843733 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61051806 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.341209002 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.344073705 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.437912839 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342701697 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345520664 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.343651079 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.242451274 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918697915 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312521133 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335630033 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234619702 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.351828599 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403893224 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346886935 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.350162406 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.189677886 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293123062 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.345035043 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.3511389 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566246902 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351566729 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.430100781 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417375723 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.542330504 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.930823183 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355575087 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.275157336 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.051436037 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.031060411 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338831808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275743968 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34183043 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351787779 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352278535 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.97959878 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.931770861 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343382437 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.334824838 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.346682693 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351988614 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.347696764 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33974974 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.178547269 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.885692613 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345241525 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.353209559 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484847058 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.355197004 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276254599 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.344953342 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347935873 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34238286 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341990379 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375312367 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.359554588 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907304749 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60463014 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.158113683 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354423991 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.523872798 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.372271146 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.349784034 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351180541 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347853768 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.360879714 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351069524 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.354743146 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.409838966 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.024699667 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906714446 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108275085 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880700149 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343435707 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.347908223 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343637266 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789068417 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277409959 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.901710698 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538978301 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.7882122 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30218878 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545383475 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.586530928 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129058018 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353287603 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573439818 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339130882 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.361872061 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355978894 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556346842 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379221262 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.34727615 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273399455 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.626135637 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581944588 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340274176 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426068506 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790989121 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345057804 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348408727 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.343911205 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.741043175 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520876164 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.059746636 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.523989619 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346776515 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355508372 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835710202 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343537344 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.573866209 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99685088 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356328088 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.550673303 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285323647 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.356400708 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.356388811 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.346782438 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.69650769 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.350084115 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.600937494 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357021145 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282136225 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351941334 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894319785 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.206025038 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.352970358 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344430203 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121264392 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360363163 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6299773 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.360276604 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.17517167 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350301295 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279883932 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282366645 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.040958994 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349265656 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316631551 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850618014 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.758471584 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.415801999 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377746073 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193908726 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602987007 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.36025051 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934601243 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574866669 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.276589901 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369625856 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.447097857 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347610334 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.347323191 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346647277 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.583559426 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239956137 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570045273 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.389207382 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.253770636 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344947888 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560218478 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34701674 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350237708 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597387935 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.058615813 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.353471327 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109893733 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373700775 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348837047 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271384778 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.814145152 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358200271 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429569277 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362147648 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.361316942 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.360650167 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526610559 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352943082 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350587836 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.36329294 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441140299 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.932022971 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.182783306 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.353539096 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945765736 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098805877 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94390161 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361324748 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347472513 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355557112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282817774 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492500881 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.580738132 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623021551 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469662975 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.930441636 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372011038 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350550239 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352925896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562152898 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624399012 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.251047708 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350953699 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364413475 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.350943725 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36020831 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.5631253 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861455308 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928857075 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468096465 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360588845 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.792930095 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626009404 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350681232 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35141828 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947238323 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.365844164 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.745761724 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.355905253 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351387829 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499475506 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360542567 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034766966 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359569313 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.50657712 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.126738977 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.470812417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607996897 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.829627669 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.359460917 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948457923 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070607274 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62013812 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417512859 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363986802 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.467769751 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498747871 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.352518379 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352663006 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352288457 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20004876 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.061815712 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.36261599 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95582568 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619578897 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.34962022 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.353677125 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374304919 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.363353874 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579807247 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100830357 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578896501 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364735541 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353305801 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.170639552 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955645855 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366718901 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28887048 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.353817112 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602382992 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591374973 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372201584 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.805204701 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.065093769 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942834033 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.327675441 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374623044 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357638512 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074836224 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951543553 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.192173474 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881169135 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923470736 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371575401 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628239369 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.358347431 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353310497 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632405727 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.35724975 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354418763 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36652979 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.946466607 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146730047 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.373867703 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.380101502 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.288682251 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700829866 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042197149 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291414981 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351865716 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.544016232 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355356813 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475556297 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362689351 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.363486399 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356690059 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.08592464 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634811385 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.358408288 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.342291669 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.363038256 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35629811 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361828366 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600701026 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359286769 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.025158799 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.706730413 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611418425 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.367907896 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.340241504 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.359312252 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356258067 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.354085243 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.559838891 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.989184318 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935284341 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.364218536 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.365428414 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360600733 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.572390961 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568512636 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367340247 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368537826 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358035833 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372359875 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.262500181 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.864306498 seconds)
  done (took 1603.856960845 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.380209701 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.363408971 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.377052795 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.408018061 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402499888 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.464678724 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.442167165 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459959772 seconds)
  done (took 52.590520392 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.360665634 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.612989928 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.386290169 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.361197513 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.366771315 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.369697758 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.8129564 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.367851578 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.362996397 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.365961644 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.370408172 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.367382662 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.999878274 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.367341609 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.366677623 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.351980687 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.364430133 seconds)
  done (took 65.854257297 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.368446067 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.45996476 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.369848747 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.359527723 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.537092631 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.359333918 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.492755216 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.409643799 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.383056433 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.403607483 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.028700339 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.387233867 seconds)
  done (took 79.853851431 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.364899705 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.365936962 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.36467944 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.364285629 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.364599095 seconds)
  done (took 8.117019452 seconds)
done (took 2027.19773402 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.6115928 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.073189929 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026789134 seconds)
  done (took 5.394234846 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.505675681 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.553045233 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.709112686 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.699817084 seconds)
  done (took 7.760122111 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.63553483 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.754113264 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.549645506 seconds)
  done (took 6.231225649 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.790127813 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.378172593 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.485678804 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.355614565 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.356666334 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.356637091 seconds)
  done (took 20.364722256 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.361855619 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.364114109 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.3622873 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.364286804 seconds)
  done (took 6.747117084 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.342308258 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.104034368 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.343314623 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.355196339 seconds)
  done (took 18.437253183 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.110252639 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.120921448 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.105680429 seconds)
  done (took 7.630195303 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.369270081 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.200956512 seconds)
  done (took 9.861719531 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.661547239 seconds)
  done (took 2.95404125 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.493812677 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.630871497 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.421909865 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.376052037 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.456579842 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.320872224 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.056240839 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.618248055 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.359613053 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.609251455 seconds)
  done (took 28.639584402 seconds)
done (took 127.58035523 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.217187003 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.376481551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.560956867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.185558416 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.586844274 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.560485171 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.66443808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.154012398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.697544185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.682371523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.188743016 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.588798231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.622166594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.379263474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.623150326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.383246793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.593818471 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.258099063 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.875613525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.073883061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.666531369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.828178747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.025239307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.031971095 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.593244933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.50835854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.406784086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.384076677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.060289259 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.614649315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.513193214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.255627715 seconds)
  done (took 191.454122951 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.359452714 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.363020246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.356975768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.356920973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.358355462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.357848126 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.359247084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.356899181 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.364458071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.371537212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.356664929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.36433294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.359656724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.356651158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.358328928 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.370192947 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.369111465 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.361889088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.358900299 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.357000254 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.359665504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.376866557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.356804174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.358215699 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.373368531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.357819704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.356674637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.371108538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.358832095 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.371158547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.363725734 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.380204456 seconds)
  done (took 204.89731168 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.361876945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.35971889 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.360080904 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.365423005 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.360879189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.363333263 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.359875821 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.356990739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.3577543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.360511281 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.357993853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.370836004 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.361021234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.392788199 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.360550041 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.372462609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.359207301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.375191883 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.371438026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.358632744 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.375737929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.357469399 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.357386741 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.372606924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.361674887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.361380641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.374183856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.360388508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.358834355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.358766952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.363471135 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.35879272 seconds)
  done (took 204.944365411 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.560990019 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.370956369 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.373440682 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.3065329 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.3737139 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.370852262 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.368356932 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.562020924 seconds)
  done (took 14.584723969 seconds)
done (took 617.17560372 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.656241202 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.376243496 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.57072505 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.392004634 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.159329814 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.388286171 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.392505391 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.570879741 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.312230316 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.567319852 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.685666524 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.388292016 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.827068962 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.390947575 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.651517932 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.493253078 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.303256947 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.42210564 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.715279905 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.939077752 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.64983664 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.916544057 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.568698595 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.30637979 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.777705776 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.911622499 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.122039819 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.301379829 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.392583262 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.716888126 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.043349286 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.384152424 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.450418374 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.433800276 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.487830978 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.473025213 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.361615722 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.429007184 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.574699302 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.638600266 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.933545119 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.102818029 seconds)
  done (took 93.479061413 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.361023395 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.363919376 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.36106781 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.362337298 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.363196352 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.362113179 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.361426275 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.363421698 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.360391956 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.361190569 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.360961385 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.361775431 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.362219799 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.361730323 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.361418295 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.361896721 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.363527125 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.364083805 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.363848451 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.361593119 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.36320016 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.360928566 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.363019113 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.364156334 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.363230749 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.363135161 seconds)
  done (took 36.723566313 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.373658554 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.623135871 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.800915749 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.379286852 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.375456888 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.378468643 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.456926794 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.377387225 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.378599081 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.380531698 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.533218178 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.379067654 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41495476 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.807690347 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.378580157 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.375950569 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.375520952 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376178715 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.629084059 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385249617 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.457844293 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.377720944 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.457581582 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.387637318 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.37871928 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.378882726 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.381320245 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.87836663 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.379633126 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.535396292 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.165467025 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.45321238 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.83290736 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.811510941 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.163307083 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.380329229 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.375737573 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.539598223 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.380009412 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.376381195 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.456724409 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.376933126 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.809270875 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.010067646 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.391827945 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.37941017 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.902539965 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.538856948 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.632266818 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.3839947 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.83146605 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.37779503 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.379433835 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.379099242 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.633525816 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.384416301 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.376306486 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.911610594 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.379698754 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.457933489 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.380236728 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378639186 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.636413829 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.378316289 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.628153992 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.381055483 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.386289249 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.377275458 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.811679521 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.381064908 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.028656607 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.396101739 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.379417402 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.534634981 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.628277438 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.9342184 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.382668309 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.644356256 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.844452799 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.456044707 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.384134571 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.868127854 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.461976087 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.382169934 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.383538518 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.380348043 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.379070294 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.423273047 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.457762389 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.962827968 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.023021677 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.930321388 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.459562459 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.391341949 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.381242698 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.913266708 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.378720497 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.380308977 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.808733445 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.032200162 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.406855855 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.389077914 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.016282407 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.39941455 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.461527854 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.38607623 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.821743815 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.381756518 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.426447999 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.381985706 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.388629712 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.383575156 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.461002683 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.383984736 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.381861551 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.005357702 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.557872264 seconds)
  done (took 180.956364078 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.374801401 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.385707795 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.383163104 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.371756817 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.374522796 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.380622916 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.37471285 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.376185773 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.380997163 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.375770923 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.374972194 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.374533313 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.375870531 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.377126903 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.381611665 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.382288231 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.984836704 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.376732683 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.376114493 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.373386231 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.174404859 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.374725927 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.375382594 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.372886227 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.376422334 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.373933834 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.381118564 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.374522572 seconds)
  done (took 153.270307893 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.38270546 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.981801845 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.383767742 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.515638809 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.404094782 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.380431587 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.515969701 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.442065749 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.383865798 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.381395984 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.381591308 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.701629183 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.385066527 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.926974004 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.574594227 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.519361755 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.928993009 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.385920846 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.380438228 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.382466374 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.519723097 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.393535298 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.704013558 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.983728008 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.384709444 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.982790074 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.372209702 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.384052285 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383954858 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.985652192 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.38432231 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.705873534 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.463413877 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.445648961 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.985633213 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.930143627 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.930289194 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.534107381 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.383832174 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.380629033 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.384613133 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.371606919 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.959641775 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.384039595 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.385496223 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.954912203 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.396689713 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.386670289 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.392572495 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.383419716 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.447603218 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.448517143 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.708754151 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.965494953 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.461420336 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.405455638 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.519477469 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.761031408 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.386485499 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.930280007 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374700395 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.963531006 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.384979118 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.376081531 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.385268981 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.39069377 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.539236557 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.522351877 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.932976146 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387310521 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.932462929 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.541861204 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.385467325 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.3836891 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.386906096 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.960913584 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.932504739 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.541540898 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.524526792 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.581726353 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.375835915 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.38334068 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.374696885 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.464259713 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.386958144 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.9667828 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.934040773 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.389116313 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.386760422 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.386613247 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.388105876 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.565029893 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.964150908 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.464222378 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.928295156 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.708987852 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.694379946 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.38723696 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.446903774 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.387004308 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.697452858 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.385291728 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.446316624 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.81935957 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.694888957 seconds)
  done (took 165.382640417 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.636180565 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.607468231 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.477005757 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.501256289 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.945994096 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.964286311 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.563686721 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.510350444 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.496179227 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.635784958 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.59859982 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.481194361 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.58046657 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.463685561 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.107885071 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.456415555 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.479177308 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.508985854 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.497647681 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.473049903 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.017781791 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.672239846 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.562917633 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.555579379 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.482048291 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.201414989 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.943921293 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.902938136 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.561370135 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.70111313 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.91812834 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.52072476 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.350493883 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.05030848 seconds)
  done (took 66.742939719 seconds)
done (took 697.853588973 seconds)
SAVING RESULT...
DONE!
