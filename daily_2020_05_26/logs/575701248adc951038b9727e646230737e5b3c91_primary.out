cset: moving following pidspec: 23479
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.218228888 seconds)
loading group "string"... done (took 0.582486755 seconds)
loading group "linalg"... done (took 8.034434049 seconds)
loading group "parallel"... done (took 0.168772888 seconds)
loading group "find"... done (took 1.330411976 seconds)
loading group "tuple"... done (took 1.989951699 seconds)
loading group "dates"... done (took 1.333443685 seconds)
loading group "micro"... done (took 0.204130194 seconds)
loading group "io"... done (took 1.000320739 seconds)
loading group "scalar"... done (took 39.97971715 seconds)
loading group "sparse"... done (took 12.250024473 seconds)
loading group "broadcast"... done (took 0.962431861 seconds)
loading group "union"... done (took 13.823171469 seconds)
loading group "simd"... done (took 4.791843558 seconds)
loading group "random"... done (took 9.29591309 seconds)
loading group "problem"... done (took 1.610381743 seconds)
loading group "array"... done (took 21.41113161 seconds)
loading group "misc"... done (took 1.726140265 seconds)
loading group "sort"... done (took 3.3683164 seconds)
loading group "collection"... done (took 18.114944319 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540040467 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124671148 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13725648 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120788714 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15029336 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116962716 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125277316 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084387387 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.843994817 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150361245 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115483558 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415476628 seconds)
done (took 5.314683986 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172107145 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088420797 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079373726 seconds)
  done (took 1.224998741 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066336389 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127799616 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066988659 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067668853 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070685308 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06728493 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067146985 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067234216 seconds)
  done (took 1.594957533 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073341279 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068527787 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066460854 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068358611 seconds)
  done (took 1.337662197 seconds)
done (took 5.467189486 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.796615183 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21103315 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19029078 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411858234 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135901309 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179281772 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648449078 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331257814 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19360647 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094314468 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113677405 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391501293 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124230511 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650909526 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080257626 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096308026 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143347038 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449976803 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07165692 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085255835 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09275836 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131534365 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083237095 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078123702 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150415314 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070661055 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144128333 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084259612 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069499523 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.256399553 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175506805 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660410213 seconds)
  done (took 10.495479197 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101765047 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100498377 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069301449 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125770227 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100084474 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070583153 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077899796 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070109997 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092328081 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129152329 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092011923 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10881486 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06685863 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070398482 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083929509 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19793672 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080677361 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08225221 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071291322 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083639843 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110788195 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081659915 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082304666 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079937082 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129889369 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173065044 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100318758 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100473796 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069757078 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084888606 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117836886 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130883483 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069149519 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068765561 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128811171 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097232479 seconds)
  done (took 4.602592982 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.0134188 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151294584 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090762161 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135327399 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065448477 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112076857 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066656981 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083838538 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239290837 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.379051022 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.634649482 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.148771468 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118034341 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094147421 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104020139 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071257584 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072240427 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069776847 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.28761195 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10323156 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111431088 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086564329 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073091656 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072267852 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067460828 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07470137 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065871217 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0718891 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091655788 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079470379 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334410671 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130189002 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071467933 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.968463175 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.172177049 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070549181 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108349602 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169528953 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098016418 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142940766 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067825005 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063969944 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.298328347 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067548262 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074170325 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068738413 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087238022 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112830249 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123462762 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067839974 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06853526 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172475275 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067325235 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084231837 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.245235027 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153471649 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068920633 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301143984 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092709413 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071879681 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065704044 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.203688962 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120279348 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066018473 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068960027 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06847095 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070180936 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070153189 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371917621 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066262384 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.194957078 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068744036 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076762056 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071029735 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07194697 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079664109 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080648553 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093594779 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069332567 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07657684 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069663371 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067745813 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069451914 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095733195 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.39423442 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067838571 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073312652 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065520646 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093307423 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101521717 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069726603 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070978737 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103589974 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070958846 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066140078 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067860455 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063925449 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064420176 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119198194 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070106136 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112632148 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.17045863 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089910734 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097857259 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070017284 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101365793 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078767132 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07097236 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.465019631 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065882609 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073085645 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066269557 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068359574 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067267083 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078610511 seconds)
  done (took 22.313530832 seconds)
done (took 39.485400618 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242963743 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08385985 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083605841 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084183848 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083939222 seconds)
  done (took 1.726606357 seconds)
done (took 2.857248853 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126054164 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098881499 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064891116 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098167449 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06493881 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107015364 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10070649 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084234988 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099910959 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064944066 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097396399 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065143172 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064603822 seconds)
  done (took 2.282597644 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082508479 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083198172 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06961975 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083249657 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064741871 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083613298 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082724293 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090483769 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083119894 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074127616 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064296312 seconds)
  done (took 1.986658451 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08308358 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084045284 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070392392 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083347314 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06465618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083231489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082819732 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087520286 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083615878 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075625922 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064601474 seconds)
  done (took 1.986487192 seconds)
done (took 7.375461892 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076147891 seconds)
  done (took 1.186176554 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.536014786 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.572399056 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07874824 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100327648 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192817067 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109100684 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.23608046 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083549365 seconds)
  done (took 8.194503972 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106909702 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07025716 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070588004 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070039891 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068951682 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070884417 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069525519 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069701362 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069963063 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071316471 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070831322 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069546667 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070244452 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070528722 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069615937 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070024792 seconds)
  done (took 2.352443259 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097334046 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096111067 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073938013 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07511261 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072919244 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072543309 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075131143 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074434964 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071768852 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07308 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075884637 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07372294 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073358166 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064419741 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074591677 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078299186 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073318932 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076395348 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077883194 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077073311 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075772801 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064810448 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073817124 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074802433 seconds)
  done (took 3.038720035 seconds)
done (took 15.895054013 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105359763 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067959264 seconds)
  done (took 1.292751635 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079326338 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079938755 seconds)
  done (took 1.284343287 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077774501 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063198168 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084293442 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074074784 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063369733 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063131448 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082689426 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063843635 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063856123 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063994598 seconds)
  done (took 1.826145034 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065474834 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072691011 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069030561 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079128405 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07076741 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064921351 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069157067 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065587372 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07408588 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064154549 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068656337 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083816868 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068232432 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085406888 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069026225 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068823927 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070417803 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067148638 seconds)
  done (took 2.407426405 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063026476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063954306 seconds)
  done (took 1.262345935 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066688015 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063835339 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066696171 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066171413 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063695188 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063337537 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063921155 seconds)
  done (took 1.586130736 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399618132 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122011968 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330570337 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070501695 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080531725 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257853687 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064766156 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071043975 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071583903 seconds)
  done (took 2.643289177 seconds)
done (took 13.441186667 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080556604 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085773188 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097947359 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415152917 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095607004 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068964716 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11426535 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181735728 seconds)
done (took 2.284482276 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213254209 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.820543612 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.482760191 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206699885 seconds)
  done (took 2.644818535 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.459564691 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081131259 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077106369 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067136328 seconds)
  done (took 1.833950362 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067398503 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070394891 seconds)
  done (took 1.282260095 seconds)
done (took 7.117152515 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065433477 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089911374 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064526877 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064993922 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06521236 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064743726 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064786462 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065108515 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066248582 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066438352 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065261299 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066236944 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066065647 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066328878 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066671357 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066385112 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066658117 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066723896 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06652937 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06638641 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064424071 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065800994 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064957254 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064438243 seconds)
  done (took 2.777889211 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081120281 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06674492 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068489412 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068679176 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069195032 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068891028 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068941459 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067505175 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068662286 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066984399 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06928698 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069378978 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067137434 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071135518 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06876108 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07112418 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070123087 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069095884 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068422604 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071404045 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070691804 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068874983 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070795502 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070585759 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070915484 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071287967 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068699513 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068828411 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07102617 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071461363 seconds)
  done (took 3.246337606 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065215594 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060969659 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063179525 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071609448 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062899739 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063463816 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06309849 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063245391 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063955267 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062678316 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063788259 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06351336 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062721075 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063653846 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063264995 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06766818 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080614163 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063549621 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062991271 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064166402 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066578815 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062761409 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062667918 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063041347 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065625715 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062237691 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063640588 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062711407 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063485776 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062422012 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064925822 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066041289 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063002585 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071190243 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067766188 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062827138 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066734713 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062889836 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063596399 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062392882 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062823044 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062909595 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062845619 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072136498 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063076274 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063973542 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063189379 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063916103 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063638218 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065077816 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062452381 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062600271 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064721914 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063773819 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067333226 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061785508 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061953855 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061174612 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062044498 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061283438 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061144041 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061509464 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06445251 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062062408 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07863479 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070373764 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061587706 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062623497 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061642033 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064789515 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062564143 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076763248 seconds)
  done (took 5.801019022 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085747073 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08774299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066668634 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066622644 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062184258 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061990669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070870948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062064213 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067487184 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081496587 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063806204 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068374271 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068680564 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067819701 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064581113 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068150736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070634387 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062091929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062306606 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066099437 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062506967 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069957769 seconds)
  done (took 2.673702426 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146332943 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070065603 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108533305 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074051732 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071122621 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072719851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068324198 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068209551 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069544892 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069585603 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068837408 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068032577 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071307557 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068538273 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068428623 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068717555 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068208936 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068609318 seconds)
  done (took 2.528417376 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07861483 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067054069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086652623 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067287401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067482816 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066826768 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071650946 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072697144 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067320572 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067494731 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072064422 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067324968 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067652304 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067356817 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067275815 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067586729 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067070354 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067587754 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072262811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072900213 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073390246 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074290086 seconds)
  done (took 2.708709467 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087987824 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067881883 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085410788 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070146012 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063612798 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063405962 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069728635 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068943062 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069725607 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068178107 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068470879 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063656926 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070835736 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068622205 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071243393 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06854824 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068324137 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068554401 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068047837 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064135702 seconds)
  done (took 2.557044927 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084435544 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066613585 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066619203 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0728096 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066558876 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066913168 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073613451 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067013875 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066777937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087680972 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066969505 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067554626 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073463641 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071295005 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066430919 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073265971 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075853823 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073549837 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066995942 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067077919 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08841018 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066874168 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073457633 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067326306 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067175551 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067095753 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066512219 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070263677 seconds)
  done (took 3.153807176 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066119909 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065868758 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066493016 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066416026 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066108159 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06613818 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066587934 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06639091 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066195202 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06645028 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066304409 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065915125 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065953912 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066177296 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066720226 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066428 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066100903 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066726302 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066925682 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067159451 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065892321 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065374623 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0662172 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066381068 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066316628 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065988598 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066281549 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066259279 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066138891 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066212112 seconds)
  done (took 3.15801719 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076095805 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07351238 seconds)
  done (took 1.319284874 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063958925 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079208474 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061149174 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072667241 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07019663 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065643122 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071316329 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071961452 seconds)
  done (took 1.718764211 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086195005 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075696159 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064113526 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07644963 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07484029 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085019026 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126734813 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064492123 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074703826 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06561106 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082542209 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066343265 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075004065 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069230704 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074522722 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078054629 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062120567 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068835294 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065993202 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062871734 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064742759 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077642523 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073602851 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062490689 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069392061 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09174405 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079807339 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063645341 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071212106 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076179474 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07527936 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061178131 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064117042 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064370519 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062004859 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074961547 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082722784 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070920329 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07649217 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064392885 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072303088 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061890909 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072680614 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07473087 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079974729 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064088833 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063869723 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062101953 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065120744 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070270566 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062097656 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068482284 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061473698 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075904738 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071573432 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078854457 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062672926 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069896406 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070121262 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071065989 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075282013 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069814025 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073519316 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063416974 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079550313 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073531012 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075708686 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061786967 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061042843 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062017881 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077881041 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092724056 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073822022 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064420278 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064755616 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061815289 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071062891 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065195296 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072567691 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075118311 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063442272 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068550171 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07595247 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068334667 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070123513 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070284855 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062019245 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067330602 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065152664 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083373539 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062819491 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062657516 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064480999 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078885086 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073088893 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062964255 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064585616 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075562567 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060584044 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063706059 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065039472 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069628433 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076748904 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067872054 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067792554 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077022798 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072719694 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068753959 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070637416 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061287065 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064159209 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066034929 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074882504 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060667294 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069779355 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066672861 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06303792 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074612243 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061001194 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062718162 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075009965 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073775479 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06142493 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059527199 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069292191 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062335885 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06455924 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075580527 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061621704 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060559326 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06050234 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069891914 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06200582 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070021429 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066406169 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069889968 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060106603 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.184996088 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069341701 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076671908 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068185886 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070082558 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074408507 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070597555 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063136701 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075996066 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071749996 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066439255 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074194299 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067752992 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061828957 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066400557 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071294236 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063150801 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070804696 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066086908 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070511025 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063747943 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062567789 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069253528 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064058345 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066730754 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068792972 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062774384 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078677874 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070440182 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062115247 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061486048 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07053284 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065897209 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063523582 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066550768 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071219996 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064075379 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0623095 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063396463 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070058209 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071923312 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067296038 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06436506 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072909209 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080275274 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063635609 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070544536 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063090057 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06514726 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064348832 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078203105 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073933276 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068098576 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070549041 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061475999 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073671172 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076026391 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066265447 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062062815 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066022428 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06736464 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075240158 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067506039 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064302389 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062558532 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069492583 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066449323 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070860661 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063342074 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066293282 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06875554 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062709419 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069902934 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064355021 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078070257 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071142609 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061984778 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065783429 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062447098 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074499645 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061820715 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065056395 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066383565 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064185635 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0629297 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07029665 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061133488 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075993244 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076268035 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068916074 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066352399 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063058096 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075888768 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069279699 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071860605 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070618848 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072955203 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078542566 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066136683 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070519656 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078268116 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063247881 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060973411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073750754 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06522015 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062372652 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062803813 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062285281 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070402548 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070287864 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073584199 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0611894 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070332755 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062236495 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066299078 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062064434 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072518039 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070386916 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067837332 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075800598 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063909373 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063061382 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070178864 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062394758 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063202767 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063607234 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069490798 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062827695 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068833436 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064956764 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067960557 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064624398 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060482761 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068042448 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06230011 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067514567 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070913679 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061775157 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067968124 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069264711 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062783549 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068535119 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065883976 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.193050648 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072383639 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070090218 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070051563 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070700228 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06249471 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07584119 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063374857 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076212198 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06893037 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06161588 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069021827 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070036747 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068854588 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064302317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064770279 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069635398 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063795969 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070549395 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075928541 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064690589 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079335637 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074456974 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069802982 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070074518 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068722872 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069264942 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066098489 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067848799 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064117001 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068981528 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063652285 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072670746 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070461774 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068470162 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069674514 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064354593 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069587938 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064376461 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061479997 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066501847 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066772648 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063789182 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076081369 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064248472 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066591284 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063146931 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06460815 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063408882 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061817372 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071195774 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071447635 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064877574 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074138389 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066221004 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070071538 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079355886 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061297256 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06302539 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062290751 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065265368 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076356461 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064438708 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077133728 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069310793 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067032675 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061426904 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064462216 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062841595 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061849512 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062268414 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073177812 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067189141 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064006802 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06389871 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070613963 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064929816 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076478845 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063576075 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067820422 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063826134 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06141892 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066255764 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066223038 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070808073 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064282934 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065120094 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061565246 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064029039 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06819862 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069578332 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063391752 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069532357 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075909586 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063842604 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070579772 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065983774 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061720911 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070714096 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063298368 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063791192 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066220659 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071198202 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070940868 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064261846 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077547621 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063368672 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072045881 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063980953 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061810254 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063401508 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063849524 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063523257 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065893276 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064366829 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076584256 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062158968 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07014 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068717827 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067521942 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073414757 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064209054 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069290388 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069166796 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.0647596 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069387312 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075836451 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066177672 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06985279 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062974376 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068634245 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071933419 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064916229 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073860718 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067992637 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062651022 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068373709 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079448951 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06201901 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062396227 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061491914 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071771423 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062742401 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064626927 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064461643 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.196605406 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069027929 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066452395 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077234208 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071891986 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071088157 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062574808 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061333984 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06430919 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065449972 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069528781 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070388771 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07389975 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070547285 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06743687 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062980458 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078207781 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073388308 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071698616 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065290166 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07164664 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064180818 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070712418 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067862108 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068981153 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064550909 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071839356 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069098758 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066578628 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073821698 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071258361 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064658806 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069036704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069536596 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068391237 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061786853 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064370759 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070836286 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072618245 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070077336 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063612267 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078852009 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065363215 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069029349 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066328499 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063258932 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071952408 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061969397 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070126563 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064999724 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064315178 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062359308 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06698163 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065463454 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070450349 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066086702 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062136884 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079370038 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078522493 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069586529 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063062571 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062630893 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062056565 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062157194 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066215915 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06477276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069589027 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079126821 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066073354 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066115101 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062076179 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063966679 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070955881 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071460298 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06243237 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061962502 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06645752 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070019186 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075162667 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062651239 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063921132 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07099829 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070245476 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061932635 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066531104 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060991196 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071192127 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080337266 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.063847971 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069828242 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073991303 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076586757 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064103941 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062631721 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064034055 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069928484 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069328055 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064496369 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064468868 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083019193 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070976562 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066322801 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062481087 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07012501 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066300669 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077354862 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064782279 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.063829931 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072432882 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072373398 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070811979 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073860755 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074380128 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069462983 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069678871 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062746593 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068523005 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062505546 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065851654 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064482544 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063863581 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067545926 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069572381 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067792509 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077962277 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076584395 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065042058 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060616821 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065447583 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065320056 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061063956 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063272262 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061212737 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061860691 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061636178 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062405584 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069108674 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071470775 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067375472 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062994289 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062095356 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060766699 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072110541 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069081644 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068414579 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.194647791 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064989717 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064954148 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072378428 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06701157 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065849563 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070430872 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069746822 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070221626 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061847652 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074962824 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063155437 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069555771 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066002596 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06470283 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064394782 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071025 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067719022 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065142686 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070390048 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071028273 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06577562 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061744442 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061744875 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073087128 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06196671 seconds)
  done (took 42.317113653 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101935678 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064753215 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063829385 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063439378 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073606999 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064919703 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063962889 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065086017 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064983714 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066993192 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064170199 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064111459 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070825431 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077271038 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072726525 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066900843 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062552872 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063528398 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062397594 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063401534 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070475992 seconds)
  done (took 2.704899237 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072229741 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078512274 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074425861 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079275972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070730611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067065323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074561741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067471901 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075285409 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072298419 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07519809 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067331959 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072675849 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072181957 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072788279 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06759116 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075650758 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071508496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067472863 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075147155 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067764016 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075064583 seconds)
  done (took 2.850942583 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066377013 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064899805 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070860294 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061783611 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062911527 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061349497 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066095984 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061700634 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065841677 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066145459 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065612652 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065518812 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06982384 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061740763 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066640662 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061628805 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106937731 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066277558 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063294749 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06408118 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06215671 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070346877 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061890984 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062035779 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066495518 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067459782 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065337506 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06368813 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064668738 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066699256 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064696751 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063396574 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071926161 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07097289 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066890505 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06694091 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064466854 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064857117 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063297052 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063481726 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07117583 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063479604 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068123648 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.0708109 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061678136 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061990107 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069531416 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063282201 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061872964 seconds)
  done (took 4.505439808 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076396675 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11271192 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069809563 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092732228 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078555086 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07109288 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069565078 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094263462 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065123963 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065062133 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077734781 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078344211 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065995124 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067102433 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070205292 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06526238 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066347168 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064348753 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068545533 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065255283 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069062464 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069502263 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07632563 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077191866 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066682501 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064531631 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065138299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067150664 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076485985 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.0695188 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067501441 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067991844 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077129394 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070210675 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065052596 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065442109 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077903778 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065609293 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065137233 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063420507 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065283579 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067030092 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069311408 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078140199 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065498577 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06986918 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065683312 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062904286 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077295613 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064853714 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070116712 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077667553 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066563142 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065573595 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066762577 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077186788 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065367197 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064103966 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065470397 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076769464 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063466213 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066188262 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077414288 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064628621 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069249425 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077561504 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070428584 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066387085 seconds)
  done (took 6.210626761 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073666142 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093701791 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078742719 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079182949 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073395061 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07350377 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073564072 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073473776 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073791679 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077554567 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073719306 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114320184 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069132999 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074964962 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07301578 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07385768 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073671418 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073298982 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073398444 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073098257 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0735285 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079529329 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072922007 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079198761 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076159391 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069878197 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073031642 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073054287 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079451091 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073250983 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076305794 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072749955 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073393578 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079671584 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076534043 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073135778 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063237757 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072808765 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073535959 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073147618 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069690611 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079690107 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073233863 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069454835 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073263666 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073171067 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079780797 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07635498 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075158096 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076624772 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073564586 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079183429 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072698392 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073454895 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079347605 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082221387 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079540451 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079425822 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07379611 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079504287 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07912326 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08217888 seconds)
  done (took 5.998066387 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079886709 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069983764 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082041431 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061851356 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0616334 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07185667 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062038429 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062054891 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070317738 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073435316 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072252121 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071950819 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074716664 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072266751 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071929003 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074881972 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072069128 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072313699 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070195927 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072147096 seconds)
  done (took 2.710069809 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078485866 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082546811 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069322488 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072800568 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067767528 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071707633 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067310718 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067794611 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068110673 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06796989 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073352125 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074438746 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067992355 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072135416 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073331515 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072067644 seconds)
  done (took 2.423082142 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085812503 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070076362 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077221805 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063408522 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067020128 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062862213 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063325185 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062072807 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062430394 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076820094 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063505315 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07549132 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063302503 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062524583 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063507592 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069227786 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062422436 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063453258 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063290949 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076715775 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070629582 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065134981 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067431821 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063374349 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068454628 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070833081 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064979959 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066869252 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063611103 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06414525 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06935255 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070015145 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063200243 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064510018 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06253043 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063172313 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063548675 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064283151 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.087487736 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063411885 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062228819 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068595512 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063346892 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064625164 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062593016 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063871053 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062645161 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069343678 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063785637 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068810926 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063345624 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065733495 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063676391 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071023558 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066147567 seconds)
  done (took 4.949127716 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080962217 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067637994 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062166704 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061621063 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066913198 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067877526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06713269 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067841326 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068064646 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062378435 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068586887 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066898385 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068464336 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068029158 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068165375 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067693488 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062064733 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06752242 seconds)
  done (took 2.502501618 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074702782 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067817639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071060428 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066406415 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066870814 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066279733 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061885346 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062044445 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062098823 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06702014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066837107 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0669925 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062539735 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06653229 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067277174 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067274813 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.0664403 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062028232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067287934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062912491 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066562593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062274266 seconds)
  done (took 2.733432721 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097934115 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083366739 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138950747 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078924736 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086315957 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071840449 seconds)
  done (took 1.841856983 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094673701 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098748607 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06749715 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067363228 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072497522 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069899326 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070228238 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070419876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074938308 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075048711 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070469679 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075719821 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074806325 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077487539 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073033308 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072768335 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070674333 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073316262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06729548 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080269721 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070604014 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075390775 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071380587 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070917042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070763277 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077263575 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076178569 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075599701 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07053436 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075684417 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073085235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071157048 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076102702 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075725588 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067458929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075334031 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071044265 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080319203 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073103254 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076981976 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067597027 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072794563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075058701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074223272 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075407329 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070658225 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074673463 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070866322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071025886 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081515134 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073119367 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076387724 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072508155 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075201742 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075126175 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081686225 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075335219 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07683911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072700269 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075599679 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076613118 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073352678 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076473657 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075781145 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072530652 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077133197 seconds)
  done (took 6.198789022 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107164027 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0694702 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072291118 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077305299 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078853003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073164526 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072888105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072560841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072719677 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069762143 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10778562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073125051 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079252717 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079487735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073110458 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073111804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073105676 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07964855 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069959702 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084587172 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07277078 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079506581 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079326585 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079652055 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077634316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075593481 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072572283 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073114174 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0707855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070942402 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075020122 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070694034 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077177783 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067550625 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077233116 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071230271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070850297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074931494 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070972536 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073309935 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077569468 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080310394 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070838576 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07067898 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075483218 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071220107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070831274 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068418192 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070910633 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068127007 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075438534 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075876374 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07548077 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077251064 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071060043 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07150439 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07094463 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070798497 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071617789 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073312306 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078648969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071103912 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08205035 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070968402 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071120636 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07711873 seconds)
  done (took 6.257486914 seconds)
done (took 126.992137171 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212895243 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184409005 seconds)
  done (took 1.67044859 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076510747 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107310913 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083063465 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133797007 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071613053 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105237796 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104180298 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084298727 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071537353 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071375939 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071468252 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074053745 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136586088 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071472163 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071451208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074433231 seconds)
  done (took 2.7016807 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106694242 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16655985 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109389268 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069356355 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104232015 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077103181 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070017383 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083199447 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077448471 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072107578 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080375435 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078578852 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07334445 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080173652 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075814505 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077329654 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071295735 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077611474 seconds)
  done (took 2.846527411 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104713418 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094324345 seconds)
  done (took 1.495101543 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.175939159 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133770537 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201699501 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345910743 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15445586 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.423975923 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139325429 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140081607 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112934883 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135769009 seconds)
  done (took 3.256315905 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106558279 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170290936 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294402112 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121231388 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076831193 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091137387 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122479701 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082018029 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084438606 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084091226 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083333604 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078830439 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103323955 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076899251 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076265107 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078722917 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106446506 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075567467 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076818086 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079020043 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106417357 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070026731 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076860123 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075475116 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081055648 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081273584 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071339865 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069660724 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078339369 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075891875 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079323786 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088146651 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080836761 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106315554 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07434562 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106834173 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078606672 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076679142 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075954417 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076842806 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080175514 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080118999 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079062068 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078397784 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071022549 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078252822 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071901578 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069471423 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079921537 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07100164 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080078028 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079257029 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106099957 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071304263 seconds)
  done (took 6.117153431 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109081934 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106574645 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070877936 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113050396 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104234058 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070755073 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105976301 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099479906 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108189021 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071690826 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069162665 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071094388 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080218017 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081227841 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115373502 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108161116 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073174299 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070587383 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108154764 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107528351 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07033209 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102549797 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09844181 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107260402 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068574933 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070762738 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069462739 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071172487 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076853909 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077563777 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069502804 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079473083 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083894068 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077690644 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068796247 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069760389 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069662825 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078526737 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079275323 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079052132 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076656539 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068545747 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069182438 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.0709841 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070366589 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068769435 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07721843 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079294012 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077614366 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069456272 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070837895 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069494263 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070443295 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078309268 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076373801 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079500115 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078863897 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069399595 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06935802 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071731002 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079180454 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078466462 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07823456 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069764664 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078860777 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068861038 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079635958 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081778816 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069079863 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073044815 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069136084 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06882744 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069722254 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076548982 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076607006 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070184263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069004258 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069226984 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078601945 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076662355 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068829275 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075846642 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067890499 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068519168 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07054644 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070080019 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075951723 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077934341 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070377527 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068963159 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068836371 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069417782 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067998308 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076086841 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078089021 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077487301 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077224454 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070155194 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077525882 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076588442 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070125174 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077691466 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069052288 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070189917 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06953584 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076743941 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075945196 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077966837 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06900298 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068376891 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075363047 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077725479 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06813957 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074972354 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076836986 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07507026 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067383812 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07887885 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06843484 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07707928 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068329787 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077468584 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199810596 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078755681 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070568895 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069451844 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07035437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078347296 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070989002 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069265241 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070565032 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069988786 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078433678 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081165327 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071456484 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077376504 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077910526 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070592741 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077755841 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069835633 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078858518 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069951929 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070797744 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068602789 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080665884 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069705164 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069218628 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069303237 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079398204 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069332862 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078901728 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076812285 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068584655 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080926235 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079425252 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076509094 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079154728 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070873718 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069330332 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06904714 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069752812 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076776649 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078649473 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071077452 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069664406 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076737213 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079192816 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068961588 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077490361 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077549192 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077846125 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069819177 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069705748 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079991452 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080361993 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077714204 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077729803 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078082008 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069729711 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077218782 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077791802 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070250165 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083565703 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069802759 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081530988 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07790588 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07612692 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077935831 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079365601 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079623542 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079296906 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081890525 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068684478 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069646718 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078015187 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069344525 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069682888 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076858992 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070415121 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070778192 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081952646 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069801385 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079220423 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068641888 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077973283 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06850684 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071004071 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082587254 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069383526 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070491809 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07764649 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069346829 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076688946 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079299242 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077085456 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069072091 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072828981 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078242979 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078017641 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068888974 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069163442 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070821393 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076893214 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076259055 seconds)
  done (took 18.460760059 seconds)
done (took 37.857861505 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20618474 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154337153 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183999059 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115613293 seconds)
  done (took 2.05537784 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110009896 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098597442 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088247173 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06681273 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094272334 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066327771 seconds)
  done (took 1.858276391 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288153869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196283805 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179143069 seconds)
  done (took 1.993333596 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210706997 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190965714 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463865902 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285246305 seconds)
  done (took 2.579815011 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141952414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082761987 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065047286 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083496105 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12438876 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15045646 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093463957 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118395308 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076456331 seconds)
  done (took 2.323006401 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146819937 seconds)
done (took 12.30966841 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.211532326 seconds)
    (2/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.166400833 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118211454 seconds)
    (4/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.207357761 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098738707 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.132888307 seconds)
    (7/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.176030003 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069811729 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076404224 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.181483542 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078341583 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07152854 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067461004 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163669436 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076908624 seconds)
    (16/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.396900967 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07774555 seconds)
    (18/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.21872633 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078243603 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123725037 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111166298 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.23448548 seconds)
    (23/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.190998774 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077938615 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.236570095 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.104222512 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087780113 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090821546 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173943558 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.17160766 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.176687149 seconds)
    (32/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177419479 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10081029 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079984241 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.205967818 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.139081737 seconds)
    (37/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.126848032 seconds)
    (38/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066621009 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183481207 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075380445 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066559041 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.179618131 seconds)
    (43/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067547518 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12251811 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075942205 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065601956 seconds)
    (47/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104590615 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087774004 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076399722 seconds)
    (50/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072522759 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211071135 seconds)
    (52/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066972581 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13853076 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.157412986 seconds)
    (55/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195861953 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.06721589 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133915259 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.098960482 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073837566 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156198873 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065307367 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07497822 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065252557 seconds)
    (64/309) benchmarking ("sort", Int8, false)...
    done (took 0.156602296 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.087822441 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079356783 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074756659 seconds)
    (68/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.177086503 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070128534 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228773149 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077853838 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069522923 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.122225471 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.195612239 seconds)
    (75/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074549231 seconds)
    (76/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182238927 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068945484 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178745233 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116946461 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065862588 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072577288 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112687714 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074054804 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06655878 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.194639896 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.191626112 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.227965395 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074088487 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.065595923 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.341675689 seconds)
    (91/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076781649 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.134370493 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.162336131 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067073257 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075496157 seconds)
    (96/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.19764875 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075886689 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066809556 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135239563 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070035405 seconds)
    (101/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139716255 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067485479 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070743933 seconds)
    (104/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076265424 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092160351 seconds)
    (106/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075376486 seconds)
    (107/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073457139 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100193558 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074027885 seconds)
    (110/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066879208 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074174539 seconds)
    (112/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091302322 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175276763 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.198302764 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123723389 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084215679 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089771415 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075241483 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194693936 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075660418 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216919142 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091006674 seconds)
    (123/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068851107 seconds)
    (124/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076293032 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088021939 seconds)
    (126/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.167670315 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076346787 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131228272 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06902092 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074957693 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073813176 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066722159 seconds)
    (133/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068222085 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074642002 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.165395686 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.165398388 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.172096036 seconds)
    (138/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074962396 seconds)
    (139/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073895265 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.088470562 seconds)
    (141/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139361929 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067941204 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075687812 seconds)
    (144/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136022114 seconds)
    (145/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06733109 seconds)
    (146/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065605523 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079105572 seconds)
    (148/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067127555 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06630145 seconds)
    (150/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.13984208 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076630655 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125821912 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067434822 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.173186435 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087100507 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067215922 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065866189 seconds)
    (158/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066996359 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077021847 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142534775 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073569254 seconds)
    (162/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076843601 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066940601 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07432025 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068687673 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170490767 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172201617 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.079088945 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065681812 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216635023 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090758871 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136492058 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066299146 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142835824 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066461286 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082151246 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077020995 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067691669 seconds)
    (179/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078387191 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.078094326 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072690891 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067499237 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06627318 seconds)
    (184/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072576248 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066381416 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066673844 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06752366 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066473849 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066391581 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143690081 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075097275 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067015758 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065722414 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066071109 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090753847 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066208109 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085227956 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.179412229 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124943548 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072511992 seconds)
    (201/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082191494 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104564368 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088049304 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073202768 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064855187 seconds)
    (206/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065904573 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089427963 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064449017 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071516779 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.133696271 seconds)
    (211/309) benchmarking ("sort", BigInt, false)...
    done (took 0.35334446 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184631789 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078182292 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076186474 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120347946 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067594307 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066697467 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137300664 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065925659 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067480886 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066470543 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073228086 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087087605 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132490775 seconds)
    (225/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080132156 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069876555 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 0.132185367 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082937984 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075034555 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067378187 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072872103 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08367277 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071051963 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066321763 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070158291 seconds)
    (236/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067173501 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079974572 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066888482 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066831839 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073245322 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077778838 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074949804 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133424936 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094264992 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067735675 seconds)
    (246/309) benchmarking ("sort", Float32, false)...
    done (took 0.133451701 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066210148 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120935829 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065796996 seconds)
    (250/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065752199 seconds)
    (251/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078742265 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067737021 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065745346 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0888081 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069444505 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073180346 seconds)
    (257/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066644267 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066697179 seconds)
    (259/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065841027 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.079035927 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066821777 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174925658 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066331016 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067077803 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088799911 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078689259 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075458957 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066889638 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066157255 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172556426 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124554474 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07326302 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066936052 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068291798 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066477893 seconds)
    (276/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093266805 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067990386 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172408277 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092769186 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067931577 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067016026 seconds)
    (282/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066379195 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071141318 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067368731 seconds)
    (285/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067053565 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067092878 seconds)
    (287/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072862777 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066435553 seconds)
    (289/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067442278 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075148362 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070985835 seconds)
    (292/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067425301 seconds)
    (293/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092268724 seconds)
    (294/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065685621 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108948716 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067617247 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090383902 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077714468 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066638912 seconds)
    (300/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08727533 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072718415 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066657188 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069334398 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066496696 seconds)
    (305/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066262196 seconds)
    (306/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067083287 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065379712 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066134798 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066087358 seconds)
  done (took 33.073909505 seconds)
done (took 34.418336358 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088583216 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100260105 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073940755 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09335896 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081969405 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096137903 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074280667 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079459669 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081723332 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080775309 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079436812 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072577738 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075984418 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076101741 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073289554 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09711012 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079924674 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074247203 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074791303 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066033826 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074827603 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066540702 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066071143 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072859139 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.0779098 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073641222 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076011591 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075585099 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067034316 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066774388 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071083623 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074974113 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066106466 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078347988 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075442697 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074701065 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076097915 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07864631 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066140116 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066712174 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076782172 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066965228 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07439904 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072967685 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071049621 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072995201 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074685346 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078781268 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097921239 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07086721 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076700405 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07711603 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077924469 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07197669 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071640506 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074229295 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072137281 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096855938 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074982105 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070884587 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076164609 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076066908 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07255482 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074861667 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074369513 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07744922 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078495582 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072633743 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07673342 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073192155 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066255855 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074123333 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070593188 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066322334 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077868732 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079047282 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065416264 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070815081 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074451012 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074534416 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066184155 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073653818 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06596251 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070894879 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07076216 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071863931 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07154944 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073392416 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065856165 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075218512 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074064661 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074293173 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066180237 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079011933 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066731281 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072911675 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066616636 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066294288 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065857187 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071291971 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066112329 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07041843 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075326677 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06584878 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070738918 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079232667 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066093846 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073701597 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06573232 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065715022 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077328565 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076504659 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065897019 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070800039 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065971407 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071189347 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065741606 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06576634 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066190778 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066070419 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070992895 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066274094 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070713258 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071425501 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078818762 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066143128 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071048699 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070446116 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065638292 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073030009 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065956351 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066125444 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065469243 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078676632 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069991893 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065747496 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070821837 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069780913 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073570614 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06496054 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073586767 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071244602 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06980399 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071487619 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064468119 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075599866 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069373091 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069468165 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064715035 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065133431 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064226683 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065067765 seconds)
done (took 12.536089639 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072857109 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117048542 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092738719 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093390245 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082552095 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067228021 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07421757 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092017591 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068654507 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096469624 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088555883 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08823592 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109231301 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065907188 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066908364 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067736671 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068294182 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078279276 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093939539 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088749781 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106090299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066953999 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08569319 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087150827 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083463812 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088144248 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068443937 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068461009 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069906923 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089722886 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092252379 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069993729 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067972749 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090210802 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085115763 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080710199 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067690211 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075498962 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067486912 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067139205 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068285013 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087391989 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074666819 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075365824 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068455787 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07475878 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068162161 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082631618 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0877997 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074916328 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081951711 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091037843 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070645782 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083027251 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066235049 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082537814 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.0763203 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067512294 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067705446 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072457183 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067539085 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069747923 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078753577 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075802336 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071768386 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081676172 seconds)
  done (took 6.607930274 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086997246 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094085944 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083037591 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083738514 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066440093 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067508678 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067259802 seconds)
  done (took 1.981402865 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069223853 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089750351 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091025769 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090509777 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081088074 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09113698 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075038932 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067608946 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09610083 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066395865 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086819541 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097675157 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071091841 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079060957 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091890924 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06767104 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092011034 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067696015 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068248006 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091499724 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072747973 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094306367 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078962405 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067439754 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080358012 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067653244 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099833084 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074987027 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068801033 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.0687528 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06845374 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094356695 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079448805 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08154671 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068919818 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082228606 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080849731 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070596149 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078375542 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076735013 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080765192 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068882675 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066373627 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069046972 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070114024 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079051691 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066338097 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068772212 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068682258 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087325467 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066466431 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079582232 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071025315 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073365847 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073091327 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072259425 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075683708 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069238294 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086527852 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068499882 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084285204 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083705639 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080427997 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08402432 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06722578 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079542737 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080898246 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068711104 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069326596 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068992361 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0845132 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071213072 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069707176 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078877751 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06740733 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091572059 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091249845 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066919953 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080550344 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06791294 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068642048 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079135135 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091441625 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072661129 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06886216 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071616495 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069920561 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070457601 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066521255 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070893936 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068953498 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072705442 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068673028 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071043836 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069795985 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083994236 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066698893 seconds)
  done (took 8.833692155 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072237863 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070195851 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069352609 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068156085 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06785965 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068477339 seconds)
  done (took 1.879721 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094598698 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06820545 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081006574 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068160327 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103495582 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083353208 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083412043 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077653533 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081762102 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079865088 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083707832 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086489657 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087940967 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070303532 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083486249 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069696591 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083588274 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072827109 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079482198 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070797679 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081164024 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070963342 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070999754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08699966 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071588725 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069709516 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077438525 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07989534 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079459273 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077663333 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070654657 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071856731 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075171358 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.0778489 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084190346 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07497713 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067878349 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074750875 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071225175 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071681118 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086368336 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07093099 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07071925 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074659559 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077845082 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077548651 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074579475 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076753994 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083520605 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074643803 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074629572 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069162955 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071795959 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074532284 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075280859 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077763279 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074338443 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083592981 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07023466 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075231613 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068194293 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071684945 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077318273 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071814863 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075772934 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074405339 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076105479 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070335735 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070839269 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068382676 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07454418 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069652207 seconds)
  done (took 6.930669641 seconds)
done (took 27.68729621 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516537087 seconds)
  done (took 1.929228211 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.628155673 seconds)
  done (took 2.067991061 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.530708165 seconds)
  done (took 7.971175644 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.385252794 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.455150014 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.74824182 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13509742 seconds)
  done (took 3.196621802 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708067391 seconds)
  done (took 2.160281818 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23994342 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225083258 seconds)
  done (took 1.924153867 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.351471586 seconds)
  done (took 1.795690426 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.048347801 seconds)
  done (took 2.494701641 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.238654607 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164018942 seconds)
  done (took 1.852166249 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455953708 seconds)
  done (took 1.901128725 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.213468477 seconds)
  done (took 5.663282028 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221838858 seconds)
  done (took 1.701446346 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237741254 seconds)
  done (took 1.683437687 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.737794216 seconds)
  done (took 3.186731644 seconds)
done (took 40.985315533 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085957487 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086415208 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085542611 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081567119 seconds)
  done (took 1.767116288 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078136676 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071236178 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075015932 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070876152 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07532631 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071254935 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072991183 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073737511 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071044759 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071811207 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071385663 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071386949 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074607486 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073067174 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070446197 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074434967 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075285773 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07152847 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074410048 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071800492 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069691231 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074081027 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07494137 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070729249 seconds)
  done (took 3.199667651 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082146295 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075107773 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07741251 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072478252 seconds)
  done (took 1.765668499 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079803947 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089509598 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086431998 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07814077 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089235662 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084526545 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067400725 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067927583 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069437774 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07745674 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067015035 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093592482 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087073599 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077576351 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079842931 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064268017 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066323635 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085451646 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078138966 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07815503 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069266846 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077717976 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067134578 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087580514 seconds)
  done (took 3.324302066 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084724418 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068622702 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082478509 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092368093 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093674575 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066643405 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080420239 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094479825 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136402005 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067012811 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073224272 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067398652 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105745216 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06708495 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081751364 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110161217 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113749659 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07052049 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100069469 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067236969 seconds)
  done (took 3.188091265 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086638327 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073105418 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071005482 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066759929 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076903009 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07372489 seconds)
  done (took 1.914120569 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07199905 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070934848 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070367149 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068796192 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073156226 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068377854 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066966587 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068734667 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06880906 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068344742 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067771384 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067202839 seconds)
  done (took 2.295743496 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.198308378 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069241435 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070767189 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067001668 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071222595 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067610845 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082878321 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068510526 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094651655 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067632525 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067649539 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069615458 seconds)
  done (took 2.457567505 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194503567 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074584652 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222659467 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145017108 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103198339 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110161223 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111654363 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108639325 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134213012 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098107395 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154026145 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16012081 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104489768 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129541638 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088202665 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120324869 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145644806 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156623268 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099972247 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154553597 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135278493 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123391258 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142432151 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097494165 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101907465 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113208305 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072500705 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07758825 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159308504 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123724477 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136702854 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105750287 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090442514 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170484912 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157588462 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132503037 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142304703 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082067553 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.119075293 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129839358 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194150935 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08761502 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150722414 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102517413 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077688523 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126255407 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111271704 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114817977 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099374471 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086512247 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275383499 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173649022 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128874257 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084300542 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116983654 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105150933 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110045189 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114123868 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169597259 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150234997 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121673832 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070306175 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106753599 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143163987 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126737572 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105434957 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119050792 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091171694 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124639889 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150174533 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119192884 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13663641 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113579088 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085776958 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115806335 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131220676 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12105222 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162657747 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119168882 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072353847 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116382773 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095928849 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078651498 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142900804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074681131 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165233918 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096375118 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121715062 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12598221 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105440716 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105499024 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150569219 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13509907 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10163571 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084696729 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100320125 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114834152 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137849737 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084985386 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10484594 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110349363 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077469825 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126495724 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073565736 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115465675 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092961368 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114174698 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119498548 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076972067 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115592409 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245041493 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100736008 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123756679 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149882177 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086142929 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079235162 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157310417 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117055678 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100720558 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135565114 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150548087 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118487829 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094552188 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137831387 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163968546 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088362293 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153200983 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099944027 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08276283 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103454475 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118376228 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107268965 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120633258 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079606346 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116269137 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155135758 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073545688 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094521691 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128257424 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079795417 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078979523 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102596304 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101039449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094521299 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099080867 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101710025 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132848755 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118946527 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103290456 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119722418 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095019138 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157429898 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085737842 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103258765 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102127836 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071439291 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12703257 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148243585 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077391848 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151727311 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117610744 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11234534 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113941907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081500982 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130000972 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077112458 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071325498 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132380064 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108686428 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104283892 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140999262 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255464723 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119673882 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117089779 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125466066 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123404305 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124034216 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103694687 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08738319 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111350043 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123371989 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072445921 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089237957 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080835329 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099835385 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09245768 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082397449 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132375364 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116856918 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107839055 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110717792 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093681848 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141451241 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077424961 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118998311 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118273833 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092872212 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146506638 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144523922 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127233255 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098946689 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131005367 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07275344 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073724581 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087430243 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119235431 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082541348 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082058548 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10954536 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142140191 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120758952 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129776968 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119535585 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112317542 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14965104 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071441437 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117383519 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136969153 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116558137 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101833645 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090015319 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095583676 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136139919 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100181309 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170905321 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109730864 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117724876 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147731325 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09869685 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076948329 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099822612 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123434953 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097258625 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.283250038 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09736867 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085641654 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104651707 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077181295 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097532847 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120016065 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112334821 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132116141 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107873834 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12573581 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076421122 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10822342 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118897678 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11666721 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082074336 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111913444 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156890356 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094551574 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111422472 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142202267 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077448089 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134947289 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163125908 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136451874 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082853953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101461148 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117236966 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121359306 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113702931 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131677155 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101381751 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131267233 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108367507 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083141023 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084195244 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093392031 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100568244 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109420994 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10127414 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110465056 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093519308 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12389688 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099421397 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10720257 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113564908 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097895946 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09361945 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094090299 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164331094 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11401614 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159239787 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097548639 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134670223 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149799666 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073170428 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076862866 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078340086 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129500106 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08190699 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122354109 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106516373 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258008988 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119476492 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131652716 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094214561 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070961641 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106353175 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126402723 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118707284 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094377634 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100423687 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149165038 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115026557 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077387475 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109327557 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111845772 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100629246 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163445821 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079602054 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106217181 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075493402 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077846821 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120549665 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142733675 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081682313 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101447949 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115907656 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107584 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120874028 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095578286 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108162218 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12610208 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140065498 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12131525 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08770468 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107572389 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122937207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14561026 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100540352 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097811105 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164667169 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143779708 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.150305464 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085522278 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11323726 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110300749 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106349217 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130747045 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08230975 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151598868 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079870806 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127217267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098640775 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086778019 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120966482 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107993802 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085322325 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134917615 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110855491 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079517357 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07712245 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254190749 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115221923 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100311137 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074111416 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131421633 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073501708 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128424352 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16087904 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078789715 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101903112 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093283292 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080987634 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100383423 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098641206 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083864897 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097257555 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159929118 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085528322 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139467674 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125726312 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106501241 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129539325 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101463867 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641522212 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078915986 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143308529 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111739753 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167896651 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096808785 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114159019 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1073904 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116613253 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135481807 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099006502 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177352821 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124151851 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113677111 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07749455 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098962488 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099964794 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087655907 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10354477 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109968475 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10918621 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092782061 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113557728 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11717262 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080892417 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094033125 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146810276 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111451611 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135584614 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131631298 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082740622 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112414124 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128893843 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077971444 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112140321 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140027207 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.24918511 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098541361 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082256758 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098159066 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163573123 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07230052 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148773574 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116012621 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106725537 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11283859 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106912936 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124601519 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100259329 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116535772 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090747658 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105424892 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145890463 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082102231 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077866573 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102560666 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106537569 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095533353 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095120584 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096689791 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143895944 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071537945 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095369203 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110622856 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137089576 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161734427 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103266788 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081772861 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114278846 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114605444 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110877923 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11659097 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080313544 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07986559 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080264864 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098692574 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121034034 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110646564 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115116619 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105813387 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15188413 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082381636 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223985539 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093450989 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102420126 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087262131 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079320964 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093658646 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093707505 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1002951 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107241816 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163880294 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093309371 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087992602 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090101202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073532397 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081706502 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119864493 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104785705 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111446896 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099534743 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079747503 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09882021 seconds)
  done (took 56.840544985 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126003115 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.100107863 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099339104 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147123645 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122780095 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20062068 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151545037 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189720748 seconds)
  done (took 2.728876638 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071656447 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097689604 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105085426 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085281131 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067320668 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070523382 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226321961 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083453738 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067558838 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091988947 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079082302 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07061362 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.443900663 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069794459 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070282571 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078415192 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068551056 seconds)
  done (took 3.39489382 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388676068 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602805945 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.348811784 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076765665 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.007705341 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091145702 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.21070492 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138959954 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08327303 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538922709 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369946825 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133982413 seconds)
  done (took 18.552353357 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085575965 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077490987 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091918468 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091185057 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078936947 seconds)
  done (took 1.982055913 seconds)
done (took 104.912850735 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084260823 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.43828506 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070358412 seconds)
  done (took 2.095067312 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094267066 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090743056 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08971176 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08762295 seconds)
  done (took 1.931734124 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077632243 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079319227 seconds)
  done (took 1.714432225 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229270997 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176781522 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096818689 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087200917 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082951913 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081759472 seconds)
  done (took 1.817035064 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076963388 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075919208 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074782023 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074333163 seconds)
  done (took 1.860906289 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071757812 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069125344 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070182182 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07202242 seconds)
  done (took 1.842256329 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088450064 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086090169 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079992143 seconds)
  done (took 1.813939792 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104703479 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091402622 seconds)
  done (took 1.756276749 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086198299 seconds)
  done (took 1.64654594 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094638213 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102716885 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133132611 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115620051 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139416651 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11605717 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085168704 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08601885 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079959733 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086724908 seconds)
  done (took 2.601099844 seconds)
done (took 21.222182502 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08244145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371916653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360551154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091395805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668901179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357348862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986294669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093438944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141729019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068788601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085850402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650153059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980971941 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326701206 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964697841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33064934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651185506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069444783 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069065601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069001142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973548467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06898093 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068778316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069459523 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650277418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373358144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069518513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330773202 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069596952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07170173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357062785 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070483005 seconds)
  done (took 16.132905415 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073515915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123369898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074163986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085725426 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071547234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070653633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072433358 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069890934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121216752 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070765092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08602606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069551887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072835667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069319569 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088899149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069479177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070686028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07061946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070562031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070757024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08907043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070414728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070111497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071418176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070165799 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082826412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073013828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070223749 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070668998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072228532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073015001 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071176531 seconds)
  done (took 4.029542216 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120861169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126690465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074640957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107554458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113197527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07214608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148108131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094274889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128891214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069343778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086964129 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069592914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103389973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070338376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089754022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071056908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071145728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070807001 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070122479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070652179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089548316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070591017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070255062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071116179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070406838 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083972801 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071048014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071048372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070530431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072112068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074138601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070978334 seconds)
  done (took 4.290703554 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073845835 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073794326 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080799809 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081597277 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067825435 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070796084 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072586047 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06835451 seconds)
  done (took 2.168024065 seconds)
done (took 28.190148575 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081626978 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070738105 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073139896 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087324097 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074767232 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079878676 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066045159 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076104689 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07292085 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073299658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074842458 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068464907 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071670361 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066185192 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073173031 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067519279 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081816675 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071678439 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08092913 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081454203 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070475963 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073697249 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076463866 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08182796 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081616476 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081559776 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077692412 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073704692 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068973769 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07209607 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071022847 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079912104 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081768782 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081788902 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068261101 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068581431 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07236868 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070140409 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082811763 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078014608 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06990969 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077447853 seconds)
  done (took 4.701643055 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088379177 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089874294 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083208008 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079783295 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09102478 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08327323 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087092939 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078337473 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078773926 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086625059 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075094292 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081870609 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079412543 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073435212 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078071064 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075295151 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079737038 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074221598 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077699792 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078495979 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088711595 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073488358 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089059518 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080426496 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075643277 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08144101 seconds)
  done (took 3.6942043 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076760914 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088274554 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093539498 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14381563 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111374272 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081504466 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082128154 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092782935 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098010696 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069922104 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073661742 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093146469 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093781846 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075476589 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069339391 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08521463 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084988619 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071379769 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075605155 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097927916 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090168797 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086362487 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09499618 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085608048 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068700699 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071653309 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074037195 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085467791 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071838994 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08061283 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071794862 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076409863 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070501201 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079728169 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071899712 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068216844 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093293238 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080419311 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08147861 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069357394 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078510431 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069600438 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094053862 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129110399 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068761691 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07308479 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072376699 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080047678 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068201093 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096263264 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081064249 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06830322 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069589962 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067570034 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068224583 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071389382 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07049355 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071081389 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078584255 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075530982 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090354751 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073940384 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086151972 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068392881 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079092691 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.0680122 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070404774 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068009877 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097897917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070194016 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112886884 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069894818 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06729527 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079928255 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078863626 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075007651 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068595958 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086026754 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080085428 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072657514 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077097547 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072296545 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072850197 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099030493 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06916174 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068544935 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067331657 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072372999 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071923148 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069432325 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080523228 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067867362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072288279 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086402611 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068573176 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069940297 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07211036 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071024632 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068484319 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079712378 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072805421 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070584856 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079299383 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069225334 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072272719 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081803723 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075282713 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067499309 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070716725 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07261018 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070200757 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070109509 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072257003 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07042903 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075463406 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075269746 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07436525 seconds)
  done (took 10.751708514 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16865716 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157127161 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071062494 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149043831 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077244178 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081187746 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152135857 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095241743 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06921301 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071148549 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069547145 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11038376 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105638376 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116865571 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082014843 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070080507 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092645877 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115595537 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154527329 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148036519 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092072758 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077363981 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071930718 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071366268 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070797845 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079441217 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086058881 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078275085 seconds)
  done (took 4.404980561 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082258459 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106032259 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074437052 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091715528 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089013365 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069619802 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070986717 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071040325 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085807161 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078864591 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069446197 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074551907 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073822445 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072820224 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070361515 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075834084 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076950611 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069131519 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073678212 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075775918 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079847462 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094332909 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07317754 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069435441 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072402092 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069185448 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077495698 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081867861 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069622237 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105614581 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067271974 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074280994 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08620327 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069761227 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069139913 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069367421 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069241744 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069703345 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071595389 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068146318 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068362983 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073413553 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068549616 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077408215 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082950262 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071475002 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07203817 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072599837 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072320811 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067313712 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072111696 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07206639 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07188686 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076519753 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073259685 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07238781 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07026377 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096961797 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075160445 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068748687 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068240274 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068206205 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072023013 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079208925 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084990866 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071708667 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0685202 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070108255 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0823277 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082627118 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068832827 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073977038 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066968593 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071140513 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072567315 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071875413 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070008811 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068018601 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071803555 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069279904 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070312548 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069378318 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068728382 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072471864 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068064999 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06818663 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069638207 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070963442 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077879723 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068922276 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07333369 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070587683 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068983231 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072325781 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074652829 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07268721 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080120464 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080250817 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069726478 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068145045 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082763617 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072517254 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068568621 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075092251 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074144195 seconds)
  done (took 9.408695833 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095634224 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07133351 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087303427 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092505343 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079468025 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075709428 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07994154 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071147494 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086773439 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075786092 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077253421 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068162776 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08011121 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079203129 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070213502 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079754941 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072314618 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087223104 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084884206 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067999002 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078042142 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081541198 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081520881 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085165168 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.0853983 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087399647 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08385911 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081916414 seconds)
  done (took 3.879360114 seconds)
done (took 38.411662687 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.680413381 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.911170156 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.656986403 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.888537207 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.717479751 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.868780514 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.744124153 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.650557817 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.825289478 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.693890065 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.978426457 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.884406995 seconds)
done (took 64.233346309 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.687123896 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.799566058 seconds)
    (2/2) benchmarking "String"...
    done (took 1.899239111 seconds)
  done (took 5.284743228 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.832128538 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.368097488 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.880592044 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.649716096 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.652375253 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.90382093 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.419432201 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.092647255 seconds)
  done (took 29.550865681 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.850747741 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.871141566 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.356597785 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.397015458 seconds)
  done (took 15.107643834 seconds)
done (took 61.143634574 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.678128376 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.655174437 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.659152271 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.64500693 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.742332874 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.654799191 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.832427535 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.700483974 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.644869239 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.648372209 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.647251847 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.131095495 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.65543725 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.78374171 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.645786631 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.646647168 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.726318332 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.111301195 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.799694331 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.661258799 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.665147655 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.696415545 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.65259003 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.654626733 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.654188164 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.64600027 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.042189122 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.66117382 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.468320432 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.648818051 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.695397153 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.976384268 seconds)
  done (took 199.712780116 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.650228462 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.702310469 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.81725318 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.669759843 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.069262071 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.839430761 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.72892768 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.13143635 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.652256301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.666830844 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.775367306 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.647665077 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.780863511 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.592140169 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.687295377 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.741361503 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.865761599 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.80078261 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.684538659 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.814508147 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.65757113 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.604356033 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.586216028 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.761538594 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.650842447 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.682184269 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.658061615 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.655194787 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.831092271 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.853529281 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.653031671 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.687391388 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.851748951 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.519877864 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.675886139 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.67542249 seconds)
  done (took 164.910661418 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.829370178 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.652572706 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.649955129 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.654080587 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.657311497 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.651875142 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.770942064 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773928454 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.312881029 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.146424139 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.707139337 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.652257329 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.438392448 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.653543357 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.65089668 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.717293371 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.660469743 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.649723317 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.665734971 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.678262001 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.649456014 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.650777495 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774519894 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.66555063 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.650114922 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.660791882 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.651899062 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.65821007 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.037735067 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.64863613 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.653819182 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.652958154 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.657503247 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.893760824 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.650809553 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.653778817 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.482207735 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.746720593 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734396171 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.651489502 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.657018341 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.650420498 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.872621812 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.650261256 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.652222961 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.653835624 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.652774033 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.76738949 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.653708334 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.77492775 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.65321834 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.137305324 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.652584184 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.653544784 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.132409261 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.251361484 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.652354594 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.655082849 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.653165483 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.653434828 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.6571658 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.037671698 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.72460958 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.653212157 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.654356461 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.654648885 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.660103371 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.655880616 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.87819823 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.655721332 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.472586928 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.666340294 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.783850013 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777014396 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.655631529 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.718302248 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743777578 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.651161471 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.6546864 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.655196257 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.65414266 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.734082842 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.64978898 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.735414745 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.662500749 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.655861863 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.708377869 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.724553524 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.650175068 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.487103446 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.653473594 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.656120034 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895015082 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.721702392 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.650969101 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.657220595 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.653640933 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.65426187 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.733716435 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774551362 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.367894316 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.655148617 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.926701274 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.730025046 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.652930053 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.790546305 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.654950564 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734107189 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.658281034 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.657252499 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.69006081 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.658721247 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.668893458 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.652594144 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.026631364 seconds)
  done (took 387.502394939 seconds)
done (took 755.599135568 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.250391389 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.214440731 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.309554883 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.232977263 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.203815468 seconds)
  done (took 12.802472393 seconds)
done (took 14.391798786 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.736223848 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.741104229 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.674824009 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.739330878 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.672958006 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.735344697 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.71974756 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.677556273 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.705895533 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.678851967 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.705920561 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.67813468 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.664943025 seconds)
  done (took 23.721323716 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.880071053 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.876548745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.719458805 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.871350035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.69677157 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.872532119 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.804408501 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.796225953 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.794110631 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.667597615 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.663505143 seconds)
  done (took 21.234005447 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.885430041 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.889559804 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.728137531 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.88106254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.701607226 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.878006459 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.809084387 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.805850996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.798708743 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.668713709 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.665020076 seconds)
  done (took 21.307239759 seconds)
done (took 67.855097992 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.659067895 seconds)
  done (took 3.250691455 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.677819354 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.834878777 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.662362903 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.661412247 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.662279853 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.661379405 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.662491495 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.661520234 seconds)
  done (took 15.077344261 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.660894041 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.662536522 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.659370267 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.66378901 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.661258224 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.663096929 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.661647267 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.662064574 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.662631722 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.663225033 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.663247446 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.664997151 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.665273587 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.662862892 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.663233608 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.660838797 seconds)
  done (took 28.194413507 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.663257313 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.662992646 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.662285598 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.663459621 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.663114059 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.662160145 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.665390872 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.663719034 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.661069913 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.663194819 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.662567073 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.662572524 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.662287557 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.66197295 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.664048793 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.665795786 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.663760135 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.662638645 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.667031329 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.661291122 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.663846065 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.662519836 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.66210507 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.663849479 seconds)
  done (took 41.51445057 seconds)
done (took 89.629991858 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.411706534 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.511485073 seconds)
  done (took 9.519244871 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.6705065 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.664301621 seconds)
  done (took 5.008083575 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.664673699 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.664877682 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.664556781 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.665515919 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.664814462 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.663832889 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.662868545 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.664433 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.66485967 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.663995777 seconds)
  done (took 18.242329735 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.666445306 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.662217447 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.666008541 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.661500774 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.666123773 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.664435483 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.664752437 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.663482555 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.665112424 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.665653822 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.662635897 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.663688545 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.66426181 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.662480378 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.667335498 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.665851659 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.666353673 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.665884768 seconds)
  done (took 31.562398025 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.665122937 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.664149604 seconds)
  done (took 4.927064272 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.664207893 seconds)
    (2/7) benchmarking "second"...
    done (took 1.667727854 seconds)
    (3/7) benchmarking "month"...
    done (took 1.665464476 seconds)
    (4/7) benchmarking "year"...
    done (took 1.667291789 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.66743666 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.665740574 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.666196503 seconds)
  done (took 13.259755646 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.666996362 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.829135982 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.903297603 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.336595408 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.667648098 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.669569065 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.598301268 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.66779733 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.668521363 seconds)
  done (took 18.605777344 seconds)
done (took 102.719754008 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.53948358 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.66396335 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.943497864 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.731477901 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.70765804 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.958374283 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.690239245 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.940520231 seconds)
done (took 41.772871636 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.681295554 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.38786177 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.455927094 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.802550425 seconds)
  done (took 15.246669417 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.66357543 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.987156278 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.685683966 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.520084882 seconds)
  done (took 21.459762821 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.026004557 seconds)
    (2/2) benchmarking "read"...
    done (took 2.019379141 seconds)
  done (took 5.650316017 seconds)
done (took 50.638507296 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.668296762 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.667153655 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.665942562 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.666999427 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.667680493 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.669289338 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.666849113 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.666059547 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.666764052 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.667609962 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.668540311 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.669377079 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.66960768 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.667152345 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.666561024 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.666281432 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.665168642 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.668743499 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.666608909 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.666808898 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.666805417 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.667798589 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.666708473 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.667148771 seconds)
  done (took 41.614679989 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.66808215 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.667958335 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.667254925 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.669023112 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.669384194 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.670609724 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.673668282 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.66699312 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.671845448 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.66991751 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.669057081 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.668313609 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.668812988 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.668666879 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.667629148 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.668170486 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.668521159 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.668236973 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.669831137 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.669196973 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.668108491 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.668934548 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.669053134 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.668855747 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.669657764 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.670621116 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.669978334 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.668089038 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.66902804 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.66854133 seconds)
  done (took 51.672143745 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.66832605 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.669380446 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.669152189 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.669468869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.670867466 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.669742718 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.668853572 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.668942706 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.670360595 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.669324263 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.670528523 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.670676246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.669618366 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.670212096 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.670767684 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.670526992 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.669972174 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.669420623 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.670365405 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.670775715 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.670204129 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.670179594 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.670109377 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.671298024 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.669815897 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.670253056 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.671435293 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.668309869 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.670846829 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.671855383 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.670741251 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.670044532 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.671776669 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.669001365 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.66892332 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.669787474 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.66994047 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.672760201 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.670735024 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.670557876 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.673894358 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.672309056 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.672282824 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.673595994 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.671523775 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.673449077 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.672648335 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.673829603 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.669200116 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.67307409 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.672490399 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.672916909 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.672043001 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.673695905 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.671916874 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.67323102 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.67195846 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.673706195 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.671643646 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.672490211 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.672296349 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.672790319 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.672410309 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.67228091 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.674639555 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.672257817 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.672710257 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.672139714 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.674684564 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.673269142 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.671367748 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.672475739 seconds)
  done (took 121.93499833 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.672418957 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.67363341 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.672835931 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.673943792 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.673488563 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.673194596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.672240361 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.674849015 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.674424161 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.672505129 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.673783758 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.672936102 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67161246 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.674429182 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.673413228 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.67249234 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.675427936 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.674071561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.67443897 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.673791258 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.672109268 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.674454442 seconds)
  done (took 38.421675339 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.674391223 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.672768874 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.676409134 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.676597775 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.675497387 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.674646906 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.674064111 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.675341063 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.674994825 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673915919 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.675366988 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.675066603 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.677196438 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674531085 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.674914155 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.67423797 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.675119077 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.67416223 seconds)
  done (took 31.754666407 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.674248156 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.675631429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.676908881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.67475614 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.674051945 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.676054804 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.675568678 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.675255939 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.674306615 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.675056392 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.674868541 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.676233394 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.675054064 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.676351039 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.674976194 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.676316322 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.676715681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676330869 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.67430868 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.676431471 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.6735495 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.675999438 seconds)
  done (took 38.466118564 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.675190288 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.674199244 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.675453121 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.675598492 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.674912064 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.675085277 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.674699875 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.675857808 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.675986039 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.676344414 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.676727471 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.674499537 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.677002007 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.67625606 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.676204002 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.674263925 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.677027195 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.676552157 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.677056296 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.676067879 seconds)
  done (took 35.122343816 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.677014969 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.679332864 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.677374572 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.677542419 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.68000003 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.678616352 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.679756624 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.677934737 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.67905496 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.679964565 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.679383189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.679622237 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.680229346 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.680003444 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.678886072 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.677572121 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.68069879 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.680082258 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.677180538 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.679045426 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.679864363 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.677005258 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.678485387 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.677650261 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.677195871 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.68009719 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.676880121 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.680569528 seconds)
  done (took 48.615372586 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.679914608 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.677883514 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.678973603 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.678944977 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.678474087 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.679498653 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.678759127 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.68062388 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.680659777 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.679066949 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.678578755 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.678767702 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.67813794 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.679798974 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.67895964 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.67832754 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680523982 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.678326536 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679445468 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.6789134 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.680396703 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.677013965 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.679022546 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.677299572 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680792248 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.680158051 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.679581321 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.680049402 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.67762778 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.680105774 seconds)
  done (took 51.986213191 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.70274257 seconds)
    (2/2) benchmarking "in"...
    done (took 1.699833949 seconds)
  done (took 5.012472131 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.67941627 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.681082381 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.680099058 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.679901523 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.680543301 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.681484425 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.68260276 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.680791849 seconds)
  done (took 15.058908574 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.680959305 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.680791985 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.680174762 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.681720547 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.68107425 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.680881709 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.686617911 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.681027568 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.68409463 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.679259478 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.689141627 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.691845551 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.683790387 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.683486907 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.681621497 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.684255547 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.679438513 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.681594965 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.681157453 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.681865911 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.679716859 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.685555258 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.685103343 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.681290338 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.684810621 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.693436678 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.688799279 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.683220721 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.683802876 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.687366681 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.686316598 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.683795445 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.684241487 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.682461929 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.682823663 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.684497558 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.691012703 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.686064262 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.688425965 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.685085842 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.683623215 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.684090518 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.685272913 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.684282096 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.686703025 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.683508591 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.682275748 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.683249191 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.682683563 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.686586606 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.69234982 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.684728787 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.684951044 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.690657923 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.685436355 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.690662366 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.684490215 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.688898084 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.695316814 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.694445813 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.697235193 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.69485088 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.688129592 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.685165845 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.695889844 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.713248486 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.69287367 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.685456027 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.685565763 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.6847402 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.691581569 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.697238978 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.695718536 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.685705901 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.684666757 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.684606427 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.686567796 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.684996095 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.693640452 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.688127342 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.686610454 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.685513112 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.695088315 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.713444594 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.686537157 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.684876632 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.686160408 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.685187619 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.684645748 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.699589836 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.687007431 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.685509339 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.685394122 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.687397277 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.687181474 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.686128021 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.683580605 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.687053386 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.68505 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.686381742 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.686442187 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.690841768 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.698147053 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.686084532 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.687298918 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.693579288 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.68742642 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.689186977 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.695674932 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.690416789 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.686986119 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.690221519 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.695944916 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.686400113 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.691745039 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.698788247 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.688263552 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.690273737 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.688769194 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.688059987 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.697456931 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.717414856 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.687700817 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.688822552 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.693554125 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.701937269 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.687300418 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.689858639 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.688658974 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.688520218 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.687259257 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.690722014 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.686830234 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.689644085 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.687928555 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.690062244 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.686806408 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.689066997 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.688563773 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.69022213 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.691010945 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.690389469 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.691539073 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.69245424 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.689897521 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.69121926 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.69574222 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.689028884 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.690287918 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.68958053 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.688357458 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.686466619 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.689955373 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.688674214 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.687990696 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.689708073 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.690034325 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.689504201 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.692367325 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.688206627 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.688682921 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.690359817 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.695268831 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.689325071 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.695141083 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.690446976 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.689238456 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.688272092 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.689360955 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.690107981 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.689771494 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.689364804 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.692867087 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.699698467 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.688791023 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.688890475 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.692019873 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.689842696 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.689081315 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.690538032 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.693719587 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.702242564 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.691438292 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.696063535 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.688849033 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.689294939 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.688736297 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.690624855 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.689794075 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.687545415 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.695284556 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.700120612 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.703153424 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.703243854 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.692191406 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.695414493 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.69126487 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.694733084 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.695683093 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.690360319 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.692638648 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.691405244 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.691820498 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.691125082 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.693326416 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.69136815 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.690495386 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.689783357 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.691020857 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.693227319 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.691829741 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.6939882 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.693671382 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.690405133 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.691617747 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.689795335 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.692095101 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.691682614 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.690392598 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.693028194 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.690434733 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.691691515 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.698525412 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.692001333 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.692934967 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.695444209 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.69354681 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.691590195 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.691581732 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.69719219 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.69546136 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.699866907 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.694668887 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.693762667 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.699869849 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.695063031 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.690169294 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.698045024 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.69362241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.693366244 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.695767806 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.701710495 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.694195906 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.693111815 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.69285989 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.694992798 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.692504816 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.700878726 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.692044617 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.692525515 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.691322759 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.692934759 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.692975988 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.694033786 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.694227373 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.692835172 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.696679485 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.694459711 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.693645957 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.693409641 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.692253963 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.695397253 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.693300074 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.697005854 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.701639917 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.697025881 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.692739526 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.694977232 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.694157514 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.698286147 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.695652878 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.694032048 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.694186568 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706186575 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.704995706 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.701091231 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.695712374 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.694923991 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.69959117 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.695823685 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.699536085 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.695901297 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.695981714 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.694894333 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.696807724 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.695883482 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.695385188 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.695088597 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.697029878 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.696471057 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.700672196 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.693063528 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.696627269 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.692354753 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.694453283 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.69271625 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.695148437 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.692352375 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.696404693 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.696194193 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.69516206 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.694707776 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.700636644 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.696320009 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.697971732 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.695312113 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.695877656 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.695388253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.696996558 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.696038131 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.701182815 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.703667905 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.698433615 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.708136595 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.697344298 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.706024263 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.697569578 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.698814266 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.70506843 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.694708957 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.696297314 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.69638809 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.695594545 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.702890532 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.697390875 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.698374082 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.699827903 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.696226353 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.696950971 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.696100205 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.696247338 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.696939715 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.698747257 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.704479836 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.700371399 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.700605546 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.699730599 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.697401467 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.696758639 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.6956994 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.697502119 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.700066099 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.697207397 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.70050454 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.696850633 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.698301786 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.697511 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.698265555 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.696471035 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.698189427 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.697710008 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.704003793 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.697200145 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.702654114 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.698075798 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.707468936 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.698799573 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.705871089 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.696329342 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.699218834 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.698989545 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.698482028 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.699164458 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.698662266 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.69985305 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.69985929 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.698706083 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.703904739 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.698076878 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.699928438 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.699710893 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.698202119 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.699928885 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.710822792 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.725752682 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.700746652 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.705088065 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.700059079 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.701713645 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.703277529 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.698888026 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.697707832 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.702678585 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.711744483 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.709278204 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.69932772 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.700221286 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.699745433 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.699835805 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.698699152 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.699631297 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.699574462 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.699840215 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.700142776 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.699156353 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.704761858 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.701487319 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.701381925 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.700873601 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.700620106 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.712576952 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.701004249 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.69923639 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.701477621 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.701571034 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.703035004 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.703721407 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.700628657 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.701461305 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.698630961 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.702556807 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.708595278 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.710001108 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.702509334 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.703056795 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.701280793 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.703085133 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.70245212 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.701778877 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.7001117 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.7021842 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.703119699 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.701686867 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.703452642 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.70013207 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.69951913 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.702972616 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.699957737 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.704326979 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.710653536 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.702787762 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.702587898 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.70071681 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.700436792 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.701501898 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.702303912 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.709534323 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.705416484 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.713781684 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.711216025 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.706001345 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.703478942 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.705592515 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.713769405 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.700848368 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.703302408 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.702307614 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.704999851 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.702467204 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.705892049 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.700968567 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.712155439 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.702754808 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.70364784 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.708609765 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.705029646 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.702946441 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.70317792 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.70703523 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.702286408 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.701937623 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.70280308 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.703224959 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.70707881 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.706603052 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.702982273 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.70504073 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.701627123 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.705669747 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.709692586 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.70078692 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.706244203 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.702256028 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.701720334 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.70423924 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.702914364 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.700702656 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.703226091 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.702253979 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.706627427 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.712568756 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.704384413 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.707058467 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.705690977 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.704563079 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.703622276 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.704960801 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.704135891 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.702299908 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.703701184 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.704767949 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.704351945 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.707754163 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.702857176 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.704231323 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.708781192 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705367421 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.706799462 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.716636649 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.713119201 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.705098515 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.705846956 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.704420605 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.707312309 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.703242293 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.704221525 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.706552848 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.706014842 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.703383629 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.703340564 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.706974668 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.70658571 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.722551852 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.705016414 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.706625651 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.705456635 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.70782388 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.70354837 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.704389503 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.703326095 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.708083237 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.707786305 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.714674118 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.704131482 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.712317984 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.706206959 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.706406265 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.709679464 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.709102615 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.714442861 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.709573624 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.702877358 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.702481788 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.709954287 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.723173564 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.704602059 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.712380903 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.73845073 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.707242843 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.709667416 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.703301775 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.705433431 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.705276116 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.706824229 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.704376554 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.705578864 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.704824699 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.705695349 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.705746863 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.715227198 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.707981809 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.702146676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.704851142 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.707535968 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.706711223 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.702208411 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.702874156 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.703044823 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.70443859 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.703438983 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.706648777 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.708448526 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.718214592 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.715333134 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.705397778 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.707294466 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.707725797 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.709509122 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.709571348 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.718647091 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.715700068 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.704219648 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.706186409 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.709117766 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.705336644 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.705940558 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.70665667 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.706853177 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.708456825 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.706742857 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.71705055 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.71646464 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.712841674 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.7080767 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.708921852 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.703548018 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.709837211 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.707212105 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.706874553 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.708224041 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.707353454 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.709605802 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.704866535 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.705406769 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.709880293 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.714466564 seconds)
  done (took 1013.324060614 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.706736046 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.706718487 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.705982539 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.706130345 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.70487383 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.706966852 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.705637224 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.70694154 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.70571974 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.706753446 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.705822726 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.706617114 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.707429231 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.70703469 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.706246653 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.70901362 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.707332525 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.70713522 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.708989059 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.707714579 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.707313306 seconds)
  done (took 37.479665395 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.706755255 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.707458103 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.707802725 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.707964613 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707022473 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.706437809 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.709670562 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707639561 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.708012893 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708544849 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.708900418 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707081116 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.707962241 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.707914333 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707609029 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.708469669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.707381221 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707078917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.707604379 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.708444029 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.70639665 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.708464076 seconds)
  done (took 39.208776732 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.71027388 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.709536054 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.710445354 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.70931308 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.710198769 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.710916439 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.709283649 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.709275557 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.708491381 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.711471663 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.71053515 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.709906 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.717490934 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.718256173 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.71265106 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.708510115 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.85385696 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.708603119 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.709706207 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.708667083 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.709477488 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.7149151 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.708015409 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.710609493 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.709300682 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.709808766 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.709192339 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.709940975 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.710930916 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.711690188 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.713439068 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.708997971 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.711741142 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.714230528 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.710692977 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.710134504 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.715377367 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.712640456 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.711401973 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.7094485 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.720025948 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.736741153 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.711261518 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.715342023 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.71061951 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.708230416 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.711822858 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.720185438 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.710583587 seconds)
  done (took 85.664384751 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.71252009 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.711098272 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.709303472 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.709440533 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.711247561 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.712668448 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.711385243 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.709390704 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.712457301 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.710758426 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.711712811 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.712393005 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.712424843 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.713426189 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.711314085 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.711084263 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.711581255 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.711980603 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.711773732 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.71082948 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.711501939 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.712386175 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.710646194 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.712771695 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.713000173 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.713676049 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.711727758 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.714794752 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.710812851 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.710647031 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.709536665 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.710748295 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.713645184 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.710656641 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.711695492 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.712345172 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.712364238 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.711058877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.71237346 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.710973532 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.711621494 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.715095829 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.712256738 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.713678881 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.712177212 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.713387467 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.71444094 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.711637493 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.712780421 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.712276681 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.715244045 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.713413839 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.71191369 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.710873865 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.712235548 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.714249571 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.714114687 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.710369803 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.710772298 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.710079843 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.709257836 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.709842134 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.7112215 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.709968659 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.710115421 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.707259161 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.707445585 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.71123287 seconds)
  done (took 118.037853868 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.709796563 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.709015389 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712450461 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.712144349 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.714087972 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.710100405 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.710459878 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.709991635 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.710895347 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.709752408 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.712713556 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.709631035 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.711976824 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.712005748 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.71241092 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.712003125 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.714318605 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.706484726 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.705626462 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.707301409 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.707120182 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.705346407 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.705321283 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.70455758 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.704993654 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.703359464 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.706800688 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.706339635 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.705253057 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.702693919 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.703422495 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.702848443 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.702595173 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.701480871 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.704966678 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.702785694 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.701342487 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.703976968 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.701048456 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.701983545 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.706897332 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.702431966 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.700248739 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.701823525 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703419662 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.702246652 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.704128575 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.702728482 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.703521255 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.702292199 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.70246309 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.704473723 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.702748588 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.704397671 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.702787369 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.701292628 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.704752003 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.703599861 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.703230498 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.704057136 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.704535065 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.705281439 seconds)
  done (took 107.408454459 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703698269 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.703163637 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.704115706 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.706225249 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.701552745 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.705234382 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.703975088 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.703449024 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.703122524 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.702680801 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705255005 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.701568833 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705973531 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701321832 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.702105244 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704903751 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.703123669 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.704125203 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.704770447 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.701843534 seconds)
  done (took 35.70747163 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.703808252 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.702818055 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.703742187 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.706615111 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.703180514 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.704852708 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.704029628 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.703215757 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7085419 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70132017 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.706116678 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.703461102 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704078391 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.704326343 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.708189119 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.702571626 seconds)
  done (took 28.905231234 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.704499804 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.701406873 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.705134356 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.708760456 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.705107957 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.704767876 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.706611912 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.707958318 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.70713775 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.703685101 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.702972963 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.703746441 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.703681331 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.702569166 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.703816461 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.703975233 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.702198699 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.703434826 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.703011153 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.704654228 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.704513513 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.706035834 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.702424873 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.704847594 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.7050812 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.704551261 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.705262194 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.705562933 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.700328012 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.701206463 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.700718957 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.702618344 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.703724869 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.699071349 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.698250686 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.698253377 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.697810962 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.698549426 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.697898727 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.69843966 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.696957239 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.696967969 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.697292247 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.698143529 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.69806661 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.696360135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.695942519 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.69790626 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.697639188 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.69505775 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.701325035 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.695534403 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.697033618 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.696723468 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.698398021 seconds)
  done (took 95.220992443 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696191735 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.696351909 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.700803266 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.699177887 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.698447028 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.697234833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.697681433 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.698246166 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.697233629 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.69815767 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.696618435 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.700796588 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69911677 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.698349221 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.697895277 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697313951 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.700084645 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.697397202 seconds)
  done (took 32.195677702 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.698091124 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.698600778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.699115732 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.695848035 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.70000139 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.698487169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69710447 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.698296142 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698995455 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.702011846 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697417081 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.697879619 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69802666 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.698566287 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.699530106 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698376756 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.699718268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.698500736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.699695678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.698114546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.697830401 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.69807694 seconds)
  done (took 38.999705639 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.699857202 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.697244975 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.71196253 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.722848323 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.718588241 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.737732394 seconds)
  done (took 11.919107144 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698119002 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696601766 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.697749274 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697123079 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701528978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694903443 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697523639 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697662552 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698529964 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698222726 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697096383 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696298752 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69697095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697241522 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697077225 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696499427 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698133894 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695290921 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695550213 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695289623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695840613 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695652906 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69905599 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693731306 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694786887 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694622924 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695811215 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69514986 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698045466 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695499813 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694368152 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695336039 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694813936 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694725424 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699064766 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694892078 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694794772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695493969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69485697 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696399749 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.69299649 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691041747 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691487847 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69247996 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.691733519 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696647515 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693637314 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695550549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692694869 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.692327477 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69574873 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696422661 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693799642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.691454734 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694311519 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692248912 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694941108 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697285478 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691169664 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69352037 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.692696606 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693799629 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69275647 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696375636 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.691384636 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694475095 seconds)
  done (took 113.518017834 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69307604 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.691297538 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692345322 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.692761935 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692113416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69158211 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.693596635 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693384539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.6966109 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692887892 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692372277 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692033356 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691813863 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.691630327 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694323626 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69036012 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.690741131 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693134113 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69335985 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.68940412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692876024 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693163972 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689564014 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692059146 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69241719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692061278 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693681792 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.691775101 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.690704335 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69051109 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.6895438 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689926165 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691560858 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.691841883 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.691221074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690230016 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.689605796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692868008 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689741247 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.688476384 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690518963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689257276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.689846213 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692047533 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689559299 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.687907241 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.688237147 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690430182 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.688778769 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693765386 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.690322528 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.690465192 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689088274 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690233096 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.68979908 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692586462 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.690688775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.690472734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689601926 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.687948698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689417964 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.690323292 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689878542 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689450045 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.6902965 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.691079118 seconds)
  done (took 113.240000385 seconds)
done (took 2352.091945762 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.7137875 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.698894827 seconds)
  done (took 15.033911127 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.850491744 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.80448921 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.692725273 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.697038921 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.687931491 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.719645306 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.71134834 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.690425799 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.690760458 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.691103555 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.690383367 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.873961182 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.702400084 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.686198217 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.692530158 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.782466145 seconds)
  done (took 49.287233129 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.691630466 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.69503605 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.703278838 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.69565745 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.692656075 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.703987775 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.720474605 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.694735543 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.72671072 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.701653897 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.757784106 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.702101078 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.689255481 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.741756468 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.703093457 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.705731553 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.788105356 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.766544446 seconds)
  done (took 32.501438459 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.766448515 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.700989713 seconds)
  done (took 10.096769255 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.712594162 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.712035383 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.753839463 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.693401616 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.688000469 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.695540023 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.741211131 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.730616139 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.705183732 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.731992979 seconds)
  done (took 68.789137176 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.6948869 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.693715132 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.692327316 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.688219764 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.687564277 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.694126068 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.689811019 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.687107348 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.346759412 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.723606707 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.701143074 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.694536292 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.690129745 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.690898558 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.686347104 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.711707783 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.80346816 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.6870612 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.68632386 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.698216199 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.689231852 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.742070038 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.704773235 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.688847938 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.719136383 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.347024319 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.692494174 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.700528975 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.802637445 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.686017911 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.689119381 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.87559555 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.691600138 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.157939934 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.94714824 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.696759414 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.703135832 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.697385725 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.68834911 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.81226809 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.690382042 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.697878203 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.591159036 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.926236724 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.788345526 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.730583916 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.994448078 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.703436059 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.691862177 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.718734304 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.692064438 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.690525011 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.7047188 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.208146608 seconds)
  done (took 122.829691742 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.689531707 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.032878313 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85275593 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.685648575 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972862497 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.89618516 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.689412462 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.736294785 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.69135371 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.919457545 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.940630267 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.79312683 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.691295436 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.689335286 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.685964963 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.685031871 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.84755632 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.760767311 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.691982025 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.688482868 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716655663 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.933170815 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.815691659 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.691419183 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.715909739 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.902085052 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.812539194 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.79411406 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.42664091 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.689698974 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.751541437 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.689784842 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.689740911 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.685754785 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.843244571 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.784464432 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765450155 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.691461864 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.689287269 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.690377583 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.347217172 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.889864621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.783101062 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.818076096 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.940349046 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.892865257 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.464100855 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.687199215 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.422358876 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.85192226 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.917089114 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.923441155 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.805513282 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.692844928 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.024854119 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.686528778 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.69011946 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937510328 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908638536 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.785947402 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.689183072 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.690222512 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.692040335 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.929122341 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.686421038 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.783224473 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.68964216 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.68692662 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.790224178 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.785362172 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.920608369 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901903535 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.718388166 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.036396446 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.188846205 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.938079913 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.755961167 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.93776813 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.692855998 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.691082555 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.766916872 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.536970681 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.941869864 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.936363194 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.932947847 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722965483 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.405950362 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.692311907 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.914153364 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.911863728 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.94827425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.933408827 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.922852523 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.013444685 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.68925958 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.693868784 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.017251664 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.813298834 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.691778924 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.036785915 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918672164 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.211096502 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.717052932 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.995007291 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.817650387 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.694070504 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.322077151 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.691504406 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.922177202 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.732026169 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.689382309 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.693240942 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.909737725 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.678794164 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.693534108 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.346406461 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.752500994 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.693127718 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926664684 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.693338319 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.958855164 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.688752295 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927822823 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.147425825 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.721978951 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.866906623 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.935597297 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.693615711 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.927488437 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941831351 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.803759754 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.911870148 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.397832014 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.690775586 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976212252 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.69633273 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.693731758 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.861043971 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.694060659 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.834405367 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.693429668 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.987970482 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.710589235 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.921518981 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.693329648 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.946730281 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.722481475 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.739758672 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.69419589 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.808547992 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.108344872 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.521008801 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.851652334 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.693796257 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.691683518 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.241070928 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.691971276 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.838543471 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.918214002 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71063268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.765335016 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.356110273 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.691859302 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777192468 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.714531949 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.08779961 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.692186072 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.946221241 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.695719142 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.690586648 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.695366126 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.926189492 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.872970933 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.693110039 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.691767481 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.596487542 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.693071204 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.692474483 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.874638173 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.003004394 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.693564106 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893797 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.693591122 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.821788007 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.696550858 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.772139847 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.025847308 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.691251545 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.694797485 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.692627642 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.693756257 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.696015117 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906305177 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.72329113 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.1876243 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.833086071 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96539872 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.002297258 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935495063 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.733272097 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.700244225 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943458343 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.696688489 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.755375004 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.69456672 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.717658313 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921312038 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.697146704 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.904838638 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.966096654 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.544727144 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.739805209 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.697157603 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.698297392 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.691684013 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.839720832 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780867656 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.695251213 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.699845835 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.808805377 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.815860639 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.903610548 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.69723204 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.764362488 seconds)
  done (took 862.785369979 seconds)
done (took 1162.946304263 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.695961062 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.69463724 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.699330616 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.697070326 seconds)
  done (took 28.414747931 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.704567641 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.69767855 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.697701753 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.697445748 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.701457824 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.696875622 seconds)
  done (took 11.826090394 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.689921566 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.694310112 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.69591359 seconds)
  done (took 20.707631727 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.769354948 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.075024368 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.82543227 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.111107503 seconds)
  done (took 9.409526023 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.701330167 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.699649955 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.698020212 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.699278412 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.707138278 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.707015789 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.699081659 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.698149016 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.706271727 seconds)
  done (took 16.948518149 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.701998836 seconds)
done (took 92.637883072 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.946432791 seconds)
    (2/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.792734554 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.361949809 seconds)
    (4/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.881993302 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.761059444 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.375082263 seconds)
    (7/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.142784042 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.834859979 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.698440024 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.653370863 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.718629047 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.757553193 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.372286521 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.732308093 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.718018643 seconds)
    (16/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.796971 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.858640349 seconds)
    (18/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.851617485 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.726084303 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.831749851 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.698306657 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.120829912 seconds)
    (23/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.20467814 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.719008386 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.69784462 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.675445481 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.791133617 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.99907803 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.935051212 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.936974104 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.892034618 seconds)
    (32/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.883472172 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.081662479 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.702248109 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.745543387 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.928910044 seconds)
    (37/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.779128743 seconds)
    (38/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.801234755 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.701802667 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.866449887 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.802504529 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.861977529 seconds)
    (43/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.791099142 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.82867147 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.698670246 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.332172192 seconds)
    (47/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.2657869 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.026429564 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.701425901 seconds)
    (50/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.343470833 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.974484646 seconds)
    (52/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.70336546 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.884151849 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 1.914923537 seconds)
    (55/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.011723839 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.394961401 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.725307349 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.558579361 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.952545615 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.700755872 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.851341617 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.721843415 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.792446374 seconds)
    (64/309) benchmarking ("sort", Int8, false)...
    done (took 4.566106883 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.702276266 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.379657872 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.795217979 seconds)
    (68/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.948444618 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.76255417 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.702904616 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.823411065 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.698714309 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.842499172 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.063817889 seconds)
    (75/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.780867354 seconds)
    (76/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.883628335 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.009408344 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.705516172 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.70482209 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.794480128 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.518198329 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.834846579 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.782752294 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.702856049 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.52856535 seconds)
    (86/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.063453239 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.701174503 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.91336589 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.884542565 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.089199462 seconds)
    (91/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.852842751 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.587350721 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.784158828 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.940249682 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.728605195 seconds)
    (96/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.007215066 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.72454438 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.052732587 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.705258087 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.763058159 seconds)
    (101/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.702473859 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.321333866 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.919574968 seconds)
    (104/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.730251622 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.02343556 seconds)
    (106/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.728280908 seconds)
    (107/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.781937391 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.037467345 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.796555918 seconds)
    (110/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.802287013 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.804154914 seconds)
    (112/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.71472624 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.852119523 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.077883428 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.704697809 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.272109729 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.828222688 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.732644861 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.010139216 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.787004557 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.396322985 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.836786519 seconds)
    (123/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.034861289 seconds)
    (124/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.706612002 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.817548467 seconds)
    (126/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.167275113 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.736591841 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.832260398 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.701899015 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.457876435 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.100128175 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.088078384 seconds)
    (133/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.925852068 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.953633092 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.704468691 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.890559383 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.663206355 seconds)
    (138/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.731629407 seconds)
    (139/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.718062959 seconds)
    (140/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.996161 seconds)
    (141/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.939030071 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.708037307 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.384974971 seconds)
    (144/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.842349332 seconds)
    (145/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.994328808 seconds)
    (146/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.724456735 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.957527142 seconds)
    (148/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.812993404 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.892231307 seconds)
    (150/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.705262987 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.127859913 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.823823343 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.70334636 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.983236846 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.720253007 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.944635514 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.784166259 seconds)
    (158/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.99416683 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.710563318 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.799111613 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.038129337 seconds)
    (162/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.706298109 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.726902316 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.704974905 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.387291764 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.808863814 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.86392753 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.912495491 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.824828436 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.053058556 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.59846767 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.709831634 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.900368227 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.741027199 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.708966206 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.222866885 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.712799375 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.706061451 seconds)
    (179/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.034003414 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.06155533 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.726326506 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.828842482 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.031992502 seconds)
    (184/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.872359349 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.013896126 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.998600141 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.704977641 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.993850205 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.631029708 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.710798604 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.733144723 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.072436269 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.037411681 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.091440136 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.479738009 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.705386271 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.821224201 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.016721517 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.806648836 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.773237554 seconds)
    (201/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.706786013 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.336535355 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.611099766 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.733257664 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.842235141 seconds)
    (206/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.783928187 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.497504326 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.792636062 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.940717777 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.839129331 seconds)
    (211/309) benchmarking ("sort", BigInt, false)...
    done (took 6.714012239 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.707661502 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.356275675 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.909035141 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.707735028 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.327555387 seconds)
    (217/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.144125587 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.709269226 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.866022386 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.011733188 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.881005344 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.945493305 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.650015644 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.836886394 seconds)
    (225/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.2003956 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.775321238 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 5.471608207 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.549411915 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.735907405 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.146644788 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.722394366 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.709816085 seconds)
    (233/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.890823926 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.971452297 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.023360128 seconds)
    (236/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.84177745 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.581418342 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.023435067 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.055479611 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.715796812 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.709998461 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.821614654 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.70773351 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.332180997 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.709495786 seconds)
    (246/309) benchmarking ("sort", Float32, false)...
    done (took 6.066687156 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.948384138 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.713235628 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.127023517 seconds)
    (250/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.795819803 seconds)
    (251/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.874587642 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.71637888 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.041003359 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.716889387 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.707169109 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.522110385 seconds)
    (257/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.842406496 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.101404664 seconds)
    (259/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.860900647 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.851586371 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.715104145 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.786623902 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.822565648 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.816590463 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.494608227 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.364247667 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.031924473 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.824226371 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.91980345 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.845352601 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.83704721 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.723592718 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.156275705 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.710913134 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.939029691 seconds)
    (276/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.736845838 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.864591786 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.709924239 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.347139795 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.935651563 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.023946588 seconds)
    (282/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.090730514 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.722732465 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.498030848 seconds)
    (285/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.707714902 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.658621868 seconds)
    (287/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.715839535 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.107716944 seconds)
    (289/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.093051772 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.505889555 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.834782614 seconds)
    (292/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.106182311 seconds)
    (293/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.71435621 seconds)
    (294/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.801332535 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.834970783 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.710539389 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.876540737 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.70924924 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.714178267 seconds)
    (300/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.097143858 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.751026105 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.031886654 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.858184027 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.808882028 seconds)
    (305/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.711529935 seconds)
    (306/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.796442656 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.269428211 seconds)
    (308/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.786549986 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.446338773 seconds)
  done (took 956.906421273 seconds)
done (took 958.598972588 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.735901424 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.735581436 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.712917791 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.734533588 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.825769516 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.759148681 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.726074521 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.717383792 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.765095945 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.763648562 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.712481805 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.758820395 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.714476654 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.715096357 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.714407968 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.739320318 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.01874789 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.738180398 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.734874762 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.725980488 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.7305128 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.71165414 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.762700816 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.759598396 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.717881899 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.718510496 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.719215372 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.732678495 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.827077263 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.716391094 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.721673656 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.726196631 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.015736984 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.733415758 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.710715492 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.732961288 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.726650363 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.728344758 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.721370207 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.746831645 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.099936417 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.744929222 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.714161135 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.715948145 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.716165095 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.721823821 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.714889252 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.723706083 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.735123444 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.737577711 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.096783142 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.763755668 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.7187954 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.71816554 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.729640929 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.716263294 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.719845108 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.738194321 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.735318256 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.738639425 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.002148102 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.742170482 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.720334193 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.734036689 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.724672665 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.133066666 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.74561195 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.724766467 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.102724908 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.751736782 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.134514842 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.758274946 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.718761407 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.732428436 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.749208432 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.020467358 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.734493378 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.717040367 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.727798252 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.715585233 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.729891522 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.737417241 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.722493485 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.717395621 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.73877858 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.765484445 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.730703796 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.718176791 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.734086188 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.737868555 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.726948883 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.728102682 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.722812428 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.714179675 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.733840539 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.722191031 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.72060803 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.718909319 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.72315955 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.731424129 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.10287516 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.771527624 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.714016825 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.716667336 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.718225892 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.731196137 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.102848543 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.749776846 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.743954364 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.767961862 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.718934956 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.007219897 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.743688422 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.739333964 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.728691672 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.724225353 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.719080761 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.007973965 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.120274324 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.764093367 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.720438303 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.718308124 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.741924248 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.721141872 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.716974436 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.02283039 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.743130587 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.740863778 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.848625847 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.73252916 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.752648756 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.718605621 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.724177697 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.774654878 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.742747305 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.753371182 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.723372164 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.742366362 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.737934829 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.716763004 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.73163289 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.732336118 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.721872885 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.729106906 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.715297903 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.770737008 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.740659858 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.740464838 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.741313176 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.843561994 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.716304383 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.008436497 seconds)
done (took 270.599778116 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.798467647 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.717153881 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.810363648 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.718677148 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.806738139 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.793010969 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.719684429 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.719980814 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.719599078 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.203339851 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.717199476 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.725335279 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.7204924 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.723349435 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.788062848 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.721422199 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.718586716 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.165216231 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.722454147 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.802093062 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.718069182 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.721798522 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.720111248 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.206974694 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.718269204 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.719747945 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.800179806 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.724034804 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.155226879 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.721836103 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.724941525 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.156006209 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.803787142 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.750014395 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.729803246 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.725348673 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.809658127 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.732064372 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.790075437 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.79026668 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.816653444 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.754737953 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.719630829 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.717034227 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.726308792 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.719834916 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.720255215 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.752869654 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.722843167 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.725523082 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.149021515 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.731279213 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.731575136 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.721330956 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.722874143 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.751770433 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.723884196 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.722354161 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.8060562 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.723344249 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.789299878 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.209481237 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.2169449 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.725952156 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.721389751 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.720578667 seconds)
  done (took 175.222742307 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.787113457 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.800967668 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.785209715 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.723296584 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.769491811 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.789446252 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.723538107 seconds)
  done (took 14.030027936 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.728913503 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.723377639 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.773180284 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.773999001 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.721820856 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.883292959 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.723325348 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.736618642 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.728904269 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.74976642 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.725491801 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.724053171 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.727372517 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.725639339 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.773274026 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.740027827 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.84005 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.729652176 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.726040545 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.874459219 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.727919731 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.7298458 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.752907831 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.737504285 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.725766048 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.731940582 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.301898605 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.724716646 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.726142218 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.725516019 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.722716833 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.768282443 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.724574214 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.724961406 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.725051887 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838610782 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.725402614 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.727127362 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.724371548 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.726898755 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.725288595 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.724753526 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.725083763 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.726359239 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.72414437 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.7500556 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.724343444 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.725026236 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.727807217 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.726288957 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.754187868 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.727727731 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.725377367 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.7308755 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.771311143 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.730999161 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.726601133 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.726312176 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.726170616 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.72390767 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.875915808 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.774733195 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.724171477 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.775792018 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.725833401 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.726246751 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.724191932 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.725360546 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.815969232 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.726211732 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.775766966 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.726992567 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.886074071 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.750346021 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.728573993 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.731961401 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.730198543 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.726203651 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.729003547 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.735978657 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.72510698 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.7273034 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.735737898 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.734686056 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.726577622 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.840004724 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870100298 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.727766167 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.729124661 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.736895533 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.728024919 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.772962606 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.72650859 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.727069693 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.784082181 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.843152212 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.754402006 seconds)
  done (took 191.702390258 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.734562 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.735983442 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.730512609 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.742293294 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.729589359 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.727657828 seconds)
  done (took 12.058150338 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.72913929 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.730455374 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.727032431 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.726362189 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.72563028 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.727081667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.727572479 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.730833101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.730845036 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.727149641 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.72854578 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.72859929 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.731012457 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.728714708 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.727993736 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.727307268 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.728852855 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.727871292 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.730418154 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.731201357 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.982903784 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.727426138 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.727905562 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.73424396 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.733103381 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.728921637 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.742191576 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.730904034 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.731114032 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.738678098 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.732466257 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.729528965 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.733340506 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.734562107 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.733717494 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.733496272 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.734228288 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.730323597 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.728576908 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.732129371 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.730106542 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.729144965 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.730734501 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.731198841 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.731124439 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.735188521 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.737383053 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.742317199 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.730789205 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.735068493 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.732453177 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.731038705 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.733542829 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.731081883 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.734379656 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.738576439 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.732671405 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.731992296 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.731922123 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.73294585 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.735659801 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.729533244 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.732600177 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.734051941 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.738507827 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.730358606 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.734120219 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.733718967 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.730378145 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.732847093 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.73301561 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.730788568 seconds)
  done (took 127.591289563 seconds)
done (took 522.267940521 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.029060905 seconds)
  done (took 8.689362413 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.809897085 seconds)
  done (took 8.818763406 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.581940422 seconds)
  done (took 10.25511354 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.759014559 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.757985126 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.757528899 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.749409804 seconds)
  done (took 28.725830563 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.926351402 seconds)
  done (took 8.600640644 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.767874106 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.742372443 seconds)
  done (took 15.252049643 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.798567326 seconds)
  done (took 8.471273321 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.076136386 seconds)
  done (took 8.756465973 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.76532642 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.765310374 seconds)
  done (took 15.22758775 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.745693741 seconds)
  done (took 8.422681657 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.96255783 seconds)
  done (took 9.739162917 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.778327825 seconds)
  done (took 8.522518218 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.799007582 seconds)
  done (took 8.474911687 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.82568723 seconds)
  done (took 8.501984372 seconds)
done (took 158.120503142 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.749699419 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.74659979 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.748245988 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.745597738 seconds)
  done (took 28.66224819 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.777410958 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.786739865 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.78076337 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.793798024 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.781518497 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.777626744 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.770312568 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.771980486 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.792389241 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.781859208 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.779132592 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.780718286 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.779806669 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.771218706 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.784808574 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.78107286 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.789932325 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.780813946 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.772846546 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.780394403 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.749253445 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.792210755 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.780856063 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.747211549 seconds)
  done (took 44.360465748 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.938012318 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.820252579 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.902532864 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.801735217 seconds)
  done (took 9.137269787 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.797736082 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.798550833 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.809881381 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.848809438 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.873042952 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.808056403 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.773257577 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.769723018 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.755152188 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.800754256 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.876954441 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.796777152 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.885548753 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.747806008 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.927838499 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.746500976 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.749265429 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.800428049 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.849063342 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.863475203 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.748137976 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.798645842 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.802545591 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.797461315 seconds)
  done (took 45.10279721 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.749224206 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.755979433 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.754959256 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.748768359 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.750515185 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.748601738 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.753140499 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.749249082 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.770292044 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.750546072 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.747850298 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.750896768 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.756042985 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.749523313 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.748899625 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.762989921 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.764436966 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.750283724 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.75341768 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.7556592 seconds)
  done (took 36.745916422 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.750808376 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.594624763 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.093910731 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.001216463 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.751591184 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.746070752 seconds)
  done (took 30.614600904 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.76288667 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.754220007 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.749316323 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.806776888 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.889553747 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.757276215 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.750443042 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.758960825 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.795191368 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.813976985 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.76879659 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.779990871 seconds)
  done (took 23.069644944 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.748814031 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.751027269 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.750858959 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.760539428 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.758900702 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.758822032 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.757846996 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.746499871 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.761781005 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.767846285 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.75574014 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.759846193 seconds)
  done (took 42.763183965 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824939969 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.618921967 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191295707 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210062416 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272581029 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946823961 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.745753713 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.841923857 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.751115681 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.02039165 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.105497037 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953553818 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.991085236 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.529487734 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.752469558 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.218333136 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036043621 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96440258 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773892888 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369275873 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854438499 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298501349 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.422715618 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.859345349 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948399411 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.870769898 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.005423307 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.702487887 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797428771 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751092777 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754087861 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.750091107 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021963636 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871241173 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819319605 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754095731 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.165503653 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.452319577 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.761998867 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.42859615 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.285657147 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.86684216 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753678986 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.751264356 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.676747442 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294932156 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838709278 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.751265728 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.450566502 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.752327156 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757100859 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825343481 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.756153834 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.561828833 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438416369 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.016541653 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.75044985 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75502844 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314523808 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755808995 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386353688 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.685457762 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.848068667 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.433555176 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202507193 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.909043417 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.754548305 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755076548 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681690623 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.425784915 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867778009 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889699868 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.767797857 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392641855 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046993582 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.146519713 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803685736 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024261287 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.572273853 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.68242655 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969346363 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.69728372 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679828053 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.590458847 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.677859742 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966960614 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784487313 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.350170309 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786824932 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.834169951 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.760604196 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765700226 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753535212 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.966392667 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.646134852 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.751385925 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.030137553 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005155052 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765837194 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836746267 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681737967 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.750138445 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998442711 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.957955512 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.036830124 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.224246992 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839313663 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.730407643 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.762187439 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.705842579 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.76072036 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.020972069 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811067462 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764930006 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871379711 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.701274133 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002982997 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761721997 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.849140013 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.096104156 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990568562 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.090762737 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.998753333 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817313201 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.759416205 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.753815933 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.441372537 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361135544 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.972936054 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.768582729 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275942553 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.757693446 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.754089794 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691744931 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.412263914 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.093604491 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.831724822 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.968074597 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.753674077 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024448484 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.677902979 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.891242276 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738842817 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.963205868 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.403825308 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.834864896 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001884677 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.032952961 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.038779 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758074976 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768097847 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84742723 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772128122 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.228366801 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998456255 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.753617125 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.754709855 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.442423707 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.808551655 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756500456 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.757363329 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307640126 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024066381 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.774761572 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.754433025 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628833622 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.765212867 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816667125 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758032448 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.759788735 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.276657411 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.262747381 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.760637955 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.414796323 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971117706 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757515122 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.377843033 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929129672 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.769852073 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02326386 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820156792 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.680959899 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.454352631 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.456059806 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757267073 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.684433024 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.757870185 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75900083 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761612504 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.946397951 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030137254 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801740125 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.435857552 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.859099815 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760328923 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.760492598 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756161529 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.250047993 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76576912 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397793165 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.762106647 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883938951 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.769444011 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.68139701 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.761378703 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757186598 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.755954754 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.709131276 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805632645 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.440834081 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963685282 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001226574 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.16309475 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764204536 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.431382066 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.872870551 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.769092511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.039653013 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313289184 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.86133098 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825141292 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.762572681 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.455133987 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489135512 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320799901 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062808905 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073816009 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108783516 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.163053841 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.080204638 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845311047 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984401162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.279086481 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.814708992 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.844517104 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697415713 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768593655 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.41016455 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108580213 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764659007 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975066449 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050711558 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.106283033 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892937719 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962193061 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789756904 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.599081225 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785868485 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.291779147 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781334122 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.206790989 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962474816 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841187143 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050474933 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.841976417 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.759562726 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103456728 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801660062 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.468076253 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.113346154 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.168508995 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.219181091 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996253589 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.763423008 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.198105464 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1066015 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.972105739 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.879908177 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685998142 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.765306811 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.765528853 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.771009228 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.736087419 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.589701203 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.001478958 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76298714 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986112257 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.909097239 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126186266 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.664303974 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.760716422 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757987842 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006547848 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456114949 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913893694 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.09379132 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.332344733 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768808385 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.683466244 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685798137 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.460320576 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.764412454 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725760302 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97488058 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.864538889 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.441102168 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.158855496 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068848062 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.002733378 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.771261286 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.033167473 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034134345 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.251590841 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779483291 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.856401656 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.061496672 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.448759066 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.974779265 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.987859855 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2929042 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974009497 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214918636 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.73310043 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.762825556 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968361068 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.976077401 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.122426594 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937185974 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.474670958 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.775840457 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140981727 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822329516 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.12551229 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.947063416 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.849401497 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76981124 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842388219 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767905848 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.769531376 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.77080547 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774055309 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.127365442 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879524318 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.775968815 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840935029 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795261595 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.33206371 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.772969735 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036000332 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122274369 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093627818 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829473896 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.765022695 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775173907 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692382603 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891372881 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.206166135 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036319 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.883794043 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.897166316 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78596067 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.067985567 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.043407131 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071751796 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037750299 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.647064317 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414534297 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.882046553 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.981084424 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770522725 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.967898477 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986484396 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083957082 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337523123 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.920902306 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956067137 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03704071 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.125237978 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.767792903 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350470245 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.770140325 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169834994 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.805142273 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.130024307 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022963572 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770906551 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887687874 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.768703361 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.973874937 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.216978409 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457245719 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113854791 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.626450037 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.770089349 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041994144 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097607317 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070065554 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840288608 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771422097 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.454058476 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898107554 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.640376065 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.999923591 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765229516 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967981369 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.474835366 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.769874905 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040919199 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071759556 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.765034832 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.677049596 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799884334 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.77182723 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98050098 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991234971 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016740994 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771572602 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.773501449 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.575892029 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041615456 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829313218 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693071571 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.763480461 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812913677 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.991841697 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784919436 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.281160014 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.46608135 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058492429 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.671743582 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784574634 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.196093189 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144041487 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098890995 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.286413586 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991869004 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.320743371 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.641170157 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140891853 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.770293972 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.192375458 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148409656 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.769203267 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.296624692 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877505425 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.043905386 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094443714 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.784436726 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.52018434 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.800689587 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984913492 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.125821274 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701402268 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.771854371 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.817246525 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.770851576 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.754352118 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.776753464 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.715281016 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231572949 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.609940052 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327529085 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.769297625 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.833342751 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.12288318 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320963825 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87475249 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788823696 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775753336 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.471775516 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.056306555 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01489002 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.292625309 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.863243912 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.772821796 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772132519 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691700018 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951392117 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.955943505 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071338587 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.14304883 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.877815353 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772312787 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.978523396 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973941004 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.141192897 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903262706 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.918135537 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88333294 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.710547985 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.476597922 seconds)
  done (took 1608.77096211 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.794555702 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.794588928 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.788823811 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.822766125 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.807556813 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.800167118 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.844799445 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.786486247 seconds)
  done (took 56.139974274 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.779074052 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.93031194 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.782155382 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.782289145 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.779402617 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.77858719 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.942235994 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.79178552 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.783235947 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.782144718 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.778414691 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.774554026 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.062913555 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.800906693 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.780838151 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.188791922 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.784510743 seconds)
  done (took 73.018595199 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.798132148 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.204090983 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.814885314 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.787422367 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.846766288 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.783944884 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.902083649 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.828649727 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.783964413 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.031524705 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.081084961 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.804352112 seconds)
  done (took 89.378385336 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.797647665 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.785454365 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.788359658 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.784952121 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.787077717 seconds)
  done (took 10.663236456 seconds)
done (took 2100.119566522 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.018459921 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.979213979 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.036935407 seconds)
  done (took 5.727663518 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.926472008 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.977942834 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.091254572 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.097632512 seconds)
  done (took 9.813282967 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.093225241 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.150083026 seconds)
  done (took 5.955469357 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.105804614 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.814405122 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.198341342 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.786714105 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.787645718 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.788435972 seconds)
  done (took 22.085952571 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.788524486 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.787010066 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.787027998 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.788922239 seconds)
  done (took 8.868217589 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.7850919 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.466472517 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.78274456 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.796593886 seconds)
  done (took 20.546614193 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.936052771 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.902483112 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.932072216 seconds)
  done (took 7.484333428 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.010572745 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.582282471 seconds)
  done (took 6.308759872 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.944900777 seconds)
  done (took 3.66103608 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.816748018 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.058475889 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.27778594 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.310209791 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.376907329 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.610147784 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.109263026 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.007744143 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.227773196 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.242215645 seconds)
  done (took 23.754732063 seconds)
done (took 129.054817466 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.127578142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.812412107 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.988641238 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.140803373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.025536657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.986935813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.010888869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.131307338 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.82266233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.807756515 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.142401307 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.022040946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963399265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.803695367 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.969281638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.805658279 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.017365901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.147543839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.826665552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.040068949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.019827159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.786382357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.979587639 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.800233903 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.020741352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.939061425 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.330169825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.808697955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.97120813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.342779405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.940590761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.187945162 seconds)
  done (took 165.435974611 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.788134377 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.787653285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.7895922 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.788762004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.33338154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.787362899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.786619151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.787503099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.196096361 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.184988922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.786806211 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.325164222 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.791362908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.788904237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.791452742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.789728846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.337216321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.790353936 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.788536296 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.78917154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.788740481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.165255261 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.787907799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.177333009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.330659004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.787564051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.788178285 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.788884893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.788720562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.787721017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.790472679 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.791043041 seconds)
  done (took 206.702633723 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.790841265 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.791185919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.790813183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.790168184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.790673394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.790413419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.790979703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.791199033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414063282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.404692237 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.789887584 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.79186892 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.793006695 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.790159017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.793166875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.793203474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.794257283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.790615892 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.792035756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.792806543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.793806823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.514314082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.791431728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.516200139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.794082209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.790052285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.791975848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.792374024 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.791905312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.791785043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.793570733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.793055304 seconds)
  done (took 217.742119894 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.03584615 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.794230987 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.796780535 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.710109563 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.796143093 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.794448404 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.788286416 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.0418739 seconds)
  done (took 18.480998389 seconds)
done (took 610.08200253 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.173869328 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.007496491 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.968873845 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.816731349 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.071940222 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.860667719 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.813725117 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.883206032 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.625421001 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.888022759 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.474844262 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.835774313 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.571387401 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.841688127 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.936441312 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.876635629 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.360408663 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.464315714 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.989653664 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.892754738 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.997278615 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.710453181 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.894942251 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.659754814 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.597351432 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.763037907 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.838255748 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.369602084 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.825275558 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.974512296 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.500023822 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.072049249 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.830183815 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.81649987 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.871524619 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.849881218 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.017268887 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.826660972 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.945436864 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.504650894 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.89336807 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.523401853 seconds)
  done (took 99.35607664 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.80894456 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.802301066 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.802101402 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.802519051 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.809478152 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.801860272 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.800736827 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.802238643 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.799296998 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.804185903 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.803198109 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.811852595 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.803240948 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.811743437 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.80391307 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.804017681 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.804130579 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.810325418 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.802806943 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.806267589 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.802516551 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.80234016 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.799045908 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.804719538 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.805118954 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.805076907 seconds)
  done (took 48.651941384 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.799054407 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.971224706 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.040212634 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.816642445 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.796610656 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.800590183 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.816197316 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.801754673 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.802562467 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.798254439 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.898564709 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.802608975 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.817071092 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.042689984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.813027269 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.798164662 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.79906012 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.79888873 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.980542879 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813841424 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.819323668 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.800646425 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.820021791 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.812698179 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.799686703 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.800276786 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.803010643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.301061502 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.806661858 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.897491746 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.841806374 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.824583316 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.241841007 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.049114304 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.852271063 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.806352069 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.798585696 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903824245 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.803264072 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.798888904 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.817013725 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.80336432 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.041941592 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.323316763 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.812332673 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.796446181 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.307484816 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.911292953 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.83930669 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.807749502 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046542107 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.816053028 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.799758588 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.799601103 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.836480873 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.80188763 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.800329032 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.157307124 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.812352434 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.81794065 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.803450913 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.800594687 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98319117 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.806974242 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.973647939 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.807821141 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.803395792 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.800907743 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.047299829 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.817201005 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.336027359 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.81314835 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.801365531 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.90109218 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.979214125 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.332255685 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.811950716 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.985233207 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.26001413 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.823639408 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.806111222 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.286605135 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.828434744 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.806169959 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.803412307 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.801248877 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.799407661 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.847598783 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.816872151 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.249024123 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.333920311 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.174048729 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.825673063 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.813680188 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.802340219 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.156216122 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.808568381 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.802949367 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.037539827 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.344028794 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.815135875 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.807839861 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.314308215 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.814947515 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.819968603 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.809340487 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.052307868 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.814816914 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.844767929 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.802632965 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.806749495 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.803627003 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.819671648 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.809861021 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.801243026 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.304628875 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.921582226 seconds)
  done (took 224.462752031 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.803601426 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.805628145 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.802752657 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.804295693 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.799649628 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.802216766 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.801942062 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.800217416 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.803217649 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.802905827 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.803827998 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.801577778 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.804201036 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.807798726 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.809414129 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.805903137 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.405545326 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.802043363 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.80447985 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.798743058 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.448061313 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.805606622 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.804421066 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.799122173 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.800940293 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.804271974 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.803703522 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.807398787 seconds)
  done (took 165.478739409 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.803643277 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.916822788 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.819629244 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.833090769 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.81229461 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.804084016 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.901777004 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.820334829 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.80971084 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.803147915 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.804533627 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.865479954 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.811558973 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.904134379 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.833025449 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.911599421 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.908237849 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.81026781 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.804884358 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.805747327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.833780578 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.813911189 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.86483339 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.925866411 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.821246188 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917925993 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.820323477 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.805822144 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.80533627 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.917883927 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.819549867 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.864863457 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.830600751 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.821592181 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.925207516 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.917731409 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.908798147 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.906641451 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.810854271 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.806810174 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.806471302 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.806858612 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.921151663 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.821912342 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.809183722 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.921844323 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.820914318 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.808422015 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.808766551 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.80739689 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.82054039 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.823509873 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.87181293 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.933276802 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.8391472 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.826968312 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.904136794 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.930809614 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.806796033 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.904520403 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.81184682 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.920908363 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.823224218 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.808237855 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.809535981 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.811240637 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.837244948 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.913236675 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.909312082 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.811125898 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.9061401 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.841423782 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.815771147 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.80890613 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.808914053 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.921688886 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.918789065 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.840871802 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.842350708 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.835935345 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.818027819 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.809049877 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.809662163 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.825485196 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.811248748 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.920704998 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.921791128 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.811947338 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.809320924 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.808829374 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.807791304 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.832503502 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.929391113 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.840784796 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.911469721 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.871598338 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.877564696 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.818813232 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.822970678 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.813576705 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.871058353 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.819506068 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.821124682 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.099977646 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.86875873 seconds)
  done (took 196.003719771 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.175454698 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.854529545 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.864853049 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.130372326 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.155529054 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.820302028 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.851207441 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.855821716 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.879958244 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.041115587 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.930299246 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.873472674 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.841416154 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.831668559 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.855397329 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.880255983 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.864206699 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.212246269 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.057488395 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.989903564 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.842517594 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.129953488 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.162717497 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.431006732 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.903617623 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.24681964 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.42068925 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.986784979 seconds)
  done (took 59.831278075 seconds)
done (took 795.507585632 seconds)
SAVING RESULT...
DONE!
