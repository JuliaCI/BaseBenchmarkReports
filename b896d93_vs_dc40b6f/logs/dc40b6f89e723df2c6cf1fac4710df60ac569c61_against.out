cset: moving following pidspec: 17749
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.241044798 seconds)
loading group "string"... done (took 0.477311531 seconds)
loading group "linalg"... done (took 7.763171393 seconds)
loading group "parallel"... done (took 0.171721986 seconds)
loading group "find"... done (took 1.187032663 seconds)
loading group "tuple"... done (took 1.887734452 seconds)
loading group "dates"... done (took 1.28292287 seconds)
loading group "micro"... done (took 0.237671681 seconds)
loading group "io"... done (took 0.729825827 seconds)
loading group "scalar"... done (took 41.471746748 seconds)
loading group "sparse"... done (took 12.954610879 seconds)
loading group "broadcast"... done (took 1.040501774 seconds)
loading group "union"... done (took 14.215592829 seconds)
loading group "simd"... done (took 4.878633757 seconds)
loading group "random"... done (took 9.791602675 seconds)
loading group "problem"... done (took 2.011735512 seconds)
loading group "array"... done (took 22.742764345 seconds)
loading group "misc"... done (took 1.459855476 seconds)
loading group "sort"... done (took 3.677858154 seconds)
loading group "collection"... done (took 19.699906086 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.45838406 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140538829 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146257513 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131990103 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20602729 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138838793 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155983994 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.108877424 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.044475125 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178145856 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140973182 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.489799444 seconds)
done (took 5.142720511 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.215897243 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080983472 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092920073 seconds)
  done (took 0.921527533 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.089514867 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141452038 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090100623 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074438921 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072656418 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091162803 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073407347 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090181032 seconds)
  done (took 1.38646896 seconds)
done (took 3.374915297 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.723116479 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.282112186 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205376372 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.509932396 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.173173733 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212107288 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680201307 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.358161094 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.242190142 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100562284 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.128706392 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.441499246 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111845806 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685810032 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086413226 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.1238925 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169901311 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445780063 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.091108207 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0894718 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113897852 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.150168444 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087555343 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098475707 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166809934 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.091044458 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.184685983 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.103871996 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076744737 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.264935187 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201025915 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.701759386 seconds)
  done (took 10.89204989 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113768052 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135585122 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075263572 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.151825444 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133689676 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077723336 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097714422 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075110596 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121328749 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177982529 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113165993 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138872694 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089826211 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079101885 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114519393 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.226638512 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119558598 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116249858 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080413598 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101956339 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11800893 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109017909 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087851831 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105388418 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1647836 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203224645 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.1056915 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121319182 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07556567 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110014029 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140606122 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154223755 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07420941 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074554727 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17394324 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119855605 seconds)
  done (took 5.042585133 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187157098 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097321404 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16681 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161153907 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141524844 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15172544 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109358874 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.135385748 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259874431 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.112828912 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160163616 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139900762 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112210059 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076424594 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099173641 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074813099 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684711052 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161726136 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10978461 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112664008 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093853482 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081990196 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367987833 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081325256 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072017194 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096818285 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067363366 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1553085 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095446795 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.167335476 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096051953 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09774363 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128747883 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199018029 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107487524 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131968902 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09383421 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07448658 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175426718 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079979161 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092738028 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.1027053 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131686303 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132393665 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089776164 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075886232 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207205055 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091355295 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089407189 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.995900657 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.177738534 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.087385122 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071614306 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095111548 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.333069566 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093690643 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09231761 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073073479 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279879955 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.107672739 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093959784 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07420295 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093096763 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076274461 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395436168 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093999707 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.758775423 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079287144 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085606482 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095842647 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094105467 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083862599 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081686376 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111930689 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073209568 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094496864 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074039408 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093281703 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076207217 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111021951 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080622824 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092011723 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143488233 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.089607351 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094605486 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122500227 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.076849141 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09127375 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124908722 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078430511 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073672533 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131613697 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074693732 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090574227 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110562323 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076960445 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138303582 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091726421 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.161655957 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074626412 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121364997 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.079329566 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124706613 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089795958 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087406379 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094443751 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079361984 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.090918704 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073345143 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144085619 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091239 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076439165 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073996182 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106836246 seconds)
  done (took 22.15718738 seconds)
done (took 38.843973373 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.350176392 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106296839 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105908939 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105696848 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105063562 seconds)
  done (took 1.599824333 seconds)
done (took 2.402249089 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.311020648 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170114008 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092838206 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165971442 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071279328 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190276482 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156783266 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.089314441 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20115027 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072262862 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160633089 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089500747 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07266165 seconds)
  done (took 2.671877129 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090496587 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110823413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07853221 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088844428 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090795736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090198738 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106512414 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095446009 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107199976 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080379331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07109359 seconds)
  done (took 1.809230782 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089658366 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091123931 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098745709 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087710617 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090054837 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088432755 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106150968 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094360778 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106063932 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080866679 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070693613 seconds)
  done (took 1.804008836 seconds)
done (took 7.078373192 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.094518719 seconds)
  done (took 0.888340189 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.058969045 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.583309741 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119918651 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166886107 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.324633401 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211850694 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.600864665 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131948995 seconds)
  done (took 16.188719445 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108176525 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.112924669 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075955281 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096853804 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07705757 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095364016 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.079348459 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075060519 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.097984533 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078975622 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097268431 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079531645 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094092102 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079197169 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096513095 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077269044 seconds)
  done (took 2.280271138 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.113792945 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112415648 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101832975 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085024744 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.101456813 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080757002 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102908292 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.082476428 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.098048687 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080669059 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102960474 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083125893 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102113151 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078477174 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101340298 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085014677 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098302612 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082684623 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101689347 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100212151 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085413693 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098019325 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083170111 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10232615 seconds)
  done (took 3.168782305 seconds)
done (took 23.326975405 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162989933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081476673 seconds)
  done (took 1.046743922 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097313399 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11497303 seconds)
  done (took 1.020739171 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103696851 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094704033 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132601847 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094075778 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096247912 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077622411 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130192705 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096103636 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078858996 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077947385 seconds)
  done (took 1.790114608 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082693898 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080659412 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10436281 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115471297 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087540096 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098807803 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082250448 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099731497 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083994286 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094350817 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084806333 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112730189 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.082894651 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114445888 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099863504 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083205214 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105939922 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081220133 seconds)
  done (took 2.50352658 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079558347 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078173654 seconds)
  done (took 0.967692131 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080696174 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075520171 seconds)
    (3/7) benchmarking "month"...
    done (took 0.098523763 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096925464 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076763032 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075347857 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094056177 seconds)
  done (took 1.407679221 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.457010386 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140374021 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267137852 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080376094 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119211107 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.33014527 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.094080097 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.081098761 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100338513 seconds)
  done (took 2.517841408 seconds)
done (took 12.061135953 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089042347 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096824628 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.126453119 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468303652 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.115893899 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074650758 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159239324 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256612955 seconds)
done (took 2.199650262 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.146394751 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33642484 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122191743 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069992662 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094950982 seconds)
  done (took 1.43814992 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075774905 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078256385 seconds)
  done (took 0.970130361 seconds)
done (took 3.368868265 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076392387 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.127020257 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075466578 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.072589378 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096141938 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072299152 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092904488 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076055359 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074657849 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092319617 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.075557683 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.09267225 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075861024 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074478836 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09096188 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072480439 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092039908 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073017731 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072369992 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090846826 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072208746 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092471397 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073434596 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07163353 seconds)
  done (took 2.824661425 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103782591 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094920614 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08206526 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100882264 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080394242 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100693965 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080115361 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094682219 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080998469 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096082771 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078760074 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097465648 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078158861 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098365615 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077892839 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097933838 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081148895 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094252104 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077685213 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098688537 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081156262 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09496638 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078637563 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100522487 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079236672 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099859351 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077564661 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094979895 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081429546 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098788359 seconds)
  done (took 3.502227946 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081607192 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071648182 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091856054 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079287561 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092228933 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078186549 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072518252 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092021674 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077010642 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091056322 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078561546 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072062006 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091796892 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077363114 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096877251 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076853083 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.213941846 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073429349 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071701253 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096520857 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07566643 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090901776 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076183828 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072206331 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091884495 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072128009 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091396278 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073633149 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072205233 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091800749 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.075170897 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094540819 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073699915 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07960932 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094929497 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07282562 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094576319 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073417839 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077203615 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091400857 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072668406 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090753249 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073290989 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080284286 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095188221 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074934098 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09174398 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078161784 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076056282 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098677697 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072375262 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091287761 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078959317 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096441163 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078067211 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072852009 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093069848 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072950179 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096065695 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073461419 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071310297 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091992344 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074631505 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091883767 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08989208 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078712714 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091994054 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07831961 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096271141 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075387453 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096527102 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.088182011 seconds)
  done (took 6.915345539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078595838 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101556753 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076110328 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074777606 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091207281 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074247519 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099908909 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073852249 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09351726 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092211608 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091683054 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075912708 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075243197 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098612696 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075759604 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096897145 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085216352 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091612968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074410467 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097307397 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07476465 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099144785 seconds)
  done (took 2.72032183 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219727308 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102354776 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139415949 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092263266 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112585656 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110308372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080764483 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100422521 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081255147 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103129706 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083056956 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099657575 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1109668 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085313827 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102683746 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085866098 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099457202 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085598222 seconds)
  done (took 2.720548903 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089557377 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094981081 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101473479 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09475094 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076943373 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097082635 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08351853 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111081661 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078876255 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09493201 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08643737 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096963251 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08024099 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094654291 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079204494 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094583694 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07975002 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075868342 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106733223 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10012445 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08275403 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106158064 seconds)
  done (took 2.837886406 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09439682 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09709584 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099570903 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099727168 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076064022 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096661169 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084868757 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094837468 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0868448 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097042841 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077337868 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095616882 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08483744 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094986058 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084086529 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09471261 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080184397 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077729979 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101043403 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077440688 seconds)
  done (took 2.623705344 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118068179 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110337369 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092619267 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12213608 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091087229 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111429323 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123767963 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094280614 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113222644 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107364599 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112370015 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091263837 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123188797 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117286156 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09061656 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121256584 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11977545 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103814911 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110752477 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092976933 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123716777 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091039179 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121652513 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109159669 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091561288 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109609679 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091822085 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117399807 seconds)
  done (took 3.859938282 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07691472 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076179597 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095131009 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076465818 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.075632715 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097100618 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075374898 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09587145 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078753131 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074833498 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.098001114 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.078764458 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100215654 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078770876 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077349246 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097774396 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077914073 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096140216 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076644128 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074782527 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098037883 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077465738 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097675875 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076596789 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075559048 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097889358 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075848861 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094794547 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078766933 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074675392 seconds)
  done (took 3.361188104 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085135419 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100687703 seconds)
  done (took 1.025335556 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074877023 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111045767 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073975946 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078806027 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102623202 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077684115 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108882456 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084015349 seconds)
  done (took 1.547540589 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095088906 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.117192074 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085296994 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10735268 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095029728 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111407072 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13744568 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102821929 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.082506247 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094255597 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.093172259 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095542161 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083608825 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077508731 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103639254 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082445246 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097566285 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086748021 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104542899 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078874285 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101342362 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089186025 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097754653 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.0851399 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.096633029 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088513997 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.105361107 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.089491921 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098483249 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.090945817 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.081920239 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090587872 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080922571 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102050574 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077970909 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113398235 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090030698 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099915448 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085817722 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102778567 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086618612 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094292611 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.083391006 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101873617 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088880921 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100910254 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085477558 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075501738 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095051074 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079776112 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098249679 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07895342 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072732816 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108284132 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082993769 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116039576 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080837248 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102115403 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081870299 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101908833 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.083654458 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098701557 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079870842 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099518845 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085390591 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08026368 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104430577 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075151748 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091285986 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078131693 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104976014 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100001506 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106261664 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082031826 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102697591 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079010878 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100398701 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08404074 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104981256 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086109009 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100909863 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084888336 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104451099 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077440881 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.097342011 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084998334 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.07817587 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100152248 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.073885993 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111803164 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079310579 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097239752 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.074759485 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105813862 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08064808 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079498177 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.093464154 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084243365 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090467189 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083016878 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102783151 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078139417 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.105378706 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08388521 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102047759 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.086284001 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106694636 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077754307 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.079414745 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09368202 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082939228 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099063569 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085345356 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089033073 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081163805 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.078715868 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102642849 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.084822984 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099044086 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082011773 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105040481 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.084545444 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098846994 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074174216 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099157682 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082996034 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106008765 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086109563 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098303341 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077093981 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075678896 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101459826 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081220492 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102392253 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083128837 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099762595 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072322641 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097141229 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083755707 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.084429086 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097405973 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.077533739 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.101504112 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.078111651 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100045775 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.083727942 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.09812585 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077304868 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.081150157 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099556346 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076568846 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107483658 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.080267406 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100011215 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.080522157 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106479199 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.079636167 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102197613 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080739319 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100284277 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085018984 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075422282 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09714135 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079948085 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10672221 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.079751746 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095064835 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075036553 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082809667 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095665304 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080715963 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095841749 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.080723842 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102026262 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079847098 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098660468 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080192156 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091962619 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111224879 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101278461 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.084398844 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085961298 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102727381 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078544028 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10150537 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08359728 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102659199 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085058241 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102572298 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083049056 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099117576 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07462563 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101934318 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085814918 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076181164 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098712021 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076895353 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101156136 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.085151652 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10047223 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083155304 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078908045 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098117003 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08778602 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100435302 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080318164 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096550403 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081550526 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106140901 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083176777 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10287405 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.088154375 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100035492 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077022778 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105752164 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079962855 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.082771417 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096755861 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.074213714 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096672566 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084844161 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098969323 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080976352 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07134761 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105713143 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085288751 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097726458 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076371719 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101815649 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087690441 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098918425 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082311563 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080124757 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10445711 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110256357 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078110269 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080251115 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109191233 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081264152 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091905828 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.083464385 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099508057 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076506763 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099925012 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080978786 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079734165 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10519288 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.082213782 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092322934 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.080746295 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099840961 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077574511 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075734824 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105370177 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.080678646 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.099828002 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086588857 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104230425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083233157 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102266985 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081696661 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104012355 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083787709 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100473769 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08438281 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100158787 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077557689 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.079585713 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097452196 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078856933 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102686477 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082396806 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.097109224 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08426176 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100294107 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07947907 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.080324105 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103868718 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077844825 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098748709 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076882841 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100137844 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078893066 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.076760904 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100746193 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076232388 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105678613 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08183527 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106156616 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07885941 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093324362 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08378665 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.080263676 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104256144 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082879499 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104757033 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.078379168 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102206181 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.080796244 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107098553 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.076113738 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.10786723 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08408223 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098029066 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.081920468 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.077468931 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100226571 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07696115 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10062345 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084395678 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096933958 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082802676 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101731451 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081956608 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.077519313 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099848817 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083261215 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097771217 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084458573 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091263376 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078282597 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076831158 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103569413 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08567293 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104374838 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079785729 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.109830147 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083981855 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099900583 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.075230373 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.084953729 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105248687 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08385776 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106909658 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076618911 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100403019 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088307045 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09263745 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079828985 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098529726 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.076885179 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084276448 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104241965 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.086566171 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099397168 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077035408 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095126687 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084740791 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099510605 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073727757 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078979267 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101849948 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080010312 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099933979 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083645061 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.099288053 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085124391 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105121127 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081752037 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.079361938 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103186113 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074582402 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096213128 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077032843 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.099489915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08402971 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.074545047 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096449024 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082450683 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.099954829 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.078995085 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100622333 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080464099 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084233617 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103860137 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08017394 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108549318 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072364449 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101544703 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082316113 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102238793 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077694118 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101462739 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082910801 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083531768 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107040274 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081100874 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099934638 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0820016 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100438162 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082550221 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101606738 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083925159 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.076085757 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105549254 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086212118 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100341667 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.079625074 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098016173 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.079099395 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.103172886 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084458797 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100148071 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085792236 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07974281 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101016693 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084336427 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103526255 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080818253 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104388707 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.079250378 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10487344 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07739313 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.1067284 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.079719535 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103094646 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081318236 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07503816 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102750074 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082084884 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101229244 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.083520883 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103789592 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078388862 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.076380297 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100344894 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.080121893 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108500929 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086912851 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101369101 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08152486 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097028105 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075856299 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103501582 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.077379663 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.078760027 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102110634 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084330538 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101404953 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079373719 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101172187 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.087519073 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10463318 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08473342 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.075243249 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105174262 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083655794 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102674732 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07925502 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.099729314 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084251499 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104217684 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080697577 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.096905101 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089178692 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.102277127 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086269186 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.079197648 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100481422 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0779456 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096953136 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084870569 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10008699 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086641105 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100325982 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084461799 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108636876 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080128584 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077980679 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110184313 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081493757 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107123549 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077712338 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.100192076 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085426629 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104339037 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078490005 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077378274 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097766923 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.081034151 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.099163751 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077504594 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110188078 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087777373 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101136053 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082649636 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080828946 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100018501 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07696773 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099082774 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085293681 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10111746 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089700467 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.098032883 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.079017047 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077341804 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104803085 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081342813 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.103391041 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.076024657 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097826825 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.078702896 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.081026321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108034056 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081678743 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104603816 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081876455 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102487262 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079964863 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110345666 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.076141254 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103228844 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091174723 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105267074 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081429732 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084245906 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108965475 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083859319 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100250017 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084510043 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103185126 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078858735 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104965598 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085354506 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114279717 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082638 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098923183 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082459635 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.080369675 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.099722887 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.086355824 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106467862 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083807199 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105022779 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080857903 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106336528 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081828427 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105036019 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082777223 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101488035 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082815476 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078110043 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102638981 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.076754618 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106306305 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085391022 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103337366 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086983805 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.076775775 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110606101 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107321008 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084394972 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074979132 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.099083635 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.078820256 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098031987 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085514785 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076247311 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101920864 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081060083 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102560836 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079864785 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105687037 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.082338178 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105058375 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083902709 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07295218 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.101379373 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.081918099 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100345688 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078897874 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102681669 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086390709 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085148982 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110017723 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079302526 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102553395 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080263795 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101409377 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078473359 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.106683024 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082776349 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081353826 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099996673 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084339473 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107377384 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083394831 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105831613 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085960878 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10262486 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088191234 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106922838 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077427078 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075267046 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106982101 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080334686 seconds)
  done (took 54.955356609 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124486075 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106908584 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074536001 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095755531 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12005973 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079786332 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073658377 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101200347 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078729126 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109416023 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07419942 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095535839 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115285547 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103005854 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120872531 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109561147 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074102036 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099414237 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075492229 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098068593 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095684559 seconds)
  done (took 2.913550189 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103266059 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113713638 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09028853 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118146968 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106867641 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092300136 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111730855 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113517004 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095989928 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108749361 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116884525 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092728219 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.108491858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107243821 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088119306 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110572741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095537639 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107400234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112860163 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092116612 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11112498 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109792008 seconds)
  done (took 3.19417044 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089490526 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08130961 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103910617 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074121292 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103015618 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075197243 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108384526 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077572284 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086118889 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.099505055 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078170963 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.098527386 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084286151 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073725965 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100294122 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.07587062 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151769411 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109773119 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082438956 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106346636 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077146049 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.101774061 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077896948 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077425568 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.099701248 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091848912 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106441274 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084342403 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107809163 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.079511776 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082609727 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100131191 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080871173 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102372795 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081642523 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080600563 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108631775 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086400419 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.100199994 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079977875 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099440684 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.079619746 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082989032 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102414608 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079124835 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.096844757 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081340151 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082588468 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096388639 seconds)
  done (took 5.353783196 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115922407 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131998674 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104943194 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14412908 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118610541 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093084091 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105033216 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142817256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078141527 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080186213 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123534521 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119581576 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082318462 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111123868 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102676176 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084161691 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104626305 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080077575 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108927734 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.079102219 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109447633 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087161034 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118101261 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117024063 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087883044 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103097898 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079076901 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11003615 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.093292287 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111174903 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10996314 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091235589 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119672436 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10495535 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080948705 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10567662 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10070568 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105141403 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085480884 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098559148 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085915345 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109872111 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.086168729 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121559021 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10514745 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.085604876 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103663819 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076547309 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11607163 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086009733 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114781834 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118662379 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088242666 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104858117 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089623529 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120484755 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103536933 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082320468 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107529467 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.094227997 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098210089 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088520436 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117948558 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084262499 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114183192 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118723199 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.0845045 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11025981 seconds)
  done (took 7.980627856 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113467325 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110479605 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099375477 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121518196 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110988441 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088661199 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110373253 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087489996 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110579688 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11431081 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089652439 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158240083 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085267541 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117190872 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109375059 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089418477 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110817261 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088107674 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109802765 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087654469 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110462692 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12120862 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088529789 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121698722 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121974678 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086252044 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110547116 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089202916 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121483471 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1084455 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102116485 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110060766 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087724725 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12136276 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122559474 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.087778697 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105656105 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087715031 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110456553 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10862476 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087178168 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121510234 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08933687 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107051006 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087229813 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110550405 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120778418 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.101016837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11678164 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116389285 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.089089623 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121186971 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087350903 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111234677 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121205813 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13021446 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099700682 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121315139 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11024719 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099555723 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120707353 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129688914 seconds)
  done (took 7.533348588 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112779642 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117975225 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121731192 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074976774 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101497206 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090839508 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1036365 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082452591 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119763758 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099600858 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123587371 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11229091 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093645222 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120051137 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08713552 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114135531 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108783087 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088064801 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116070569 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107650302 seconds)
  done (took 2.99721242 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089258376 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121950975 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082234408 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109073925 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083510078 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109109314 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081666699 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104236113 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081464386 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105180553 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09373873 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115829377 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080194671 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109320372 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11272115 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088520965 seconds)
  done (took 2.468371826 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100964643 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123369433 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.10487688 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.113423351 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.081356763 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111733202 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08629912 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102883307 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080201884 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121646335 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088609858 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110879479 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083756986 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100271063 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.081736159 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108982452 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077410026 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083379925 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105468187 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103993242 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111985635 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085648771 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107777271 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081766775 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105972382 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083887162 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109729047 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07737975 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101059504 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083429027 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105541644 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088163445 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099193967 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084229639 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10040278 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077584654 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104498908 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085061742 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108294049 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084267142 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077460567 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106012207 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082459183 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105028709 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075449016 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106250517 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.076160849 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10815353 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082653642 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104966999 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084352555 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109695301 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08816949 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.113597701 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090763793 seconds)
  done (took 6.175230219 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095718028 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105841956 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07653948 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077446148 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106622559 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.082617429 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106751547 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083220045 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104890593 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07903436 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104604258 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086284637 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103261809 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085190442 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10400495 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086396015 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075708792 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105332751 seconds)
  done (took 2.579817457 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087163631 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080116923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110926967 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079352117 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10255366 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082995613 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098410828 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079518491 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077524357 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10303426 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079743617 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104589694 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078900564 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.104200676 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081292495 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101337709 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083806501 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078027049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103137261 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076108789 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104407259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078717589 seconds)
  done (took 2.886156615 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118503595 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123550199 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.08843895 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.206029004 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.122004084 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.106180166 seconds)
  done (took 1.676941667 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106713667 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141035227 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08074933 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105900135 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093611149 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10841499 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084539899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107615473 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119977938 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098466513 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109876896 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125875261 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104824072 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123397498 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121204141 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097904156 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113445806 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088628655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109112753 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135002652 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090139181 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126270062 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111891962 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090458886 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112101105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100867547 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126940622 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125900772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089129268 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12872003 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122130947 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089013321 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127832913 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122942325 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084274822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124630576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086429886 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129692283 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116965164 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118679521 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083503293 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117308372 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097367696 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115821571 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121601378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085271967 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115171524 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107252631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086234711 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135033181 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116375256 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096143456 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116753651 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121896451 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120705138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136076247 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099041108 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119293434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116534156 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09855113 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119214879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118058236 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099299475 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122740344 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117658815 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123109035 seconds)
  done (took 8.224091051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122051792 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105522682 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085449778 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121569757 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119978843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085675673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110753598 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084380258 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108787819 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082352647 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153953041 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108586786 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118621542 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096655238 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10869673 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08429142 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108274243 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118637874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082755643 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137644656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108073696 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096880444 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120821447 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119506221 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120668789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094567977 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108520995 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085445512 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108720459 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085401941 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115755146 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107691566 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097644821 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104885157 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119428751 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086692673 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10730568 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093729682 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108669506 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093870527 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120064703 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13073738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108466627 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087443217 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121922176 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084252606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108840585 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082089279 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108537889 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081803773 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122045959 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122362384 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1235024 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09964484 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109188665 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10755543 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086756793 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107812245 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087045149 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118293561 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118628197 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087750145 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138031593 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107655623 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087536478 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119452855 seconds)
  done (took 7.924843228 seconds)
done (took 151.619537771 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098537772 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141676634 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100488621 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171732589 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082079568 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113091449 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137222105 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094560416 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106271488 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085741721 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10883764 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08973879 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149793903 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.104433032 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080951447 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106266618 seconds)
  done (took 2.686767868 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176705688 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.29515283 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100817409 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101461405 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087079192 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080143078 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103452246 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088910957 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104057369 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081323262 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080667225 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104598592 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080709042 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104911155 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.084943008 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10546437 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.083716356 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.084103895 seconds)
  done (took 2.86851099 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109522034 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141671122 seconds)
  done (took 1.178442938 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116511984 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174873048 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268636755 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.151917726 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132144034 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094792263 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153574007 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123179513 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203760026 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127022293 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103930263 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111350344 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134323313 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09241758 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112235688 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088030043 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138242644 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087931094 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112744461 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088337973 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136068032 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.081372072 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114828885 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087886993 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185700307 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125075508 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102952337 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08248325 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.087942772 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112823639 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086519682 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11668478 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125851325 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.147225989 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092391397 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170429145 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.089553688 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107544734 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.090311368 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088026099 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115460822 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114965663 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.096177665 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109760459 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.081257817 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109823439 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.082100111 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08003457 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112346265 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.08937236 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112741776 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08756885 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.391635128 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.090956729 seconds)
  done (took 7.440893312 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794950145 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147948059 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085983094 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.874432587 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134854884 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122459214 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.757515178 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132249968 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228089149 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.802977959 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099175159 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1213149 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230753195 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237714828 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950730143 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288267536 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.681079726 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124523945 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114734872 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147098659 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115724997 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132986367 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103316469 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424392889 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109588595 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084780559 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114130931 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094012203 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156667156 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.112659028 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087647006 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196709643 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247026124 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177755883 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111134541 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08418942 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107656398 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163997153 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26636616 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195645575 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177838355 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085650222 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113496174 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098686159 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133370503 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106811886 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159076513 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.16556008 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16513537 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109826299 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096009594 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116491236 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093439782 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182804617 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.089306244 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323298419 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.295347513 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114565779 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12042065 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106530517 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26681524 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089705603 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23032889 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138928441 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19416943 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113330875 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763409867 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167088182 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1145976 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095888137 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120437024 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09444776 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123932038 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168538086 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408442333 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102320478 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11813063 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089425286 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233325363 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09057283 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114119775 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165933682 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091937646 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121649473 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102637707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126779181 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170888275 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232223041 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126850157 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121298709 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095556744 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125388667 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092360899 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214146401 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225691834 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162641634 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213836242 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12599422 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.166509692 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167072077 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123615826 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17158116 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121193752 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105495189 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125211008 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222638683 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.120092984 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114981374 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094832427 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122380579 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147233573 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094675817 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122170912 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170788366 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.463821513 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167329322 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111829018 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094591095 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123524068 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165791529 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095849468 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268252157 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122167575 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168624825 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096325192 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112062698 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097544412 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163153209 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126927564 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122892978 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101548591 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122431546 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238739491 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225626492 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103624809 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249386692 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18254198 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099723185 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171760685 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123607985 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172081554 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122721698 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100861378 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116126343 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760375601 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124289762 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097166833 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119994776 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188851538 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090546852 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116416744 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091995854 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086614655 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78401057 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116740166 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.090171212 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.091389823 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122847743 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098455896 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122280556 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093930878 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189786702 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212534324 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125556379 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120905102 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091255205 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163422828 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11624714 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091797448 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090586578 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116929529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098895021 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118944982 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091066108 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195700303 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161489319 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201339275 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.602956041 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090602857 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.116369366 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233687941 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089753231 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296946535 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098741729 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232986689 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168936635 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111842422 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.296830021 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.193547143 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164785728 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11948214 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170697518 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085291844 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116104126 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158083596 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107635505 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093651271 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155411252 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123995475 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096548044 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.994431699 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108409433 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223963985 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083454002 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167802855 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117026014 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100012968 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303167627 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11041175 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106748138 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159444734 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117173294 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089606926 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.881280792 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086928216 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119665463 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09846909 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230090333 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167942074 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123487348 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098331716 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126650126 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165950662 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212226545 seconds)
  done (took 43.436375422 seconds)
done (took 58.530221581 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258842887 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214069742 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270757903 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168096994 seconds)
  done (took 1.960561527 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174119546 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.122692813 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.143385523 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.079606797 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150006683 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.106686545 seconds)
  done (took 1.726770921 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.367905011 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272324432 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.215125832 seconds)
  done (took 1.806267196 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.245123391 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.241067246 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347901425 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.395026934 seconds)
  done (took 2.280808656 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.201071815 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097436225 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.121718333 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.112957202 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.171812366 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208498613 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137623077 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.148133834 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105492955 seconds)
  done (took 2.304551748 seconds)
done (took 11.035550638 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.131812128 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121849926 seconds)
    (3/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.312182952 seconds)
    (4/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091414225 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.156969098 seconds)
    (6/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.20829319 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131460233 seconds)
    (8/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.238713306 seconds)
    (9/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.207488586 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100245793 seconds)
    (11/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.236054898 seconds)
    (12/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.23573992 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113943821 seconds)
    (14/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.20924606 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096551559 seconds)
    (16/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.206209652 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.190552697 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113699946 seconds)
    (19/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.089897243 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.071175014 seconds)
    (21/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.235211749 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123642992 seconds)
    (23/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103848265 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.112169564 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.110459466 seconds)
    (26/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116036294 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083399156 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.131723804 seconds)
    (29/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.221909805 seconds)
    (30/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.16348931 seconds)
    (31/286) benchmarking ("sort", BigInt, true)...
    done (took 0.241044663 seconds)
    (32/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.191952764 seconds)
    (33/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115671044 seconds)
    (34/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.21390565 seconds)
    (35/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.171059977 seconds)
    (36/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.131500456 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098997231 seconds)
    (38/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.206192761 seconds)
    (39/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222118946 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113457717 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 0.227317021 seconds)
    (42/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091224536 seconds)
    (43/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.086876119 seconds)
    (44/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.175057317 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.153590226 seconds)
    (46/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.090973104 seconds)
    (47/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186710368 seconds)
    (48/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194809562 seconds)
    (49/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.191625761 seconds)
    (50/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.170246982 seconds)
    (51/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.161013626 seconds)
    (52/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078771117 seconds)
    (53/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.227221372 seconds)
    (54/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.160157511 seconds)
    (55/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.079365539 seconds)
    (56/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.206294171 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080138527 seconds)
    (58/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113659506 seconds)
    (59/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111752025 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113105802 seconds)
    (61/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092109518 seconds)
    (62/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105435914 seconds)
    (63/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.097160627 seconds)
    (64/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.112074186 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073580618 seconds)
    (66/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.184611213 seconds)
    (67/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.104111445 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112635101 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.107824956 seconds)
    (70/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.180040368 seconds)
    (71/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.088128419 seconds)
    (72/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.107981322 seconds)
    (73/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106891489 seconds)
    (74/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.105585631 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.082167712 seconds)
    (76/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.096268808 seconds)
    (77/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.080853507 seconds)
    (78/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160528411 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.086256805 seconds)
    (80/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.198500433 seconds)
    (81/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078558413 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131506425 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.184003493 seconds)
    (84/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08658685 seconds)
    (85/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091464212 seconds)
    (86/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113542624 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106716095 seconds)
    (88/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.242352495 seconds)
    (89/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114088902 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082397424 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106482068 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112760627 seconds)
    (93/286) benchmarking ("sort", Int64, false)...
    done (took 0.105307573 seconds)
    (94/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.136755228 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.133712132 seconds)
    (96/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069781294 seconds)
    (97/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104961023 seconds)
    (98/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.122843287 seconds)
    (99/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.10451764 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.164756821 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.119899049 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.151384008 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.119766285 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.083621755 seconds)
    (105/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.154616718 seconds)
    (106/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081022504 seconds)
    (107/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188651441 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136066015 seconds)
    (109/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.071071313 seconds)
    (110/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092812416 seconds)
    (111/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.169058737 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096406477 seconds)
    (113/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09143626 seconds)
    (114/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.193901565 seconds)
    (115/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094665161 seconds)
    (116/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113044429 seconds)
    (117/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.136937505 seconds)
    (118/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.110371227 seconds)
    (119/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091140885 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184211714 seconds)
    (121/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151819121 seconds)
    (122/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.108353052 seconds)
    (123/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082635555 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106726578 seconds)
    (125/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159558683 seconds)
    (126/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165861165 seconds)
    (127/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177640802 seconds)
    (128/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071930588 seconds)
    (129/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.202524193 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 0.186597588 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093819614 seconds)
    (132/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112591921 seconds)
    (133/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07365609 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.134163028 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095117125 seconds)
    (136/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.100049893 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083724414 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134873273 seconds)
    (139/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091338652 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.087929862 seconds)
    (141/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110782239 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088955701 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10678873 seconds)
    (144/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092723198 seconds)
    (145/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090348678 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116743644 seconds)
    (147/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092018684 seconds)
    (148/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106565149 seconds)
    (149/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169146145 seconds)
    (150/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.071136786 seconds)
    (151/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091983678 seconds)
    (152/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177158672 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088456391 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107670269 seconds)
    (155/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085683174 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168969757 seconds)
    (157/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.069149301 seconds)
    (158/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.111629622 seconds)
    (159/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159436958 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121797012 seconds)
    (161/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07286352 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.137396903 seconds)
    (163/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.162419726 seconds)
    (164/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.080782149 seconds)
    (165/286) benchmarking ("sort", Int8, true)...
    done (took 0.228243101 seconds)
    (166/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08810595 seconds)
    (167/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.095973752 seconds)
    (168/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.072372721 seconds)
    (169/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093087592 seconds)
    (170/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.096901111 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092414193 seconds)
    (172/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111909444 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.0818044 seconds)
    (174/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.177108277 seconds)
    (175/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07017422 seconds)
    (176/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073077528 seconds)
    (177/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.164381487 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.081880129 seconds)
    (179/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.105636359 seconds)
    (180/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.088881102 seconds)
    (181/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.105148484 seconds)
    (182/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07341178 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080585582 seconds)
    (184/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.094946122 seconds)
    (185/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.126939952 seconds)
    (186/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.094515921 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088603391 seconds)
    (188/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.089892326 seconds)
    (189/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.103509965 seconds)
    (190/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069695993 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.117502027 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.082267991 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081260413 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106865037 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082016434 seconds)
    (196/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.10817119 seconds)
    (197/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071364437 seconds)
    (198/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071988269 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 0.22549582 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107194157 seconds)
    (201/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072379785 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078916452 seconds)
    (203/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.097501588 seconds)
    (204/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.083912108 seconds)
    (205/286) benchmarking ("sort", Float64, false)...
    done (took 0.177217801 seconds)
    (206/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080106785 seconds)
    (207/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.189166153 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.071711919 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.107121548 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091866391 seconds)
    (211/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106766113 seconds)
    (212/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071013269 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081999841 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.114977327 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.081377201 seconds)
    (216/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116011478 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.082905872 seconds)
    (218/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162791099 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.083416802 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.072672525 seconds)
    (221/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.097452074 seconds)
    (222/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.069903313 seconds)
    (223/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082271963 seconds)
    (224/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.107876153 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096414142 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.10610599 seconds)
    (227/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073817455 seconds)
    (228/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.094294733 seconds)
    (229/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071120806 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082721532 seconds)
    (231/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.098335386 seconds)
    (232/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.153290675 seconds)
    (233/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.095384926 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.07890733 seconds)
    (235/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.107124227 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077015361 seconds)
    (237/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083453215 seconds)
    (238/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.096469894 seconds)
    (239/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103211708 seconds)
    (240/286) benchmarking ("sort", Float32, true)...
    done (took 0.236108062 seconds)
    (241/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.073484349 seconds)
    (242/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.108885736 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.080861321 seconds)
    (244/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.16512295 seconds)
    (245/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135470633 seconds)
    (246/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072550596 seconds)
    (247/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.083408587 seconds)
    (248/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.094124089 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.088715242 seconds)
    (250/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132114906 seconds)
    (251/286) benchmarking ("sort", Float64, true)...
    done (took 0.210553117 seconds)
    (252/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110937575 seconds)
    (253/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072427345 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11560746 seconds)
    (255/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083258947 seconds)
    (256/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192214931 seconds)
    (257/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085594045 seconds)
    (258/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123337029 seconds)
    (259/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072294353 seconds)
    (260/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095127708 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096759054 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.129903065 seconds)
    (263/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088353068 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.088769033 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.106007616 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.082334284 seconds)
    (267/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072554014 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.106263993 seconds)
    (269/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069830151 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114221925 seconds)
    (271/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.070641076 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.131452247 seconds)
    (273/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.109707023 seconds)
    (274/286) benchmarking ("sort", Float32, false)...
    done (took 0.17823723 seconds)
    (275/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.084392909 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.106201081 seconds)
    (277/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070561276 seconds)
    (278/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185712393 seconds)
    (279/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.084058186 seconds)
    (280/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.118927775 seconds)
    (281/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07335913 seconds)
    (282/286) benchmarking ("sort", Int8, false)...
    done (took 0.194146379 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079891859 seconds)
    (284/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113565585 seconds)
    (285/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.084005462 seconds)
    (286/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109833356 seconds)
  done (took 35.588487368 seconds)
done (took 36.554149627 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097198574 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147781294 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092667636 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134910706 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.095796644 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.120452384 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091910555 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093400196 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.120579316 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096379903 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.119473701 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072657124 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11885466 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093029664 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.117313847 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113535426 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121099068 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089299294 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.109592144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.082538356 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084688927 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.107645137 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083727647 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.096699165 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095326633 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089991154 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114091122 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093158253 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.107413179 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082998526 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080707155 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115664183 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081719724 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121056431 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090322232 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.110598273 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.094850897 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091472056 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110550938 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082301596 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115708611 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082136736 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113168798 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091224829 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083228923 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.106695341 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086048072 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122187614 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114670841 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111807506 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091334224 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091262116 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.118070953 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.08829833 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.106949958 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.086131994 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.106320963 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115486651 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.109737752 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089215936 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089150043 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.11596778 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.081879902 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110207337 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086789298 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116676693 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.0947133 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080527819 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118036033 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087464944 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106591073 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086764876 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080948729 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108585719 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09148736 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.11838156 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081509698 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082843526 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115324415 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087316938 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107836018 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086019158 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107191432 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.085575038 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084681222 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097688524 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081912447 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087626561 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107489669 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085962979 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114364579 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089087771 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.107538653 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.095295672 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.080935585 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.107563443 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083138013 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106564451 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.085679604 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080708865 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107844398 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085689783 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114544481 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085327534 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083386477 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.120207646 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082109987 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113692935 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082725034 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080595123 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124504598 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092602002 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.108400549 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088119688 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08042475 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.109846523 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081310215 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.107208659 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082710516 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081563012 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.111077036 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082033668 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109778634 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.08497203 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.09504425 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108264133 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081869886 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110199886 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082785131 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087079541 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108617443 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082047739 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.109128054 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080833234 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084542274 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109484813 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083829563 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110004439 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086524385 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.083229202 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112313188 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086060211 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109395018 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.082026596 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080114971 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.103442403 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08776856 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110704434 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.085197245 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0818329 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.10960322 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082414446 seconds)
done (took 15.862654977 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.085034197 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181540388 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.143525511 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.117310285 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12944479 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083301423 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119517042 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113335915 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11126188 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137714242 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10769518 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.127034033 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122543966 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.107169286 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083530476 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086695352 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110521269 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.098717817 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146938277 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127633986 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118790639 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.107101188 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.113700489 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133787583 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091609973 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136607788 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083073948 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11320672 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086270471 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12445774 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103369822 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11121032 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.084150887 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129528023 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100427842 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115206477 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.084090605 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089406726 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109071601 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08267413 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133164544 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10380975 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114278524 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088329513 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112604059 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085381823 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.108584405 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.092669989 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118508414 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.088672063 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.120995106 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.11493022 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111648931 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092552391 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123890673 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095182166 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.116773968 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.086357158 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082887111 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.110761748 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0822964 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.111131601 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.09863275 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.134864411 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086251371 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118397887 seconds)
  done (took 8.195758213 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.101202939 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136766351 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.102715892 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.126439709 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.083110319 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082694921 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110095971 seconds)
  done (took 1.762433914 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084818472 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10878958 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13626474 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108208441 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133117368 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.134850992 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090097822 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082729566 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130055487 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084078916 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134959682 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123353555 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111749335 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091471363 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138310692 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082867897 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138029871 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.084271676 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11215349 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112187742 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112513975 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102356511 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.111867137 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085228113 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10122269 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.111548261 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157291696 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090079092 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081332255 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.113371584 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08227125 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149581876 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10123915 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118653114 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083493534 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128471366 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.102104525 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106846777 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.100987724 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114399394 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.102727255 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083794229 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.111866839 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082258661 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.113840256 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099815724 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08687907 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.111319539 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086617979 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13424725 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.085448654 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127757516 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.084346999 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.08782243 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112831146 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087765347 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121958793 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.085156324 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136470431 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08232176 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132473938 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105490831 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134602483 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11122608 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119745453 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.11073234 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10700969 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1174507 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085062451 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114317136 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104120511 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.107309863 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.087844816 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.097077149 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112045043 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.10998007 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137524681 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085097787 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121230711 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084965281 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.109859141 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085821165 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.109866714 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089642708 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083765741 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115151601 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087376057 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107190754 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084932158 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.089167291 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.108525636 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085384953 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.112317314 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085677603 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085983004 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131121262 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.08416655 seconds)
  done (took 11.297187155 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087567941 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.08523958 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.1154824 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086765672 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111645892 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087477529 seconds)
  done (took 1.61245823 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114030287 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111355621 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.099097045 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115980358 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.125217996 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134759141 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109195981 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120718402 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101294571 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.122830548 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108930416 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137580968 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139631462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.091114075 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.133458965 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090175228 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108839925 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117593387 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094590882 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118030148 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101195918 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.117139728 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089903262 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131543646 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093733725 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116119414 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090526043 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.122990704 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.096156612 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121898315 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.090240571 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.1203343 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09089684 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120426358 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110445628 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116722792 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089304509 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122390824 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092243508 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12138893 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111302099 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116389569 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.096306508 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122508316 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.094050893 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116930836 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096397291 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117290929 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110542335 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122659003 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096415637 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115082192 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095192936 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122484686 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090505609 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119970121 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09755667 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13583016 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.090733901 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116959616 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.08818647 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120583107 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095312149 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120380051 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094856356 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121850162 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.091026273 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115647563 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091757436 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089254881 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123905664 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086351412 seconds)
  done (took 8.914855948 seconds)
done (took 32.802266222 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691180963 seconds)
  done (took 1.722413814 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.881544928 seconds)
  done (took 1.915002953 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.397542707 seconds)
  done (took 18.455983452 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.468495543 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.564171422 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.96294295 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164575307 seconds)
  done (took 3.190709063 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964870915 seconds)
  done (took 2.011630653 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285363523 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232782654 seconds)
  done (took 1.551998068 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.806264222 seconds)
  done (took 1.848154859 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.456508498 seconds)
  done (took 2.492649153 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32484478 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155590991 seconds)
  done (took 1.533504301 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557028248 seconds)
  done (took 1.610582376 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.82571462 seconds)
  done (took 16.873883082 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241040483 seconds)
  done (took 1.300695699 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292790666 seconds)
  done (took 1.338749348 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.638400942 seconds)
  done (took 4.680341405 seconds)
done (took 61.572882297 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096441568 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09705918 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124949561 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094085708 seconds)
  done (took 1.450605529 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101812697 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.090475061 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.126537362 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089158389 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127685339 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.089975955 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121310076 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.166726095 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091729791 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.092310225 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118929488 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090070636 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122315533 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.0932123 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115818022 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094284559 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126363743 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091314794 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121741818 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092593463 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114091377 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094924394 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12031752 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092066063 seconds)
  done (took 3.642080396 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097864299 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090351954 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119104607 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.08938951 seconds)
  done (took 1.457902203 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096489828 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101213544 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.128426951 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094936942 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128735735 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100334776 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115621212 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087005409 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11727317 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.09574795 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.111024449 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110966201 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127715985 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.096114569 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.122237683 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089595242 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086021247 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130062085 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094805157 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123378452 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.089334143 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121499926 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086922092 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128669165 seconds)
  done (took 3.646251289 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.16609132 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124853816 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108524932 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.118959609 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.130125646 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138311378 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083161858 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.138372481 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083450584 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126328903 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088683976 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164233052 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096676878 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.110898448 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083879441 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082922586 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124010128 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.096089746 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.114012992 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096905812 seconds)
  done (took 3.334122039 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.094901496 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087248049 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110931795 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086820457 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120206246 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092243889 seconds)
  done (took 1.658822224 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093515009 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084634931 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116298755 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08712735 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11664979 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084996397 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082897635 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112430629 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085211205 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110149582 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088450639 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083373254 seconds)
  done (took 2.213304133 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.543335008 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116507249 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114718504 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.086295779 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094222073 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.112991558 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100570868 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.1143004 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11283251 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.111584261 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.085875114 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08759513 seconds)
  done (took 2.749391526 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206010222 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097323364 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260761497 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345905982 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159266368 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163515434 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276781385 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165910217 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.182495796 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134962571 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192102993 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127737483 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152825419 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176653657 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138724946 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.126287089 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171967177 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223973117 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121347509 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201459549 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161216893 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166222461 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17773227 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15015298 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134919288 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129048897 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119581334 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099479366 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169847215 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166620452 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197723128 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120815938 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138832876 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197047977 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235410725 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177066539 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278868195 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106354198 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.178284239 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167186613 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222172939 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139300982 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192990161 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153188277 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126343111 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178520214 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127067615 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178546439 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130392802 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137954059 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179719695 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174667942 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177607099 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10625321 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32152149 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121674791 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144679094 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17995617 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183651234 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187183063 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164843042 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116889814 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180862192 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181596653 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176956852 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141472389 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.136727407 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123922151 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170994687 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1913305 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174475616 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161394195 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208683656 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107009963 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162174001 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166232275 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149726671 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174687434 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13014586 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119396599 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146401367 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107469903 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127107714 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.161965253 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121960144 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1991959 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134616379 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.170107021 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200546362 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126934038 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158394902 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161178592 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163936631 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14555423 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086850747 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144590327 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148915618 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124240452 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131101135 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154756425 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139513529 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102925384 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156130999 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.092233665 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157923803 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124528559 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159478 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133864286 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.123384859 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160900135 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119094087 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148775827 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166647848 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182095077 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130277875 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102768741 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190529536 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156266796 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131736135 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170457951 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182174731 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126273111 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136004483 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164940345 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188908545 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140133119 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18511019 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109917777 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131643164 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138167679 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156089169 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127197589 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155375295 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128014965 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123456853 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214225323 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.095542246 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134639755 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171110011 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099423832 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127253179 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111578942 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135038976 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.131907453 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111860062 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134185396 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151481549 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129375228 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151997184 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151730816 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140627814 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186871678 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129780065 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.121542228 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145407419 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.090196689 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174970654 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180678057 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128303021 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192542415 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165332794 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194492071 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162368661 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131005222 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174385027 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098731997 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117152449 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161938703 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156767021 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131003222 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179610964 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219976346 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166861238 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121279686 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146581428 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16008753 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160891364 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153693228 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107444548 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160246257 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155599246 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091319232 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123148161 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124152426 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113454217 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128160779 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102513307 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176877152 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160269078 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211920544 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131300717 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140402884 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178722744 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124081926 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161363212 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169219794 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109661468 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180820494 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176994138 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164887399 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140305264 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171601544 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088998543 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120443128 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103713528 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162054921 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13125233 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104124611 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14158495 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179039995 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170037178 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147246807 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197637482 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164745299 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188851422 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118355332 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.137779034 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165331654 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156744774 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.151805635 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131644508 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148258303 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172558242 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11293586 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184949602 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159852268 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165146317 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221607187 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.120749766 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129275558 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11805686 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162373626 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138139864 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163386544 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141903815 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106922307 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149372277 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.095493971 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124386427 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170255267 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143443854 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174736812 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14268565 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166081774 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096816901 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141534471 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157488649 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115846315 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113035404 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163266179 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181810571 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140239842 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128946649 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169203766 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128212181 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304996223 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186584481 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181794201 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133073489 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113336533 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159636596 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157540001 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161233338 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175678938 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115966926 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176392638 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156172727 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134193107 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105620437 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145322126 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147868171 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108531279 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130196917 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151312044 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.105501048 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175782267 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140217866 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156347543 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162841288 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.118261587 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142305261 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139736734 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197693655 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127234337 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20153828 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.119770043 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162878177 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194253879 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123055322 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098190628 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.12545312 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176244316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102705094 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156580409 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.181822501 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22367973 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13001085 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162539082 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13690746 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087275039 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157816589 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147196783 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195118045 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141975337 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104705718 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211238107 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114361394 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127974863 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131530415 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304797961 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115276393 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170949037 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111582845 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272221203 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096607079 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128651516 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129031403 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167095454 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13665724 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.146244409 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161045726 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142447892 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158108006 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106041027 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212564395 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203155439 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167309311 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169855109 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.101073462 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155916102 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161187211 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173195589 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143074253 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10641478 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161056473 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178685615 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183986905 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131572542 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159139083 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131237048 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157444767 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164652463 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132880926 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196701138 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129526447 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161919525 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110657146 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122051408 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153507895 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182093744 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10443015 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169857897 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156330139 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130170097 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097429201 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14959743 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155382507 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110986528 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125175384 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169508215 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092424641 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160894454 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177476834 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098473304 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152378823 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144483885 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134950334 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112875214 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144053619 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134618578 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135975785 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179507585 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130293123 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171753381 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171920247 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159755502 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156284508 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11426643 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666453999 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.097075261 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178775311 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145479516 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181149279 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14648819 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162954147 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130154216 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148502116 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164475345 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147689435 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226821663 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160834208 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.127120182 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130134108 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142829882 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112970515 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13035115 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147841939 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130793997 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139111986 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134371712 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154240138 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115504842 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.130504765 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106661159 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180344415 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144970184 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172587938 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17728956 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104783102 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165343402 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166060921 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129609982 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158185782 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169324445 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109755304 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148232855 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130398494 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102432117 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177618138 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121878163 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156211979 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12942073 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16286933 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162798152 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13230129 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127549573 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140144019 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158506662 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127338314 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.12368 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154635295 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128860354 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.097340779 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153430658 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151500937 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.118503071 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125524376 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.134853577 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177563444 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121031009 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101510823 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279087428 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154843646 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187848641 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.142181102 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102324679 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142570365 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144932952 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150222036 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128979483 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128263198 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100569183 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129509737 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162693539 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112947389 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155503194 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183484417 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156533687 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196150471 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132898289 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.248375029 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138090327 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151472995 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.093639073 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12716783 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111132205 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133398523 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14004558 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185780784 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179929238 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.114765165 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132769566 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096516994 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122858071 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101951616 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159402996 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152308795 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155499839 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111973493 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.11419536 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112082665 seconds)
  done (took 73.764864879 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165402979 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133557889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146628898 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201805089 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166780279 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252243353 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208501445 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236119189 seconds)
  done (took 2.660944918 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090299188 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141903849 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.123672913 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133725829 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.115262756 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088822656 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.329578646 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130446544 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.086301919 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.145673732 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.131391623 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115506586 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.478371239 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116174191 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.087351743 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.111816952 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115276847 seconds)
  done (took 3.676132659 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.361500817 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486510976 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.197955973 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195201442 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180916775 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.091634701 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.730550973 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093344832 seconds)
  done (took 12.486359707 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119780061 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.112920983 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160764969 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158110561 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117149022 seconds)
  done (took 1.828258569 seconds)
done (took 115.611999969 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09389163 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094946683 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124706366 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096457438 seconds)
  done (took 1.543736055 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101394372 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073064878 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104701179 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078258075 seconds)
  done (took 1.51388584 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190144665 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166123947 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402239391 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074893939 seconds)
  done (took 1.656546357 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.110577583 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127495107 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102415116 seconds)
  done (took 1.503472045 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.102990113 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096724963 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.127421194 seconds)
  done (took 1.487629696 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101075124 seconds)
  done (took 1.255408481 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107810847 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135257078 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108970799 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133531668 seconds)
  done (took 1.644230943 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094347256 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09495826 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137449246 seconds)
  done (took 1.482199502 seconds)
done (took 13.599745666 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103837555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426553365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387105675 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135003138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69550532 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406159588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004727512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143971253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165444311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088072063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132625788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669738742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028286697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345793868 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984311357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373273685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.670515927 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118314966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087718454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116287234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.993162528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086553229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11768566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087729422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700721745 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392165984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117874971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3428893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115284198 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097279474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374112583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118437065 seconds)
  done (took 16.770868774 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095659735 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175529321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098742693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118435747 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09714949 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088960001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122113183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088647833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180324442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117064402 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106681118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086134325 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122349941 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087887672 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138076164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08778235 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11780063 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088370714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115622247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090223124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10576773 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11847051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.08919664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117636623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088644236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13027877 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090078219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087400891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117807404 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095597209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1197552 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089231478 seconds)
  done (took 4.630968949 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140171938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185247685 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099469721 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153297249 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171726106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090400479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196491093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143992212 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153409467 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118678296 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104991311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119388664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121429271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119780837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107481229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118309858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088457776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117571826 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089232647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116088573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108846198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087528975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118591286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088096448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10346021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119300504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089828991 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115718483 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09843246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091393277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119474562 seconds)
  done (took 4.981528097 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.093490858 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092658536 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13448029 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.104009517 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12061673 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091665883 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120982275 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091364143 seconds)
  done (took 2.010390816 seconds)
done (took 29.551747995 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107802072 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093383546 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133343393 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100289023 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.128936748 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101359778 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116986976 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101257039 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099726678 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12801442 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104243289 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.117639013 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090005032 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115983144 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.103857753 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092232517 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132310031 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0979575 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132698543 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101686791 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.119564206 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100692328 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.096963432 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132596312 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10171105 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132770244 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103681444 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125207205 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.087960758 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119370236 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.102160261 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.138614722 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090496276 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.132665955 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093943472 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09225698 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119750705 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092534358 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131988923 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099466459 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123926821 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100150715 seconds)
  done (took 5.784791474 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115686126 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146529891 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111162799 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083248013 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.121259211 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083775986 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14439573 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081808355 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.115100305 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113525628 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.10687874 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080507092 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0809556 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.106207858 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079377366 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077639893 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.112825917 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077647207 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.108328685 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081534363 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082119137 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.105581761 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082990135 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0802286 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.108000927 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084040703 seconds)
  done (took 3.745484452 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098401925 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102265606 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.140563977 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.169326476 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.122395638 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.12564225 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098068324 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103862575 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135490395 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087433129 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.121173499 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115484277 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135535179 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.096089337 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.120333792 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10422569 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100798288 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120103462 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093808436 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138851649 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.104925785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128120623 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102228541 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128122034 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.088654528 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09002006 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123989397 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099506745 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.126554626 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097249863 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123139235 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093117151 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08937484 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130996317 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093470092 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.120350643 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107387397 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127330741 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097569929 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.088481255 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12616507 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090160818 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140594984 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127564352 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.119500042 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.094520471 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121778197 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098065507 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11849233 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10774024 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096751806 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119473176 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.091266262 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.119492437 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090699521 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103057309 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.120851645 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.089558617 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132040325 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094375925 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.130601633 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093904101 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101744065 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.1197468 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094358484 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119683402 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089106551 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.08585766 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141255216 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094603241 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158559537 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.087885987 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.119837363 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096902029 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126569194 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096990859 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117848447 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103670107 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098604564 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122991525 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.09935009 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121052932 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091925614 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135868773 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09183079 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.089470551 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120017506 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.095057947 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120682137 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090113021 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131793119 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090229906 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.090808265 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.132813185 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.088258914 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119714867 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094975073 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.091404216 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.119422992 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100445793 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.125256748 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088209066 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12911668 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.089199596 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120160085 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.099586391 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.091895219 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119167408 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.093028381 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125150113 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089149816 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120817712 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092709646 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.090108249 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128573237 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.095426917 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121560719 seconds)
  done (took 14.0074102 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226661301 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214320401 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184773794 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260763185 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133432351 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114760114 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210461441 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155612544 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089858682 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158393362 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166843386 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181213268 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168635796 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179214304 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170670082 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.090335825 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107193336 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165791307 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213022634 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.287812964 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109325536 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127936589 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.127812228 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157780196 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133174041 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101163213 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.135623475 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101384336 seconds)
  done (took 5.655836124 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105183001 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152218295 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095449973 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140632918 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115812659 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119959522 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093306193 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119529175 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103430445 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133069771 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088544936 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123519472 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097863398 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.09637355 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121404835 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097929915 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128789904 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090062963 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120770746 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09452269 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.097858792 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137286677 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091336666 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.118852595 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097675011 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119568547 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090507391 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140311771 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088472157 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141948576 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085842379 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128047151 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102137746 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120026012 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.089350815 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.091084982 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122164305 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090537166 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120841393 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.088122955 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087121845 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.112003275 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087598349 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134455568 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095422517 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.11385537 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096204562 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12355778 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091286807 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086831315 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122348887 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093028783 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121126392 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.09860498 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09071665 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120948146 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092717675 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119078956 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09686673 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.091117541 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118895278 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087996185 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123745889 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092953934 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127470178 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095272511 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086887299 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122442808 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09353404 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126756566 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092962691 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.094294692 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.119004267 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091351387 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122867687 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.095487538 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092381482 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119734192 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.089617532 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.121315884 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079574934 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088709465 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.108611879 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092262135 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116874869 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.089294556 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091050927 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127374474 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134514235 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09221724 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097067737 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121286313 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088954713 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122239927 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088187638 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091563129 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137248139 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138253105 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090770701 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086864146 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134407135 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09139448 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118363819 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080051297 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.096815347 seconds)
  done (took 12.393011624 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129311571 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150200449 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092060977 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137594296 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122918323 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156263486 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096486329 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128577529 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090972274 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138099041 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090322836 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097896351 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.121740272 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104587914 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155543206 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099266127 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122655301 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104460761 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124858654 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135971845 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140715214 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107498731 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13884194 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.090420355 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126001034 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106888535 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159965109 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103593602 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133847825 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.108948926 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133330975 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.128285987 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140498858 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.094351845 seconds)
  done (took 5.313759983 seconds)
done (took 48.068576623 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.262428298 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.498862961 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.256119507 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.205581442 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.278495018 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.262373771 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.266983914 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.257403119 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.797739025 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.258266668 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.496079816 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.062418611 seconds)
done (took 60.090918582 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.287191517 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.416077993 seconds)
    (2/2) benchmarking "String"...
    done (took 1.552378596 seconds)
  done (took 4.152172426 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.817288816 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.24187392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.522077778 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.259354621 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.259711656 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.556230632 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.14733543 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.726024087 seconds)
  done (took 28.898866184 seconds)
done (took 43.340295575 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.291815152 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.257995061 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.256893816 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.245174278 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.374106219 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.291002389 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.626079243 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.288233429 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.285230456 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.252672902 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.277066877 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.257939307 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.261934926 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.641804806 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.265165471 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.261468168 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.321503437 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.774924234 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.673974433 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.265603275 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.274524286 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.261249157 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.256226745 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.262349568 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.316167841 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.257617442 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.269620187 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.280056873 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.020711538 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.264635102 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.28190951 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.840090304 seconds)
  done (took 192.940092479 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.255755099 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.376295874 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.515337215 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.318799158 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.844963776 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.460706293 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.408480085 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.912941698 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.278682098 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.270559798 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.589666761 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.260671691 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.65525419 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.242536063 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.28908729 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.343994819 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.59373416 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.65600496 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.295202705 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.418338491 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.269673404 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.531682574 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.432337241 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.518835816 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.317279654 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.325557944 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.306932163 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.305780941 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.449865857 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.530069353 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.259612022 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.307191618 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.916653531 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.119615428 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.268447213 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.285343916 seconds)
  done (took 153.317350459 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.26440653 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.263902168 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265321153 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.30014508 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.267139484 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.877686743 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880365869 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.268457725 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.795336498 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.455677414 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.694952187 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547125231 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.26005215 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363143411 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.280543758 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.266569368 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.283096485 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.290823694 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.261804567 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267168869 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.877457118 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.278930418 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.466446765 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.438983164 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.273784564 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299042111 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.663991092 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25865376 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297441068 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.606020037 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.311594813 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.26028869 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.649868591 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.308675182 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374789146 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.260131184 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292723812 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.265079934 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.542089313 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.259150713 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.263870273 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.265920059 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946958999 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.262133574 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.875259182 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.263464069 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.23132202 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.260830364 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.261542108 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.489711072 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.063582666 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.269573826 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.262891129 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.262981301 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.268873453 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.264217938 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.263973651 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.300962746 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.408794035 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.363952308 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.264265102 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.264703522 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298681833 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.264898795 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.402016598 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.263725403 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.588916345 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.321423704 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.371637153 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.876178972 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.266553297 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364531926 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384526616 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.261266173 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.261501143 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.262521878 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.262401692 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.376549117 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.262917735 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.700141174 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.443057992 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.279889455 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.745124518 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.364948201 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.261629665 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.719195647 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.267129112 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.263005188 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.043251625 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362097995 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.262067891 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.263231367 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.262924337 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.265252266 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.695635083 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876477687 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.571949968 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.268569703 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.630689469 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.268134495 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.707821812 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.845646606 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.979156211 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.268317677 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.266300669 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3801586 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.446023898 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.281279031 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.262906693 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.735497853 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.26592104 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.318665742 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.270786536 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.664971175 seconds)
  done (took 374.314479981 seconds)
done (took 721.754440838 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.909278748 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.900073558 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.017445873 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.889474349 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.854407492 seconds)
  done (took 10.760530932 seconds)
done (took 11.951134452 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.466157412 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.464734784 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.333597775 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.471514074 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.29923133 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490148182 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44668764 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.285702438 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.372846613 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.355054087 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.37285432 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.324655859 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306730909 seconds)
  done (took 19.177893274 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.599741962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.597956587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.330764608 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615156335 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307061278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.634554374 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.470761968 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.508116941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.488012274 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28012699 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.27794883 seconds)
  done (took 17.304358386 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.616032888 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.636241684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.33310406 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615554427 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.30900774 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.6034409 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.473821552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.491511765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491806106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.281112101 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.27937116 seconds)
  done (took 17.325641898 seconds)
done (took 54.999804592 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.295648925 seconds)
  done (took 2.487105424 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.310240026 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.481846431 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.29777185 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.28075876 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.274308157 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.276145216 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.283010361 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.276544449 seconds)
  done (took 11.675628817 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.272788507 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.276478681 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.272032981 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.270529343 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.275625785 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.271183033 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.275494569 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.273508256 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.275483966 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.275940703 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.274646878 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.27661744 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.273009049 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.275386939 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.27738633 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.272779647 seconds)
  done (took 21.583642153 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.279517822 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.273740816 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.273110192 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.275258447 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.272733087 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.273808474 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.273779453 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.273807209 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.273179202 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.275155777 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.274616226 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.272009651 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.274783808 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.27396366 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.27449213 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.276092836 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.274451352 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.27551803 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.278935411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.276703202 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.275489237 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.273142614 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.275961101 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.274781071 seconds)
  done (took 31.791776736 seconds)
done (took 68.732288743 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.741129098 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.231855602 seconds)
  done (took 8.164726839 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.337286799 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.337439915 seconds)
  done (took 3.871206371 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.281262622 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.277340548 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.280416239 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.278623115 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.276506229 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.278647546 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.279398524 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.279833026 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.276517946 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.278268131 seconds)
  done (took 13.982565876 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.281154158 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.27813864 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.27623555 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.278375746 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.278145832 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.277800483 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.27998586 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.281537312 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.281267766 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.279437051 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.28164893 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.276467779 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.282726448 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.276346927 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.279373526 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.278190478 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.282136004 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.278473965 seconds)
  done (took 24.225455917 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.295668329 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.301525409 seconds)
  done (took 3.800449168 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.410704563 seconds)
    (2/7) benchmarking "second"...
    done (took 1.31982121 seconds)
    (3/7) benchmarking "month"...
    done (took 1.847554776 seconds)
    (4/7) benchmarking "year"...
    done (took 1.374703824 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.322916963 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.298014147 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.323492669 seconds)
  done (took 11.098129517 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.285519852 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.473111694 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.581278063 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.851233236 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.285116278 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.287025855 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.165089651 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.284761483 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.285971108 seconds)
  done (took 14.700612561 seconds)
done (took 81.039217378 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.311835318 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.274334333 seconds)
  (3/8) benchmarking "parseint"...
  done (took 4.39732868 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.291832423 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.28835458 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.568060998 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.275859579 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.398279927 seconds)
done (took 39.006418091 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.279721172 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.272396626 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.112781969 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.282854916 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.393886364 seconds)
  done (took 19.26091914 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.368181691 seconds)
    (2/2) benchmarking "read"...
    done (took 1.611344868 seconds)
  done (took 5.179344008 seconds)
done (took 31.916924354 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277752296 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.277130806 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.277994898 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.27475983 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.279141158 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.273613273 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.273919764 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.277071145 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.27713359 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.27304648 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.278109879 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.276518023 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.277540152 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275423435 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274410127 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274826716 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27669975 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.274508064 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274711362 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.275195882 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276082217 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275635969 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.273380935 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.273839716 seconds)
  done (took 31.817298458 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.276237998 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.273745131 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.277130933 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.276318166 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.273816264 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.27591379 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.275863328 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.27354015 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.275880329 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.27638696 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274369135 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.274131983 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.276334256 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.274823113 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276547612 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.274855632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.277430479 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274288326 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277562119 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.274486102 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.2767697 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274470569 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.280853811 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277467313 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.274311139 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274402137 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.278185323 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.274096004 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277081135 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.276052917 seconds)
  done (took 39.471624153 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.282960897 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.2853365 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.277573526 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.277380748 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.278545583 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.277624996 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.278742921 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.278656678 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.278933206 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.278682979 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.279818375 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.278516843 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.278403241 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.278227414 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.278076851 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.277692092 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.280070546 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.278798614 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.279204086 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.278587845 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.278832665 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.278263944 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.278993039 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.278889812 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.278820128 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.277950907 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.279359305 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.279290883 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.279377513 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.279996137 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.279403125 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.279989678 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.27969179 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.278871233 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.280235241 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.279560604 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.285110631 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.288389722 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.278919084 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.279184777 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.280582796 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.279986272 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.280526975 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.279272837 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.280339743 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.280698408 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.279526032 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.280045691 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.282385382 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.280990656 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.281605309 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.281334514 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.280271441 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.28129007 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.280723496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.281511996 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.281029899 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.279464252 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.281015568 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.280785993 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.280871722 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.28167268 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.280573641 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.280833616 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.281852624 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.281406003 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.281961271 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.28135686 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.282182275 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.281045988 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.280957542 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.281712083 seconds)
  done (took 93.372814554 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.282525639 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280212527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279601962 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.279669477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279407478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281706318 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280166393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282409803 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280261148 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282932608 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281628402 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28008974 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280301709 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283587224 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283790397 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279964075 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.283287656 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279783174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.283474075 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283342579 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283084395 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280662859 seconds)
  done (took 29.395732356 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284476587 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285761877 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.281401736 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285616866 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282203222 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284167198 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282469007 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285081735 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283557135 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280921498 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28017742 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283934641 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284494288 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282052535 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282152475 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282838026 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28485519 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28310631 seconds)
  done (took 24.303305354 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.283332262 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.283065687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.284093174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.281050105 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.280592775 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285605707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280090971 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.284046432 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.284176255 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.281379057 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.284688494 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28503704 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.28531798 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284513912 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284659065 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.281752777 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.283507528 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282354115 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28490813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283424908 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.282151416 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286776601 seconds)
  done (took 29.442271334 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285074535 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284344008 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282885849 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283197635 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282748708 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285186163 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.28549447 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.283113849 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.286523278 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.285066986 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28327573 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285176009 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.285808618 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283566908 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.28406242 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283346475 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287081862 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283705781 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286850967 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282967325 seconds)
  done (took 26.896998419 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288325576 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287516564 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288483285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289111873 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288463128 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288188625 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288780117 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287990088 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28850582 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288582402 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288311158 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289456483 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288887307 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289629861 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28901731 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288682757 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289444273 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288408347 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288582198 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290625305 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290071976 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289033548 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289688412 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289513854 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289075099 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29023457 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289315966 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291015061 seconds)
  done (took 37.30142644 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289250329 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28851174 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.286898431 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.286317158 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.286931056 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.286159201 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.285957385 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.286330999 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289874307 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286335463 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.289580424 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.288516263 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289346919 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.288772857 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289544846 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.289801286 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289654109 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.28715995 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289335912 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286199603 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.289691896 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288827529 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.289342446 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286507563 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286849165 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.291094651 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289000637 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286792334 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289779368 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287028645 seconds)
  done (took 39.856191727 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.333670518 seconds)
    (2/2) benchmarking "in"...
    done (took 1.335610876 seconds)
  done (took 3.879919134 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.28719976 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289781974 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.288767252 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.286918254 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.288586677 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.290702913 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.289780113 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287032297 seconds)
  done (took 11.519495322 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.290920638 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.289983086 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.290786051 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.290700476 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.290772257 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.290773473 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298142823 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.310677905 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.291622205 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.293750905 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.30070402 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.299703198 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.295512699 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292106693 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.291800605 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294263863 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.291525824 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.292958839 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.293241286 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.292904506 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293210738 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295345887 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294924714 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.291542105 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.294200142 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.303724556 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.298102074 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.293716307 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292088095 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.296352853 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.293112373 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.289799803 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.293304255 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.293201615 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.29319591 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.291917164 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302843408 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315963443 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.300565599 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292635283 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294349231 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.289978906 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.294132748 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.295212252 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294668565 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.293591593 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.294116909 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.290819677 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.29346954 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.298091278 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.299629695 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293928262 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.291488306 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297470883 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.295987448 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30169872 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.314651389 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.298942829 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.304701617 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.307027296 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.30766095 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.3040972 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296728068 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.29464445 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.305355155 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.319362979 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302818781 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.311892772 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.292707941 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.295536916 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.303145384 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309383113 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.322064958 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.295967959 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295603951 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.29616885 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296323535 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.296534754 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304656933 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.318116248 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.295602642 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297226043 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307392613 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320210762 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.297375653 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.297308812 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.297954382 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.298079214 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.297528356 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307557827 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.317098139 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.296929667 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.295822314 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.296971734 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.298026817 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.296303312 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.296394079 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297734696 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.293892826 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.296836746 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.297768586 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300464336 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.30604202 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298703514 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29731708 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.304489456 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.297024831 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.296869872 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.30335972 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.297072847 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.297585116 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.300304558 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.30382794 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.294862889 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300679822 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.305806912 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.298191603 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.299182494 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.299085982 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.298270203 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.308414226 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.324437396 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.299019649 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.298117436 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.304326458 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.310329021 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.299127167 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.30164664 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.298748116 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.295931865 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.296689218 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.301121594 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.299151857 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.300027654 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299472868 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.300349337 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.297519074 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.299595273 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.299489397 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.301064198 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.301281699 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.29994259 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.300252618 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.303535298 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.299998957 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.301388983 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.306828799 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.299835923 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.301318092 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.301753194 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.299073475 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.301134942 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.301652619 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.301566256 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.300354762 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.300839303 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.300981069 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.300540732 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302092872 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.30175965 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.301476893 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.302086421 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305418783 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.301605008 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.306097291 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.300538524 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.298920688 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.301515293 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.301332177 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.300214132 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.302084627 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.300684931 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.305368418 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.311103278 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.302638977 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.301912532 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.306111728 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303255455 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303255985 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.30287074 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.306403355 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.311006762 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.302666415 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.310143785 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.302334774 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.302715901 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.303552044 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.302387455 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.302725204 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303024713 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.30616589 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.310822544 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317417374 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.328690652 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.305255705 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.309204863 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.305234531 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.308330354 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.308691768 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.303827558 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.303904036 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.306255886 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.304369234 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30373082 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.30573996 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.304180106 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.304429972 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.304721316 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.30493392 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.30446281 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305032596 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.304468367 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304902851 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.302313718 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.305137247 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305014103 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.304615686 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.30191234 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.304820698 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.305157618 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.30554203 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.304565362 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.312051677 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.302026136 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.306932985 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.307064051 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.305663161 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.305218078 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.305731538 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.307369517 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.305949641 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.312989794 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.325177345 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.306681863 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.312653472 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.324832782 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.305102744 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.308013512 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.306797505 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.304109463 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.309792813 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.315217468 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.306994016 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.307726085 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.307509309 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30711154 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306964438 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.314009413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.304249994 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.306318424 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.306563865 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.309773146 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.305172954 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.307814757 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.30750442 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.307212521 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.309588372 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.307819533 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.307894168 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308851754 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.308215745 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.308772173 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.308430096 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.312520544 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.316344751 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.314049093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.307601144 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.310471907 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.309706663 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.312449451 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.308113628 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.308505253 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.308164859 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.322044515 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.333698855 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317086809 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.309709731 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.308807011 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31503196 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.310450611 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.312168572 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.309267412 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.309804944 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.309305725 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.309291938 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.306745843 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.309670471 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.309698044 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310347669 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.31082298 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.313651917 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.309950346 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.309503029 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.309778049 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.31024796 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.31051292 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.309159631 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.310727511 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.312423153 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.312461238 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.308992728 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.309553743 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.31725875 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.330246489 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.31012061 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.310552843 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.310455891 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.310099051 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.311797307 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.310106074 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.315144985 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.319870654 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.315580307 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.319795388 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.313528373 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321765516 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.311898082 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.315364271 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.320692598 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.30924422 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.311262181 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.31240067 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.311316732 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319953744 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.3316123 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.314567441 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.31663281 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313629585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.313063427 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.312801923 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.312713993 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313545046 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.313679802 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.32109148 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.335755467 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.315845923 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313778786 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.310435408 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.31199477 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.312582378 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.311195809 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314967496 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.312251923 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.313990241 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.313709556 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.314062298 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.31300701 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.31317966 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.313710744 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.311805169 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.312639066 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.320853422 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.335391566 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318274519 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.313761351 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.32243263 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314305129 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.321779745 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.333774804 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.315240143 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.313785225 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.314005463 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.315661423 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.313722161 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.315134834 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.313938567 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.315994227 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.318030798 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.314219407 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.317197842 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.315656073 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.315261982 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.314902365 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.32553634 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.338629869 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.316679109 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319415881 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.312086593 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.317194452 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.320056402 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.315168144 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.314797082 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.319236387 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326654636 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.324571509 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.316876731 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.31551597 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.317524384 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316223483 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.316195475 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.316777695 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.316058408 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.316871097 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.31784632 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.316416038 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319306043 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.316313104 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.316895587 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.317966374 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.317895657 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.3264583 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.316145191 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.317645471 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316852444 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.317779482 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.31650505 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.316489199 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.317515173 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.317711384 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.317666426 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.319370953 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325197951 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.325261742 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.318938259 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.317062245 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.317995027 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.317881109 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.319185343 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31654803 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.317803545 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317652731 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.319344053 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.317793504 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.320311352 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.316565129 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.318535906 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.319409845 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.319291762 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322803995 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.326340365 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318330084 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.315808412 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.317953669 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319562952 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.317202167 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.318267545 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.326821398 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.322306795 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.330401647 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.327594498 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.32279483 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.318353017 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.322840085 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.327123656 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.318129208 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.31998857 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.319942088 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.321032317 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.320630297 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.322950943 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.319637397 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.327141809 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.320116553 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.319196746 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329297115 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.344837667 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.320113189 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.323154256 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.325792818 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.320407145 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.318607877 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.320772864 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.321083089 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.328364414 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.341850708 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321879714 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32245042 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.321286039 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.323439507 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.325518522 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321897264 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.322414235 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.318773121 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.321955248 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.321599177 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322186294 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.319287145 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.32136647 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.322080482 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.325971433 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.328838111 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.320966029 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323159352 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.322243291 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.323513912 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322874717 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.323182692 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.320220343 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.319724245 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.32176425 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322874456 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.323514298 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.3241832 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.322471814 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.324272178 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.324018954 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.323253868 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.326575591 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.335157855 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.330929103 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.320476092 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.322743346 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.322854392 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.326290574 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323272759 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.322898448 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323785749 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.324550709 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.323600317 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323216506 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.32405289 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.327882887 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.340048536 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.34661976 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324181894 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.324311464 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.326100592 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.324844256 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.321601529 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.324904984 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.326797408 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.328758046 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.333152409 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.32444229 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.331434591 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344559705 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.32509469 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.328218494 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.328436324 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.332108914 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.327089991 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.32494869 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.324867231 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.331029006 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.341180721 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.324707857 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33535651 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.356188874 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.345613482 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.326257365 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.325397186 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326375463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.326058852 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.328133137 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.325987645 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.326368126 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326771323 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.325717406 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.327628447 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331003549 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.327735239 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.32857615 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.326897554 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.32602669 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.328098171 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.324043108 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.326243851 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.327040185 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.327235093 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.327730547 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.327103247 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.327894305 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.339816435 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.354612581 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.328153709 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.327698391 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.323078748 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.330779514 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.330107673 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338544161 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.33581933 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.326641623 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.327547667 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.328795368 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327037472 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.327127658 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.32766671 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.327684102 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327729705 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.324654797 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.34058606 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.336899136 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.334042592 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.3281771 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329075796 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.328695685 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.32858873 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.32794216 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.329354802 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.330056243 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.332183089 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.33407629 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.32922498 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.329007773 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.333039089 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.33763279 seconds)
  done (took 783.673084671 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.327916266 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327624396 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326506448 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.326342106 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327310639 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32651847 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327344482 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.32689168 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.326916748 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.327621082 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.326688391 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326701981 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.326951329 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327034354 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327154695 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327330975 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327814343 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327269992 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327476308 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327564483 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.327914728 seconds)
  done (took 29.118657825 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.331350945 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.328040258 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328058337 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331937434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329011 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.331084081 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.330079429 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331496437 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.331836556 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329335745 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.332280707 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330823294 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.33012988 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.32895433 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328347117 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331376662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.332027443 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329686786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.331827882 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.329417781 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332234884 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.329282092 seconds)
  done (took 30.517465657 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.332111468 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.333225054 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.332490162 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.329820531 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.332346621 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.32899309 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.332462736 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.332220676 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.333160718 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.333323577 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.332232495 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.333334174 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.340648284 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.337219925 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.334502108 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.333829808 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.475685656 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.333066402 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.333246752 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.333183067 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.330897249 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.338977011 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.331855033 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.330294273 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.33278799 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.333879774 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.333825619 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.334270705 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.333242135 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.335108777 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.338366109 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.334269046 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.334157853 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.336183952 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.333409805 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.335563664 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.338632998 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.335120656 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.331616671 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.33418808 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.344537647 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.355920892 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.335018543 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.342507178 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.335586651 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.334921446 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339976351 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.343547226 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.333193992 seconds)
  done (took 66.810626166 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.335985259 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.336261686 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.333516948 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.334429894 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.335058607 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.336150248 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.334775677 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.33467151 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.333155338 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.333521674 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.335108553 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.333269769 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.33324499 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.334660011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.336036619 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.333282975 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.334136733 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.333227027 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.334194837 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.333595727 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.334368211 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.336283339 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.336548153 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.334312015 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337108313 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.334383541 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.333590302 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.337236797 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.333577284 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.334616057 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.337710525 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337881988 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.336788797 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.335054046 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.33572641 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.337971362 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.336868843 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.334387959 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.337009783 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.333829782 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.337234988 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.337504466 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.337184509 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.338317823 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.335022428 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.335257677 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.334880076 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.334991925 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.335434734 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.338337953 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.338098243 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.334859041 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.338135061 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.335788806 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.337901763 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.338111711 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.335691421 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.335568396 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.339069126 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.335072622 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.335520944 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.337488425 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.33608743 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.33889223 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.338337477 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.337546791 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.335958155 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.338658238 seconds)
  done (took 92.08996074 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339801136 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.339766774 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339743326 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339350856 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.339666537 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.340489354 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.338445957 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.340437523 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.339789221 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.340286004 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.340408628 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.339393473 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.339314495 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.340390674 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.3394574 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339656436 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.340391292 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.340560057 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340900493 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340048257 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.340677722 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.340106565 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.340915458 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.341437262 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341237161 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.341340646 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.341092816 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.34083265 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340870606 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.341315835 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341671613 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.340924565 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.341538961 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.341791361 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.341223797 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.341516768 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.341494756 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341627967 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.341800005 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.341452603 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.341429035 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34142508 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.342644627 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.341864903 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.341654963 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.341952581 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.341541269 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.342249411 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.341227001 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.34172365 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.342244613 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.342926469 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342862675 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342742388 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.342828961 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.342824211 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342666589 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.342156022 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343078546 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.342840771 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.343037868 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.342787863 seconds)
  done (took 84.412441752 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342679633 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.342701995 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.340780531 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.340229509 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.343148451 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.340771901 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.342833882 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.34364203 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.343558036 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.343520927 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344553284 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342208001 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34308142 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344106726 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34201761 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344460262 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342914798 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.342249654 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34493833 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.34276331 seconds)
  done (took 28.11729217 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.342096121 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.344434643 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.34195922 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342826727 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.343948969 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.34238975 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.344582587 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34485284 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343630722 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345228881 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.34639548 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.345578288 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34269962 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342841087 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.345789199 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.343170911 seconds)
  done (took 22.763697075 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.34363601 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.346306602 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.345291776 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.346525177 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.341477658 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.341474885 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.345305961 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.34188388 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.343008568 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.346487033 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.345808137 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.345732501 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.346306935 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.346554074 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.343413123 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.346149469 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.34475915 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.342826296 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.345100292 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.346607328 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.34589758 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.343927095 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.34611584 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.345520059 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.344097737 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.344619094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.344553441 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.345676663 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.345046321 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.347202239 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.344376496 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.345720439 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.342964438 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.343879834 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.346127658 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.344809348 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.348473581 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.347005187 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.346738314 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.347208569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.34766758 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.344768449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.347920033 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.347030934 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.344733922 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.347267362 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.344439616 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.346023893 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.345154996 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.345309647 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.348853691 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.348671691 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.34904258 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.348741769 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.347884865 seconds)
  done (took 75.272021627 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349726652 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.348415277 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.346795067 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.349763167 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.348800363 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.346795064 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.349395685 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.348955283 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346621918 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.349126403 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.347129695 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.350956312 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347550629 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349511643 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.348083309 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348853967 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.347086072 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.34798946 seconds)
  done (took 25.53742593 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.34731043 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.347956302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.350414803 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.347288316 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.346814447 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.350422911 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347497505 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.349992648 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350224214 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.348780323 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348613986 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.350273636 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350411186 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.350638128 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.348213811 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346761361 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.350975142 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350872044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.34654787 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348063221 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.350927233 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350444785 seconds)
  done (took 30.945323266 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.350607923 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.350304965 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.351148854 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.367907731 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.370350062 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.373126325 seconds)
  done (took 9.429988254 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358479098 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350306098 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348637309 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351906942 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351338258 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348781523 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349396877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349222593 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352205963 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349616356 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349881957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351144568 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352359265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349477319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352673618 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352709285 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35013308 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350618342 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350678375 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352854203 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351197094 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353806745 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351208697 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351470015 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350889623 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351278564 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35343781 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350803079 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350832772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354037025 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353786159 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351750135 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353849876 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352237353 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354442251 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353559051 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352488327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355063961 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353320081 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351314786 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.353896052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353998416 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353781499 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351948019 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354160572 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351901493 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352622594 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351754957 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352324407 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355563587 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354872476 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352427673 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354254871 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354785483 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354651411 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354402723 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352679493 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353502754 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355659363 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352793701 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353419901 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354761783 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351916959 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353426774 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35552056 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354095744 seconds)
  done (took 90.560646216 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353201342 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.353142762 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353448943 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354601831 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353520124 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353297541 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35415969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35342763 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353002184 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354109668 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355988243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353303417 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355433339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353243849 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353192985 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35493989 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354149624 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355040409 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354657051 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35688614 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354345366 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355408097 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354951274 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3543698 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354472609 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358862457 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354160679 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35461619 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355558499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353743827 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355561198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355120043 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355720657 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.355121402 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355530442 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355440052 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354653001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355465529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355801337 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357636223 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356098264 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357608872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356150574 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355354874 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356706134 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356373853 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357629891 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356153755 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357177863 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356574725 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356451967 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356016202 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358153785 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356712443 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354479316 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35571594 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35706511 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356704789 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35648054 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358763739 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356864311 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356992914 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359280384 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355838794 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357275761 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358231158 seconds)
  done (took 90.739395416 seconds)
done (took 1828.443198525 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.522653909 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.477096081 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.358401808 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.394669683 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.358512651 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.380776715 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.378794087 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.359486974 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.359146986 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.359243461 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.358118448 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.548316642 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.412545309 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.359856215 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.359765737 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.455971989 seconds)
  done (took 43.720068995 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.387890969 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.369194315 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.488686841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.382501273 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.389154592 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.567991441 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.422643761 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.364927642 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.550904527 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.406714772 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.032474031 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.387922926 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.369159527 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.554091749 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.384848862 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.567783721 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.641531691 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.133672657 seconds)
  done (took 31.678338729 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.865556497 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.37170596 seconds)
  done (took 9.514338594 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.385069607 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.36481044 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.366371139 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.362080933 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.354868262 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.355998392 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.362960221 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.357669908 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.358010911 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.509575536 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.371464678 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.374570567 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.383797869 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.364512229 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.361505278 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.403567793 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.523344187 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.367566658 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.360531424 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.369633325 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.363782981 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.489137341 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.410519108 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.362524563 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.503811878 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.368348085 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.373188416 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.37076965 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.490615369 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.369549489 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.36496149 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.365436567 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.368436494 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.284074002 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.843740471 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.363158005 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.391745554 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.373819978 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.362664703 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.558207776 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.371517815 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.371868043 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.370651625 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.824139153 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.515758991 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.491487936 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.752824143 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.373345535 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.367885973 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.430731381 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.36671934 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.368061454 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.409736387 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.200012152 seconds)
  done (took 114.540411195 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.409545956 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.752694543 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530270104 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.385290829 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.145851087 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.149605755 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.383429286 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.682546055 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.374766928 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.358988796 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.660180782 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.914388008 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.385636242 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.40205972 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.804281664 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.417165812 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.360504618 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.270471997 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.384075031 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.366239005 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873383532 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.361038276 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.367037261 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.547099395 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.401726493 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.861289966 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.929228579 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.903505612 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.388122398 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.362491663 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867524652 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.394279536 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.386402154 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.361360003 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.644464973 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.751158063 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.738798051 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.373721431 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.398284533 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.362469324 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.392581667 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855192414 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.753891363 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.36891939 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.385206113 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.87898634 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.368178668 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.368046484 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.370487613 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.575939923 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.052604272 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.363914083 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.856751686 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.363599239 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.634623732 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.428213404 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445584102 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.891192634 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.370099376 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.49102137 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.392874096 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.363613936 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.365921569 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.366881808 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.363335045 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.735362702 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.502516794 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.370478902 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.73258436 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852291681 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.381213746 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929948894 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.183879568 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.388903446 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.467946787 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.36449878 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.084359371 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.892051112 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.380495324 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.36609305 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.739369573 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.372591438 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.659660148 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.381600395 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.371973628 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898314838 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.373537473 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.390170273 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.365024083 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.370943407 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.115476619 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3652274 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.667287993 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.407512282 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.366655814 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.366757123 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.381261198 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.366945644 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.366719707 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.367460299 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.921353729 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.390275402 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.507190925 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.392140466 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.366824251 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.373887031 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.368682682 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.367025321 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.595805904 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.801776526 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.374566479 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365418534 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.366770017 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.368250708 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.537926012 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.368602825 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.710792686 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.374243418 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.367030332 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.380490228 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.17875224 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.407578952 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.367370349 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.369094352 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.288555176 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.577509982 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.389864389 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.385749875 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.367997422 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.396719357 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.78406238 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.396472536 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.38642906 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.370334638 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105868401 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.4226852 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.385517724 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.714878497 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.374591486 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32618958 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.393443766 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.370413355 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6661219 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.649431612 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.452457498 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.370114989 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.389417776 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.08129299 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.404177337 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509388383 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.388766982 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.355032164 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568541434 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.518475011 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.369169973 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.960139708 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.368612886 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.594267066 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.369559584 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.679425512 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902647425 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.393318471 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.378641162 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.103919381 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.118773395 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.012634944 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.372821938 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.65928983 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.348220813 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.854625846 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.369951358 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.370616124 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.939609237 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.372578792 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.373437599 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.370812838 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.371394384 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.523201095 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.546546813 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.567639724 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.377767271 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846550111 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.407218456 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.373667563 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.378335618 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.374886631 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.718917162 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.428513988 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.371781785 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.4075434 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.370974951 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.372944462 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865870019 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.205381035 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.372917218 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.526319893 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042208795 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.395966759 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.373048811 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.951675132 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.853602454 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923518331 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.390161605 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.722389663 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.383452102 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.413633802 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.13587295 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.468492849 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887832997 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.378954615 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.374046117 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.005299974 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.39803373 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.735769496 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.374034047 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.373689652 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963996608 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.397136554 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.374652352 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.696483701 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.393877868 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.632327018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.37478576 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.373169493 seconds)
  done (took 1120.987252454 seconds)
done (took 1321.714620187 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.374006245 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.374104374 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.367419587 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.381759809 seconds)
  done (took 26.790522864 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.386540346 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.382447802 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.382852492 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.381336692 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.384418965 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.382465531 seconds)
  done (took 9.596746367 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.429370062 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.376949542 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.382841701 seconds)
  done (took 19.485206633 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.604786647 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.750387051 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.744362007 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.747259787 seconds)
  done (took 11.144538394 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.384712705 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.384005801 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.385661778 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.384715012 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.386683301 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.38843908 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.384569537 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.384290622 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.387061184 seconds)
  done (took 13.76506362 seconds)
done (took 82.07565308 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.393162418 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.403198779 seconds)
    (3/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.488076198 seconds)
    (4/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.466158296 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.850196657 seconds)
    (6/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.477846463 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.392969601 seconds)
    (8/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.367570608 seconds)
    (9/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.384015658 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.663689569 seconds)
    (11/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.380850582 seconds)
    (12/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.370527709 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.906314073 seconds)
    (14/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.262652427 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.418298268 seconds)
    (16/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.573090773 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.419672299 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.405556315 seconds)
    (19/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.405001734 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.364946446 seconds)
    (21/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.89959621 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.958761746 seconds)
    (23/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.92913682 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.281776816 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.951831607 seconds)
    (26/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.404518046 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.418424758 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.804523709 seconds)
    (29/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.384006227 seconds)
    (30/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.365989704 seconds)
    (31/286) benchmarking ("sort", BigInt, true)...
    done (took 6.381106082 seconds)
    (32/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.36622658 seconds)
    (33/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.397520845 seconds)
    (34/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.385585621 seconds)
    (35/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.199399477 seconds)
    (36/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.92989214 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.507770787 seconds)
    (38/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.080895152 seconds)
    (39/286) benchmarking ("sort", BigInt, false)...
    done (took 6.385906047 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.273697642 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 6.379303638 seconds)
    (42/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.505717093 seconds)
    (43/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.40608081 seconds)
    (44/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.639497385 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.825236497 seconds)
    (46/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.510330249 seconds)
    (47/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.365970996 seconds)
    (48/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.404192673 seconds)
    (49/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.368644456 seconds)
    (50/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.775266938 seconds)
    (51/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.77509633 seconds)
    (52/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.645822575 seconds)
    (53/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.061866265 seconds)
    (54/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.801586868 seconds)
    (55/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.483120625 seconds)
    (56/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.367057656 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.768051432 seconds)
    (58/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.625387861 seconds)
    (59/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.408675604 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.405830211 seconds)
    (61/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.393076901 seconds)
    (62/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.872697328 seconds)
    (63/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.489374331 seconds)
    (64/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.490096002 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.367275456 seconds)
    (66/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.302334575 seconds)
    (67/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.641661939 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.200338862 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.380673406 seconds)
    (70/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.393231255 seconds)
    (71/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.40854776 seconds)
    (72/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.382659085 seconds)
    (73/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.398620276 seconds)
    (74/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.438645052 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.550576769 seconds)
    (76/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.389359603 seconds)
    (77/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.789620704 seconds)
    (78/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.369845382 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.445407714 seconds)
    (80/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.932856467 seconds)
    (81/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.81274827 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.037495669 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.298498656 seconds)
    (84/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.453106228 seconds)
    (85/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.488588419 seconds)
    (86/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.464042388 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.019395239 seconds)
    (88/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.36936125 seconds)
    (89/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.412454921 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.223732528 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.382744672 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.272662427 seconds)
    (93/286) benchmarking ("sort", Int64, false)...
    done (took 5.69775424 seconds)
    (94/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.117738086 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.189583382 seconds)
    (96/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.357387538 seconds)
    (97/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.39180256 seconds)
    (98/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.26553538 seconds)
    (99/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.436921932 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.371289978 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.547900295 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.863078007 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.211351394 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.467934126 seconds)
    (105/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.377773361 seconds)
    (106/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.64906497 seconds)
    (107/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.224966053 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.945445842 seconds)
    (109/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.373740174 seconds)
    (110/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.470517329 seconds)
    (111/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.690716979 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.378988274 seconds)
    (113/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.500675039 seconds)
    (114/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.011313506 seconds)
    (115/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.419382148 seconds)
    (116/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.40994856 seconds)
    (117/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.768362176 seconds)
    (118/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.430102598 seconds)
    (119/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.616585846 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.49542008 seconds)
    (121/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.371362726 seconds)
    (122/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.394755256 seconds)
    (123/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.372071591 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.061074292 seconds)
    (125/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.488624907 seconds)
    (126/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.41184034 seconds)
    (127/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.671965535 seconds)
    (128/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.46655565 seconds)
    (129/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.39255116 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 1.933790073 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.414444129 seconds)
    (132/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.434367401 seconds)
    (133/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.997620883 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.643339477 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.369914346 seconds)
    (136/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.373578136 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.347237275 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.380190568 seconds)
    (139/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.385921049 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.211921432 seconds)
    (141/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.449888701 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.665623466 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.320279927 seconds)
    (144/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.386276695 seconds)
    (145/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.561945415 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.495197729 seconds)
    (147/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.387833814 seconds)
    (148/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.510717356 seconds)
    (149/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.384471078 seconds)
    (150/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.479431263 seconds)
    (151/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.487811555 seconds)
    (152/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.390037146 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.412395931 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.216264932 seconds)
    (155/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.14318885 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.446673423 seconds)
    (157/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.612041776 seconds)
    (158/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.409896946 seconds)
    (159/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.376560617 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.409410572 seconds)
    (161/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.416555456 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.404019388 seconds)
    (163/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.463593748 seconds)
    (164/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.427692777 seconds)
    (165/286) benchmarking ("sort", Int8, true)...
    done (took 6.392900671 seconds)
    (166/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.94420404 seconds)
    (167/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.377582292 seconds)
    (168/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.472027312 seconds)
    (169/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.501831018 seconds)
    (170/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.702378309 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.78377878 seconds)
    (172/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.433400744 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.387878101 seconds)
    (174/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.37568002 seconds)
    (175/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.991506183 seconds)
    (176/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.377126407 seconds)
    (177/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.219659019 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.405319746 seconds)
    (179/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.662343699 seconds)
    (180/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.415215839 seconds)
    (181/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.470319063 seconds)
    (182/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.872486109 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.216585276 seconds)
    (184/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.269604123 seconds)
    (185/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.585743761 seconds)
    (186/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.638533802 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.416403849 seconds)
    (188/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.388425286 seconds)
    (189/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.77793671 seconds)
    (190/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.075096324 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.430366315 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.372260101 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.073052059 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.387306462 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.402911814 seconds)
    (196/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.496468688 seconds)
    (197/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.392497598 seconds)
    (198/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.377893902 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 5.423638316 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.824471228 seconds)
    (201/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.428345891 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.450083116 seconds)
    (203/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.728426594 seconds)
    (204/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.449532768 seconds)
    (205/286) benchmarking ("sort", Float64, false)...
    done (took 5.707003773 seconds)
    (206/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.322234203 seconds)
    (207/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.37798325 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.644760168 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.833059908 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.52813598 seconds)
    (211/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.922457016 seconds)
    (212/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.163073654 seconds)
    (213/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.417072172 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.592979583 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.321668905 seconds)
    (216/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.407571709 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.182205121 seconds)
    (218/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.39274782 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.13951855 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.378194574 seconds)
    (221/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.374581934 seconds)
    (222/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.822260162 seconds)
    (223/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.427046774 seconds)
    (224/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.413575117 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.834420532 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.432490757 seconds)
    (227/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.378543087 seconds)
    (228/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.085312354 seconds)
    (229/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.963448615 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.484292061 seconds)
    (231/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.378720064 seconds)
    (232/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.133965595 seconds)
    (233/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.391004792 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.792292769 seconds)
    (235/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.436663766 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.380443665 seconds)
    (237/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.517025812 seconds)
    (238/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.439984371 seconds)
    (239/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.802084001 seconds)
    (240/286) benchmarking ("sort", Float32, true)...
    done (took 6.393230049 seconds)
    (241/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.593990105 seconds)
    (242/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.401163387 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.627402746 seconds)
    (244/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.841253582 seconds)
    (245/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.035860189 seconds)
    (246/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.387273863 seconds)
    (247/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.496212526 seconds)
    (248/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.084190555 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.42585305 seconds)
    (250/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.421150494 seconds)
    (251/286) benchmarking ("sort", Float64, true)...
    done (took 6.393837686 seconds)
    (252/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.53453758 seconds)
    (253/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.934889491 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.774971365 seconds)
    (255/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.394331252 seconds)
    (256/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.496769829 seconds)
    (257/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.412483653 seconds)
    (258/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.926125716 seconds)
    (259/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.388492374 seconds)
    (260/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.380786083 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.163612488 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.107950497 seconds)
    (263/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.159580696 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.484285082 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.475354302 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.837646319 seconds)
    (267/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.208443797 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.507563262 seconds)
    (269/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.121462213 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.219110843 seconds)
    (271/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.085288877 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.400314953 seconds)
    (273/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.47858778 seconds)
    (274/286) benchmarking ("sort", Float32, false)...
    done (took 5.428088533 seconds)
    (275/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.517453435 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.435548283 seconds)
    (277/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.434488912 seconds)
    (278/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.419086731 seconds)
    (279/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.403989541 seconds)
    (280/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.145547189 seconds)
    (281/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.411403391 seconds)
    (282/286) benchmarking ("sort", Int8, false)...
    done (took 4.44400577 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.425175646 seconds)
    (284/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.41193057 seconds)
    (285/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.421285449 seconds)
    (286/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.48130922 seconds)
  done (took 965.664816057 seconds)
done (took 966.961117781 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.428685225 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.424404339 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.404839556 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.427823423 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.518222269 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.582949089 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.415891944 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.407985065 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.453387826 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.455266436 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.403810712 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.580880376 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.40718575 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.405679183 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.406029058 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.420456176 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.588529462 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.4140765 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.423828721 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.415768865 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.423525073 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.40513473 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.456120844 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.583545077 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.410953161 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.408670943 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.410114826 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.426780364 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.5180925 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.410653279 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.409485841 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.417592564 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.586968869 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.41300842 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.402532609 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.426898729 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.418860598 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.417154149 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.410833435 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.440939082 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.969369476 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.408169158 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.409229 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.408380652 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.408678285 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.411838338 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.410795189 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.413843807 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425398481 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.423213604 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.036376125 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.431623022 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.412397598 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.409570255 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.420005564 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.408738355 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.413122755 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.425858923 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.427693408 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.427164834 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.581167487 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.421572996 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.411737426 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.426771985 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.41824539 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.099749201 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.412290362 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.412516041 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.975987552 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.414795382 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.001172771 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.418993861 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.412070359 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.424320056 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.442322471 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.550129727 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.412866703 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.409584951 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.418268855 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.40983177 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.42245363 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.4263029 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.416118209 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.411472021 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.426192672 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.586665929 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.420548107 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.412903262 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.420978132 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.430348672 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.418694453 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.421926217 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.415496251 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.407017976 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.421006792 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.41518457 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.414914848 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.414331772 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.41693727 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.422877378 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.969624381 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431489688 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.409447103 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.408960697 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.410748525 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.426348831 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.970398863 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.413776929 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.433166711 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.459586173 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.413023262 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.521686616 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.416186953 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.430953748 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.421466723 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.417106579 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.408137514 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.520494336 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.965565245 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.428591603 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.414560941 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.411635975 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431194552 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.415714874 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.410183178 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.537247068 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.415737777 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430183471 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.535139291 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.42495988 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.445652002 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.413173672 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.418807109 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.444557321 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431962501 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.446140247 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.418041026 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431566338 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.431219227 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.412146684 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.426553725 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.424692694 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.417419768 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.420481506 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.408239271 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.445276585 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.42990187 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430788885 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.4349782 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.536571397 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.413231976 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.525251379 seconds)
done (took 239.93440457 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.47738491 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.405467397 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.506474791 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.413050621 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.515693898 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.514782845 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.409566964 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.410129953 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.411138975 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.792722323 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.410371205 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.411277476 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.411417054 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.411316412 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.49456768 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.41453302 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.412301686 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.75818949 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.414100423 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.485176126 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.414660869 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.410788319 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.4143895 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.800686788 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.410266638 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.411158026 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.484123498 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.414135054 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.766998094 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.416881721 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.411233654 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.766880178 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.505446661 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.43227132 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.424186045 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.421967609 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.518173999 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.434586739 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.496776215 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.49714601 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.507798493 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.454061629 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.417183383 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.408004499 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.417539355 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.416387106 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.413560533 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.440729408 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.412560479 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.412993243 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.759165165 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.425675275 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.414798384 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.414361608 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.414426747 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.445760785 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.413654406 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.416860446 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.506770865 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.418479294 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.479244756 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.804400669 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.797493316 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.418696701 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.416115286 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.415080771 seconds)
  done (took 153.919156294 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.484913053 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.49116029 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.535263294 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.418956304 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.46843563 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.540809363 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.419538048 seconds)
  done (took 11.685881922 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.424150787 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.418995276 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.468495226 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.468681095 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.418621683 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.595533732 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419324737 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.430210211 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.416529637 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.47038281 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.418593235 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.418679825 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.424843317 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.411421098 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.467797247 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.430119479 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.533240845 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.421266402 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.418689116 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.575368624 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.416100587 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.425433928 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.471863689 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.430632624 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.420153314 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.425797639 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.23729155 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.420926146 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.417020851 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.420023285 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.416591514 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.494556678 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.42048593 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.417054424 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.41597708 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.533819846 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.419223276 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.416658696 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.420773819 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.419675404 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.420099582 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.41994186 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.419998284 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.418060375 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.420252144 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.443222289 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.419948362 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.419345232 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.420405878 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.420264239 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.47207116 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.421823416 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.417744751 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.418550644 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.474853055 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.428275983 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.422745126 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.419896278 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.421641873 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.419175593 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.578731934 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.469080982 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.421442515 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.468635027 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422659054 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422839159 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.421435142 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.420924772 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476835111 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.422120752 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.470938356 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.420560871 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.601663053 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.444866558 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.4239245 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.424879095 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.425003904 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423443565 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.417252434 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.428898453 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.420018369 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.423935518 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.42979889 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.420354921 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.420261113 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.588205713 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.52932953 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.42023161 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.43590331 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.429013485 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.419576479 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.47528784 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.423191897 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.419546754 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.475596374 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.538947463 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.475515345 seconds)
  done (took 162.131429128 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.428576891 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.432247498 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.427917541 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.445696373 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.423279152 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.423935074 seconds)
  done (took 9.914308563 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.425907524 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.425854576 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.423590908 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.423021048 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.423793945 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.423825846 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.424384026 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.426422973 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.429130133 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.42447374 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.42313417 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.42536178 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.426577778 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.424728261 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.425337052 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.425084014 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.425094246 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.422676086 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.42612107 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424880432 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.520779677 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.425906164 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.424696168 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.427743886 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.429341384 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.426327444 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.433368919 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.427274076 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.424968778 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.431255466 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.428830715 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.426331422 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.42746918 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.432279294 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.42953979 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.428799534 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.429846767 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.426876426 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.423133174 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.42637487 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.426414016 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.424776325 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.425706393 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.427439247 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.428410061 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.431794303 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.432320248 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.434763094 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.42714906 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.428552057 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.427287511 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.426903593 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.42639164 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.427710671 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.429690495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.450069324 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.432917184 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.42654138 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.426613326 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.429666812 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.428996961 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.427346857 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.428956155 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.431535128 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.434528429 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.428337169 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.430356793 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.432718029 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.427364596 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.42752092 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.428827103 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.42487856 seconds)
  done (took 105.229163469 seconds)
done (took 444.203208587 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.597205296 seconds)
  done (took 7.933502413 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.65874205 seconds)
  done (took 7.997311806 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.736256773 seconds)
  done (took 24.080702011 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.512467285 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.424354076 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.421717538 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.427374233 seconds)
  done (took 27.124509337 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.654321077 seconds)
  done (took 7.992660097 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.422416926 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.427357365 seconds)
  done (took 14.188606326 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.708255882 seconds)
  done (took 8.045462326 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.576444075 seconds)
  done (took 7.918353688 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.434828249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.438292676 seconds)
  done (took 14.224938518 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.410341342 seconds)
  done (took 7.74943103 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.522939333 seconds)
  done (took 17.861944781 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.424368776 seconds)
  done (took 7.765662651 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.496204469 seconds)
  done (took 7.834427888 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.291928305 seconds)
  done (took 10.630450182 seconds)
done (took 172.685448321 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.423796973 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.430674729 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.430459438 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.431143533 seconds)
  done (took 27.054640488 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.464129425 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.464317564 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.46624406 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.474223761 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.467008731 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.463115909 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.456243156 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.455859733 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.474111444 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.466451067 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.464967269 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.466700273 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.463749059 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.456807109 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.466876517 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.465801711 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.475261097 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.465649625 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.456379034 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.467872487 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.431177318 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.474627379 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.468214347 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.431847303 seconds)
  done (took 36.448051669 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.952197359 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.504590125 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.585839543 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.484591951 seconds)
  done (took 7.867578679 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.482678294 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.48488639 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.497367893 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.538339071 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.561810479 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.494984647 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.457979987 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.45246852 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.438688498 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.485006043 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.561115378 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.500796903 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.567692598 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.432367423 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.616863678 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.431465357 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.432182621 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.483640056 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.535953131 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.549781092 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.433475379 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.482923721 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.490291163 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.50034384 seconds)
  done (took 37.253267274 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.432281215 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.45126714 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.431825955 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.431025042 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.441400739 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.43222738 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.43252514 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.434365235 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.432459027 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.438619167 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.431215019 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.445994065 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.432503949 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.43263233 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.43932935 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.432785654 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.438346775 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.431423419 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.433022562 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.43895901 seconds)
  done (took 30.056438861 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.427261592 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.281658116 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.779144419 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.684595156 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.428370333 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.435718446 seconds)
  done (took 28.379366839 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.513859518 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.672690425 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.443189944 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.85105067 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.91792806 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.438019061 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.434803259 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.710792886 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.090995091 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.081085117 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.508622794 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.519138523 seconds)
  done (took 21.527577077 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.430350366 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.435947453 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.444518219 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.453235093 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.498102821 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.442318343 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.442570724 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.428007508 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.504431717 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.501959365 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.440320624 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.499783757 seconds)
  done (took 38.867576572 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516757089 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479453494 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.472059751 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470565271 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177604701 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643808177 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.505966949 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.183371131 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.434064298 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704159609 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432368778 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521054229 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688714453 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435307583 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.439539551 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.571130879 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664947227 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969035779 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432380805 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.848707094 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456799296 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.433240974 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.098275086 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.709751633 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.65065225 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.415102197 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.693607988 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.209646042 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760035285 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453835059 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44353205 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433046671 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707936596 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150195444 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555821773 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683082652 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459063159 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.989472571 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.439489587 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.853785792 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436375252 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452962061 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444028355 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43459697 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.365999736 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436579042 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253817384 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.446883421 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.144368725 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434452669 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741733123 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537423794 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.437382796 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.00687789 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.51089325 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.44115239 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.437562449 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534941574 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001969339 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.119920442 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449276485 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.376620966 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444455874 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998673084 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131827711 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.440515441 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.438938614 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436984239 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368970537 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.851048996 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450861422 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57219386 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.460248797 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09663298 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210363778 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438951913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365932279 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030634277 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435795602 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.400363671 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661873466 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.213130818 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375599841 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.37541963 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.369492118 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207017842 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441584099 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.09721459 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455538969 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.19339948 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.705141863 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459704442 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459305806 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.661151709 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.321751398 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435867378 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.449841839 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553559552 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458826176 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242291348 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398901088 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.439579708 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694098645 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.648643094 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435404044 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.569696801 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979244431 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456233715 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.460609107 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.440802091 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.694277309 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.097509964 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.461354164 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339943612 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461316561 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.216011477 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244558836 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442170006 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.449287513 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438485509 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73161438 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.319635785 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318936029 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505715375 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44211283 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438551518 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.1683311 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297595194 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.320825386 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.678820453 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476591861 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.457636709 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.440943585 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398271128 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.452300681 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462444814 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.224287392 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664560822 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43837764 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724068074 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373594991 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577857462 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455074581 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.662907544 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.804838738 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.452231805 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700442249 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440515581 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.450382624 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458647188 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459275839 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541131923 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46211059 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.442305581 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.704791568 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.444795218 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.4449105 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.012917567 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.224022118 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444664003 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.448893428 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446138479 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101288163 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420731419 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444475082 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335634554 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.455294388 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50862712 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446990105 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.692774146 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.927083403 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4485706 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.464871231 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.439556297 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671827929 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450373928 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 6.003505412 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530168336 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.996001808 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122364829 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458987646 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.375502942 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.15356025 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.136197593 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442397389 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.634133938 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.443244491 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693861943 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46275116 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.46158709 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.101227512 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452473083 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.023274649 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.456666026 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.455726347 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.448163337 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4431241 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.939941326 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37786278 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462690583 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.462325429 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58706154 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.457548321 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.377941209 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.959549866 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.449042176 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444029643 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.219390228 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478470202 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.023469333 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316741675 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702498868 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468797695 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753125462 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.130406012 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.485656143 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.444050184 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445416888 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44646209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.457782285 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459962243 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.454214572 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.017364639 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.899961677 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009557741 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313789315 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055209094 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.908739006 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.456871467 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.335808902 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201082582 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399532274 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.105040554 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711449231 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206178991 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421809642 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005643188 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.807717405 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.318880266 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75241671 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683335092 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.892283137 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.455374528 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758494632 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666969641 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480698306 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460006453 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.38161942 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.735652368 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062785762 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47622765 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534132008 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20717865 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469234319 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.223483367 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.457974473 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.225819143 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909846374 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.022330259 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.842623867 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.463406982 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471944046 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310505868 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44905988 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.977379169 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161184369 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456849617 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.985483283 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407343331 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.700756261 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.466886114 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.453503358 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.297681988 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.463870832 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.711977568 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749776886 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391219436 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449875602 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058083129 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.308884634 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.453493138 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448926485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254895847 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451764926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782944462 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.46201052 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.949835257 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46185673 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.382424555 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385439025 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.144178642 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.455742093 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421210781 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985415686 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.464679444 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47569045 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458376063 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30491316 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.706427044 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.462361045 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11279774 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682512983 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45062928 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473060353 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.452641629 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449481031 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.438040312 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.331898797 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686727734 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482747079 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.673422708 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.506783849 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.357885216 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.55011538 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.662207049 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.346643661 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.451324555 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732918818 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.166955388 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.473070794 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291547821 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479396074 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451048017 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.470171044 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471844298 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478054815 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521062223 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705204148 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.465145513 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.461736855 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91361904 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478599013 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453934827 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.465956393 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544987579 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399736496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.961545504 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.232816946 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122542286 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272616762 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12136166 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770083921 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.461160992 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453655839 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387626626 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603555752 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981857252 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727550609 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.574020081 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.466948963 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476680617 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460322317 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456449761 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691496333 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729154914 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.328552099 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464393971 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123486793 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.61277108 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463424796 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.665329806 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995686195 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057602922 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56812488 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.454756944 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273924585 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733607911 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.5462207 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455136762 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052124695 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.456013402 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.249977098 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.459234708 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470286425 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602716786 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757599811 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176033714 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.490982179 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.610984507 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.227506064 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066749722 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.721558353 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.009201128 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.70892361 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135288759 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269465814 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728071157 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526178841 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710121841 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.577920885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603580953 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.457677983 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.364481381 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457389646 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305559711 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.16736603 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.467065768 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129166137 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729357499 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.460094713 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.462061921 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486632984 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.467253652 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.681838834 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236448139 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.682229607 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.467057758 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.461382558 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.031430559 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130042659 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.779541382 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400676602 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.46173628 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737947204 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.698677615 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482887979 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.910122152 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.169672691 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063222861 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.43332706 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480896734 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471309157 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27483371 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14039393 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.985377363 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007300125 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.118972297 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474626009 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.739654637 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.463929057 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.465590836 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741315357 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.462616171 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.47323765 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72228326 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.1375904 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.347705615 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.478254106 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2425562 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.403982114 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.689026642 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490145438 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396521023 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468922527 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.936736378 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.488810884 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581181115 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471144237 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.456420768 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469194859 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.222965196 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.752755932 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.466610141 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.46206419 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.452908973 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.462226699 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566566452 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083627735 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483492124 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.136801112 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.813228112 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.719228026 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460562153 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.456115584 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.464330132 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460540138 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.186611343 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440255631 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.463807515 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071534384 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.461952698 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.478032072 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.464985915 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.678397258 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674873356 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.46268466 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745565233 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476653655 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484114018 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.369226257 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.235929257 seconds)
  done (took 1729.784323496 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.484818914 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.485425587 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.488965326 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.56032502 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.522222567 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.589809537 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.565893331 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.486772107 seconds)
  done (took 53.559398332 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.472923735 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.627969443 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.496228254 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.469974405 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.480013015 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.477579669 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.99478049 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.488707709 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.480557988 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.473466531 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.469749096 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.475471206 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.195579073 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.480678335 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.462674179 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.459852993 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.480207032 seconds)
  done (took 67.866623453 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.261445857 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.515595473 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.117642409 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.494923656 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.526854164 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.479356809 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.007529074 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.48867766 seconds)
  done (took 56.267627954 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.475380592 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.474839039 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.47503499 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.47569433 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.476217873 seconds)
  done (took 8.752720668 seconds)
done (took 2145.024650213 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.468592068 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.471132072 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.469161992 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.470123976 seconds)
  done (took 7.255397874 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.451380114 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.188745877 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.452417438 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.475737939 seconds)
  done (took 18.944953769 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.481574932 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.470675534 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.295560973 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.200100163 seconds)
  done (took 5.873399126 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.219684412 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.229709699 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.212290126 seconds)
  done (took 8.039861146 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.466669161 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.469809861 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.47227504 seconds)
  done (took 20.786733939 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.775920778 seconds)
  done (took 3.153810007 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.615959326 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.668008259 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.834543255 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.80960995 seconds)
  done (took 8.306874054 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.874221332 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.8353324 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.664779857 seconds)
  done (took 6.752862732 seconds)
done (took 93.441762727 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.684129128 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.49245016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.672278027 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.65891353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.701055336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.673441707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.786537574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.625236442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.398173627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.162122599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.66486059 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.701323339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.74391955 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.493308314 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.745486769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.491635777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.703930863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.726734348 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347461314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.48344639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.79061208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.298238683 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.49394506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.314754819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.703790285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.621453369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.880454395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.492785385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.467557851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.900299074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.622075761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.476255074 seconds)
  done (took 200.398469921 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.46931047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.468974795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.470301361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.479155501 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.468071806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.469601325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.471980318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.487250049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.47133411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.469606501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.499801105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.469361902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.491708501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.468655735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.468981608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.469980185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.469696177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.487108671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.469869898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.470086788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.489743009 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.480516422 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.470004649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.474675375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.482160384 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.471461745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.494009828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.481403316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.477825346 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.486849111 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.469660839 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.489823359 seconds)
  done (took 208.640583851 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.477098917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.490900462 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.47195608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.471386277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.470739808 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.479376082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.480340328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.475958104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.489558007 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.510183794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.486416034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.471674143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.47123553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.488758775 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.474603555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.472944624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.503471185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.491576577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.47663495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.477398754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.473785406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.472310533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.47594226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.487866021 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.479207685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.481434049 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.488321835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.471990203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.49781682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.477883386 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.477361572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.477707954 seconds)
  done (took 208.777455918 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.676480173 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.479133195 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.480147891 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.411941463 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.480663585 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.479243853 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.473673906 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.676831411 seconds)
  done (took 15.543823255 seconds)
done (took 634.738626338 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.02791984 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.744504122 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.69795984 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.507135229 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.416349028 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.525523257 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.500479275 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.696274334 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.483443595 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.708121324 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.907790057 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.504224864 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.056169852 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.500770604 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.776599782 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.606859524 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.444382415 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.550474634 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.853881801 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.137139722 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.781163092 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.129604983 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.704488764 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.453187579 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.018997958 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.12012939 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.342780833 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.438907286 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.501577291 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.859914614 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.354650281 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.66135642 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.560607363 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.56365002 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.619280235 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.617446631 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.601602439 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.576287649 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.698737129 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.830014605 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.169520624 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.26898495 seconds)
  done (took 100.905556688 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.472459151 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.472749135 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.471149904 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.473159247 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.473149784 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.471605374 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.471571908 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.470981526 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.472211259 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.470846353 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.472471924 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.472068646 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.472254927 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.47346971 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.472053816 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.472824421 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.473752308 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.475240587 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.4735018 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.472638398 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.473015432 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.472434567 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.473491626 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.473120423 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.473681496 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.473734931 seconds)
  done (took 39.678930793 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.485841103 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.754772834 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.946302421 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.500041669 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.484504769 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.490549353 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.575361506 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.487268413 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.489276135 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.489725454 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.652396747 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.487973697 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.521363421 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.973778488 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.497978668 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.485609819 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.485879478 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.485915724 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.765976914 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.501999156 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.593759328 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.489404263 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.576824613 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.498499465 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.509272521 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.488040394 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.491224691 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.063730516 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.490071752 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.649358156 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.403036684 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.580100699 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.04670409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.963147984 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.412036208 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.494561894 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.487921013 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.656025966 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.489515049 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.48690884 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.578002345 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.490836064 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.955196277 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.207356816 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.516371842 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.488221496 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.094570325 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.661753531 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.77225391 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.499304329 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.984924216 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.498199953 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.489144288 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.488895086 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.776694336 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.502084611 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.488599961 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.134918093 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.515384782 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.579892906 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.497804482 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.488559987 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.772316788 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.493221982 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.761561271 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.495021955 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.497473102 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.510310004 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.956121466 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.501263156 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.228866211 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.518399456 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.489475998 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.656044694 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.76471008 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.139613715 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.499929271 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.778092333 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.069469155 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.587755501 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.503629649 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.061383649 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.590643018 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.503607074 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.492499924 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.491636414 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.489438887 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.536058141 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.579556126 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.163838986 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.225400062 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.174864356 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.608578799 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.506737156 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.491064053 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.142287 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.515844935 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.491750353 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.954797133 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.235144907 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.521415955 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.498857137 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.223395767 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.517945109 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.585131261 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.505444052 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.964797705 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.501226117 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.538596116 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.490273017 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.498332962 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.514365339 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.584567 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.504289731 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.493346979 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.193982218 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.691860977 seconds)
  done (took 196.842888597 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.485088012 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.483923264 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.485673842 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.485736979 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.485562608 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.495083048 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.486013608 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.48573919 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.491556236 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.485482383 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.486365643 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.490597163 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.487710452 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.490130779 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.496876535 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.493054471 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.102743817 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.485753556 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.48579938 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.487376724 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.321746755 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.495891204 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.486298804 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.487130175 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.487668718 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.487517843 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.492498874 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.489079903 seconds)
  done (took 156.520597336 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.495827423 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.16785966 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.501921766 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.649370461 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.523394296 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.492639987 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.647162371 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.563137976 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.496231655 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.492201471 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.49259866 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.857315112 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.50321335 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.095652124 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.722977724 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.654616981 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.114263858 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.52147296 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.493562762 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.493116693 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.650495264 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.51402742 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.860698731 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.177273051 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.504323496 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.172593388 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.493122033 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.49837583 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.495017492 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.173152753 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.500762807 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.861698942 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.59200166 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.571825146 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.174067498 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.094844638 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.131265513 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.677644305 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.501261612 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.494340478 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.493963765 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.48764036 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.172479905 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.502869458 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.497667481 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.170492751 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.524864706 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.498794895 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.504989389 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.495766695 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.563965085 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.564779406 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.842455595 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.14113597 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.588353076 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.517624984 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.651947352 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.918482219 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.500401282 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.115922702 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.496202924 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.139044235 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.520433631 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.487809137 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.497989947 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.50412625 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.673181957 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.658308895 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.119422651 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.523430366 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.077831863 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.69191863 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.505350906 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.497900813 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.499755229 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.140159617 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.080247347 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.69246066 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.663138732 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.730469262 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.497538791 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.498591207 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.490862558 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.58883627 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.507420094 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.13914928 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.129706267 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.526213078 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.50104941 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.498930187 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.501585088 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.703170985 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.146767068 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.589599529 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.083685589 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.864639809 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.845982725 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.50175842 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.565402046 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.51743166 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.846619396 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.500016751 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.56511471 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.98729484 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.848536211 seconds)
  done (took 179.918645481 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.775814769 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.843392695 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.599630183 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.661403611 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.14445706 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.090973338 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.868150389 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.666208158 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.626575228 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.78608059 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.755492666 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.591901772 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.743620278 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.588140408 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.308815722 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.580760905 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.599912354 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.66991128 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.654911372 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.626367019 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.202743741 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.802599561 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.719121859 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.593881673 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.607138791 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.332149203 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.108491249 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.052179359 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.703029552 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.909085854 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.062643141 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.683466406 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.548764224 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.23647195 seconds)
  done (took 72.150012754 seconds)
done (took 747.400961914 seconds)
SAVING RESULT...
DONE!
