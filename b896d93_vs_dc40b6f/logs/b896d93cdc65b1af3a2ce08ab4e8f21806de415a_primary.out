cset: moving following pidspec: 22212
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.318360384 seconds)
loading group "string"... done (took 0.478396618 seconds)
loading group "linalg"... done (took 7.745658421 seconds)
loading group "parallel"... done (took 0.1739047 seconds)
loading group "find"... done (took 1.180599403 seconds)
loading group "tuple"... done (took 2.140865325 seconds)
loading group "dates"... done (took 1.345401567 seconds)
loading group "micro"... done (took 0.249135432 seconds)
loading group "io"... done (took 0.670648507 seconds)
loading group "scalar"... done (took 42.185215258 seconds)
loading group "sparse"... done (took 13.227294247 seconds)
loading group "broadcast"... done (took 1.083760133 seconds)
loading group "union"... done (took 14.691046977 seconds)
loading group "simd"... done (took 5.224606375 seconds)
loading group "random"... done (took 10.397882999 seconds)
loading group "problem"... done (took 2.023512238 seconds)
loading group "array"... done (took 24.567217972 seconds)
loading group "misc"... done (took 1.527771473 seconds)
loading group "sort"... done (took 3.983906485 seconds)
loading group "collection"... done (took 19.786630547 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.456875871 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140790994 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144201962 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134790714 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200809406 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136653017 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158260505 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.107095522 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.935092096 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181402533 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141752943 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.493663617 seconds)
done (took 4.969934786 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.241642228 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08033658 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09346088 seconds)
  done (took 0.854034568 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087729938 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140105585 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088824345 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074751701 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073118125 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090395115 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07282379 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.089854748 seconds)
  done (took 1.314094528 seconds)
done (took 3.193881125 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.720215812 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.263385445 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200055184 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.50263256 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.173758179 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.204467498 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685947167 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.370984089 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.236457717 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099626919 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.127103736 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391040597 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112587383 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685169756 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084870025 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.120630155 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174900793 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.456239313 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088120458 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089408143 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.112103411 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.148692693 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.108375731 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082020818 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.174498156 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.076885703 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.18106735 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102897019 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074613476 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277623559 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.195564568 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682442238 seconds)
  done (took 10.723482618 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111285271 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133236733 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074987343 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150090604 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132949495 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079864416 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.096937858 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074491086 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120739464 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174522864 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11181044 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136295045 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087309339 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076874753 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112985172 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.224803029 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115473266 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.114058637 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079077919 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084002596 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.132214173 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.106932036 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088423276 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.103298942 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.162124685 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199904198 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107306853 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121490736 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077231267 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.108601657 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138910085 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15391128 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073270407 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074330139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171427544 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118948671 seconds)
  done (took 4.928467504 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185509058 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097863919 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166815475 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159027751 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139066779 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.149940634 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107069255 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254909005 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.118678305 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160474155 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139082179 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110967536 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076008223 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096864423 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074904107 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.602182181 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161057355 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127836105 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093221431 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096254449 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081081038 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386187214 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096046504 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073453695 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097573464 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06749847 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153413947 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076713001 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.293974721 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.078156877 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095171383 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09490123 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.123911364 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127622973 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106723908 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131845363 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075696297 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090404825 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173882073 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10321263 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096503531 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074849232 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118956855 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112891989 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130804997 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08860557 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075394821 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204732781 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089305834 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091898072 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.071259054 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.005775289 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176801424 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089080111 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073930372 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330421566 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111611219 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074488841 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.090748802 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283331899 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123133905 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090319505 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075162776 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076734252 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09405624 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.398004346 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075011229 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.013938219 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076224582 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083821409 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09366229 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090702381 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082285897 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080620467 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110570845 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074078812 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093972346 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073803042 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.090051834 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07603203 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109975985 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080445809 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.090678565 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142095701 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.086834341 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094440042 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120875716 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079026079 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.090764447 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122864205 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077748468 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073776964 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131190011 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074608984 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110972294 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.091661085 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13541439 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075917789 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.197131201 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074472034 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120657623 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.073182155 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.093197619 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108730959 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106391252 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076114379 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097287181 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073480226 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.090190291 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142914912 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.074938505 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092115086 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075295769 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103446665 seconds)
  done (took 22.23270059 seconds)
done (took 38.566949596 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.344918816 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105324455 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105110219 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10362856 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103186686 seconds)
  done (took 1.514948601 seconds)
done (took 2.242081168 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.265441448 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.167518701 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071467136 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.162320133 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089284959 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168973832 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15463463 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105683357 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.178128379 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071018483 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17348004 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071972439 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07152682 seconds)
  done (took 2.505090801 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089181346 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111047461 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077601962 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088260249 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088415667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08873485 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103880255 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09562885 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10528444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079035946 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072605068 seconds)
  done (took 1.726917573 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088424154 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092994885 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093553448 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087707504 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088365427 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087967878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104434882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094260628 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10513921 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079842008 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070808408 seconds)
  done (took 1.721049329 seconds)
done (took 6.672740931 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088648464 seconds)
  done (took 0.809996146 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.992018354 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.161085086 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.100326498 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16004135 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.303554447 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.207692253 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.581005692 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12618817 seconds)
  done (took 15.56536404 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107462709 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095630411 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076240427 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094457082 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092560558 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097532562 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079581104 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093928901 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078098546 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076362683 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097231101 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07671766 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096886815 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080243388 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095925969 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078890489 seconds)
  done (took 2.20510216 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112993324 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110570497 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099666605 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083729957 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098251777 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079461926 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100380304 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080892779 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096636808 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080632106 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102030294 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.085007168 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101187707 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079745155 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100580315 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.086445332 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097003376 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083589492 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101651441 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10080244 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085267132 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097912094 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082191889 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10240405 seconds)
  done (took 3.084401298 seconds)
done (took 22.392648774 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145659579 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079793576 seconds)
  done (took 0.955822459 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095620414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114893419 seconds)
  done (took 0.951875031 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101344787 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09225569 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.128346074 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092283895 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094112531 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077017201 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125272392 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078381188 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093161877 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077048099 seconds)
  done (took 1.696957492 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080002449 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081129117 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101362299 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114050462 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086286404 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096113615 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081360622 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098538891 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083600678 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093828454 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086120887 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111135919 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084761212 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113322872 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099953524 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084237583 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103286738 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081524401 seconds)
  done (took 2.421117763 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07690717 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078114197 seconds)
  done (took 0.896431482 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0789098 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075932002 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095843278 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0975151 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076026246 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075850584 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093107138 seconds)
  done (took 1.333718602 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.476006817 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139690359 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266006431 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080075608 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118874599 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.324062714 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07533975 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100094358 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08070994 seconds)
  done (took 2.442534572 seconds)
done (took 11.433870924 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086895114 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.097086376 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.126692104 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.458808207 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111174781 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074213973 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.155095777 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249895949 seconds)
done (took 2.108315797 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.140566181 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329458877 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120326314 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06984963 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091645555 seconds)
  done (took 1.359039422 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073634272 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078219931 seconds)
  done (took 0.898402692 seconds)
done (took 3.144374269 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074937473 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074707978 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090593104 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075924957 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128598924 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072857162 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093467284 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075501253 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075456189 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.093399785 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.075287015 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094336865 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073081328 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073375846 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092267565 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072798102 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090512256 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073219643 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.073685627 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090127794 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075480227 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090619829 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073337287 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075600982 seconds)
  done (took 2.761555174 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103064961 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093202005 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081497805 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098815653 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080827318 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100262233 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081734268 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093992563 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08191418 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095996551 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080217097 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097552197 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077948144 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09843115 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078141351 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097960028 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082465997 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094102803 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078638237 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096746014 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.082060094 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094007698 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080318876 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09923363 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08012486 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09711696 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078422786 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094671367 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081635828 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098219298 seconds)
  done (took 3.432050433 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.079055854 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072235902 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090911592 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.080295505 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091571908 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07839381 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073111358 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091159901 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075203826 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091180231 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076162564 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.073511407 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090612404 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075567366 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091927578 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076705356 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.104453534 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072980841 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073109126 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09177392 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076427999 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091296987 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076487942 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073506364 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090979562 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072843728 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091320369 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073759821 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074753311 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091821469 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076297482 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095185874 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073674296 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080118226 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095064273 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073971373 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095071374 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073192682 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.184997792 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088728243 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071933406 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090443738 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.072323785 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08021001 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093808874 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075234247 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091855782 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.075150369 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074597239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093867963 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073273079 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091542545 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.076449379 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09252603 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077425883 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0733799 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091749226 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07293346 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092089716 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073634997 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07291344 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090919486 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.075587561 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091737773 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090267391 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.080632785 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090565285 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.075855687 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095929337 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.076610415 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092589551 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.088214398 seconds)
  done (took 6.808543555 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077227008 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101657786 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074629497 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075599833 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090069307 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074745072 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098387363 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075127912 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094037139 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092539394 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092272959 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075666814 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076369063 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095209218 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074920719 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094150789 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084908755 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089700086 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074275375 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095646291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075619609 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0993998 seconds)
  done (took 2.64080984 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205453971 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099503773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134818083 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089382098 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111638184 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090377037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096949755 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082854074 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098002424 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084293829 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100314062 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097620177 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092568642 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100954746 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08352383 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102167854 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08195514 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102107451 seconds)
  done (took 2.611251013 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088383651 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092676283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096602814 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093068295 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075861296 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097170781 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082344487 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10950173 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07966576 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09515255 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086885212 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096081664 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078082394 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094772952 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078945841 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07766519 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097769536 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077819385 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105091106 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100265152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082606143 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105635571 seconds)
  done (took 2.751730541 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091471613 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095234673 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096698391 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096635077 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074791201 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095968199 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082697209 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093881906 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084075022 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.077344728 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092959848 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076345656 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.099839945 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074613023 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098675312 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075329394 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094399263 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076595118 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095782643 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07479827 seconds)
  done (took 2.508608543 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11409258 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107576966 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089619261 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118651007 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090063565 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107215333 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117766199 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091193483 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107306656 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102608368 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107904564 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090073137 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118233708 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113716433 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089754527 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118017632 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099917776 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116950674 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106818226 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090094027 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119839647 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091115836 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119310028 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090766882 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107184014 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090232982 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107810954 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1142202 seconds)
  done (took 3.702171625 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07521914 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076035462 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092167477 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072981183 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07522679 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090594746 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074093176 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092371868 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076468181 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074520579 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093118575 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076342045 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094366168 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076827496 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076744076 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094214313 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076758834 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092057701 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076461133 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075280152 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093946423 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077598613 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095145331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074413196 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075187311 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094358612 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074539941 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092040967 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076312892 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075143598 seconds)
  done (took 3.223961347 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084060637 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098650519 seconds)
  done (took 0.951529054 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073057996 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109700928 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072608091 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079570257 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09960875 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077392375 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103919129 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081607304 seconds)
  done (took 1.462582515 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09281784 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112089311 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080463877 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10532533 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092484563 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111299539 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136413847 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100293374 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.081974194 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09365822 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.093592375 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095370547 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083183205 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078517013 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.101203862 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084083496 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097127701 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088002068 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103143978 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080585625 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101186657 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087948639 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09829795 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084949463 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079744037 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106801074 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.086945498 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106474999 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081289796 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105001209 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083774715 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089996614 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082598872 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100963396 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078719296 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113472666 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091456832 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099297943 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.084412111 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084467195 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103279676 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076262112 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100363539 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.083620916 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106978229 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082724793 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100698095 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075717471 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.093825866 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080691725 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079157958 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095088695 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072123959 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103311426 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082189121 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109851725 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079631865 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098507007 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.080866725 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081858203 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.102222644 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081127886 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097873577 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081109174 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103129849 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082004081 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103651919 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074785522 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073030537 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096281461 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087369647 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11859616 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.085851581 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100445803 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083681565 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096302635 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081743648 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101992807 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085424598 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105008347 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082598157 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103059151 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086953778 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095949064 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080715524 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084988877 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097949762 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081894618 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.093874956 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094257885 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097688735 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078557719 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093746754 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087450921 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081480446 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097949983 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.075459361 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10252397 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071514293 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101531177 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084054126 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096887776 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.086034129 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100730132 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082139129 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084324902 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.104707286 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076324786 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097016139 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072819285 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100146179 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.079043603 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.101506454 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070038537 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07965265 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.095423774 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081938808 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.101470006 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078294196 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09928406 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084862798 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101302193 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078855319 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.073446592 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097363211 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082094088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103016393 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.084699573 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097140623 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076200055 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094547972 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.080889225 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098951689 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.081251552 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082534253 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097807266 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070499979 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096644637 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081068294 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.103940297 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.076673729 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.096216479 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.081572447 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07744458 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097018565 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.082654777 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.095896647 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.075682403 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.100302105 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.077620983 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077135528 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103089148 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.079785768 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096463237 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.080481839 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103784292 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07901039 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101190272 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079210265 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098975979 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082238974 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07751958 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094949922 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079473172 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.103830218 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.078724535 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093278954 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073079215 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101041219 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.074229185 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081564491 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094701298 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.079475837 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101522764 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077548043 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100415515 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.077650733 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091435383 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10728876 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082707999 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.100265739 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088304031 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099901856 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078447368 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098665756 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082271966 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100092368 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083857826 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.101345706 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082072287 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080077412 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091637824 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081969806 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104032083 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076355558 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097464021 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07770499 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101648507 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.084052824 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081838817 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099450308 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079366684 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096730274 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085351456 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.097417343 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081118309 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096370478 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08095881 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.088017623 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101749969 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082968546 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105917443 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081038045 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094986707 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087195547 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098724657 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.084592877 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096073053 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.075632713 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077859763 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102825577 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08159695 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.099976741 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071623134 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104510507 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084586003 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.078618543 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.095982495 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081079264 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103570305 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.078572519 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098929795 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080729779 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.101352889 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091140815 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094389194 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079962774 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.105873129 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081491569 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071411441 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.102382828 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079464276 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096033216 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079911636 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097840456 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080148345 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084831789 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100862321 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.071970487 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099635248 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080611653 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096183761 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076706315 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086390351 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10028283 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080667552 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105605148 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082833382 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100722904 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081026273 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09967883 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082574927 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101130937 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080288441 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102168568 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.079495031 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077269562 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098753856 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077712128 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097912389 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080875822 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102530293 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.078402277 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085222628 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099586446 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079373853 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101924237 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084129722 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09823122 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078549936 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096648902 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079967605 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079864669 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.096843069 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.079752349 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094961806 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084379248 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101334475 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08579419 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079805117 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092758416 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.083866112 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099773506 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083934426 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102493139 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084423407 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099661864 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082147825 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082975382 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105725056 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077039117 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.106358444 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083629997 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096238455 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.080454157 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095499764 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.078368451 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.096249245 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07898278 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083768382 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096227183 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.080597647 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10155769 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.079830575 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.097189667 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079269111 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084974572 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095734906 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084489971 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091642377 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078307103 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098053077 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084496719 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105767746 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084059906 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082715232 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099763654 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085191482 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100573579 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.075960802 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105652506 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086751784 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103668533 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085756536 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078333633 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098438446 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096978342 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090915121 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079393485 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097796089 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.075989211 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106024185 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082587696 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085306711 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095464014 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077615638 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095061963 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08425135 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100149245 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073821921 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080410769 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100659168 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082430993 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101122916 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084836576 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.100599438 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085599562 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106097624 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081839164 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081531806 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10208729 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076371979 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.097467742 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079301711 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082848684 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102065009 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077685351 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094809077 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083277077 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.099966822 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08107094 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0832089 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.098637088 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086971443 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102146788 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082151864 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107108434 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074274045 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102398312 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083691564 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102151793 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078794518 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084020424 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102456194 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086398179 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10563775 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083234771 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098216677 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084860364 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098929281 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081806583 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084122063 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10287598 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079020681 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104132249 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088208645 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099108313 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082676247 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098528364 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.079614839 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085523862 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102863512 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.080557556 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105058929 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.080543435 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097528816 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.083411847 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101612401 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081203193 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08438304 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097663415 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083764465 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095257401 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.086197266 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096301744 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083321925 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09744719 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.075388689 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080737133 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100056257 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079991578 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100903105 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.0827634 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.095481095 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07701527 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078204013 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.098021625 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086253645 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104101065 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.080717234 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10015121 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075703287 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093263959 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083109654 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.075852785 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.098589636 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08032066 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102084448 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079815246 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.097035988 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080357888 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.104280246 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085010237 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.100844425 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.075805194 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.083458323 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101302013 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.080180631 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098093276 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.077508312 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101742085 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.082772499 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097531274 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077076651 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10456656 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.082087005 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082835513 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09885882 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077954068 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096358763 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076235927 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103263041 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.079824016 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104876335 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.080162391 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082011785 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107061716 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.076735814 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097070215 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086835817 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099757291 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.084751364 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095358481 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.078698171 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101974164 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082716391 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.075725362 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097018068 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07585502 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.098638795 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077815474 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077212394 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107065015 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084962333 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09887919 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081728874 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099688953 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.075893313 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095280752 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.076886101 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084177416 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.098513367 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.087458874 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095515806 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.076993874 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095526063 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082098805 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099703336 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.081085821 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074988244 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.094675415 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.076391175 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.098904407 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.084855613 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099525448 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081985663 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081011944 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.099186738 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079165632 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106266116 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0748245 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.101206297 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089509265 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102018204 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078757499 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.101631013 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086348351 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102108584 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.076764456 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082815492 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.099799435 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078211884 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102836383 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083731729 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111076237 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081650862 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.095758882 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080897135 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099379849 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07712763 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.08561556 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102121179 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083102468 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101581219 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.079872772 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103491457 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080992199 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103133421 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.080559525 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.098930807 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080568672 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077436394 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098388807 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.076445201 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103160279 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083808386 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100141488 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.08449012 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.077231099 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107381568 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.086863815 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101642673 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074353896 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.095667393 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.077948064 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.075925299 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102073287 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0758932 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098916861 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080341685 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098966215 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079649194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102760221 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.080086957 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083602973 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100710626 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072456369 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098061145 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.080292108 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097320138 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074691751 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082537677 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101660586 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08467213 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10558605 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.078118083 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.100523374 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.079672944 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077834925 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095729987 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084830302 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099424531 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080321109 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.095562774 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082279025 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102052369 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081493882 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083783068 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103489282 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.080408992 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10458053 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085270367 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094401754 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075530496 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.103039009 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079188639 seconds)
  done (took 54.239456741 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122443537 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102837256 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073127961 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09259975 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117369148 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077643985 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072793655 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096627652 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077833381 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106035489 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073864454 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092236659 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094198219 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119681521 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116615498 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106372962 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073240649 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097456313 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073732565 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078367545 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112801664 seconds)
  done (took 2.797213002 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099563577 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110559635 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091251842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114387682 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104209621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09163092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10897117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109704656 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094911463 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104367893 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114401125 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090952221 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105407151 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085847347 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105838688 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107135481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095507017 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10364706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091767397 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109148289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107546115 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089937487 seconds)
  done (took 3.054305872 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086937235 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081366739 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.101326098 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.073323331 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100294666 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.073884156 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105330287 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.075869619 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086666601 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.095741632 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.076817989 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.09638426 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083203071 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073232407 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.096569463 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.075712758 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149340264 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10551011 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081851442 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103220213 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076820243 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.079767155 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096186612 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077582279 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.095853137 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090885171 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102817534 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083056488 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082614441 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.096726228 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081708898 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.095139278 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080269313 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098300197 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.077108243 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077676808 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101126234 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082179812 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.095242763 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.07878536 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078399044 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.095822896 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083413359 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.098614831 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079448925 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.094991013 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080341125 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082232072 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.092748458 seconds)
  done (took 5.181734276 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.110743437 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.149281153 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100519625 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139856217 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.095317222 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111629311 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.081730816 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119896559 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096158004 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080723187 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.118354338 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115726147 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082687389 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106681401 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.085869606 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100613395 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083910425 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097119123 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087652786 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098177513 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08739948 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105010212 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114895718 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094314931 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105745604 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081187045 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097446389 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.086863913 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113513383 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107898532 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.08833915 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107808904 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117001124 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.085267662 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097550268 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086173431 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116575291 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083265118 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103992691 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077219948 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104081672 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08774151 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10467882 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118564958 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083126027 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102994915 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08220533 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095028045 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.094093241 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104457262 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092390814 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115872262 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10654615 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083585623 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107752284 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096180811 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101747835 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080911747 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104773316 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113202923 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076802581 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106393413 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.095125562 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103855215 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091444513 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.11584575 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102491451 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086602784 seconds)
  done (took 7.738773457 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111747109 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107338934 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097727231 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117677474 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106169222 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087301444 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106732425 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087730112 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106315774 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094250304 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10705429 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153095465 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084383386 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111976043 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087035317 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10641296 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.087118166 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106360554 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086487427 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10656001 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.086769016 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117071967 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107012043 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096748991 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119672633 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104304774 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087292178 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10725668 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098423326 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106826321 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11889462 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.086952261 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10672765 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097009588 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119113161 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107371459 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081597394 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107101836 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.087426508 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107306198 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084873612 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117422093 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106791612 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085760989 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106628976 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087592678 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117270292 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119996152 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0921633 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113000896 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087460395 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117702892 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106946494 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087663218 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117025581 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.124987887 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098606709 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117496654 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087347489 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117892528 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117485157 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124813805 seconds)
  done (took 7.279197635 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109668701 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112986904 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119434426 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075011193 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076159207 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107781671 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076605572 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.096520101 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112744874 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092641357 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11491214 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087648441 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110726032 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115549201 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087139759 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111697809 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105949248 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087822031 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113114455 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08707925 seconds)
  done (took 2.833487009 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087710088 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119270094 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081108002 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106830561 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082769575 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107596162 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081725857 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102026473 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079831109 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101974804 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09178052 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111813212 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080663093 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106518525 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091813366 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106495248 seconds)
  done (took 2.375709303 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.10080081 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119798184 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.10251928 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10537505 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077989707 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104142402 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082443267 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095136351 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075337188 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115574337 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085793556 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106270293 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082432438 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098174714 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080386375 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085905669 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095738469 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083624857 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102238521 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103262843 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105278611 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083574535 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103901432 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081142409 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102433342 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084969167 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106324338 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077423898 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097537303 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083114861 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102916764 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087524267 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096180297 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084413186 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098265778 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077111723 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102422367 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083329798 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10510835 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083228128 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077790233 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10196935 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081721305 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100419981 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076083042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102489 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075922722 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105320536 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08176233 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102542551 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082669184 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086938224 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107282772 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110880161 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089336908 seconds)
  done (took 5.969785175 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094660584 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103724588 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074802442 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.076528665 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103622568 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.08143126 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104402542 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082374945 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101057914 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077559311 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101911218 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084455475 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081140054 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103825565 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081075666 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103536963 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074693114 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102095431 seconds)
  done (took 2.471838436 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085617294 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079053637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107720181 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079283143 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099199141 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081985278 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095367817 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078414327 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077769198 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100157892 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079595193 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102026912 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077772964 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102208906 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080491747 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100154599 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08339749 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078158226 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099186793 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075779904 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101945597 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078490802 seconds)
  done (took 2.781480613 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.115713962 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123677386 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.08764925 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.204784174 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.119107388 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.104830744 seconds)
  done (took 1.597611411 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104290235 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136649554 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080889016 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103132751 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092766986 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10483067 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084456479 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104260242 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096185229 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117522465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104485417 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095618868 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116682708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115224034 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091565953 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112754105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084395803 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105049276 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080587478 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125833206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104423389 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095628077 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105621832 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104314558 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084563984 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115657801 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096856066 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117608183 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104560713 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09716789 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112573775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083765208 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116483798 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11816775 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082085333 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116647547 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083734256 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124836164 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1122589 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115561815 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08271976 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111911941 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096855341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111438506 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116282428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084580754 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113181695 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084495379 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104623328 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132032617 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093141784 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115558116 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11142699 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095738367 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116062064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132643615 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117458213 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095944256 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111961635 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118889905 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096264475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112918836 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115994059 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097872848 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112393723 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115119194 seconds)
  done (took 7.795281513 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119296534 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101404521 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084814507 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118338672 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115732511 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085019614 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105504972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084822088 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105435927 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081729513 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148663454 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105052721 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094845192 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116600806 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105567558 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085887846 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105463391 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095784232 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103148733 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132685565 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085191244 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116842746 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116407334 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095759653 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118389599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112638769 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085283906 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104973319 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086079921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106067362 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111373256 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085551726 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115888324 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081674819 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116481599 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084839467 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105425079 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112005917 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085584799 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112715467 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096213009 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125496197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104696244 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086122089 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118482627 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10476273 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085377222 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101460271 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085527289 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102055045 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098968661 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1198809 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118679547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09617749 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105416082 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105184423 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085208743 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10493632 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085344837 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112756464 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096446581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106498831 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132208332 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084656196 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105417273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116519848 seconds)
  done (took 7.66827674 seconds)
done (took 147.388451114 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096357126 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134021095 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094091396 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.162725511 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081293455 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11334104 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133366593 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095711913 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.100897769 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080857089 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.100587266 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083208801 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.144425442 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101949842 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.081065157 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103064424 seconds)
  done (took 2.553625456 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175878797 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.286247716 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097882398 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.099478709 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08485448 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079911287 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.100615731 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088347662 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102241109 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080184017 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079988271 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101481954 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079666363 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101218382 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082154962 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100853429 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080053456 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080475996 seconds)
  done (took 2.754461491 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108252099 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141492218 seconds)
  done (took 1.106745316 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114678609 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171450205 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267145555 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.149081147 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130351088 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094224295 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150414067 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121500686 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199244172 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12298937 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102936063 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108340548 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112567381 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110543343 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08845382 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.108282393 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.134171495 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087834465 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.109332117 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.089194858 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133013435 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.080282951 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.110299495 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087489314 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18255982 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123698823 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.080114496 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100340826 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088926242 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109449542 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086782798 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113747004 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121171857 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.143818853 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093521073 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.147154746 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108590459 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086225769 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110001245 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086343146 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110663638 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.090621739 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115771777 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.087379885 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100243471 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.087866103 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102859374 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080850287 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.088630674 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109078902 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108528083 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.087199642 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.145267295 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109403222 seconds)
  done (took 7.041262366 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794518977 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150909324 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086464729 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.868992384 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134050307 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120156512 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.768125392 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132169535 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225648794 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.778250423 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124548969 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115649917 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199422979 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.221137889 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.944903761 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30139657 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.891831695 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094793022 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137773457 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.144050825 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089928885 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13211969 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123755872 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.420495193 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086201091 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107046887 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089093481 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11446181 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15317013 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08525839 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108402109 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168685412 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.234438702 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194339459 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086276836 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08360578 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107186636 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.15785672 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258703763 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187712436 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170047697 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080144172 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106602241 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.093072643 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124619388 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10242044 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154844902 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.163856112 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.163488011 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086270399 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115592105 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113433666 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094052015 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153516723 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104539968 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284509957 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301882958 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104967176 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092659736 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120235476 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232843144 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105830712 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19380868 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131703069 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204319834 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084121232 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778244709 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.157279522 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083691021 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113503318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090073034 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110578938 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09374685 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16129895 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381997727 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116630519 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086605688 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105481034 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203378943 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083963529 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105429822 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155341832 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084986994 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113636915 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116962028 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095810507 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.159407181 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.213245623 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116540806 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11238615 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088793937 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116275881 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085764549 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.2030384 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.210274023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.150965771 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.2005714 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11514679 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.154325746 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156835328 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113412346 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.16029676 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09056361 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120654967 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093713641 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.210448418 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134315753 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083555982 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110350234 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089380526 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137105634 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108386728 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090787815 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156926529 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.473186726 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.156592776 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081520831 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087270734 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114224784 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154224901 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112221582 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.229695819 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113907671 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.157143289 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088698738 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103229541 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.090611673 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.174676533 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096013257 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113174295 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094248368 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113280328 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219504104 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20745124 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096700918 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231545092 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.151474776 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11382192 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16264415 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112729351 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.159548197 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092515596 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114988496 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085649528 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769300015 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11611462 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091459425 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108720052 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156504773 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105583058 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084634778 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105484695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08206294 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763220782 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087991015 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081287656 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107450907 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091165313 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112852384 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088771784 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110682498 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153177499 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220389454 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093867798 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112799923 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085104804 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.152708874 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109424046 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084844437 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107050896 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085590002 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113771024 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087216081 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10662276 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162551151 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.151703341 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.210493165 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568049841 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084376674 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107480169 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217212675 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085189341 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.275024776 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091029572 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.217963412 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158906155 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081663365 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301429551 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.158867213 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178707648 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.108881554 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.162165985 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082573525 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110495473 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155202877 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08444185 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112180849 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.151592088 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096494466 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118248567 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913482613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085732617 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217478696 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.103287438 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.160515071 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086957618 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11519039 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259107642 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106929504 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099831822 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.174467119 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088914577 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106195719 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.697377059 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08483464 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115939473 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090478954 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215071914 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.156151393 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113316292 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09077818 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116806989 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.153352371 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.201304073 seconds)
  done (took 41.461686736 seconds)
done (took 55.770175334 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280629471 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210753501 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262175201 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.163191374 seconds)
  done (took 1.869126263 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176812035 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.121734949 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139778463 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101282864 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.12487507 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101241377 seconds)
  done (took 1.647850509 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363829036 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268849776 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213815795 seconds)
  done (took 1.72854063 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.242092048 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236773472 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.344339646 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.385493002 seconds)
  done (took 2.190633748 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198383374 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096534213 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118900996 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110519908 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166567909 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.201637143 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136158317 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145481231 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104271607 seconds)
  done (took 2.206484868 seconds)
done (took 10.526578588 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.239771473 seconds)
    (2/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.211299613 seconds)
    (3/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.153207379 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.165500547 seconds)
    (5/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092512238 seconds)
    (6/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.087477411 seconds)
    (7/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.207081335 seconds)
    (8/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123399983 seconds)
    (9/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.256457937 seconds)
    (10/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131747316 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100345677 seconds)
    (12/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111769646 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.095004019 seconds)
    (14/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.114635472 seconds)
    (15/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.232654245 seconds)
    (16/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.231367361 seconds)
    (17/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.103067992 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.213535722 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111118488 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.108591326 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.173920411 seconds)
    (22/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.195900519 seconds)
    (23/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093904658 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.198222681 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.178982615 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08217068 seconds)
    (27/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.223084191 seconds)
    (28/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170368301 seconds)
    (29/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.213984839 seconds)
    (30/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.175995791 seconds)
    (31/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.186320198 seconds)
    (32/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.078774851 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.087756007 seconds)
    (34/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115172525 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.166523116 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092062246 seconds)
    (37/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173774421 seconds)
    (38/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.187818091 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106740516 seconds)
    (40/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110780632 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 0.225247189 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.091550838 seconds)
    (43/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112931666 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08773998 seconds)
    (45/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.231982424 seconds)
    (46/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084476989 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.135679208 seconds)
    (48/286) benchmarking ("sort", Float32, true)...
    done (took 0.233376608 seconds)
    (49/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.190023594 seconds)
    (50/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087798671 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10532897 seconds)
    (52/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148129533 seconds)
    (53/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.151196836 seconds)
    (54/286) benchmarking ("sort", Float64, false)...
    done (took 0.171704618 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121149379 seconds)
    (56/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.133633056 seconds)
    (57/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.093275131 seconds)
    (58/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107037024 seconds)
    (59/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176064665 seconds)
    (60/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.236444463 seconds)
    (61/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.103675904 seconds)
    (62/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088726992 seconds)
    (63/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127173461 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106568534 seconds)
    (65/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192037915 seconds)
    (66/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106419709 seconds)
    (67/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.151009008 seconds)
    (68/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218295361 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.111092767 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.109620447 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129111018 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072159083 seconds)
    (73/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.102089728 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091184137 seconds)
    (75/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.188485603 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08032694 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104186453 seconds)
    (78/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09469619 seconds)
    (79/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.159703929 seconds)
    (80/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.16662134 seconds)
    (81/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092314831 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107103315 seconds)
    (83/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.095656962 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.130220474 seconds)
    (85/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151605366 seconds)
    (86/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068120525 seconds)
    (87/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.103272856 seconds)
    (88/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173581905 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087251394 seconds)
    (90/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.150841467 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074529089 seconds)
    (92/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.088058917 seconds)
    (93/286) benchmarking ("sort", Float64, true)...
    done (took 0.233380212 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16034822 seconds)
    (95/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.220414562 seconds)
    (96/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190354568 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079772574 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.082924707 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.094185114 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.108462218 seconds)
    (101/286) benchmarking ("sort", Int64, false)...
    done (took 0.103814018 seconds)
    (102/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.106762001 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092197839 seconds)
    (104/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070745279 seconds)
    (105/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.186382514 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18130391 seconds)
    (107/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089388061 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195802537 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080867084 seconds)
    (110/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.093756973 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081554352 seconds)
    (112/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177222307 seconds)
    (113/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079541094 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167133422 seconds)
    (115/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087536551 seconds)
    (116/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17800643 seconds)
    (117/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112334073 seconds)
    (118/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072237848 seconds)
    (119/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095826267 seconds)
    (120/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.093000202 seconds)
    (121/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.078912267 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.080586101 seconds)
    (123/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132458306 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080475773 seconds)
    (125/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186085774 seconds)
    (126/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.113764656 seconds)
    (127/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082180045 seconds)
    (128/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070528136 seconds)
    (129/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.10484045 seconds)
    (130/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06936206 seconds)
    (131/286) benchmarking ("sort", Float32, false)...
    done (took 0.173998859 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.094435208 seconds)
    (133/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112393091 seconds)
    (134/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.236230799 seconds)
    (135/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081790216 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.110712077 seconds)
    (137/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083263616 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.134221 seconds)
    (139/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.175295902 seconds)
    (140/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.201355708 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.131766541 seconds)
    (142/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.095955617 seconds)
    (143/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113756426 seconds)
    (144/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069735832 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.071601829 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.112480703 seconds)
    (147/286) benchmarking ("sort", Bool, false)...
    done (took 0.182035007 seconds)
    (148/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.091703757 seconds)
    (149/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155048604 seconds)
    (150/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089423562 seconds)
    (151/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111237676 seconds)
    (152/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087981461 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.086665742 seconds)
    (154/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.161683613 seconds)
    (155/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079028629 seconds)
    (156/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.111339259 seconds)
    (157/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.089632417 seconds)
    (158/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.1074943 seconds)
    (159/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094319077 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08075064 seconds)
    (161/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.112940248 seconds)
    (162/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174425516 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.107168816 seconds)
    (164/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.224348384 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184710569 seconds)
    (166/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072538919 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.086341387 seconds)
    (168/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111827442 seconds)
    (169/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081414732 seconds)
    (170/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115596104 seconds)
    (171/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082763912 seconds)
    (172/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093782073 seconds)
    (173/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.108690161 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.081032553 seconds)
    (175/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.106800864 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.071886077 seconds)
    (177/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08401697 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.117403048 seconds)
    (179/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.092532956 seconds)
    (180/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109832256 seconds)
    (181/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.11209794 seconds)
    (182/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.10465589 seconds)
    (183/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072571801 seconds)
    (184/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082547323 seconds)
    (185/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113112863 seconds)
    (186/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091928006 seconds)
    (187/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.160776683 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08336701 seconds)
    (189/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.161379165 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108812544 seconds)
    (191/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.093990931 seconds)
    (192/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.082773155 seconds)
    (193/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.156911684 seconds)
    (194/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088376553 seconds)
    (195/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.103919551 seconds)
    (196/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081371076 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080544501 seconds)
    (198/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092731751 seconds)
    (199/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.094630307 seconds)
    (200/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.106129712 seconds)
    (201/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.093260335 seconds)
    (202/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.0692489 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.095324463 seconds)
    (204/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.069231761 seconds)
    (205/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10551655 seconds)
    (206/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.094925638 seconds)
    (207/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.083525102 seconds)
    (208/286) benchmarking ("sort", Bool, true)...
    done (took 0.22347353 seconds)
    (209/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.103743709 seconds)
    (210/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.080079451 seconds)
    (211/286) benchmarking ("sort", BigInt, true)...
    done (took 0.237711256 seconds)
    (212/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087625628 seconds)
    (213/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173883277 seconds)
    (214/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070391034 seconds)
    (215/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093428991 seconds)
    (216/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090099867 seconds)
    (217/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110091859 seconds)
    (218/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.091736411 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071630103 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.103642878 seconds)
    (221/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075219043 seconds)
    (222/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092716589 seconds)
    (223/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070153874 seconds)
    (224/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094574752 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.130413726 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08025512 seconds)
    (227/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091700749 seconds)
    (228/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082585743 seconds)
    (229/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.070070449 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118153881 seconds)
    (231/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070042235 seconds)
    (232/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.105392904 seconds)
    (233/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.069679408 seconds)
    (234/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082991768 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105566666 seconds)
    (236/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072215491 seconds)
    (237/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.069024685 seconds)
    (238/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092880356 seconds)
    (239/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069856732 seconds)
    (240/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.118319738 seconds)
    (241/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.127576025 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103857192 seconds)
    (243/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.069469563 seconds)
    (244/286) benchmarking ("sort", Int8, false)...
    done (took 0.190138529 seconds)
    (245/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06938875 seconds)
    (246/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.10135321 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082033003 seconds)
    (248/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.148244185 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.088760699 seconds)
    (250/286) benchmarking ("sort", Int8, true)...
    done (took 0.222755208 seconds)
    (251/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080032081 seconds)
    (252/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177089112 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.113678341 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.081530797 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083508567 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107577119 seconds)
    (257/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.107049324 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10652033 seconds)
    (259/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.080791144 seconds)
    (260/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102209617 seconds)
    (261/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070568834 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10044114 seconds)
    (263/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.092708655 seconds)
    (264/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081758631 seconds)
    (265/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.097285933 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.089356245 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081198206 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.103427711 seconds)
    (269/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.071334512 seconds)
    (270/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091219167 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079925276 seconds)
    (272/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069560231 seconds)
    (273/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.106315956 seconds)
    (274/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083269542 seconds)
    (275/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087513455 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114435821 seconds)
    (277/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.081321888 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103973156 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080312378 seconds)
    (280/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.122297915 seconds)
    (281/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.161239258 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.103397679 seconds)
    (283/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07151536 seconds)
    (284/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.077936191 seconds)
    (285/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094609318 seconds)
    (286/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.070473132 seconds)
  done (took 34.984550333 seconds)
done (took 35.877592309 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095512891 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146114137 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092187633 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.132491574 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.0955115 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118691852 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090624178 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09351956 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.117738192 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096091318 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.117541451 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072401639 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116001201 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093445227 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.114679078 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113363921 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118000715 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08911086 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.107736516 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.080696285 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085010416 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.104654288 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.0832253 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093954218 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094038075 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089333726 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.110749502 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093515447 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.104375845 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081855596 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080193541 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.112255265 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081630144 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118144413 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088300569 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.107667689 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093856914 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091135714 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.106305225 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081743337 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11271399 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.083866934 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.111693871 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089657548 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.08361571 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.103159612 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085760075 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.118997547 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114476589 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10971392 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090501699 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091522456 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.114916541 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087998455 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104296216 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08546271 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.104508185 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114129368 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.107864523 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087391703 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089867279 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.112520658 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080933433 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.107733607 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.0859561 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114750822 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092904574 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.08022636 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115322515 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087255215 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.105296494 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086456009 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080935489 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.104918871 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091533023 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.11621685 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081038134 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.105618841 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089288396 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087144312 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.104079878 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084787521 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106032922 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083773218 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084274157 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095178196 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080806864 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087376898 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.103736346 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085405303 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.111041813 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089148902 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.10648342 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093533169 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08128679 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.104736988 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082297737 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104730911 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083333726 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080407043 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10483992 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085203114 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.113964208 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084828432 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083526203 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116865148 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081790404 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.110700033 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081231923 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080615515 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.121213283 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091566336 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.105355866 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087862691 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.103638203 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.08368738 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081330438 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105418417 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082644293 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081177748 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.107659206 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082273973 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107600221 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083883241 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.118956312 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.081868317 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081047724 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107794866 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082107718 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.110152221 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.082052194 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082748966 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.106423973 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08135446 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083978058 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.105654785 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083645544 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107914597 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085677959 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.106105419 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.085851059 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.085774328 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.10659241 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081521463 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.103402789 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075996847 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087526851 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107473819 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083780091 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081481906 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.107476451 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082280723 seconds)
done (took 15.580682408 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082555931 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179064099 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.140864524 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.116000555 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128299331 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082521105 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11649209 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114439214 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.107823191 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.136921225 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105689731 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.12483816 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121510241 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103901068 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082393079 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.085960158 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.107562834 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097844248 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144666977 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.103384803 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140404805 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.10429909 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.112555819 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.129924751 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09149196 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132797354 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083078552 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.109211385 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085971346 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121864562 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102932577 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108361223 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083159908 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103691282 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123159222 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090075291 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.105595418 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08950701 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105107051 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082807796 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.128454154 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104872687 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111352366 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.089042232 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.108643296 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085355712 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.082801234 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115242965 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093712283 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109984663 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097134228 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135297051 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.107867898 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092904721 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.081210326 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116999116 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.091364156 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.10809828 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.083295154 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.107981616 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082852241 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085563061 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121249583 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.147235565 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086433423 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.114954629 seconds)
  done (took 8.013235471 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100357454 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135124159 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100404931 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.123990392 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082443129 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082291997 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106724421 seconds)
  done (took 1.67837788 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082983605 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108278238 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.131622463 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108725464 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129875758 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133404196 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087645334 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084045737 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.126743473 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084295639 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131947722 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123411053 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108374897 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091152584 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135066337 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.083266527 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133973485 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.083448193 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.109207165 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110098205 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109438726 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10259856 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.109111331 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083350451 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101283827 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110087643 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156172757 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087935513 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081746298 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111413922 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081728601 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146121939 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101287909 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116205201 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08346671 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126125071 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10151731 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104303369 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.10032032 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.112569424 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100666447 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083826294 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.108808605 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082360807 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.111113308 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097615057 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.086707414 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.110098505 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086819414 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130985997 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084588445 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124784977 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.084148626 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.086913475 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.109975157 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087684538 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.116972629 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084511817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130988988 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081833087 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12817503 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103730481 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.124689232 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103331135 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08551208 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.124958779 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101055665 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.110405212 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086601843 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.110417512 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103801067 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.080922756 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.110285326 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.097460693 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108893758 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110484935 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.134308113 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085375942 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118288954 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084555167 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.083969453 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108228538 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110079466 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111265022 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08331888 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110912881 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087104734 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.081229647 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107292442 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087798138 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.105332431 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.086108798 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.086622053 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.108218246 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087019763 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128181159 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.0845639 seconds)
  done (took 11.029375128 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.086898851 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.08529846 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110894388 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085676032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108335578 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085138731 seconds)
  done (took 1.526252329 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113487537 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.10838811 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098386234 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11197765 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124691107 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13165603 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108566062 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117549292 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.1018773 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.119722181 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110244209 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.133948635 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140315594 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.089984235 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107415468 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.114358827 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108706377 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116389279 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095435282 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113820011 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100506543 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114128757 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090169806 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.127994493 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09362721 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.113447061 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090223656 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.119312739 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.096161247 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118571836 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089806994 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117124939 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090381911 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117296381 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109261643 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113598199 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08886045 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119242257 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090974641 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11757689 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109939688 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114995141 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.095512993 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119600073 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.093341658 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.114388645 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095603732 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113584823 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.1089674 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119751429 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095561194 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.088285358 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118272298 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095070008 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.115248555 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093399572 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120906161 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108806855 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115276249 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.089694154 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111004704 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093871292 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118199853 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.09397396 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118029925 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095693754 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114511306 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090210805 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114118106 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089482248 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119466096 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086699955 seconds)
  done (took 8.721046344 seconds)
done (took 31.912367636 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.677386571 seconds)
  done (took 1.634310093 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815413463 seconds)
  done (took 1.774294826 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.035255849 seconds)
  done (took 17.019995998 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.455491533 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.545101026 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.946771821 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159752486 seconds)
  done (took 3.063493456 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.925395122 seconds)
  done (took 1.901927639 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.277527494 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231248677 seconds)
  done (took 1.473716756 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.776985169 seconds)
  done (took 1.749585138 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.429126243 seconds)
  done (took 2.396678765 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323501242 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154511141 seconds)
  done (took 1.459103863 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56226882 seconds)
  done (took 1.542800937 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.922863133 seconds)
  done (took 10.900453963 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236175595 seconds)
  done (took 1.224563523 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286251231 seconds)
  done (took 1.262488909 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.371765382 seconds)
  done (took 4.347883065 seconds)
done (took 52.7224993 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093593631 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096698267 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121314032 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094082813 seconds)
  done (took 1.376210064 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.0989586 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.09311053 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.129506352 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.09631987 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132003412 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096500247 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125177607 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.106882357 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121841544 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091141318 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.114959642 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089803971 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.117556968 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093101417 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.111396193 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093492199 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12186264 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.089992452 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093285887 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.115535778 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087760118 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117177523 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0942222 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.113408164 seconds)
  done (took 3.528621084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095102246 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089495421 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11595303 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088193143 seconds)
  done (took 1.369713395 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094537176 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100073313 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.124990362 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094137695 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.125700705 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099491465 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.111046259 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087248735 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11359175 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094985628 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084660271 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.132600649 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.125133417 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094158742 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.096248214 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.10831967 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086201063 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.12560543 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094568151 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.119881894 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087728096 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.118790071 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085418444 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.101650994 seconds)
  done (took 3.493241296 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.166372493 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.121597229 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107527562 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.115533931 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128807937 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.134941542 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083657967 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.134678239 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083050496 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.123624548 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087704496 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.153705355 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.097030825 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.107359064 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083356456 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082154696 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120916301 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095702965 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111289205 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096513458 seconds)
  done (took 3.224953024 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093886054 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087889499 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10761994 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.08597079 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118240654 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09097608 seconds)
  done (took 1.575559399 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092978632 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084695856 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112738752 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.087115829 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.113489956 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083676666 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083408099 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10988676 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085046078 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108199105 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086480911 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082817125 seconds)
  done (took 2.119711685 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501601595 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.085895022 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.110468345 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107550386 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093880058 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082755839 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.125405995 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084696663 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.136485103 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082840727 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.109868978 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.085989766 seconds)
  done (took 2.599171682 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202750732 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093674114 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254792474 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34325708 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152086701 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159909633 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270160364 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158995208 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178998263 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110223961 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213250039 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12704458 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149756332 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172886083 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11024177 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.151892857 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169358865 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194335863 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144692823 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199351651 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158005519 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16311366 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174858925 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147651514 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108136894 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152283022 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11502372 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09888611 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167295977 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164008934 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167773637 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144213966 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134669568 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194214907 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202451661 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171335637 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271864912 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127119182 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151553729 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.158331406 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245039161 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110148388 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213950947 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124188421 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125643241 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175796549 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151176556 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174262021 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101949998 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137462298 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176376856 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171513903 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173712016 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132371283 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292732866 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142822618 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115277811 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177195067 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179234411 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183663014 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162870692 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.114776895 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180379544 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175439625 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173110033 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114246658 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15980222 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12123686 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168437452 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189021497 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171814505 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15897453 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178157801 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130934986 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157475323 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164926674 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12230024 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172851754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155613044 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115972861 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119538152 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133378243 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097438279 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187889408 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119075926 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197734952 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104462304 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167930021 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195564372 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153299702 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15643765 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159793002 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159773548 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116928169 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112526333 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140050214 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120619892 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152037025 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127596772 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124755213 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138049533 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121641182 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11991744 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119099846 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154872499 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.096922926 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158892514 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158135908 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094621392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160168098 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145681968 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.119878542 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163984699 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178380735 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129240938 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100857629 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187137147 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152258237 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129757512 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170552608 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180275661 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150201483 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106580515 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161491551 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186077275 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138301506 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181682642 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135702755 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103533654 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135991282 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153668795 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125776224 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152715213 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12539739 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.146601879 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184591357 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.093723021 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13222328 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170291269 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096756238 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124530069 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110331174 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131731315 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.105435242 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.136706593 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131191314 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150538071 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128236646 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148917161 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149136638 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136550719 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183188134 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102495484 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.145840728 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142753084 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088573476 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169753009 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178378694 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125007694 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189881429 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159723027 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188695579 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157482857 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099833306 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171950376 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124664533 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088260723 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158566011 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155684218 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157640211 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174620868 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185007467 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158334409 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147607859 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142807507 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131987119 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.159229991 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149323094 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.132161896 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128748757 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15348584 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117894757 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092977356 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12280671 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110638985 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12648768 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12751768 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174946653 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157041433 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180508719 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154296848 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10974314 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175276539 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121821311 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158717064 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165239949 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107215075 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.17754959 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173983986 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162394783 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138605555 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166124979 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088990757 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118621702 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.10146304 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15907451 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128056321 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103800517 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138733113 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175649968 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166934788 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143254269 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194897432 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160242467 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185534859 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.089912179 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163977959 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161560033 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152272666 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.145526087 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128093501 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.119465846 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171592017 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138084899 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182457715 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155147712 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162221374 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18881115 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145869431 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099097245 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145009119 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160064335 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13516715 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133840229 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140001746 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131287967 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118127983 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.122665639 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094686017 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166366162 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139122542 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169153707 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143028796 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163399709 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095379335 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13885752 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156633544 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140573997 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084899873 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159925831 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176825027 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139289967 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15262279 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138651832 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126688729 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.301306425 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181157505 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176787429 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132218339 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111091894 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15647122 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155221932 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156099263 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173837301 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114189382 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172584655 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153214046 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.131382874 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103338796 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143274109 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146080768 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108674592 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128976469 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147512759 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104718736 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16985557 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138428816 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153060219 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158261623 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117912556 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.139496107 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112897309 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221087284 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125856358 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172262131 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145466759 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158364189 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191331563 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092747284 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12488631 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094818905 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172870327 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128640574 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152415026 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.177605227 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18930661 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153965285 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16012211 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106047875 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.115372507 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153236723 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11646066 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217184084 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110273493 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131954108 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180582552 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139236577 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099725782 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158223648 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276294211 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138642143 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167142095 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082581417 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269255443 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094924914 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124914274 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155921513 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165050228 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10492866 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.169079931 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157911679 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112464115 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155832792 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13269479 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182438877 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196747207 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163432034 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166597566 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128136111 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125582038 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156972052 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169399636 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139759315 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105320753 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158296353 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176804339 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.181538441 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.128311652 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128892753 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15573602 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154005413 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163350143 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129698188 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191682939 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098675821 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157691267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135907412 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119046178 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125807535 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.178594104 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130220901 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16644413 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152801011 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100559376 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122873913 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146034372 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125982585 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13816247 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.121000394 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165550309 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092733609 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157557745 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174368033 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098603189 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150107522 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140262342 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104141973 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139128329 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13961525 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104490679 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136053064 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197155913 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097873423 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169132688 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168277439 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157413943 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153713514 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112050615 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663272936 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124015223 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174523198 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115787103 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178515427 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144973166 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160729888 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154762547 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116817809 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161023779 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144659837 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22551036 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159410361 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.124087442 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12688436 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140754089 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110468012 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.12780185 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148102014 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128130898 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135999921 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131930456 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123435764 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140412901 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.128787084 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106790834 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177100374 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142978641 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169913421 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175307007 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104694909 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16093971 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162845874 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12623592 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154975395 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165854562 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109452092 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145764491 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.126324437 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102758127 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174641043 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.090938185 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154631951 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155073699 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155650841 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156885735 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101413488 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154370429 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138226496 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157205907 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099090622 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147562431 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153153984 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0988491 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124036229 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149716685 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120747601 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.145654031 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093419335 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15958339 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176168873 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.090249238 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129558961 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274613826 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151321483 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185551794 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111969903 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131082963 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138623144 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115092894 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147945645 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15432309 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.096938602 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129044294 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097096668 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161035188 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137780484 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124239949 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177695619 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15149337 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192591501 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132732351 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274819367 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107817537 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151051179 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090347771 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125929701 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137331282 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102247871 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138957047 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183144169 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174283389 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.140486759 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102355079 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123688478 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.093649701 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128265556 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128199566 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149211709 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153128667 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137713776 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083771666 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138926124 seconds)
  done (took 72.210900803 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161783791 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128911568 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14401094 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.196804342 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161668937 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246589992 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204868378 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232158342 seconds)
  done (took 2.55299351 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.088447243 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.13771405 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.123056911 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130354838 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.110649826 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087800518 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.319813744 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.128170382 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085673686 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.141428999 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.127767714 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.111364218 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.484481418 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.113784134 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.1123085 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081833806 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.111393546 seconds)
  done (took 3.565838316 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.072513406 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.459101998 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.817328954 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.184974268 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.170745764 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.089957243 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.677571341 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089417282 seconds)
  done (took 11.638420926 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114126539 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.107119479 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.153476334 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152435763 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.11114286 seconds)
  done (took 1.727498137 seconds)
done (took 111.954627815 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092319565 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094556096 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.11931765 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096521465 seconds)
  done (took 1.472161411 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099082474 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072907166 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104201201 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076493406 seconds)
  done (took 1.435807546 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.186454942 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.164865155 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392114941 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.077090953 seconds)
  done (took 1.578670102 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.108279412 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.125193806 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099449491 seconds)
  done (took 1.420726245 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.100656796 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095866512 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.12493345 seconds)
  done (took 1.405907586 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099234612 seconds)
  done (took 1.179297093 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106118783 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134340128 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107607779 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.131778363 seconds)
  done (took 1.56510809 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092470155 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.093825097 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.133887675 seconds)
  done (took 1.401280574 seconds)
done (took 12.895214697 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101727624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.506639266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384812351 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131189304 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691580678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.403401998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987805455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.140706812 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160861645 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087266035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103416499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694165823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97722399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.455313549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964160718 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.361275841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668916701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113911707 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086498292 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112658988 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973339104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085825623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114134471 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086410816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.69426739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391776701 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114762301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.337417233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085572977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121818528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373120132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115020627 seconds)
  done (took 16.700921474 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093137765 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171738504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097641567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11582007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094988393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088101542 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.117880386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087583275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175605536 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114772351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104212778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086307914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119157764 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08786246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134782653 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086983921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115579708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088190993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086146591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115056033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105372817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115032148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086692721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114363054 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087160923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.126512211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088531328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086643284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115357317 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095061345 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116938495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087876252 seconds)
  done (took 4.497361127 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138943431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18161244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097971358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149211978 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16604701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089951731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193210062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139859413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151969318 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115466712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104028754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115960344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120272141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116811762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107119555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116009014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088443566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114127777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087861789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087022142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134572141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087119243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115734189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087738419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115013879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101947882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115486842 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088150447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087388682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123254144 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090069754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116046857 seconds)
  done (took 4.840940798 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.090912022 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.091928759 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130590163 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.102715143 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.115983888 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090714503 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.11958487 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089763159 seconds)
  done (took 1.925008468 seconds)
done (took 29.049194119 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.10548692 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093405565 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129533964 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100122714 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.125214136 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099784533 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114614622 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099203897 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099610673 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12468912 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103070792 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114635585 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089009751 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113379653 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.10115147 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091334023 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.128864619 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09605114 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.1295833 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.100510395 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.117174961 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099397847 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097331573 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13094109 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101243635 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.129869848 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10406613 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121609859 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088805906 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.117293101 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100897769 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.136004796 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090299563 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.130608095 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093495529 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091386328 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.117605677 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091555492 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.129531018 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099559856 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12205512 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099164508 seconds)
  done (took 5.655166753 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112995985 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.143857878 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109136224 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082473988 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117726034 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082826016 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14106183 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080604097 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111324316 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111463756 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.103483342 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078757508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080132741 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102240782 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078342026 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076596482 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109141109 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077562587 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.105406382 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079345448 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081450275 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.10184292 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081438902 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080997387 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105115969 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082732599 seconds)
  done (took 3.622621182 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.094777772 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102036425 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136630531 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.168295248 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.121532648 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.123457558 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097033971 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104315292 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.133426458 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086857944 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.11837743 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115617117 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133867345 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.095489599 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.11843362 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102793247 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100036743 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.118253208 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092167678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13637481 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102840419 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.126103087 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099259454 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.126626801 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087362411 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08835439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121122905 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.096957917 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122188662 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095674445 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.120909974 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090673632 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.088342743 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.127637107 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092750816 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.116222993 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106858972 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125091552 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096620015 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.11634005 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095374625 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.09117596 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137588414 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12548059 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115963284 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.094585179 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.118464038 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097073557 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117111553 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106111751 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124899392 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088290665 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.089826697 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116988665 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088596355 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131386143 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.08963614 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.088948351 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127575382 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09266832 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.128928142 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092662249 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129980509 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.08849818 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093089171 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117104039 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.08762694 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.114816106 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110967967 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12158189 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127811196 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.117672338 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088926421 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0944932 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122720192 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093767141 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116816249 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101734245 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124701617 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091143755 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126638903 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.089910577 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.08973806 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.134780586 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.089655176 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.117195179 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089136462 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093063583 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118404656 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.08828838 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130446502 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086724052 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118543017 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101234195 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.088000006 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117107787 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.092919266 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121147878 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.086989085 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128556867 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093076579 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116119554 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098158633 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.087592998 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118937973 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097374621 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121196215 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.087670732 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.120378694 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094365819 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.087568138 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120194128 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.089708411 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117749458 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.09754117 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.094032415 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119769044 seconds)
  done (took 13.730536751 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.223472441 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211782479 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182783103 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.259742739 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129655582 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114051139 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208266908 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153542227 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089607299 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15433394 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165541826 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179937527 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166880125 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177380583 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.137500123 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.116252046 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106143235 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162574081 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.210554031 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.285176456 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.10804429 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.126328465 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126582028 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.154707165 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.131007487 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097315028 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.133720845 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100710622 seconds)
  done (took 5.531850963 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105202854 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14973768 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093693092 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.138584275 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114712242 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117062991 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092388643 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11835786 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102027248 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131486531 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088238597 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.093901452 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.124231133 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.096546063 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118167644 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.096491315 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.126840284 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089916408 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.119836007 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092373423 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.097679258 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.13526656 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.092075703 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.116721248 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096395888 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117445613 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090317379 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138064676 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093879729 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140324011 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085651827 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.125552925 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101673823 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.118005775 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088197211 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090385234 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.119818392 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.089670692 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.118342639 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087394616 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.086957569 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.108826993 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087329682 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132537852 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094993027 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111847739 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095080169 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.122492493 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089897064 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086160404 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119962161 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091440213 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119362934 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.096704309 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.089534677 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.118065902 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092152213 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116978271 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.094611536 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.089822119 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115535749 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.086830777 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.120792619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09208688 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.125599188 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093528806 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086001698 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.11911694 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.092917769 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12362487 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090630561 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.093392921 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.11521709 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090454301 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.119778694 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.094432383 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.090851255 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.115868323 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087938234 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11781301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07808202 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088247471 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.105718102 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091470464 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.115192198 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087249647 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090106608 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124313423 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104496001 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.119382211 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096034926 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.118673496 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087904949 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119624501 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08625167 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091184307 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.134127543 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136328538 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088319096 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.085463669 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.131971541 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090735093 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.115791059 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079179485 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.096885013 seconds)
  done (took 12.160484213 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12569412 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.147500185 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090876492 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.135376836 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121751436 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.152834996 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095416571 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127539671 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090640162 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.135391352 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.089267558 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.096890444 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.118715646 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.102200021 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.151813275 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.097593206 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119555496 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103292948 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122202713 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134702575 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136789386 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.106705103 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136005233 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.089224741 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123744938 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106463003 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.155395562 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103333986 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.130546537 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107876453 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.131559272 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126669892 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.136847998 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.092867732 seconds)
  done (took 5.17547775 seconds)
done (took 46.975235495 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.19580057 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.398939784 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183286678 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.028902527 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.24189216 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.202206906 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194408273 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.180073232 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.717619556 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.178895246 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.424933859 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.677656032 seconds)
done (took 59.741732202 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.253711164 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.337113952 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471838356 seconds)
  done (took 3.92185474 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.755893071 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.090911914 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.440054302 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.179002778 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.17754051 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481357204 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.795449707 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.500948076 seconds)
  done (took 27.776079304 seconds)
done (took 41.820507047 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.184847666 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.22456163 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.218843256 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.166207883 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.284997966 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.215136261 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.506756365 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.200665135 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.194880995 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.202260569 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.179273751 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.183235724 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.188095409 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.533859828 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.178726049 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.177935761 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.213473369 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.784147335 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.548396073 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.182851034 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.204916855 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.242279952 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.175436977 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.184008743 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.234163112 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.178608296 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.174378089 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.183813564 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.253124445 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.178039931 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.263064223 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.70116772 seconds)
  done (took 189.654320601 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.174530218 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.285531241 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.352802295 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.197738907 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.661798462 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.375746774 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.323181466 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.727806346 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.19253202 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.197049026 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.42598281 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.179952287 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.490347347 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169631044 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.205587364 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.20609874 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.357120887 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.496339987 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.214242812 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.338706578 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.18526718 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.408635933 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.326076026 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.386294489 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.194526953 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.26281072 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.18786926 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.189351442 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.36588764 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.309342512 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.208090511 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.2078398 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.729384209 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.029316669 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.194492443 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.183764179 seconds)
  done (took 149.048745601 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.174347233 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.176190236 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.175618224 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.203794418 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.175814723 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.672337441 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.674982701 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.705721492 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.318259717 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.309540771 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.369976564 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.177357722 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266793275 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.191371795 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.181303549 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.193063793 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.202199274 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.180775864 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.177562967 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.674964653 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.192860749 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.207655138 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.34258041 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.191668074 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205048324 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.57080951 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.177589554 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205428956 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.316067508 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.497066196 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.22181766 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177479762 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.177790459 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.481573221 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289637079 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.180503978 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206829395 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.178398808 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.451417326 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.179130342 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178115428 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.178831519 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.181765131 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.782581525 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.181746736 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.676215186 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182068487 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.065996317 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.179273704 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178833346 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.178159188 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.16928728 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.717528273 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.181501253 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.17813335 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.182153139 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.178792328 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178952264 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.207366352 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.140883853 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.272008313 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.180082781 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.181889799 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207541002 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.18002291 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.323791223 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179841057 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.600845575 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.235450936 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.284691524 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.667343187 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.182300825 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275723056 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294218894 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.178809207 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.17817426 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.178882656 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.178878384 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.284172723 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.178721456 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.539080548 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.339372859 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193327766 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.288199166 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.276076642 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.179045483 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.498008759 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.183348287 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.178903843 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856019801 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2701662 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.178451172 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.177946832 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177634583 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.540403691 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.66776867 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.351590528 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.183309969 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.291220831 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.183374475 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.548226178 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.180699734 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.659127497 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.754353204 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.180834773 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287012416 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.341812322 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.194364914 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.178728483 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.290513113 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.184650987 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.23628848 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.183584152 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.572426616 seconds)
  done (took 360.454749302 seconds)
done (took 700.270021482 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.803117186 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.787124464 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.892852791 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.783351631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.744716182 seconds)
  done (took 10.122729053 seconds)
done (took 11.234534476 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.350764911 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.349970765 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.234996155 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.352704279 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.209576259 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.367996889 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.330576485 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.204405764 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.275676683 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.25184505 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.274267564 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230637279 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212367395 seconds)
  done (took 17.758003055 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.48618094 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.479024737 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244098186 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50465928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222351089 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.47164466 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382294222 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.378657393 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371512666 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.196040941 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194870094 seconds)
  done (took 16.04503485 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.485123471 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.491836947 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249225767 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.4950857 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223326305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.492688828 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376664444 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400270921 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.369210052 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.196793769 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194887638 seconds)
  done (took 16.087625416 seconds)
done (took 51.003122852 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.191790572 seconds)
  done (took 2.306453977 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229440424 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.387976591 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.208329652 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.198792613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.192283006 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.201512694 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.200447855 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.195465216 seconds)
  done (took 10.929808747 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.188217138 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.188491262 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.188260773 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.188995844 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.190390653 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.192135842 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.190415357 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.188070261 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.188733056 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.189320608 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.191707944 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.188085025 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.191212595 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.191770875 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.191516698 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.190867616 seconds)
  done (took 20.153017159 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.191314706 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.188621062 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.188808858 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.189806032 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.189595053 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.190013719 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.189758746 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.190108605 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.189960112 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.189052643 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.190151157 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.188630226 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.189639767 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.189456649 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.190047072 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.190658491 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.189296613 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.190183433 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.19401594 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.190809801 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.191130687 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.18980572 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.191236633 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.191265593 seconds)
  done (took 29.680813494 seconds)
done (took 64.184806603 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.770826467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.645829518 seconds)
  done (took 6.533147743 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.251022392 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.254256671 seconds)
  done (took 3.623379479 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.193118498 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.193041987 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.194006885 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.193791931 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.195769908 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.193954868 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.193695393 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.193076264 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.19399036 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.193565081 seconds)
  done (took 13.054766813 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.193708671 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.196037852 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.191555138 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.193417502 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.193615852 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.191445971 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.193684237 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.194044732 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.194024458 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.19132811 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.194755847 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.191882846 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.194064509 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.191087918 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.194081543 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.191669404 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.191744344 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.191056828 seconds)
  done (took 22.591156721 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.206884843 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21511933 seconds)
  done (took 3.540910836 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.321473902 seconds)
    (2/7) benchmarking "second"...
    done (took 1.23330053 seconds)
    (3/7) benchmarking "month"...
    done (took 1.302493388 seconds)
    (4/7) benchmarking "year"...
    done (took 1.289645065 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.233921178 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212209055 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.232403962 seconds)
  done (took 9.943137897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.195216112 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.38493691 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.480931514 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.756312463 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.196454769 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.198748971 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.067226298 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.19956544 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.200921833 seconds)
  done (took 13.799218359 seconds)
done (took 74.203119756 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.15933996 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.187948907 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.372758322 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.205252277 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.202822013 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.487474829 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.22240579 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.311634627 seconds)
done (took 37.269863404 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.205011541 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.184506417 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.90659418 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.20383899 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.210529724 seconds)
  done (took 18.624927797 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.150466657 seconds)
    (2/2) benchmarking "read"...
    done (took 1.523029276 seconds)
  done (took 4.792459464 seconds)
done (took 30.743478837 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196360025 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.196762116 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.193694328 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.196471321 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.197503721 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.193801692 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.193201919 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.196372125 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.196009602 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.196367404 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.196737129 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197240754 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193676277 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194284625 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197106846 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.194697001 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.195172371 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194973398 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.193725835 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195267099 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197491638 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.194608899 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.194847328 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.196535479 seconds)
  done (took 29.813230959 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.197969415 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.195886472 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.198332425 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.197003984 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.195110591 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.198578381 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.198114192 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.1955546 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.197635582 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.198886969 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196135522 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.195498156 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.198115308 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.195206906 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198722695 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195364326 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.19916996 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196184603 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198766898 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.196908479 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.198364763 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197110927 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.19714237 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200100756 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.197019146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196101612 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.19884701 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.197658459 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199594266 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.196862936 seconds)
  done (took 37.043668574 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.204447996 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.204169096 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.199491282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.199366798 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.199199159 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.200220844 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.20019875 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.200415158 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.200215649 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.199995509 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.201147335 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.199485459 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.20006857 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.200558265 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.199994779 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.200185273 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.199828283 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.199980664 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.200013276 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.199269028 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.199732991 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.200798417 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.200621322 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.201183139 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.200853517 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.200929117 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.200287741 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.200835858 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.204800992 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.201189354 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.201353589 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.200949695 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.201915883 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.20241736 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.20128679 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.200977132 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.205000884 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.207509367 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.202803683 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.202413213 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.202772612 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.201414996 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.201254924 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.20202568 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.202328025 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.202241108 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.202279827 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.202620069 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.202430771 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.20137789 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.20205949 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.202476057 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.201778635 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.202055539 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.202643243 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.203212237 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.20221275 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.202127162 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.201550504 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.20213295 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.202844811 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.201616597 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.203463663 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.203301252 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.203477086 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.202754326 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.203313272 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.20294827 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.203611375 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.205242682 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.203157924 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.203675197 seconds)
  done (took 87.653207446 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.203205239 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201258535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200626085 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201810971 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20034349 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204547779 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.201707412 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204341804 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201547236 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.204020519 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203288578 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201499797 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201728493 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.204296644 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203880035 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202234472 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.203692947 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201636422 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.204320765 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205306809 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204818214 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.202879993 seconds)
  done (took 27.590198449 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205829394 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206099733 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.201689165 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2053009 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205111036 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20587195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.204849471 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206990593 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205604548 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203315588 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202733601 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205069264 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203821326 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202333174 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203182114 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204891466 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20579592 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203759532 seconds)
  done (took 22.810846365 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.20434347 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.204140401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.205598946 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.202387478 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.203109515 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.206115409 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203125554 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206546392 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.206970456 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.203933178 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.205977997 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206704719 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.206129532 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203225384 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20665931 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.204185207 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.207207242 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203835395 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206886816 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203918409 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204255046 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207092268 seconds)
  done (took 27.642157475 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20723845 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.206874777 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.204910511 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205337636 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205444762 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.206626031 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.208014222 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.205046861 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.208575626 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.206799501 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.611898006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.207870739 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.20718797 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.20638984 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.205760961 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205146014 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209412117 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.206027624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207745854 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204804333 seconds)
  done (took 25.66703701 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209937463 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209789587 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.211040058 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209833885 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213843898 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.210715077 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210950616 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.210662815 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210368948 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211758623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.210482649 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.212593928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211112409 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.210825011 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211338735 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212082557 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21131829 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211432154 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.212202064 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211776278 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212099131 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211074142 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211421176 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.211311421 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211600723 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210708443 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21138067 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.211631296 seconds)
  done (took 35.04663208 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210551739 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209986781 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.207313365 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.208263507 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.207849823 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.207415813 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.207929012 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.209066686 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210486565 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2076109 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.211240351 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.21075885 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211097731 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.211596872 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21178113 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.211426257 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211424375 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.208572705 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208122804 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209895266 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.211239576 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211519999 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.211982989 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209477334 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208936941 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.212132914 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209616123 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209735128 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213138957 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209121748 seconds)
  done (took 37.433490694 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.256798129 seconds)
    (2/2) benchmarking "in"...
    done (took 1.257175569 seconds)
  done (took 3.647954627 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.210325578 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212826054 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.212353172 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.210245458 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209809253 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212190981 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.213056711 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210008743 seconds)
  done (took 10.825508873 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.212992733 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.212593857 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.212829428 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.213783933 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.213925157 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.212857472 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220427211 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.230238402 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.214453799 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.214060585 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.219044719 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.219831868 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.214823565 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.213716238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.213624722 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.216371097 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.21391787 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.213971108 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.215170067 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.214970125 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.214557128 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.216429645 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216171854 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.213125661 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.215488528 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.224558043 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.219738164 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.215903711 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.214213512 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.217662971 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.21484741 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.212411669 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.216385544 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.216408895 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.216086942 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.215578644 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224217258 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234907736 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.221408719 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216718852 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215983145 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.212389399 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.215980602 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.217206425 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217316531 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.216857105 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.21709797 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.214253039 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.215240985 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.218895692 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.219450364 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215275666 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.213966056 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218139372 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.217752172 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223614155 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.234304491 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.219237087 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.224270614 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.226031684 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.228395138 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.224465592 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.218622458 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.218052685 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226214589 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.236792866 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224338544 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.231236706 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.214472463 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.218316952 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.223813164 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228416292 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.239968013 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.217846808 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.218333574 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.218139383 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218120463 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218483976 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225733072 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.236872952 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.219361232 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219590742 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.227216442 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237344278 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.218273127 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.219309551 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.218688973 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.219852119 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.218466816 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228117276 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.236313445 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.21969841 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.21818242 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.218312594 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.219388033 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.220085675 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.21841054 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21895489 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.216381031 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.219625356 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22024173 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221919952 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.227033794 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220688404 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22040615 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.226366286 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.220103527 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220159755 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.226263531 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.220512991 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220720423 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.220371244 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.224315525 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.218295753 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222054335 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.227454607 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.220646619 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.221320031 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.220627258 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.220950289 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228983929 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.242352205 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.221290537 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.220886773 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.223950927 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.23120958 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221523388 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.223007815 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.221717731 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.218344087 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.218066943 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.222393475 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.222100954 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.221338942 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222046418 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221873246 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.219368493 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.221326215 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.222172787 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.222093068 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.22295847 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.221925362 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.222860487 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.223689494 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.222529528 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.223492736 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.22804464 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.221643924 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.223624358 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.222134465 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.219458439 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222174537 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.223410598 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.223495528 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.221579863 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223269608 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.223304845 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.223559531 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.223542468 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.223847424 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223602106 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.222356495 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227460876 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.223888009 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.226637002 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.222842952 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.221399649 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.223872917 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.223795842 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.222008929 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.223751986 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.22243273 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.226985167 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.230832921 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.224417236 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.225486012 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.226798372 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224400966 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225554754 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225040332 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.227088368 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.231323763 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.224934426 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.231015661 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.225654813 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225114418 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.226486501 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.22393563 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.224819759 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227140729 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.227319327 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231418726 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23571502 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247979375 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.226856528 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.228221689 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.225272354 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.229018986 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.228818834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.227378892 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.225545498 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226629524 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2248906 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226387685 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.227577948 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.226589599 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224325078 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.227142265 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.22706719 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.226854569 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227530916 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.225908361 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226569268 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.225195669 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227058293 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227932368 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.225912228 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.224353196 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.225650712 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.225069894 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.227022316 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.226743779 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.232442883 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.224402302 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228313464 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228512139 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.227806365 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.22597926 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.227378637 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228572664 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226999271 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233963535 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.243858131 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.227046223 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234238376 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.243943833 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.227455455 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.229678047 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.228245295 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.224716798 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230132826 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234810936 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.228525341 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.229649469 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.228347161 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228583111 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229357733 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.233818972 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.227059425 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.227868022 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.229448481 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.22886662 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.225363133 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230051894 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.229667219 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.23002797 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231316498 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229582574 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229533123 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23222711 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230220631 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.229949255 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.230144573 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23190539 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.237289601 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.234292327 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.229925563 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.231462544 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.230768435 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.233158802 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.23054565 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.232027357 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.229515184 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241841661 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.252587513 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236612268 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.23358001 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.231218192 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235796836 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.231457671 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.232612516 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229962292 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230825444 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.230063707 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.230394298 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.22821673 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231373032 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.232175836 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23153846 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231010384 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234741131 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.230739707 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.230602029 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23169763 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231138697 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231889403 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.230304821 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.231999524 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.232860817 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232657794 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.230916966 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23220938 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239668026 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249794533 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.2322758 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.231599855 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.231745444 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.231098545 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.233393335 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.232207396 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.234960139 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.239491163 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.234588316 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.240237963 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233394504 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240481787 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.233021292 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.234753855 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.239714281 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.230885122 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.231404889 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.232939121 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.234519811 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240373154 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.251447161 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.23464663 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.237008636 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234825725 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.234361255 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.233824042 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.234334046 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234903823 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.235346269 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241917526 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.253498151 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.237205133 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236481469 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.232682696 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.236219357 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.235364266 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.2336162 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237271747 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.235036645 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.234740913 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.234650504 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234175668 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235907683 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.23535693 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.23559162 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.233188615 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.23515991 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24173823 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.25418824 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238577238 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235029628 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.242863957 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236061113 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242999943 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.253775681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.235143542 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.236736921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.236738459 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.23746662 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.235981983 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23700542 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.237454828 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.237275524 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.240181835 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.237493204 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.238089845 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.237308024 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.237519549 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.236012098 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245430656 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25723057 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.238323062 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240288617 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.234838594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.237522907 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.242208232 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.237554316 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.236408883 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.239940225 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244922435 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244519148 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.237322438 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.238537186 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237866614 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238384034 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.237886131 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.238628812 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.23867103 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.238517656 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.237279517 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.239546182 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240447717 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.237596646 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.23886458 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23934418 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.239599654 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.246949099 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.238999055 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.238622256 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238998811 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24033135 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.239315292 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.238658728 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.240835427 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238528112 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239931901 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.240574003 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244694444 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243137544 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.241896884 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.238418202 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.240217652 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.239470879 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.240101549 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241393161 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.240005591 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23970749 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.240601468 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.240888473 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.240077506 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.238786001 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.240389738 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.240721133 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24131368 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242582672 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.245838748 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24083223 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.238755556 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.240726419 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241431009 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.240004178 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.241153276 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.24742456 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243353686 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.248967654 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.247303395 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.244673624 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.240644419 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243645918 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247085106 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.239741997 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.241465571 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.242011606 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.241503203 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.242492608 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.243145423 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242023355 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247062099 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.24050834 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.241008412 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249763758 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.262664912 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243138418 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.243353514 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.245616918 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.241185197 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.240048598 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24273145 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241250517 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248597903 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.260803558 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243263766 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243809017 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241643858 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.243343794 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246982684 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242816106 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.243761576 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.241778723 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.243847439 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243616114 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243831409 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.241870408 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.242487789 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.242632059 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.245904208 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.247920864 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.241077778 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245072585 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.243115484 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.244554914 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244127175 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245461723 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.241344497 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.240999297 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.242930863 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244373972 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.24346135 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.246130356 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.243321072 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.244935171 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.244512382 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244593649 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246917496 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253492149 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.250786535 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.242352939 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.243918159 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.244242299 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246180454 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245459748 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.245436218 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244792759 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.246527733 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24572559 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245880797 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.245878954 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.247700586 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260159835 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.265634854 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245828784 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.24640668 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248160916 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.246781221 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.243981002 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.247232883 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.24750419 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.248998488 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.253206769 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.246692769 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25292592 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263936774 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.246723084 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.250373388 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.248770422 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.251777261 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.248674027 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247623623 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.247109502 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.250019995 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.259760377 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247959697 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257004623 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27307118 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.263708653 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.247421856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.247488164 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245900689 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.248741597 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.248590159 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.248682274 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.247808482 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249519415 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.248449795 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.248203966 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251445134 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.249015222 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.250673912 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.248330647 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.247855327 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.249204122 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.24605231 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.249288647 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.249793106 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.249574193 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249992389 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.249736925 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.249221715 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260592561 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.272750119 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.249673799 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.250897423 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.246821904 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.251917587 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.250503551 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258513804 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.256042699 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.249955957 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.24920271 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.250961869 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249847339 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.24899198 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.249442043 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248804223 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24933927 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.247221156 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.261036208 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258469212 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.254660079 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.249820735 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251187574 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.250131295 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251294851 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251507107 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251690311 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.250173348 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.253417935 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253822789 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.252101344 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.250389745 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.254070591 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.257108469 seconds)
  done (took 736.735559197 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249679525 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248296757 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24830138 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24922904 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24862482 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249215867 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249147658 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249366535 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.25000087 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248586828 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.249277221 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249003984 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24999333 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24997738 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248711191 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249323402 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249432363 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249335718 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249608795 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250037343 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248901437 seconds)
  done (took 27.404757019 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.251753947 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.249847065 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250616147 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253023625 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249282574 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.252505282 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.250294505 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252634921 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253153404 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251133442 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253224854 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252185464 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.250283357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.250785387 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250642969 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253209352 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252730375 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251292516 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.252709035 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251597848 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253670114 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.251716206 seconds)
  done (took 28.709971445 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.254942395 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.253949292 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.252825191 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.25225024 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.253765754 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.251428461 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.254403078 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.254430609 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.253958809 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.253889558 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.253370785 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.254654101 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.260049814 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.258170504 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.255126086 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.255532991 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.397798562 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.254731876 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.2549216 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256051114 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.252387363 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259373293 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.253007186 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.253457684 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.253476202 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.255227003 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.255841438 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.255694892 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.255368042 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.255390398 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.259115383 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.256028275 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.255394078 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.257395682 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.255535051 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.256498965 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.258671681 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.257409852 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.253146144 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.255201736 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.265404568 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.272931257 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.257045748 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.261604671 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.257036157 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.256214318 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.258216814 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.262791143 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.25478642 seconds)
  done (took 62.869784608 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.257902815 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.257034508 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.255347328 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.256821657 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.257559418 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.257982 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.25827973 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257531328 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.25435905 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.254348375 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.257600776 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.256909098 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.254557859 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.258152704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.258126366 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254823939 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25524294 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255208232 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.254735644 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.254264329 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.255470298 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.258013006 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.257775725 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.255471778 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258645137 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255583627 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256394117 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.25833274 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.255815514 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.256371085 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.25905806 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258433411 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.259496222 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.256242771 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.255594102 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.259448237 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.259595321 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.256182632 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.25877295 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.257152664 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.258817894 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259496951 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.26025617 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.259678822 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257101591 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.257034693 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256973285 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.257566923 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.257162239 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.259671314 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.260545975 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.258983227 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.261222539 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.25854249 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.26063957 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.26105229 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.257904334 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.258462467 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.261215859 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.258021791 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.257971168 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.260667655 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.258714136 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.260182879 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.259898421 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.25787487 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.258797502 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261194946 seconds)
  done (took 86.707258019 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261160928 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.260679556 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261034279 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260715272 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261561909 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.26188301 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261171215 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.261709998 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.261637071 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262313433 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261849885 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261495129 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.262249335 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261743267 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.261841495 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262166014 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262642636 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262032079 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261564586 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262271397 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.262680716 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262780605 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.262274579 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263355319 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263084369 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262068277 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262799219 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262901023 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263590653 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262598073 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262669721 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.263567198 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.263890175 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.262290445 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.263364379 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.263657852 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263306652 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263388014 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.264202356 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.263813054 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263677002 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263428243 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264148677 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.263163434 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264412527 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264405631 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.263431649 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.264171081 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263451133 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264627511 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.26451151 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26494115 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264343924 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264949641 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.263987651 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.264413937 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264515801 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264263642 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265252323 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265470563 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265536835 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.265919686 seconds)
  done (took 79.494097162 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265904327 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26586492 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.263909686 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262159351 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265656664 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263164571 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265354369 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266188595 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.264836422 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.265921762 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266347689 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26369968 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265845919 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266993162 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265601614 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26617621 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264373599 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265740713 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266804015 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264250995 seconds)
  done (took 26.487942015 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.263208355 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26648437 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.263917865 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.263634424 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.266748185 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.264354747 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.266282389 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266614905 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26405824 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266074534 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267055332 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267206537 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26488285 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265248359 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267317567 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265622892 seconds)
  done (took 21.432151963 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265487905 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.268031476 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.267641393 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268293155 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.264133579 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.264373931 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.268784291 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.264391422 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.265368366 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.268609852 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.267655155 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.268197506 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.268361756 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.26818625 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265281759 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.269296738 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.26583459 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.265094412 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.267684851 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.267896805 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.265430453 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.265422827 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.268415319 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.268524902 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.266013261 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.266262615 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.265694121 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.265669865 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.266455863 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.268134843 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.266677389 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.266965661 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.266383951 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.266410638 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.270265537 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.265590858 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.26965088 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.269410238 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.270012083 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.269212022 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.268972085 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.266120242 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.269638516 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.269750813 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.268404332 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.269563266 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.267664692 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.267799035 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.267251079 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268298595 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.270047461 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.270037678 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.270725965 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.271230098 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.270594077 seconds)
  done (took 70.907718659 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271402878 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.270494549 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268040409 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270565728 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27148007 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.268092013 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.270545244 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269956494 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268872353 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270721918 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268425425 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271945528 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268896269 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270883051 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269297015 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270135281 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268630536 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268544248 seconds)
  done (took 24.045101527 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269005334 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269125721 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.272193504 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269516818 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.268665737 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271692854 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269273336 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.271583174 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27073239 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.269816248 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270412748 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.271210358 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271068068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.27192653 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26996783 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268951568 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.272710148 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272196571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269504313 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270817227 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272082294 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273080863 seconds)
  done (took 29.145359333 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.271026172 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.271484872 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.270817626 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.288149193 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.28756103 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.29313371 seconds)
  done (took 8.871416256 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279192927 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272707745 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271269517 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274053013 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273043006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271637995 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270587881 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27221352 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274096948 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271666947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270837784 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274397437 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273711717 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272117584 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274935992 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274811502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272627584 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271628568 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272691726 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274923554 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271111029 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274385927 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27176844 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272030267 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272514712 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27249035 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274664149 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272898548 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272468422 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27429792 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274832026 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271855994 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275465634 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272786826 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276105676 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274746071 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274295392 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275676646 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275417509 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272918624 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275100585 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275726125 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27574194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273159284 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275134487 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272619616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272851337 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272755754 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273447402 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276433747 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276436603 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273068588 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275755921 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276587363 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276654177 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276763823 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276316956 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274708485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276877746 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274305312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275442058 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276706122 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274103338 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274664075 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276715887 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274843145 seconds)
  done (took 85.302470604 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274754582 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274253721 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27578722 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275634109 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274074776 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275515327 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275227772 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274974247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274950293 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274745803 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27801083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274984204 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276310431 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27572074 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275580877 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274867408 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276561969 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276907274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276735128 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279871137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276667662 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276090036 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275310047 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275496482 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276170785 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279138215 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276775677 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275915094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27538645 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276005445 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277553212 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278915572 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276914742 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277021816 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27806516 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277767572 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276879216 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278264286 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277196027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278289579 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278497842 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279162495 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277295358 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276956219 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277271836 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27736879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278534682 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277976839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278240763 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276847737 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277329594 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277114202 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2777517 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277653794 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277961727 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278213133 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278221021 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27812436 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277574585 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28012903 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27783725 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277538147 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281058541 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277450142 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279081483 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279766317 seconds)
  done (took 85.48292629 seconds)
done (took 1719.890887092 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443051303 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.395251474 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.279525131 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.27638413 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.279504188 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.29026594 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.299508666 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.279857759 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.279301687 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.279549365 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.279890703 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.46793634 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.283994861 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.28020338 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.280525195 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.372829489 seconds)
  done (took 42.267477815 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.30694901 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.286257781 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.38935858 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.305895139 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.30739963 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.455876686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.342720213 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.285609304 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.441985755 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.328955814 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.742386042 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.312732893 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.285796254 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.311459523 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.301452877 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.45622511 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.517912056 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.734375023 seconds)
  done (took 29.313207937 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.692845647 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.291341922 seconds)
  done (took 9.184434233 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302884965 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.285086216 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.28628073 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.285017338 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.276392546 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.276528558 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.283524269 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.282056723 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.684741362 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.400722354 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.293694266 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.295346605 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.30361161 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.287364782 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.28344507 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321648279 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.438773958 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.284647496 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285656958 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291702347 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.286977009 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.397982384 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.324472675 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291889848 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.400402442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.681532433 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.28941883 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.295057832 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.439272966 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285874085 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.28708311 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.286742309 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.288014721 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.158027618 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.726041058 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.280070369 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.310361632 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.295970443 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.286018706 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459243476 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.288751344 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.293231864 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.282199684 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.701941956 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.408578942 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.400832531 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.436329166 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.288968153 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.289249977 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.346059762 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.289072416 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.290053018 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.330546003 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.034296233 seconds)
  done (took 108.412414411 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.333282116 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.672819294 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447239927 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.296229323 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.953589077 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.838899728 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.300723152 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.547014902 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.304741896 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282081264 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.565743808 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.762964151 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306548816 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.316552335 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.49431728 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.365541107 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28219963 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.04510236 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.303333457 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.288654608 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766549366 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291626126 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.282784208 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.452645582 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.319966382 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.720957267 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.557943102 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.623409675 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.30779694 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.283540125 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.726150812 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.311967228 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.36061268 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.286358369 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.534501243 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.616184967 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.595710174 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.285422253 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.33448438 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.286961357 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.303538319 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.708868781 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.601108045 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.282712978 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.299862772 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71420097 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.283745942 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.284405518 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.292266729 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48117884 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.889092802 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.285888664 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.557173411 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.291638633 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.647981511 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.357701422 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.336491607 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745437483 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285703609 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.286399855 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345787194 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.285224619 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288649243 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287682831 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.289912626 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.609335248 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.536257429 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.288083068 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607586935 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.721164634 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.30689741 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.796626732 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.124783197 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.315232246 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.353061916 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.285796123 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.850641132 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763644378 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.294665189 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.285662425 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.599249734 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292636219 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.555923127 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.300483079 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286210403 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794348532 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.297184937 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.31047825 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.286614832 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.287446901 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.932717015 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288773868 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.543607309 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.354143445 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.286160142 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.285881221 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.297818842 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287226409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.30179925 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.287487603 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.782991102 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.314283266 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.397996789 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308691913 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291616557 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.287474064 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.288427643 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.286995555 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502936767 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.792988817 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.301604607 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289912341 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.28714301 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.290041764 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.457626178 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.288824937 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.57257805 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.2912898 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288583363 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.294280909 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.865308263 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320513658 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287835601 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.304637343 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.184894109 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.496183505 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.304770576 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.288517094 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289664651 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.291925777 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.444263039 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306246178 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.342102511 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.2916673 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965442925 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337135691 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.294054674 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.546118299 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.292428988 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.079096581 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.306258906 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28936905 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.571521121 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.544770831 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.396781552 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.291704323 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.305687525 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952402795 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.352378584 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426145117 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307401186 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.333044505 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.485130728 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.406031426 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291519158 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.925659664 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.29233154 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499862895 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.29267021 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598439859 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.756098521 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312004164 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.296918666 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970991895 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.019272112 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.970730703 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.292170765 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.557160735 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.237442377 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.770569251 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.29131742 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.301514619 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.754777879 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.293857403 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.292902886 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.293369307 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.293271482 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.439051737 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463583958 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.961463656 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.291987073 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722122088 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335793504 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291641095 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.304539029 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.295798753 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.640769547 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.313737039 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.295708499 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.339171457 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.295735243 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.299588067 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741256093 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.151407002 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.300956126 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.443027469 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.894747383 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.315690977 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.294805329 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.956266804 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.964525224 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781499225 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329738378 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.581184409 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.304403158 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330964359 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.939169336 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336212619 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745228041 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299829166 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.294524204 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86240083 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.315524672 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.380101852 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.29490279 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.294634507 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80099056 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.31618919 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.297595265 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.451063986 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312044005 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556193025 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.296568225 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.295047292 seconds)
  done (took 1098.806513365 seconds)
done (took 1289.182430546 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.294744662 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.302418354 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.288426713 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.301958753 seconds)
  done (took 26.404474788 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.312544102 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.301504911 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.303220802 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.301598452 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.307371993 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.301599156 seconds)
  done (took 9.045172525 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.440238579 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.303000004 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.302090418 seconds)
  done (took 19.263444554 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.49207013 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.511128531 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.612066804 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.329227615 seconds)
  done (took 10.163316134 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.304707177 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.304197654 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.305259855 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.307925473 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.309525161 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.31038182 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.310248274 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.308439595 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.31080288 seconds)
  done (took 12.990299217 seconds)
done (took 79.084262147 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.65497144 seconds)
    (2/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.511867094 seconds)
    (3/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.298206026 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.401043158 seconds)
    (5/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.401878862 seconds)
    (6/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.324512635 seconds)
    (7/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.285383442 seconds)
    (8/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.306404042 seconds)
    (9/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.299106835 seconds)
    (10/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.325544236 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.546726632 seconds)
    (12/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.323163978 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.343792672 seconds)
    (14/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.383327612 seconds)
    (15/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.28425755 seconds)
    (16/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.757702331 seconds)
    (17/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.672541745 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.291296125 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.32547737 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.357415389 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.481780352 seconds)
    (22/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.289517423 seconds)
    (23/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.450912108 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.285706215 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.344761993 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.403655575 seconds)
    (27/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.286051251 seconds)
    (28/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.290550778 seconds)
    (29/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.292656743 seconds)
    (30/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343320176 seconds)
    (31/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.678157983 seconds)
    (32/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.032468169 seconds)
    (33/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.326555181 seconds)
    (34/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.324815947 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.721809292 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.30984624 seconds)
    (37/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.29349904 seconds)
    (38/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.286679972 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.709670454 seconds)
    (40/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.513727514 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 6.31469112 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.431763943 seconds)
    (43/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.327488865 seconds)
    (44/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.618770321 seconds)
    (45/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.102322519 seconds)
    (46/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.308709662 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.928599036 seconds)
    (48/286) benchmarking ("sort", Float32, true)...
    done (took 6.299865439 seconds)
    (49/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.287073735 seconds)
    (50/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.00906856 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.323694645 seconds)
    (52/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.076582502 seconds)
    (53/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.883893438 seconds)
    (54/286) benchmarking ("sort", Float64, false)...
    done (took 5.537206797 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.171991754 seconds)
    (56/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.531046949 seconds)
    (57/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.967134426 seconds)
    (58/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385736519 seconds)
    (59/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.294220141 seconds)
    (60/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.951222343 seconds)
    (61/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.322959871 seconds)
    (62/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.419763776 seconds)
    (63/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.559319549 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.115507265 seconds)
    (65/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.73931483 seconds)
    (66/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.364847236 seconds)
    (67/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.288214464 seconds)
    (68/286) benchmarking ("sort", BigInt, false)...
    done (took 6.300778776 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.287725057 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.38517109 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.317769042 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.288308929 seconds)
    (73/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.375739605 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.700628798 seconds)
    (75/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.305015071 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.659337889 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.899971461 seconds)
    (78/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.327387996 seconds)
    (79/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.302958668 seconds)
    (80/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.306175983 seconds)
    (81/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.713926222 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.947302104 seconds)
    (83/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.290668442 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.397793805 seconds)
    (85/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327614642 seconds)
    (86/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.256054547 seconds)
    (87/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.323582364 seconds)
    (88/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.497229291 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.326821569 seconds)
    (90/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.907144655 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.32075464 seconds)
    (92/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.334703807 seconds)
    (93/286) benchmarking ("sort", Float64, true)...
    done (took 6.303968046 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.409035782 seconds)
    (95/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.290140213 seconds)
    (96/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.431132026 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.622871314 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.382589966 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.702977323 seconds)
    (100/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.137930686 seconds)
    (101/286) benchmarking ("sort", Int64, false)...
    done (took 5.500468786 seconds)
    (102/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.652374006 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.957536472 seconds)
    (104/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.305783013 seconds)
    (105/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.316182898 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.413235273 seconds)
    (107/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.090540216 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.806943315 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.175111705 seconds)
    (110/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.50680015 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.144119112 seconds)
    (112/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.328545869 seconds)
    (113/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.391318071 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.347856157 seconds)
    (115/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.12624178 seconds)
    (116/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.297838985 seconds)
    (117/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.313279712 seconds)
    (118/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.300006793 seconds)
    (119/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.41551587 seconds)
    (120/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.292124113 seconds)
    (121/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.509672819 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.701422175 seconds)
    (123/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.018402653 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.936834547 seconds)
    (125/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.292247342 seconds)
    (126/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.331330627 seconds)
    (127/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.327356788 seconds)
    (128/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.298771615 seconds)
    (129/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.68152493 seconds)
    (130/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.544329462 seconds)
    (131/286) benchmarking ("sort", Float32, false)...
    done (took 5.287035958 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.421819756 seconds)
    (133/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.528971013 seconds)
    (134/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.305890003 seconds)
    (135/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.308119453 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.328603932 seconds)
    (137/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.391795966 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.30492959 seconds)
    (139/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.291416292 seconds)
    (140/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.29351053 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.306772584 seconds)
    (142/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.398329142 seconds)
    (143/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.382859661 seconds)
    (144/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.283869004 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.294152252 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.387964832 seconds)
    (147/286) benchmarking ("sort", Bool, false)...
    done (took 1.819299933 seconds)
    (148/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.329849543 seconds)
    (149/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.779721904 seconds)
    (150/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595606409 seconds)
    (151/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.430395715 seconds)
    (152/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.332858759 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.020235698 seconds)
    (154/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.021833456 seconds)
    (155/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.034791281 seconds)
    (156/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.586314083 seconds)
    (157/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.333476444 seconds)
    (158/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.786893 seconds)
    (159/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.453691806 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.896564737 seconds)
    (161/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.409421423 seconds)
    (162/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.293417433 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.67003298 seconds)
    (164/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.544841783 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.332290267 seconds)
    (166/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.294134718 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.81563496 seconds)
    (168/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.334998432 seconds)
    (169/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.045338373 seconds)
    (170/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.431232252 seconds)
    (171/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.391807153 seconds)
    (172/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.317648468 seconds)
    (173/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.327344137 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.194933897 seconds)
    (175/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.432897813 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.324311764 seconds)
    (177/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.373118724 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.430305619 seconds)
    (179/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.331050334 seconds)
    (180/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.335558215 seconds)
    (181/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.183506282 seconds)
    (182/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.410331144 seconds)
    (183/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.29500045 seconds)
    (184/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.332788592 seconds)
    (185/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.393763588 seconds)
    (186/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.309004192 seconds)
    (187/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.565898469 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.308161449 seconds)
    (189/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.562972916 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.308374514 seconds)
    (191/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.205314307 seconds)
    (192/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.453319206 seconds)
    (193/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.65542197 seconds)
    (194/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.335148153 seconds)
    (195/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.030857456 seconds)
    (196/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.575937105 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.884424204 seconds)
    (198/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.771666126 seconds)
    (199/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.394555026 seconds)
    (200/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.430327193 seconds)
    (201/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.351160076 seconds)
    (202/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.253688465 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.297018533 seconds)
    (204/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.494677669 seconds)
    (205/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.310119518 seconds)
    (206/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.64546223 seconds)
    (207/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.396452734 seconds)
    (208/286) benchmarking ("sort", Bool, true)...
    done (took 5.317408493 seconds)
    (209/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.388596724 seconds)
    (210/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.542170508 seconds)
    (211/286) benchmarking ("sort", BigInt, true)...
    done (took 6.309876081 seconds)
    (212/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.337044833 seconds)
    (213/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.090998339 seconds)
    (214/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.297835638 seconds)
    (215/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.790768549 seconds)
    (216/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.526073354 seconds)
    (217/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.738560733 seconds)
    (218/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.312609057 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.316497049 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.337021468 seconds)
    (221/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.299012097 seconds)
    (222/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.799800741 seconds)
    (223/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.243906588 seconds)
    (224/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.320980788 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.569449789 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.357724841 seconds)
    (227/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.116921047 seconds)
    (228/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.310824065 seconds)
    (229/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.506897228 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.00740762 seconds)
    (231/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.57051101 seconds)
    (232/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.321629015 seconds)
    (233/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.673408003 seconds)
    (234/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.321380939 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.311143105 seconds)
    (236/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.306348513 seconds)
    (237/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.493988412 seconds)
    (238/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.827401788 seconds)
    (239/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.862743099 seconds)
    (240/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.610408116 seconds)
    (241/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.503495537 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.514705754 seconds)
    (243/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.912278254 seconds)
    (244/286) benchmarking ("sort", Int8, false)...
    done (took 4.362424921 seconds)
    (245/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.141118301 seconds)
    (246/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.686634053 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200497413 seconds)
    (248/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.498118774 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.339288696 seconds)
    (250/286) benchmarking ("sort", Int8, true)...
    done (took 6.313256041 seconds)
    (251/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.355983503 seconds)
    (252/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.991312818 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.697789721 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.171043733 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.333264076 seconds)
    (256/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.357712033 seconds)
    (257/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.147922898 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.782219021 seconds)
    (259/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.395193223 seconds)
    (260/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.310369584 seconds)
    (261/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.307793704 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.62743098 seconds)
    (263/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.105445966 seconds)
    (264/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.075547758 seconds)
    (265/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.301163586 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.407709361 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.658384523 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.411507951 seconds)
    (269/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.304697106 seconds)
    (270/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.905513819 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.435727257 seconds)
    (272/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.145483199 seconds)
    (273/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.314021786 seconds)
    (274/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.44494724 seconds)
    (275/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341247902 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.118340699 seconds)
    (277/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.42055458 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.724597404 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.372854684 seconds)
    (280/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.11763723 seconds)
    (281/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.430949121 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.337783898 seconds)
    (283/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.302543123 seconds)
    (284/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.662095798 seconds)
    (285/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302125258 seconds)
    (286/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.711159265 seconds)
  done (took 927.435024821 seconds)
done (took 928.655130075 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.347576224 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344010411 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.326246215 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.346963265 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.436748878 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.502347815 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.337006312 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.327642825 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.373708008 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.375066866 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.324492227 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.501294452 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.32787659 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.325434608 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.325590142 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340262746 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.313810752 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.327098762 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.343685978 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.335760638 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.343258341 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.325399439 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.375999709 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.502601289 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.331235104 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.32971215 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.3306824 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.346313319 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.439098792 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.33010452 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.32966882 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.338149867 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.315424195 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326100381 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.322120933 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.348032029 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.33844396 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.337661203 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331246062 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.359609889 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.693776822 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.327688543 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.328688494 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.328808602 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329750939 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.332693982 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.32960732 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.33467214 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342638634 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34489722 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.68426911 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.343284471 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.332067055 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.330351229 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340380283 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.329045488 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.332382638 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348167321 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.34888288 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347840855 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.305169035 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.334327626 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.332598321 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.346368015 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.336835147 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.725325681 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.324701829 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.333597786 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.69709005 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.335337597 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.725981576 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.338467061 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.332020146 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.343920125 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.362259786 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.319425944 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.326771775 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.330675751 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.338310669 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.329815375 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.340431353 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34549967 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.336539925 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.333287967 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346398778 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.507474055 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.340801634 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.332066816 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.339997254 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.350820722 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.338878934 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.342422078 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.3350542 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.327232919 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.340987483 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335972489 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.335235826 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.334930861 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.336970266 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.342311225 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.697185724 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351133421 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.329619818 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.32821513 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.330525545 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346454034 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.698131845 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.332257001 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.354433382 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.380179718 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.334212293 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.312256476 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.33574441 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35110528 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.34192376 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.336382953 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329464341 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.314695968 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.69408121 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.347927374 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.33591323 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.332385894 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352391996 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.335502094 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.331097427 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.327526101 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.336047587 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349254701 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.45488488 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.344168834 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.365778639 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.332694622 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.33811473 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.368805309 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353216342 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.365739628 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.337973899 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352929326 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.350872522 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.330909158 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.345197326 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.34485728 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.337506025 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.340761248 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.329129371 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.369677241 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349647758 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350228268 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.356833057 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.455897589 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.332947106 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.316361099 seconds)
done (took 224.68976009 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.400472356 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.324078712 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.425117387 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.332896674 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.436850631 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.432511742 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329761973 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.329809764 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.330396697 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.712793308 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.329709052 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.331058427 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.328882824 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.330906718 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.422301768 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.333767273 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.330896751 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.676048522 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.334255131 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.416724253 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.327952944 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.33148056 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.334257858 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.713751128 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332575135 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.330707817 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.40708002 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.334031169 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.678378466 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.327992466 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.333658768 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.679349703 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.42384775 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.350976043 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344589867 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.342242498 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.433302881 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.352352431 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.416132342 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.422980876 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.428125204 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372690991 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.331761535 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.33568205 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336570628 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.336154935 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.333324182 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.362675815 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.332484179 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.33206665 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.678846382 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.344749476 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.343662817 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.333051912 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.333172771 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.355693643 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334950195 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.337425714 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.437337726 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.336754333 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.397930579 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.716093622 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.717928443 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.336644517 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.337047324 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334023067 seconds)
  done (took 148.530710827 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.40327091 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.409099374 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.445561023 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.336885514 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.38684496 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.452254021 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.338582799 seconds)
  done (took 11.021517577 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.342555903 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338511092 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.386427813 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386388172 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.338230928 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.515346045 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338372069 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.349038894 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336299896 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.388885748 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.343565421 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.33872579 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.343552602 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.333181349 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.38482319 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.348153532 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.45212813 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.338795928 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.338105115 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.488384372 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336656603 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345086559 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.38879331 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.348158361 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.341937114 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.344020303 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.159781164 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338549817 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335515239 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.338061062 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336641276 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.413079714 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.340342297 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.334397533 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336719122 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453194731 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339019346 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337209141 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339682583 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.337284489 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339651081 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.341145081 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.339788586 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.338697703 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339551219 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.36140292 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.340183442 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.34106245 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.34019326 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341119151 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.391040674 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.340782067 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.337466252 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.337841938 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.393479945 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347368169 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342259645 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.339386053 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.341019938 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338074557 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.492430489 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.386952775 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.340517526 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387722364 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342537511 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341771422 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.341941499 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.340606626 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400639684 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.340874491 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389729596 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.33877224 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.520094746 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.364530205 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343421076 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.343527768 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.3428787 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343303509 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.336674291 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.346384692 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.337921295 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.341855096 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.347240835 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339605836 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339581251 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.507423499 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448561602 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.34052205 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.354302409 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348832356 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.340611752 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.396318901 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.343043341 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.339652282 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393708404 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.457242526 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.395116301 seconds)
  done (took 154.21431726 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.347658665 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.351779026 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.346167536 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.366560092 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.343001366 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.343245373 seconds)
  done (took 9.352517105 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.344912091 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.343850772 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.343773435 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.343760233 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.343527442 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.347417876 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.344665808 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34462512 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.347666858 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.344008602 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.347521183 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.347426671 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.348634006 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.344605287 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.346157131 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.344244439 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.345211762 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342001754 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.343771277 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344998528 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.449453689 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.343920346 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344572211 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.345358531 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.352826531 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.344480586 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352257647 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.345211805 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.344536001 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.349895193 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.347572839 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.349466124 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.346802574 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.350830127 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.350521564 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.347211952 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349786797 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.347535117 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.343342094 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.349629432 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.347617446 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346191398 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.346863407 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.348104302 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.34819649 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.351132581 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.351424906 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354747124 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.347497416 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.349615848 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.348318118 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.347408729 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.350070997 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.348375367 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.349217958 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36711135 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.351330243 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.348908032 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.34720502 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.347253778 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.348170931 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.350781569 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.349142483 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.352777899 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.345026252 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.349789573 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.349020574 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.351620757 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347713991 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.347760099 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.349457635 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.345006662 seconds)
  done (took 99.398586209 seconds)
done (took 423.762989577 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.764623102 seconds)
  done (took 8.024399093 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.38825429 seconds)
  done (took 7.649389753 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.123013174 seconds)
  done (took 21.388952497 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.38436959 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.437906096 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.363624521 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.345686436 seconds)
  done (took 26.793509105 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.679418569 seconds)
  done (took 7.94139687 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.343755165 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.359470144 seconds)
  done (took 13.966322307 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.343222725 seconds)
  done (took 7.605487883 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.361185944 seconds)
  done (took 7.628196437 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.355381077 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.361949722 seconds)
  done (took 13.992780464 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.343662437 seconds)
  done (took 7.605548479 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.371887663 seconds)
  done (took 11.633862871 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.354005415 seconds)
  done (took 7.616942677 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.41946704 seconds)
  done (took 7.680380229 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.096944118 seconds)
  done (took 9.357720019 seconds)
done (took 160.145723204 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.341821225 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.343314048 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.342718615 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.343762469 seconds)
  done (took 26.632783998 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.382941335 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.384004277 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.384336475 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393940594 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.386611034 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.383083012 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.375667373 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.374639268 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.393849666 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.38727694 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.386050106 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.387173045 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.383680351 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376170662 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.386330734 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.387090184 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.396098906 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.386305343 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.37633459 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.388825115 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.35207954 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.395378416 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.388084071 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.352383071 seconds)
  done (took 34.450654907 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.872338381 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.421650424 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.505414685 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.40223667 seconds)
  done (took 7.463888776 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.403643718 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.405593624 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.416077179 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.456372276 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.481822699 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.414609858 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.376682161 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.373871468 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.359123377 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.406288091 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.48201107 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.422080195 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.490771578 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.352974964 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582672406 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.352817808 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353078692 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.404979893 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.456312407 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.500675713 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.354229258 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.404813691 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.408419042 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.422249618 seconds)
  done (took 35.345652736 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.35295152 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.371041481 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.351981712 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.350695565 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.360712407 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.352841764 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.35318538 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.353116439 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.3526158 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.358550534 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.351281029 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.364619927 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.351920595 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352003273 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.359373774 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.354412431 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.359874656 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.352810275 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.353113394 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.358945476 seconds)
  done (took 28.380909554 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.346408363 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.298759679 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.698704739 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.602774674 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.346878905 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.353957478 seconds)
  done (took 28.911961053 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.422591985 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.550409365 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.354559145 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.695789496 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.771022258 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.356245719 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.355954939 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.587094324 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.893897813 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.881506592 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.411301807 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.421113851 seconds)
  done (took 19.968385013 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.350917349 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.355864379 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.355499446 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.370709552 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.406891657 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.358839217 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.363558052 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.349179346 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.415937239 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.412436047 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.359906213 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.409534385 seconds)
  done (took 37.776642786 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437229831 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392365506 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.294399991 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390873346 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068439937 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561742149 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382673693 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.060703298 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.354012909 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624793475 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362296963 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44124855 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607418865 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354175776 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36009522 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.319826881 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584830337 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803198475 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360300608 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.301768499 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384796122 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362697241 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.398813039 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583572849 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569727482 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.32935658 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.617632821 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.127786071 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627863895 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374348491 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362914828 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352375023 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627465622 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003960323 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448682381 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558773949 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365108105 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.898532498 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.350452237 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.307916084 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362543194 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356888988 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364066003 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3537794 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288143941 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353336026 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061315039 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.359450295 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.066581371 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353634201 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605195805 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457105872 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.357432576 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.925615885 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39798568 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.359745562 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.358214753 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45008343 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923699263 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.572459735 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376053065 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.294824548 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357830649 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313568494 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958284846 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.361277582 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.358721387 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358797464 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289021137 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.310786677 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378974803 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503547377 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.380456946 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.004843078 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018850316 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.369438376 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286401424 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869577058 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364717782 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.297072052 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583070374 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132171691 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292090037 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.302766777 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.289117464 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021251204 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372205805 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.721640933 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38478887 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052452334 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.565636044 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381343015 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380019506 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57905972 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.244530556 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356846513 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.358562202 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483893558 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378928174 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056435637 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291669441 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.362345848 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613608392 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.569388677 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370267767 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.335503929 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835686141 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357786426 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385816521 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36497097 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57339033 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.92492894 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374001372 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.58122991 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381764244 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.135575394 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065113584 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378204259 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.370567585 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368029564 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635606711 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.107340602 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.249005818 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426788294 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368962601 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359770623 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.347020744 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.216395055 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.24159295 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.560436611 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38769501 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.377452344 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.361367039 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30795127 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.356213141 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373139498 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.144249759 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582331247 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359825401 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659658923 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2952214 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507976722 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369276254 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582831635 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.542319529 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.372439871 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619297891 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362093383 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367274455 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37988415 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380086327 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460269135 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383977971 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.369066929 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624230478 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365307797 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.365996103 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350802439 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.146195134 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36600495 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.366381407 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371236943 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925042819 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339118173 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364291378 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250977237 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376292924 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429648941 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366955515 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57152786 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.552747876 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369847534 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.367086978 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.359823874 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584920848 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372683743 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.341248048 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44923206 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.831346612 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926628801 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376202538 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.296870732 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.073992386 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.056488596 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362473612 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.551962531 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364319814 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572005071 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384920372 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36504029 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945015847 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365930145 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.353129712 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.376754691 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375552285 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.368454456 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365428126 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.534610256 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.609697058 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380990437 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.382235056 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509313939 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.37798906 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298481716 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881113503 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370490671 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365411271 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.141111321 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399104327 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.34613865 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168341525 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622773448 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382562104 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617353715 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.431283448 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.404459936 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.368245229 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365919799 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379690794 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.38639819 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390027479 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.376794408 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.338000718 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.810892441 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930485343 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060421339 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872358142 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.626291468 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.372590487 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256398119 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072268508 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29937942 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.021995547 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599914852 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077801147 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311283033 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837843058 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.544466335 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114583238 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619563952 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602212475 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620869062 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.369156941 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631524731 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588740797 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401801368 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.377418923 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303371249 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.892359132 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920275039 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373337613 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456241295 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071745103 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370852723 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.154058701 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.4230914 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.040790851 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778138496 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.918712879 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755194965 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367970398 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376454608 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172839413 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370436062 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.893356717 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966210176 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370529716 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.862692767 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304111369 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.579214148 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387662256 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.371977745 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.873358276 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.376657068 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.623877567 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623941329 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312103937 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37616217 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882278091 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.225300426 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.375291727 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369261054 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087082038 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391804897 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658055584 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.389798456 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.56718091 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375173719 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304448126 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304533199 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.064284122 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375674702 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34612951 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828726808 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.386440067 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378357154 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375468822 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222322685 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625523047 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.384514784 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936650796 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595434655 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371216372 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394464128 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.375008402 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371720093 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.367305639 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256417744 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608324164 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410822324 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593976309 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.323371505 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.28674815 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456954381 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583972693 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.267905386 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380718669 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61870571 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.090610041 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.384307322 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041577459 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398081386 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371990833 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401259727 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370836923 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393403365 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443387119 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583716894 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.392613162 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383595589 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776685371 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394593575 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383680689 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.38658092 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466930428 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.63742603 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.577313319 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.146524681 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943448798 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100700107 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94476033 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629209932 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383094511 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375864081 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307302351 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522038291 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899622588 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647076441 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504169173 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.376051305 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397979445 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380107657 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388494386 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592948824 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648818035 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.243676585 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387950854 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039341894 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.53393197 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385942178 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.585585971 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839433925 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913418746 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501382795 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383125995 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08820928 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649407648 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.466014951 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376335435 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962870138 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.376478367 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.05799274 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.389257489 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380825566 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530502256 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628428606 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042792782 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.393754834 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.531438735 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.149376217 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400735002 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638495755 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.798713922 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589372899 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954255977 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.060509588 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638978082 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44699714 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588552001 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.486669888 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524564849 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.376918279 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.273323003 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378562316 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22387374 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.087810444 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.386207 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951079175 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640921918 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381432521 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.37567623 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401305392 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.387007003 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600832119 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056750809 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610926508 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389075719 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382567621 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.949268362 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95371533 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635113867 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322052129 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.382071745 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617852821 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621905749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403646652 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.83164382 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.090554768 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910994098 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.357531328 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400418724 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379104134 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.072435912 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954373093 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.584680841 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842525005 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045329677 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395048031 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661284918 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.384462936 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38629869 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661990264 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.384593976 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384235719 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601292063 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.955195353 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138494115 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.402191164 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407951195 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.324805113 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.60596269 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454657926 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342541672 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390316877 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.803102 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408392497 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512657826 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392628176 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.383288528 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389798312 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.150657661 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65419593 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.387054775 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.369417079 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.376441267 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400563136 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48361629 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941346583 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382471117 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.054869216 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.73361906 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638473007 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384489462 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.376505022 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.386520965 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383068456 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099757479 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.350666847 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394395429 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915844326 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.394845689 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.399045672 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3858008 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.598703935 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594258955 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383981276 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605745216 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39748965 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406043173 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.292115473 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150182374 seconds)
  done (took 1670.233706102 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408149477 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.415168939 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.42928504 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.402996973 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435509005 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.398244294 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.484727653 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45487241 seconds)
  done (took 52.728532385 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.384564314 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.541533564 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.41515904 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.38384163 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.393710559 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.393068702 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.839483973 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.385002023 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.393147735 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.394976799 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.388817377 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.399748552 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.021836113 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.394272488 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.395846269 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.392352158 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.401983379 seconds)
  done (took 66.224343105 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.3699046 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.679918641 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.09052875 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.395789166 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.423534089 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.389465172 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.890099289 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.400941357 seconds)
  done (took 58.941355908 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.403974831 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40542865 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.402508893 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.403980616 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.403756714 seconds)
  done (took 8.321226827 seconds)
done (took 2076.644017182 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.389871991 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.39260063 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.389774221 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.393022754 seconds)
  done (took 6.866205836 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.373592751 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.10892396 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.375740815 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.395987307 seconds)
  done (took 18.555332027 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.397144748 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.406862101 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.075713303 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.022450384 seconds)
  done (took 5.400186436 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.136348103 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.147796365 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.133394017 seconds)
  done (took 7.719599574 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.387042244 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.393921953 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.396146143 seconds)
  done (took 20.478132551 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.687955259 seconds)
  done (took 2.990701947 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.534899847 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.584587817 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.70509967 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.709406068 seconds)
  done (took 7.835932295 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.781277557 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.766583945 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.57473709 seconds)
  done (took 6.423760958 seconds)
done (took 90.375070253 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.126161487 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.761867959 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.595629185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.095642683 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.616790805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.592073004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.60507256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.064715725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.607817934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.596568655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.143740913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.620418857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.554231829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.759470269 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.551274304 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.635209793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.620009652 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.170861978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.787723029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.988101094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.609250487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.740416851 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.976134646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.757025659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.619890374 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.542050204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.333818326 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.638184783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.960716343 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.350025574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.541649717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.159094463 seconds)
  done (took 193.025093576 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39009998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.389503761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401282442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.392375822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.400912216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.396297023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.392089183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.407440572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.390058767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.413789943 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.390008909 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.406008643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.389774784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.389587321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.389539318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.390198172 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.390237739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.401427355 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.394128157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389165577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.390370878 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.4033368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.389870024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.390944934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.390915331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.390469588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.399081974 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.389112052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.407587532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.405250997 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.392733706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.397288793 seconds)
  done (took 205.956169644 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392117643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.391183219 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.391721932 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.394571206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.390120028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.392334881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.393543093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.392080133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393111458 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.391028754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.391198627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.408837565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.393151642 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.393042894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394307488 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.396772294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.391650099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.399872276 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.395427132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.391309288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411405246 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.406318203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.404444718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.392532892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.392108065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.409999373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.406083536 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.392563778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.392828151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.392771101 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.392864321 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406672589 seconds)
  done (took 205.984583465 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.586341216 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.399521162 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.400276599 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.355658001 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.400789883 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.399579428 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.392454527 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.597511462 seconds)
  done (took 14.839642992 seconds)
done (took 621.108688537 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.685301771 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.396480299 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.601465599 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421887332 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.172869934 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.437839736 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.421650872 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.590750547 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.320166057 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.596354543 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.622208468 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.419031035 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.761713171 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.41974787 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.671655147 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.519209512 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.266189292 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.365409416 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.729666566 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.928602663 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.682635306 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.845421792 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.594550069 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.304312622 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.803054048 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.866896117 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.10006893 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.259793973 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.421657037 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.739303344 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.050199225 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.386697277 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.461484591 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.463910536 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.522097093 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.517512123 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.348967409 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.477597699 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.603895868 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.614704845 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.944985716 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.141711224 seconds)
  done (took 93.809448023 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.393249206 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.392064325 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.392197523 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.392728443 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.39443063 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.393197552 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.391998749 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.392129976 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.393779652 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.393605993 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.392203788 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.394224008 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.393982055 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.394074967 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.393275065 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.392856459 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.394271997 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.39517914 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.393514127 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.392450529 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.392969813 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.393580567 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.394882922 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.393755745 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.393104814 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.394373242 seconds)
  done (took 37.540534622 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.406331593 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.648128014 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.809581823 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.410871497 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.40612256 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.409242822 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.481846996 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.406388988 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.407718756 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.408001236 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.573305371 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.408939544 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.440336317 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.836748053 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.408189709 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.405687395 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.406729777 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.405520985 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.655970844 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414447497 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.501187915 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.407188765 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.48276151 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.415568571 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.427597907 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.406727358 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.410730735 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.966716202 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.408880218 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.573779496 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.181190052 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.487882972 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.912857413 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.825751121 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.183958243 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.416856658 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.40798964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.578804883 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.409662943 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.407334892 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.483295163 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.410887454 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.822134883 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.076797092 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.427753059 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.409303088 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.987043212 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.578353141 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.646932985 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416790545 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.848206831 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.419640968 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.409855362 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.409227355 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.647306472 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.41656572 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.408561375 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.969250053 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.429923532 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.485155983 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.411260033 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.409448461 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.664630283 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.408561404 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.654014958 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.411765548 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.417976091 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.429412717 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.825621151 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.421326093 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.097606057 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.428910889 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.408972703 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.576642457 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.65578549 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.021927506 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.413363804 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.669729533 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927311477 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.485356388 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.414279394 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.959508493 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.4888194 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.414697842 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.413445801 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.412313694 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.410925612 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.461329051 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.484684123 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.022191801 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.08634326 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.994905589 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.506922224 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.418831462 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.412165308 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.971660343 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.42961937 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.411763051 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.819644104 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.092716354 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.429851657 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.419363909 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.096156957 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.431775288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.489767194 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.419031218 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.832593631 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.412919055 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.461598354 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.412237597 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.419167437 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.43537072 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.489033794 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.416740801 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.413881969 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.064061335 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.602122609 seconds)
  done (took 185.19538584 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.406774243 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.422863858 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.419513525 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.405738376 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.406828217 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.415153423 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.406746595 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.405886637 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.412221242 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.405962182 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.407267212 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.405826518 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.408133937 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.409285019 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.418598463 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.413550662 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.062372463 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.409379836 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.408926344 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.407823099 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.197937629 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.416299755 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.407745415 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.408051015 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.407945477 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.408454553 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.425132767 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.409730332 seconds)
  done (took 154.261058 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.414639929 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.962810748 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.416489608 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.543497535 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.435799135 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.412214267 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.540480938 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.470097105 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.416491206 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.412914193 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.413371954 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.710035583 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.417213021 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.915840422 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.604082547 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.552162035 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.915375218 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.433567657 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.413159031 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.413731802 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.544694592 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.425478858 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.715296875 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.984155137 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.426608571 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.974621562 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.416299431 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.417808589 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.415663051 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.97743545 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.424229695 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.718456298 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.500671525 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.4756044 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.977876712 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.925308848 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.93297362 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.563240899 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.41660026 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.415354961 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.414657928 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.407043838 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.977578225 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.427309285 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.41695758 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.974229481 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.444068707 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.418586349 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.421930458 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.416126189 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.474879844 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.476266718 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.722756728 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.991190227 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.501181172 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.429891693 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.546158521 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.799776072 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.422124272 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.917680119 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.407365738 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.983394573 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.445139838 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.408767443 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.417975265 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.422455184 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.563627502 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.547061408 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.920591181 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.435805445 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.917414529 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.581258611 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.416778418 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.417727204 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.42066069 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.980832029 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.9283788 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.582418439 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.549656759 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.608490347 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.411212175 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.418766329 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.410522846 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.494761196 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.417249494 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.981907376 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.945854426 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.437254841 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.420672514 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.420486385 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.42017417 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.592693874 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.98459942 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.50243108 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.916745422 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.739629752 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.731717471 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.429964017 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.476378365 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.437046821 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.724837269 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.429986949 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.474399493 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.86372639 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.72502188 seconds)
  done (took 168.151554525 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.658254526 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.605340255 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.516177387 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.562355083 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.023038451 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.988114362 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.701349175 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.565537892 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.529266315 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.679587482 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.564901265 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.51642183 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.629045284 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.495097665 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.147369185 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.487674668 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.511736542 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.565458923 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.556183685 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.444344231 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.07940316 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.70636924 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.608747208 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.287771072 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.5214379 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.203420564 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.977370847 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.967172382 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.588330975 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.753450765 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.967909144 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.527895407 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.402573157 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.094012236 seconds)
  done (took 67.761791323 seconds)
done (took 708.029564973 seconds)
SAVING RESULT...
DONE!
