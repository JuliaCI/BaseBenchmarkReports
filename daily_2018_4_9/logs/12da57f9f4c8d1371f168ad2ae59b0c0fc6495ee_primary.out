cset: moving following pidspec: 16854
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.107993861 seconds)
loading group "string"... done (took 0.498696083 seconds)
loading group "linalg"... done (took 8.522707622 seconds)
loading group "parallel"... done (took 0.174340305 seconds)
loading group "find"... done (took 6.163783461 seconds)
loading group "tuple"... done (took 1.89822966 seconds)
loading group "dates"... done (took 1.343029918 seconds)
loading group "micro"... done (took 0.190747924 seconds)
loading group "io"... done (took 0.505037057 seconds)
loading group "scalar"... done (took 51.84653986 seconds)
loading group "sparse"... done (took 13.748429894 seconds)
loading group "broadcast"... done (took 1.299675871 seconds)
loading group "union"... done (took 9.280445077 seconds)
loading group "simd"... done (took 3.036876006 seconds)
loading group "random"... done (took 11.434464566 seconds)
loading group "problem"... done (took 2.221551421 seconds)
loading group "array"... done (took 24.407330304 seconds)
loading group "misc"... done (took 1.114217287 seconds)
loading group "sort"... done (took 3.730853068 seconds)
loading group "collection"... done (took 19.323540673 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.608178707 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125814328 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.20632537 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.22513329 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.226782366 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167232533 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158233207 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.236568109 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.619444528 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.194095258 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15419555 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421078043 seconds)
done (took 6.16825756 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260477863 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.254972667 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166932781 seconds)
  done (took 1.188584959 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076967472 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161895601 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112764233 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097489863 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094711175 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112253536 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094751264 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111501769 seconds)
  done (took 1.557984607 seconds)
done (took 3.854601767 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.505805816 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.867974764 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.486156054 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.144327502 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313639772 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290901723 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265236907 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.202496183 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092897397 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090058332 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178075187 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.403667018 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.396913052 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.952569515 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089301833 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.109289655 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.116837514 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.7512435 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080087263 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121980982 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.497942088 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192533254 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11475983 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106119743 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186199276 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139368086 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159146088 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104900499 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.658891444 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133484535 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179559671 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099902774 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15842347 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.167913501 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.21249265 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.098417013 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669085717 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205164087 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098216641 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102456494 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672901592 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120132915 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187970449 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105012753 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089663077 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179950789 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101873851 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094834488 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097109512 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087351242 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165554008 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.442583277 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108282482 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170743552 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093973173 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.680566429 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099317782 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.271967247 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128259478 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097303638 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095205516 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090709572 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162344946 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095300309 seconds)
  done (took 19.993140775 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.151452222 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167328683 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078867752 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157386115 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122192786 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080338755 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103328981 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079433322 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127391484 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178246467 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140135094 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153680038 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093405291 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091509169 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146328896 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232492472 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11170386 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125661556 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089770251 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.1075804 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124267268 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096797097 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109454449 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092967651 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170019082 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206224235 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112192747 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12360128 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091942343 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096663408 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143659293 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145735443 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096931651 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09020989 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188464165 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107179602 seconds)
  done (took 5.319084727 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.223775309 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105772471 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.228985207 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200464189 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13328202 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185502065 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170880768 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255115862 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.18832785 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184154574 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114234477 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114938818 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08130012 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081467067 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095428844 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.455631446 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148544774 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193857465 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166139762 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116535299 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083816116 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361849189 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102177726 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085487539 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112393822 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064531399 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.20172997 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094970282 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.128793283 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084555828 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123210473 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132789757 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194327983 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125762523 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14022166 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095645324 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.103855024 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.209021883 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121382851 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078913573 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134391984 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116791499 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132662504 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10824284 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111476755 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223225801 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.104355813 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11385039 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.063099962 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19846741 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.156050149 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105008344 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294382442 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11098263 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100445742 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.11273825 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155370464 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085285737 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.784153253 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118126196 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08715366 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.101245405 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097391922 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080071352 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448478203 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109118327 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.257662213 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086509255 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160736294 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097535013 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121127111 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086337549 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103519524 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110542936 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087009381 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09758375 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088022402 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079892154 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108141894 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11302859 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102928656 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08200152 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148144619 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115809964 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108960259 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125045652 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092988179 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086116823 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129100391 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084054125 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106711067 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146776669 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118114835 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113056683 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116983081 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144731835 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08864225 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.222146617 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100893846 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087597025 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124738549 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103015482 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128255212 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102014698 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082790811 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098044215 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08570379 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079439546 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099628857 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147328922 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089493082 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097249165 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091284742 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093465176 seconds)
  done (took 28.614059263 seconds)
done (took 54.694290253 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.413099741 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082867127 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081397989 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102189249 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081459288 seconds)
  done (took 1.604783849 seconds)
done (took 2.424202861 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.328468939 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202982315 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10345217 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19033495 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086751764 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195474809 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184151413 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101761661 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209096585 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084915949 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186566563 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084288703 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106784362 seconds)
  done (took 2.911199539 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105565171 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108050911 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103266075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121773158 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084383093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099849366 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119346541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106581047 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101058777 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117229028 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087228381 seconds)
  done (took 1.971934438 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102376796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10472501 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092760215 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12018169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087825959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098974981 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118931439 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10805514 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098816929 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115689486 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08690908 seconds)
  done (took 1.955856015 seconds)
done (took 7.652646216 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.075093288 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.660292133 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147901744 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.212938528 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346690356 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239663257 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.573711409 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154692234 seconds)
  done (took 14.376363456 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.131967177 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.158685869 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094207915 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092222723 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094205693 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.116350618 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094648836 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094598066 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.112594354 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094914412 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09160715 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110131268 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096015853 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091595483 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108928951 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094701176 seconds)
  done (took 2.56074229 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.149322929 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142783714 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100012778 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098832401 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113639788 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100758816 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102009368 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117375322 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095350809 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095828616 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.120440293 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099561843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098220974 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113122931 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100107433 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117660553 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113500396 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100296169 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116433046 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118083299 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09925045 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096535569 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115600906 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101071951 seconds)
  done (took 3.53359559 seconds)
done (took 21.29042034 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153571026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10380515 seconds)
  done (took 1.080262906 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.147429355 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.16239945 seconds)
  done (took 1.134117819 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115786881 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094768969 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140653175 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103551771 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091869489 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109955401 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115497503 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10979749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092759763 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09165228 seconds)
  done (took 1.894612765 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099629404 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101057388 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126560599 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.141340027 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120182016 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095593478 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095046981 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093771797 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115993869 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091108736 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095748021 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.128184565 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095567538 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128111413 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.21524303 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096392666 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118720146 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095245767 seconds)
  done (took 2.884257168 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.096813342 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093101175 seconds)
  done (took 1.020494769 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.098135821 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09360467 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095043305 seconds)
    (4/7) benchmarking "year"...
    done (took 0.116164404 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090728744 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089547004 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10849217 seconds)
  done (took 1.522997067 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.503937281 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.262559719 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.357325481 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108803704 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150652157 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.354422351 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.152544153 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104017675 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.124588246 seconds)
  done (took 2.98414851 seconds)
done (took 13.350267397 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09633266 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.225930456 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.611924187 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114547419 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091013093 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161507051 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.292883905 seconds)
done (took 2.42833366 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349678045 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140799849 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083266846 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090508786 seconds)
  done (took 1.497012638 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086430666 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102647285 seconds)
  done (took 1.027262418 seconds)
done (took 3.362044394 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093652922 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090268496 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089870461 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108946474 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.12063792 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.087851259 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109902596 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090294599 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088671677 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.109068891 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09022331 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089814031 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.08799912 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.108871013 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089042411 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08836864 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105616859 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089985577 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089696408 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088487187 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10711515 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090139844 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088785299 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.106472766 seconds)
  done (took 3.180555876 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113227801 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092713329 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112796417 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096038438 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093799456 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.11116339 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094412724 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091833763 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111322374 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092727943 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092707398 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111134587 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092398543 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094057131 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108751962 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09463198 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093881438 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10893444 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092024182 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094857362 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.11063599 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092314889 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093846322 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111285262 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095123971 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093478826 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.107453208 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09287838 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093444254 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093096425 seconds)
  done (took 3.814865703 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102574425 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.089008227 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092635937 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115972592 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088143998 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089660481 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104736262 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088297357 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090550608 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087972071 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111018442 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089628317 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086036501 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109102496 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092169529 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09298827 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115473325 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087447968 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086886803 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089584012 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111625724 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087639478 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088893397 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108163105 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090222845 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087157759 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088937205 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108143736 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09099055 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089571959 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111842597 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093931913 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089013843 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117705883 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093771893 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090177182 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.113436772 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08905508 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091087613 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086334734 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106080635 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090460521 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086388775 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113883584 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09096738 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091986837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087153672 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110587655 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090823207 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094540839 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105820122 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08914325 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091599807 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.108036721 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09444336 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086927324 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090747118 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106054228 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092474064 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088822912 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105034263 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087721308 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095083653 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090482598 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124191989 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096560487 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086844564 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110993353 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091234688 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095391096 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110849981 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100719362 seconds)
  done (took 7.79362963 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.108699411 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101622179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090874398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.111057224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091112298 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089635984 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114138594 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091003456 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092178322 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116090334 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090535173 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091706754 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109132618 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093019153 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091375215 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091245229 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116147984 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091286728 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090228028 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110377692 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091206344 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095819 seconds)
  done (took 3.016658492 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242334024 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097829575 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139861955 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125714561 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107895291 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121705336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096979832 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09733529 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113147708 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102077843 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099544571 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114032517 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108258026 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118867026 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101619501 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101707176 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113476225 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101261471 seconds)
  done (took 2.953829038 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10837324 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092754547 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129987046 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093194645 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09317342 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113327114 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0998284 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111741001 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111035722 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093548745 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099282969 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111356775 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094239387 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092558931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110941217 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093873764 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093566154 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092034315 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119047539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097852637 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115786642 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101137897 seconds)
  done (took 3.119975718 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110047264 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091726778 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129341548 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09679381 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09295484 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111205244 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09992171 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092423659 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116933753 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094180242 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092333254 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092260317 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127033142 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092681752 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097929244 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113546102 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093280093 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09350104 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111670946 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09279935 seconds)
  done (took 2.895412266 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179597773 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126653649 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110666609 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117413342 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128194951 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109623357 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13614504 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111872305 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108885651 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139816257 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109826436 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109380149 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136794821 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115393986 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12744772 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117082313 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134696867 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118896374 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108392161 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128264113 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120541436 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126388331 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11853127 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109179338 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128113176 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109987937 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108037749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134329666 seconds)
  done (took 4.283733288 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098341317 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095828494 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091235087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109170807 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091509416 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090847802 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.109390049 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09364673 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092195429 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090739287 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.11060799 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092276673 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091127265 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.108157427 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093215687 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091766159 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09159107 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109481216 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092195748 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091311611 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.108583766 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093212985 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091543209 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09026792 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11034812 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091916295 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091234142 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108908446 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09425673 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091776089 seconds)
  done (took 3.76118387 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108953464 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105448086 seconds)
  done (took 1.073535646 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.104454207 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107129361 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089942714 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111440263 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099333533 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091309147 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118889024 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098246895 seconds)
  done (took 1.682440642 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.148974224 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.166316129 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098485923 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103108126 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163578711 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.153444829 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133651966 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095631382 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109319008 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086797155 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157178224 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08557351 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092939132 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108289172 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093358363 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098408057 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111555727 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103435176 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098767289 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111554661 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098431369 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097195534 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113545731 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104364425 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088266711 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113710297 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097293545 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104032348 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108393562 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095398974 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090645734 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111843514 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096492707 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096287018 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092361325 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162994392 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099972015 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109276668 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093730306 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095835923 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.145379067 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093586241 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093267612 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111975626 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096888349 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096603685 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.116457296 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093781189 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084408476 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106596011 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093603125 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088012464 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110559838 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094516328 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093292167 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118804017 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095453223 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089224084 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108289328 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08898418 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091189071 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107559609 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096007717 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094958157 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113021397 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095541608 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091368293 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111907145 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095517676 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093049174 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110811585 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108556559 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094481851 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114981393 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098526692 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093465423 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107800144 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09928792 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090940255 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110996045 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097635448 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120952727 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113239612 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09038423 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089094824 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.118004375 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096182288 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09541397 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084973805 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1217025 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095016876 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092983574 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106095931 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092557844 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087794799 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.11506942 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089021814 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093339821 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110123504 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098402705 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097840562 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110667614 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096835289 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097137688 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11735942 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093107232 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.136491702 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109607091 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088952119 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094726786 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117848673 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088018525 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092527834 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.111624035 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092336728 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088661525 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116740627 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094195799 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093850671 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.115305772 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096430839 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095163034 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.113557137 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093313672 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08968552 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096175715 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120344323 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095208143 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094070856 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.113340356 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094270223 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093009916 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115705693 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091419794 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099209918 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109875029 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093246443 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094556385 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.117249126 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094931321 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089447645 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111004852 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095522657 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092214144 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.115166428 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095623313 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089443492 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103888848 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095080084 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088889036 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.111734638 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101823853 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090840021 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113207481 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091534085 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099913273 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108962115 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10027279 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09520162 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098265111 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11751827 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086505938 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09107649 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114881067 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095351567 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091075697 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.113381735 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094327884 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100242469 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105997912 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097282058 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085930985 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108579861 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098533146 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09639333 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09651321 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.110334635 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.144959505 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103786935 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11822322 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092404079 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092739821 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.117062478 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093706566 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095615574 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11860381 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098683745 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090394103 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.112437791 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098751637 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089988371 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.115283803 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09256827 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094781439 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105575836 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096181763 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086471937 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11668953 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097632826 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098784037 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.116427005 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097632717 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092941248 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10181066 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.110990257 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097724407 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087055965 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.118209365 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.114142995 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099486124 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119461439 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095597328 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091256265 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114396664 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102486754 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095972599 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113630612 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097077385 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087457322 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.1061539 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100374159 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097416528 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090246079 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.113970392 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097213653 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095854445 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112013206 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087863126 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097542865 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118011216 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089629944 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09511301 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.11029645 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093142211 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101069739 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107438165 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091622949 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095788842 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.119403894 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095380709 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093763004 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117026086 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100162835 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098121449 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115608731 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093613501 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102289097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111047892 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095268266 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0915656 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096631879 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108754541 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097514263 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094341339 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.11213503 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091760373 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098809763 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120818507 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10018533 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092641125 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118153222 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10099706 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099501425 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112122797 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100909057 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090174177 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106334124 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093293043 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087771948 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096110421 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111982105 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098761227 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092813982 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114094938 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099011392 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096464555 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113030345 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099789924 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12428681 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091059573 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087443473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09266377 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114897044 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091674858 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090091236 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.116683852 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097414473 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098213989 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117412028 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091104789 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094402279 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120691206 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091639218 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100767576 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120444547 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102537746 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090641798 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.117936339 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093038704 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097940733 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10739363 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096196095 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094598231 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113832997 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092795886 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093759882 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109701082 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090018855 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091712112 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101273038 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114246521 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098860743 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093891636 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113030273 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091838637 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090713689 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121444806 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094609585 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10209726 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116028954 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089593628 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088483642 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118659951 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096335351 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100048191 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109761703 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099450786 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101630928 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099448176 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.116576441 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104296376 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102760569 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121666162 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101371816 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088254245 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113122215 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099679129 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095498984 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118581954 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097668304 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089829774 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117437258 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101011659 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096895974 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114313047 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089663726 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096273149 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119703998 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100089445 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09911713 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096508909 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117828269 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091242636 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098392358 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119956757 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096696615 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10150119 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115210748 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099757986 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092271453 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.12001181 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097637193 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090599837 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107630153 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093856844 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101109498 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089197807 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.120932237 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101489785 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092061169 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.115173454 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100277617 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091723686 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11927512 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100744489 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093167518 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124253114 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09793322 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093304984 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118884983 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101412226 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089830708 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113004415 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09580673 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102397952 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112673191 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101485998 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096006521 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099782413 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.118852171 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100793003 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100388412 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.120942833 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090325866 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101579925 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119339684 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098342045 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092680657 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115488436 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092038905 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095103168 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.121045094 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094677954 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103283067 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.121547772 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0958203 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093992514 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100506788 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115017461 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103178869 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092420225 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118602911 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089841931 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097674192 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115647272 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102371832 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092019484 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.111198657 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101882045 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100635841 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120333988 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.099486154 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101603271 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109581409 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091104667 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097910608 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112496508 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106340083 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098346818 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112813454 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096011594 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098606698 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098292528 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122106152 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090880255 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092144418 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116236174 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098828023 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09328337 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.111783391 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100293706 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094466315 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11872465 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096098372 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089867765 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114741381 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103160095 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093406361 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.11131199 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094346281 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102532629 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114273425 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094592644 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089790293 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121702892 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10017068 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103135834 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11214141 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097434563 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093792702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117753414 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106661937 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094352303 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095925519 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115207306 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101443314 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099768761 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.11036042 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094196763 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104457445 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121313097 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097859244 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097798288 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.116122506 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10261085 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10274796 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.119309387 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091632491 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091066756 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114297819 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090822765 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098299553 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120765467 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096913172 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094163547 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099400622 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120662902 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098510037 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097895836 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.110841646 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103855702 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092301203 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118293533 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090723164 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089861048 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.117543604 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102678454 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095523511 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116003687 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098131244 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098203755 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089822116 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114935178 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.101042473 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099145278 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.121732171 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095854421 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094106321 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.119752121 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106403008 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098174963 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114625914 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105519188 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10125094 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117258408 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096950335 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099931569 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.122372766 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099574689 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101959879 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113934565 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097830915 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103433469 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.122084512 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107694457 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095659377 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109521777 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101659763 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094195859 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090291614 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122452535 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103082626 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101888736 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117197175 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093931506 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104589723 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122398582 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097310577 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093671291 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115494302 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101270598 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093225283 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.120822836 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094975125 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103173101 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124064807 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102811191 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10455889 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110994698 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103551464 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098109344 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124871986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098416523 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090608781 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.111916891 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100536472 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103153735 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101406731 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.121567996 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100352673 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100989452 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118052832 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097654885 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094047537 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124175944 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10306609 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097320799 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11788867 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096953533 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097138696 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117879432 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103609994 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103994959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098290708 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127492972 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103293327 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095341626 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115195169 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098277946 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098929097 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.1180048 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101031013 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093653477 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111130289 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104020289 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103289643 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116593676 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105082495 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10327019 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115458996 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101414407 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104362861 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.122830599 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099800472 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099035033 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098866177 seconds)
  done (took 62.355615339 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156074886 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104042143 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119694888 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099476274 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116747897 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121439316 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099288346 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099568025 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12187699 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108747763 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098863317 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119965559 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115422961 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139555802 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117868429 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107962765 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11964417 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101476896 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099302962 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119923479 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115916807 seconds)
  done (took 3.314441003 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.126207879 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11406199 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133059475 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114572245 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125794041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112217977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110860451 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130744137 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113878319 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107198242 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134567409 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109442597 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128420483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107701804 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106876442 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128656639 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113000992 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126361921 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112480175 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11131776 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129550328 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111492759 seconds)
  done (took 3.51939391 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.138310884 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104588469 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096266703 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119996079 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102858718 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098705413 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122698227 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100979589 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107328652 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114469322 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091633727 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095962622 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096838055 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.12036015 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093494703 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099028274 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127810262 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103558025 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103497305 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120000017 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091948533 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10017087 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099005948 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11276535 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105682028 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104128016 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120063077 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103863152 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090293543 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100942152 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.121092273 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093864148 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089639977 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111650883 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090872403 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10163202 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122215269 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100664881 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100519276 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08989109 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121952313 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103605025 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090109574 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12085037 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100627456 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093371931 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.122816569 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100917175 seconds)
  done (took 5.977266628 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.371660221 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164799851 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10439952 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136045695 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135267471 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108608031 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.12424247 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13759916 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100700693 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124567414 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114178338 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134184794 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105048419 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105235471 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126529814 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104445383 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103837101 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122232631 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108891824 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102013688 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127662351 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107067437 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111136609 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132876332 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105003859 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101740878 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124260323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106636168 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132131353 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109167691 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105702989 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127239199 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113955264 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102009678 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123703147 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.1051273 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113499594 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125546991 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104994382 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099860898 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126333791 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106217965 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103177298 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134387315 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102845743 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.123792412 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105020702 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10064146 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.131697303 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105047413 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108663578 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133169928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10521576 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10405268 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127202669 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115969462 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102127421 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123824086 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105070056 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131025781 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102852176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105282864 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134062801 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104694147 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108079869 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134390537 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104727224 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105035778 seconds)
  done (took 9.140126322 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141428249 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107210347 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135470652 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115221888 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106592317 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129277524 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107952167 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126446457 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109187486 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111931271 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127006047 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201123553 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125374721 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111828541 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105855132 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128611692 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108244053 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127740854 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10880935 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107680706 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128583923 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115842011 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107580491 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136871855 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117884859 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124107594 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10933936 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107404478 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136041141 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108330439 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117771524 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128505657 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107369275 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134606695 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119397873 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107125921 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123203742 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10845976 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107900211 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128645888 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104725432 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11401157 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128941857 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104769822 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127249003 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110104817 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115496801 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140789997 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111999654 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132149161 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109581211 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114299223 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128368881 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108541118 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114066107 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144246364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115754719 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136377098 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107978363 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13499087 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116265083 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120974803 seconds)
  done (took 8.385171571 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110101 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101628531 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099918092 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121986719 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100662662 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099918786 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120821743 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101532744 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100444482 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099897069 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122390159 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102111112 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101150116 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120155317 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102218854 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100358243 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100758701 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121292473 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101486551 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100691493 seconds)
  done (took 3.057712885 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.116705514 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117838877 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123307185 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11065464 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103099568 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130634623 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103597147 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102907129 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122451387 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104889958 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110595835 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130793367 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103279311 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108122487 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130770914 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109383772 seconds)
  done (took 2.759001988 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.127756232 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119614494 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190315441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104958455 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124752785 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109517434 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102667348 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126756091 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102483066 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107444192 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127003378 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106369105 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102331835 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103111101 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125254239 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105856211 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101028053 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128237916 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102677039 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.188305754 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107762145 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104024928 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125072668 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106533849 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104518147 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129721985 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109607489 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102440536 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126639574 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103424837 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104378579 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130919903 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103088628 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107309409 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.12461768 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105053337 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103167837 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.12457696 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107708701 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103108647 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104880214 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126729436 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104501779 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104570785 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123189431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104323431 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100275083 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129837926 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104527464 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105299371 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125333839 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109869792 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106923852 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131871786 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11087982 seconds)
  done (took 7.264903594 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119491653 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103704561 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134746269 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102505908 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104244524 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104365638 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125976767 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105909541 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104537118 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123534897 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105420974 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104785965 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125348393 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105217471 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104065397 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124950613 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102391896 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104073738 seconds)
  done (took 2.941384923 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114649999 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102801721 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106038385 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125417719 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102934496 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102010797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123408775 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102734698 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102600758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123774663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104813437 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103609948 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10186274 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124778635 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103192031 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102676997 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124611111 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103844065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102212384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122413632 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104086764 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102214508 seconds)
  done (took 3.343905607 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118882443 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185359248 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109978473 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.19415088 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099323605 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097966465 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.13095613 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099918698 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114700829 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.122560677 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100218456 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097271222 seconds)
  done (took 2.409927657 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138399815 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140586042 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126233274 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104380516 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111036469 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129860818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108111491 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106594629 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138098475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119313525 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12834911 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116022074 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113514818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137230268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110506112 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132059804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108832903 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10743076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125186174 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124845665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107030318 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138167714 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108091791 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128899528 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109033258 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11555818 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136420799 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118751587 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129145001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116037196 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111051932 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129938905 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115797962 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139257549 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105072342 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1156068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12975822 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125055299 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132327959 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117392127 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103717567 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135295081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116993925 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112595865 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136588104 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107991276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134023875 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109001589 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107885056 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152130859 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113367399 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138189675 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113034583 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114734468 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137757668 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127345482 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140012652 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116605489 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135093351 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122414318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136747408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113561224 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115371637 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141934386 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11284778 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138162905 seconds)
  done (took 9.029712189 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152961528 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104251098 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130222915 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120962827 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137611971 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109518457 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108174544 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130294461 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109256316 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104920647 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175010111 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108620866 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137667116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118977949 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109001038 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130645668 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108696348 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11457749 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128373972 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130060759 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130152737 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116918484 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138011394 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118510213 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119854039 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135344737 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108691331 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130198886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110567758 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108123386 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134445218 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1099446 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116412229 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126522906 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117722732 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107858635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131614138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114078446 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129326461 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113975146 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117048773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146519908 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108923036 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130107789 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121928726 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10851903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131217512 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106712174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10920883 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127497897 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121161372 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141719995 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120617871 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115936664 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131502411 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109334761 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12945933 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11159588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108501107 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134014077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118619299 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108977349 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152993686 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108920448 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129972446 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118497911 seconds)
  done (took 8.99967208 seconds)
done (took 170.913649069 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156165941 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.187740408 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.146772646 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179422975 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095482857 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129209378 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148844993 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148749101 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093496145 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117194714 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095557332 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096084044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185095485 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095330332 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094150631 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119901388 seconds)
  done (took 3.028405478 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200406246 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308432322 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109180805 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120627804 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101508089 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099707691 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121862682 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102103106 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099263293 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129221331 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.1008068 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09543039 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129385449 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09759084 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099139515 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121997256 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108454576 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098662834 seconds)
  done (took 3.190999813 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.128661963 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144742924 seconds)
  done (took 1.225895331 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.136910105 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215908764 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280371134 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170602726 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120741761 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142232107 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148794794 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135011378 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188118188 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136795602 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11228815 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119848326 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.126849619 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105754252 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139635527 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09921695 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126896347 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136263408 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113951183 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101759602 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146650266 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10470864 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.126678008 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116264666 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179998413 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136769107 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103677526 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.126228737 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.103805989 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113578068 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.130195897 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118745128 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133890885 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158129013 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126853929 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154844877 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129555499 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099924873 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.134776937 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.102152201 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103847075 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124636248 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115338706 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098190419 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.125800687 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108937707 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103996651 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.126132019 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107974738 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128904236 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.1101581 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106325402 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176390568 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107768439 seconds)
  done (took 8.001035573 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.869379347 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142322751 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100904515 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.013496776 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152240231 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115046577 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.886566866 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123993889 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258279466 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.887866297 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114879713 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.136479945 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241522793 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283584405 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.262319014 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358091362 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.727133503 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136320115 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132409003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163915117 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111821526 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126502607 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14584956 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.523112284 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103394202 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100666063 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131644666 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114638387 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180898462 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101774627 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103318711 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200486416 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294941613 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211773212 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101112457 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123891538 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100279177 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18562437 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272718682 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220731478 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.19665791 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098603883 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100910104 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1328191 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121958559 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097639711 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181372076 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192944336 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192916984 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104963699 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137597123 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112619489 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13122547 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15863657 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121123179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361849882 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363977034 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10072276 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133057897 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115749351 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270099337 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125040151 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237984766 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129150242 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216749164 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123664246 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843009191 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185201507 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102301424 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107985138 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129999066 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109004121 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108447174 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.193240422 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.503497558 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11596503 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10496474 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124004427 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23667266 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101952057 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100011727 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184102339 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102568837 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133083774 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115185232 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136631653 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190339915 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251239681 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136677063 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1099077 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128177588 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116289371 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102758686 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234404506 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229667534 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179509462 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233986138 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110112545 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183773269 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187154724 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108009469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190914164 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108546672 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140998857 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109984519 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22531644 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159159853 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106475118 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129099305 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112047021 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160352484 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106976522 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111644063 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190341517 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.562051686 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187043216 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099937295 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105791354 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134812187 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179821939 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110472286 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265153919 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11088755 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186897815 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130659663 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100843454 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110907681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183504247 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110582819 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133878505 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109707656 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133425761 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259588009 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224331478 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139702396 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254263262 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19861634 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112257541 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195533867 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111018494 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190013019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111780519 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132297559 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103070712 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832539329 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139771281 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110097861 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105814619 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209350102 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101051737 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126945601 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102929355 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099268046 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813370763 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126790413 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10184207 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104255275 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130515461 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111365842 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110787333 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130750697 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15741541 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269347789 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114652138 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131907926 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103325739 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179707459 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10348555 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103124774 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124168219 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104195334 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111321546 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130435351 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106328392 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192918983 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176138254 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23278477 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.639293741 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10283923 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101966114 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267458331 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103517097 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328587263 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132059975 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.239782948 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186250776 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102003463 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364415752 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190518168 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18862953 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129544835 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1917417 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100835984 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110373715 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182139916 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101228556 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133025191 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155559418 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139468551 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114772424 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.302335462 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10417838 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25308312 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100428832 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19089302 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104522839 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109690637 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.350923819 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103675644 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119244609 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181563985 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128531093 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104579925 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.679554259 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103415318 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136385571 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111264139 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23673324 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185455473 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110411695 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136508312 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115544674 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182633919 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230736421 seconds)
  done (took 48.357881813 seconds)
done (took 64.753569803 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270810746 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178486339 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.282893004 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178556792 seconds)
  done (took 1.961311435 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.249505971 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158964033 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.200409712 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.121950764 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.206079317 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.121943619 seconds)
  done (took 2.039245529 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.182573318 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170255651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146414072 seconds)
  done (took 1.476991802 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204353769 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21602483 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330695998 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.256613921 seconds)
  done (took 2.077509835 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.268195565 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118422093 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12556073 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.208789813 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223905648 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204267631 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123558921 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174319491 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130280678 seconds)
  done (took 2.597845067 seconds)
done (took 11.13147821 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.174811954 seconds)
    (2/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.261186891 seconds)
    (3/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.359289615 seconds)
    (4/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.270809885 seconds)
    (5/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.170424896 seconds)
    (6/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.320836395 seconds)
    (7/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108783614 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.193015729 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105317238 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.372906224 seconds)
    (11/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.142568537 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113507545 seconds)
    (13/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.292243984 seconds)
    (14/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117672729 seconds)
    (15/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.192735207 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.18836904 seconds)
    (17/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109453409 seconds)
    (18/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.351527591 seconds)
    (19/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130563834 seconds)
    (20/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.164215346 seconds)
    (21/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.251002019 seconds)
    (22/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130276211 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128589039 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.269770308 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128295873 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.316386505 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.247211368 seconds)
    (28/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.253765754 seconds)
    (29/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.161791253 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106668595 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.1693662 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121254121 seconds)
    (33/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.213803424 seconds)
    (34/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113103981 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102944003 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.136684487 seconds)
    (37/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.245658447 seconds)
    (38/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.329408103 seconds)
    (39/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.224441357 seconds)
    (40/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112020676 seconds)
    (41/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.248236888 seconds)
    (42/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.25188635 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150485625 seconds)
    (44/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.146916952 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108699739 seconds)
    (46/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076605188 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.134882001 seconds)
    (48/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106654307 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118901785 seconds)
    (50/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.127518107 seconds)
    (51/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.182614295 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108486851 seconds)
    (53/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.101967058 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119181797 seconds)
    (55/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.249933002 seconds)
    (56/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080925915 seconds)
    (57/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08453098 seconds)
    (58/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099005511 seconds)
    (59/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.081981731 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.146538489 seconds)
    (61/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.183370826 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.130647147 seconds)
    (63/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.07904502 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085091561 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.178084546 seconds)
    (66/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169736411 seconds)
    (67/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077326335 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084261385 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147407957 seconds)
    (70/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086913301 seconds)
    (71/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.133647858 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125426184 seconds)
    (73/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.126954515 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07940893 seconds)
    (75/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.131943875 seconds)
    (76/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.12554026 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118316191 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121632735 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.208519352 seconds)
    (80/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.08032152 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105620597 seconds)
    (82/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.109778008 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123811868 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102784341 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.147978009 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103294043 seconds)
    (87/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080275384 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.1941887 seconds)
    (89/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084878493 seconds)
    (90/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.156448568 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.134904936 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101639104 seconds)
    (93/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081486799 seconds)
    (94/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.12533785 seconds)
    (95/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.135211871 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121078845 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100585469 seconds)
    (98/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.162029319 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110845013 seconds)
    (100/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.127753792 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.109951611 seconds)
    (102/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139059478 seconds)
    (103/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077511968 seconds)
    (104/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084896631 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.138006095 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128173265 seconds)
    (107/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111506422 seconds)
    (108/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.104097573 seconds)
    (109/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.125224583 seconds)
    (110/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110051252 seconds)
    (111/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160582239 seconds)
    (112/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.175452916 seconds)
    (113/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084541506 seconds)
    (114/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077565113 seconds)
    (115/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080112398 seconds)
    (116/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.109347113 seconds)
    (117/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.138659395 seconds)
    (118/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080566455 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127488145 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.186264739 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103038304 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.132643676 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110882295 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101766307 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.109556229 seconds)
    (126/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.08195024 seconds)
    (127/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.140544161 seconds)
    (128/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077342648 seconds)
    (129/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.185436915 seconds)
    (130/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087769764 seconds)
    (131/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080257415 seconds)
    (132/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084685745 seconds)
    (133/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.19720075 seconds)
    (134/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085114767 seconds)
    (135/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084473421 seconds)
    (136/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.07823969 seconds)
    (137/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085053606 seconds)
    (138/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.15650534 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081463628 seconds)
    (140/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083139369 seconds)
    (141/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077789892 seconds)
    (142/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100788694 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125052735 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123360412 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.124698448 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105995044 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110892087 seconds)
    (148/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086040873 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.108379283 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086007097 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103508708 seconds)
    (152/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081389368 seconds)
    (153/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.106113639 seconds)
    (154/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110808827 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107117595 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109203793 seconds)
    (157/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.109312006 seconds)
    (158/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.0783998 seconds)
    (159/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078934357 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081128692 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.123435511 seconds)
    (162/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.08129786 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104177587 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07757797 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132938229 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105475957 seconds)
    (167/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084785237 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122259048 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.129246091 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.185997923 seconds)
    (171/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.138224076 seconds)
    (172/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.082113528 seconds)
    (173/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104156857 seconds)
    (174/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077099725 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.129192526 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103521516 seconds)
    (177/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103496533 seconds)
    (178/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.136079675 seconds)
    (179/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078062806 seconds)
    (180/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077674431 seconds)
    (181/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084125347 seconds)
    (182/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078248259 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147620712 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10484866 seconds)
    (185/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078665618 seconds)
    (186/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133026001 seconds)
    (187/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101880843 seconds)
    (188/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081029958 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102539382 seconds)
    (190/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.102615706 seconds)
    (191/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085040541 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085223132 seconds)
  done (took 26.576413267 seconds)
done (took 27.56063742 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.212746134 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127819082 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110702742 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110788305 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202192016 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117374019 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150300415 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113460817 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120853527 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135006359 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102007497 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123629836 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134116189 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.182348756 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137623731 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105308628 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102628397 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.121019978 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.152829211 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126953276 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.203436705 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105073196 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121234356 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128317044 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179121015 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130103943 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111255827 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112310882 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.149248911 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112780832 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111284634 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127991875 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127527407 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124780832 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126963528 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112367191 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101462003 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084482639 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136180917 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112817722 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124390906 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136738087 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111958976 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102105964 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.137511172 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111898899 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102352084 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140021413 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10163248 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111035239 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130966815 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127995137 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110639055 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124781816 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102061317 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103576133 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146098274 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103568487 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125871709 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126537459 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105201146 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102790463 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.136822869 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104672004 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111599622 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101882652 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.140615704 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113765509 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110454313 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129512185 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103665298 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111601296 seconds)
done (took 9.98228728 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114542158 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147411495 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202070557 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213090946 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131482633 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142729862 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118549651 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126604623 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140555538 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122686815 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140205773 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.16021971 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183220031 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.145594563 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118806394 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.140165065 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116116322 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111370672 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.21025265 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127460265 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152300146 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120116533 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128599441 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14550888 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107570152 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.161965092 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113485704 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114834206 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.130168042 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117399217 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127030241 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131271856 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11128516 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125211649 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149045125 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118272503 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118308745 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140240291 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108020199 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107867989 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140652919 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122777286 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131353573 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12156216 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115314955 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146739349 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115912134 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119292323 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132565996 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116102582 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108628495 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157585254 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120871846 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123667934 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.145399896 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120327652 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120022147 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.144934709 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111503581 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119604391 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133316301 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107917096 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108194941 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153932924 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.11062238 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119981516 seconds)
  done (took 9.719840493 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132788912 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136070215 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142926059 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119176701 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112165706 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126894676 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101582994 seconds)
  done (took 1.900543817 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109874561 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187100707 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210782544 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212206951 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.207182295 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196589248 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150678264 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103004159 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137855827 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.139909393 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187292607 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241114797 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112257495 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145200839 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.214122122 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103862807 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.215808922 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103983948 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11700932 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214391639 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120021055 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160687643 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118526494 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102613456 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208666163 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103881811 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259076946 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145840324 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113778706 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116730669 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142247126 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.18342546 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.210830253 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116416894 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135949249 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187281783 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.209827299 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117327566 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.223242789 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107114842 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.208987718 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117627971 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.14550786 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119273726 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11819197 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.19861546 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123170025 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.144001126 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116977865 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.216430981 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115164236 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210649827 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115861606 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117099467 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139556274 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120017943 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124658236 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.144404078 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191670128 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14643202 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.21338335 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186656868 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.210059317 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213396582 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128477413 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.214924903 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180323362 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142789419 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11252914 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118310275 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213812493 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115740705 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.142256301 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.175498217 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147195136 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.187053877 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.214981663 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11516862 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.14409341 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107108005 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114777923 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.130159151 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17800262 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143670747 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.136434921 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120871029 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143882838 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117804304 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107743407 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152846842 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117816192 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140248964 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124154394 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118118436 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145884381 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.191297852 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140633588 seconds)
  done (took 15.969845546 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113793347 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105388356 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10881616 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131757041 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106472637 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105273837 seconds)
  done (took 1.714457111 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.149046209 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118040184 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151720479 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120640038 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187821907 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.193100156 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.221359607 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113258222 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159554372 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128427184 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.21920883 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.194836018 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.218862674 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120519488 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.223295778 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119631512 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.226010834 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140349563 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128450312 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115080091 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142786117 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123691354 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114904821 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.209271074 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118683941 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145941612 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11315951 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126099131 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152500783 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114729803 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12176069 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.165916867 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11208899 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136285025 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.199156766 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.13576514 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115689697 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120417507 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.146375602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119713766 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.221950288 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115587079 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123449049 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147100404 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113211009 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111098951 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147909746 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112050169 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.22424758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121818086 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.146083636 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12066249 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119660827 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147789244 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113548866 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112672852 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147094229 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.199849804 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.149909622 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111048544 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117719781 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145612146 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112604306 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.147417838 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120539959 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120624482 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136839454 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120993923 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115708304 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145384521 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122552186 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11942821 seconds)
  done (took 11.366322423 seconds)
done (took 41.692322898 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.613430612 seconds)
  done (took 2.654907856 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.904962479 seconds)
  done (took 1.947496499 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.576544075 seconds)
  done (took 19.653251971 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.439159623 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473678567 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.16263571 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148453815 seconds)
  done (took 3.267841181 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.824985187 seconds)
  done (took 1.894736093 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.329616698 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23623711 seconds)
  done (took 1.615502054 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.74272307 seconds)
  done (took 1.806912485 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.516593049 seconds)
  done (took 2.565198355 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.292921464 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.243527974 seconds)
  done (took 1.601017405 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.617290483 seconds)
  done (took 1.678473715 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.841076106 seconds)
  done (took 20.906503729 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262466779 seconds)
  done (took 1.329990167 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297066969 seconds)
  done (took 1.368138832 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.623604077 seconds)
  done (took 4.691892667 seconds)
done (took 68.036665846 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121970624 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117454697 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.140652228 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.116960573 seconds)
  done (took 1.550588732 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.130123225 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119064972 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145439543 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118930655 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124772818 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.144793847 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119370153 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12021995 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11727452 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147596353 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11934427 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116869306 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147451383 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117774971 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115873589 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146381207 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122604101 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118041288 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145236618 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119766906 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119195709 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146453143 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123080863 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120660934 seconds)
  done (took 4.136271515 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121820218 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110140656 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11022481 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13363934 seconds)
  done (took 1.548722509 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.132459456 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130021906 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154147303 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126312113 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12967799 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154748923 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118624507 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114927291 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143671462 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128437668 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132461257 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157199741 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130380403 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.144343669 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130406824 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112729843 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.143779847 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130731378 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124192741 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151731823 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119267946 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124013882 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149474966 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128988113 seconds)
  done (took 4.281234879 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.198402414 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129556766 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174920018 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161433988 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177374779 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116843173 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.169462336 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126014739 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125065881 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145141542 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121898517 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161658613 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150779481 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120176486 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117786545 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150270055 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131253736 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.149030186 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.165866836 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123702294 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150538329 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130480414 seconds)
  done (took 4.275060314 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128400814 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109975194 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.130609978 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11155119 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121504097 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.13641614 seconds)
  done (took 1.818780692 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115295524 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104916844 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103633646 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128779506 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107276234 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104052059 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127890974 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104620583 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103276256 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102838793 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130556978 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103803759 seconds)
  done (took 2.407771652 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.33956775 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109043362 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135816826 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112424919 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114326111 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106044834 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.14695628 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109265372 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.272566827 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103872738 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133145434 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197613711 seconds)
  done (took 2.960229514 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206110437 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148821507 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252164899 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380250647 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187077958 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187218378 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281514933 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191340122 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202465216 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137607148 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212171364 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160459405 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18087267 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186085152 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165274151 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158060664 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188544882 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205244228 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169412794 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236902465 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156647792 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201054185 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188160835 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176281719 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138679302 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187689741 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118850581 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152102818 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166092009 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189493916 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172854481 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176102455 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138966193 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214778493 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253597652 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198761515 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271679364 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133134637 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.192825056 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189419726 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258321985 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167586983 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213712159 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152583615 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128070078 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212344387 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177485723 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183671749 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158643859 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145629297 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20841672 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175889142 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202256218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135752464 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322673856 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161820453 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141425294 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206592451 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185374569 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226120962 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203045502 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123746082 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202414047 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216718295 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21208425 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169218375 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162239956 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153534043 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163767354 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231703157 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207171806 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159443065 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.232270231 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158383868 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171179105 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195859109 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152791061 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231732752 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197493009 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119465653 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17431699 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134734386 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125306387 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.212386597 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121264647 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241690662 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130322376 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341940277 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209593913 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154874324 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187742028 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185196685 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163571156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172369145 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102494344 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142087414 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186931741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156002532 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15509724 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155810687 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164903129 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125422719 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150598957 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149466438 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166926119 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159997226 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160512015 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195103395 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130221676 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203821545 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146492417 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.188292336 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16475169 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217958109 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156353125 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13395272 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24494368 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168953435 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164196697 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172937274 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221937193 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172661671 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135347748 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188329644 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192228511 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169272221 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19759388 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166010457 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1347037 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.165164232 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172123762 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185737141 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153327903 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154265163 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164361106 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216886223 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125412782 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166007197 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179316369 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161037218 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124698345 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161032308 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137078344 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140535413 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.176289572 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137979672 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17959087 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164808655 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191298581 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156450284 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161793415 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170582158 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15855945 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167389324 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175852341 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119429937 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20038794 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19445319 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156398751 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178611397 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189136277 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210655109 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171061715 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157704291 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181947977 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15579536 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120267725 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18707272 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170986984 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189156378 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18538209 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209512961 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.19209005 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187372869 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149240613 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193846205 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184137569 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18380297 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14253452 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198007244 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167792233 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148340952 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12383049 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128569411 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165632535 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129899497 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162321615 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177843631 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189352089 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20486911 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167608779 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165021645 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19154575 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151923429 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157985261 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.201571427 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137616931 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21520837 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214422128 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180529732 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166358928 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162905285 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.145507758 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127236068 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131541988 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188347748 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137943722 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161404167 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141959507 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217365925 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170661301 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174607547 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218639375 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164838543 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228609938 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.11981203 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.187075652 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167203183 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19507039 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182564596 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1612838 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161368297 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219143226 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140659334 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219243895 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193243562 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178374785 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222823067 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162860724 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159316435 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147604617 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189831324 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137278603 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189697532 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144958011 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157026966 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152173931 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136395637 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167374552 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211003039 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142164633 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20556648 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157325807 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198497912 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123766764 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169507877 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175757168 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172859897 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104621996 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19570466 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192455353 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177361539 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153969169 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19994286 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129425533 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341286548 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212937689 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175159343 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162401693 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138439509 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197230902 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161702794 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189973673 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185109593 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17020296 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233072789 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170045862 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167925052 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133237304 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147572108 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178887348 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138630107 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181151347 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160954369 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172230486 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211708854 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137811873 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19326441 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175771223 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.169512503 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150949693 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137355195 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252909167 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195401982 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171634566 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192825416 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164449149 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210517505 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123456683 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153956536 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133573327 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213468544 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13008032 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202005642 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180369437 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214380427 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202422731 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160852351 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169552047 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127027664 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195014742 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149012937 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214552591 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134191657 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166090349 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21377904 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127565938 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129637431 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189134054 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309228431 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148548546 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198786372 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107329587 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302048307 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130505603 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131698819 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191818601 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16831313 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160859335 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181464997 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202500795 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140104731 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192044956 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135628745 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210211097 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214750787 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166659652 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202355767 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144190158 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190784331 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159313755 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202632893 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144718441 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.176879925 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156193933 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223312593 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207504569 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133005918 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194110656 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168136275 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197638558 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172795019 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167478767 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181087255 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156152116 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166300784 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166533228 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128848717 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185249286 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.180136793 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158881076 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1745068 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198335038 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130322486 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15570887 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146831886 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192980378 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140351307 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128951462 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210607463 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155647065 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180604058 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235456506 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129155497 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19416142 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147062549 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157038647 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140065005 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143510737 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160235635 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174567057 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210109959 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132668538 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203503213 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164656488 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191260185 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156371276 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172137094 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.328178899 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155143659 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189639034 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179000628 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194953122 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179592414 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172747244 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197188114 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147210236 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192099784 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173243515 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219149567 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191012821 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166116568 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159397486 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144558807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137375813 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163360606 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151276361 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195967512 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140723176 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162457086 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167745935 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171993058 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14761055 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140774404 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227363704 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177086488 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185166479 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215551334 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137265071 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204159277 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203198862 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130021861 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19111851 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170113276 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170787006 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152746485 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133035383 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166623133 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210486806 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.156273615 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158356852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20167652 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167318035 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200892881 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134372718 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206292797 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141085529 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204511712 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127028181 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.18262493 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17181573 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164105654 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127537044 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198860397 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158669465 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192721505 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142076961 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177074355 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222973554 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123370216 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16312375 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309769708 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160529996 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223131751 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136531962 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165148143 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146091552 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156382061 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.192306882 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196324831 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132056347 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129123561 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.173419509 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158036335 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170576486 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168315095 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213190077 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15908562 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214002686 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132451232 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28026727 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141312462 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200465361 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116989865 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127324635 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169340738 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135272153 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170792034 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211471331 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214354333 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191888913 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.148448975 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163640467 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128163231 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130275488 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194265526 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149778009 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19829849 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14706288 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131367904 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142550148 seconds)
  done (took 86.25762864 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168969911 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15409923 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16964229 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224010181 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196079707 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293505323 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231157718 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246831502 seconds)
  done (took 2.848663874 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.126195686 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161097868 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142422693 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145184882 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11137935 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.445571922 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158071926 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121835657 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161911964 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151819132 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136492159 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.553922004 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11694519 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144850486 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123521431 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136855023 seconds)
  done (took 4.09216016 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.207446608 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555320073 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.105047673 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.299014256 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.263010752 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.203081727 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.762144231 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.197202544 seconds)
  done (took 12.751684316 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.15710189 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.142987807 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.373387494 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.272764433 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.205438942 seconds)
  done (took 2.320475044 seconds)
done (took 132.305033935 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128417922 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122404562 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12125055 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152957206 seconds)
  done (took 1.679163028 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.182484433 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089773112 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092695586 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117601218 seconds)
  done (took 1.650327686 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.514704941 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.0915859 seconds)
  done (took 1.799143299 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.160039257 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135911927 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165161597 seconds)
  done (took 1.640566714 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.149921066 seconds)
  done (took 1.320156651 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.132809518 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130765342 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.23092786 seconds)
  done (took 1.669608494 seconds)
done (took 10.929008326 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126957531 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.922478841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434345338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132568284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710698249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428890591 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.421573077 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175362584 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175073656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138341937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131294554 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687822713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.43738446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.870411413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.4177991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.872229698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692403756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14533711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11055851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.426919693 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110792793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110689824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111164143 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.757217982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419065367 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108663455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912171451 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108311748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140146665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.400186412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110139309 seconds)
  done (took 21.017910712 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124776326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165283094 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145944058 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112862866 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113394878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139978379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122678618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12197119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204576506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109187785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161522002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109782366 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114274943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139181391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135159986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109480414 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141684449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113772359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117437726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141295536 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132404033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109693853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140910435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113310881 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108842486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160166126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111566551 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121452511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139152841 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114787358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114964064 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140792022 seconds)
  done (took 5.329717305 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164361671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176159614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148368119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148112491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187240948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112254324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223763791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149659928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207511182 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112170349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131306273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138853961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152185223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110083082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166430475 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110648306 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113500026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143236204 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118587058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139918206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133868378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109126322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.14043611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113703786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110331171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161200727 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111551645 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122838106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139179409 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115695901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115765768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139489011 seconds)
  done (took 5.641166154 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132082751 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126132835 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13167776 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162763166 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120300384 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124188345 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15495511 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120515598 seconds)
  done (took 2.248233056 seconds)
done (took 35.410513852 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141988638 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127991654 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128702659 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153254649 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.188958799 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147346028 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126581572 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116459677 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151835882 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131025269 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109876888 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115987244 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.159124396 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120294278 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22003076 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123522643 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.225649966 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.192183712 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147601535 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124934359 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118151457 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.227369128 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121092493 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143352133 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.194343742 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113543543 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215339834 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119675525 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149579479 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11388155 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.221335501 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121876379 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117654448 seconds)
  done (took 6.096630735 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.214864734 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119809054 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149246189 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.1194528 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119838733 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147557325 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.211708285 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148538212 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119402878 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118176176 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118263653 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224651268 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124443592 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.146232364 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124227588 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109231561 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.240975953 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121813748 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110753945 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.124405022 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11629908 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118241568 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.253925768 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115258904 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.147049205 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121112866 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122552354 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124410564 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.152265395 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121319907 seconds)
  done (took 5.499280018 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.132317756 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133242538 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165601886 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.188773776 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148353913 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162005017 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139586224 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13418255 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172328934 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114570474 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127770388 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179654285 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130431912 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122870741 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149221913 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132145634 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136179364 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144425327 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122122773 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129820032 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165339624 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131753102 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135663289 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151993538 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112668273 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121063238 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154128456 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127910943 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121485454 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157650536 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116483869 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116470278 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145814426 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148737242 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11410918 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158040012 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139213956 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126030287 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157292523 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145579864 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116891138 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146859412 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140050989 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.195702003 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116551313 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126877393 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.153780308 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129907426 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112680123 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131545702 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.186643118 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11386534 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.165534718 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113954784 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112257535 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121738804 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14463809 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116973617 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128299607 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146773652 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140108558 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119653846 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154921815 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115967404 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124806013 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142945524 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114234637 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117097775 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.168809953 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122681715 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.14948139 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.143552018 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126917549 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126706529 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.15168808 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127943667 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113937038 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124253651 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154959111 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12039276 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125062719 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147865895 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118392733 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129562174 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164738496 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12903487 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125795699 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158013432 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118100512 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115157705 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16148329 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116382535 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119409194 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156520262 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115261015 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117580759 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156016274 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127144853 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111917935 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167147671 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120712671 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113822445 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138920057 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.149289486 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119349547 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123955918 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186377952 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11390225 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124952665 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158338034 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113789594 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121038381 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148095619 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114584893 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130936562 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.161226141 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122070198 seconds)
  done (took 17.136732201 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.326409023 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.275518025 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.216339881 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.247775508 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126647073 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.240339329 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.304347341 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.307002632 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114032168 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184768211 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165917305 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.275468765 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145396042 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144654587 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.30897173 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.360736125 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175142368 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152149865 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181076713 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128960314 seconds)
  done (took 5.589382153 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141995998 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148848514 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167838856 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142070719 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124651735 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161061808 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114265528 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135863169 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156644619 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124466675 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116204476 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162044376 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127229728 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131193196 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160760371 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145531329 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121786402 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151029219 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13682112 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118552088 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132044077 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140425959 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.15293016 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.13793009 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132042322 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154044208 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.114321038 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119242554 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121142358 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154462629 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119540645 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135447119 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153494873 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.1048427 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125090195 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159495436 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.121953856 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.1169792 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.148344514 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11944826 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129470864 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.15661489 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124811965 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098885873 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132628895 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.137924394 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.131964169 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126887031 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105507444 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164411329 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12696363 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128708821 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153793722 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137531557 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120799629 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.16143942 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126159031 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128109678 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.152032844 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113849391 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111931301 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.14843041 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124374865 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128511801 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.155820889 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136065164 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130138986 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.143927954 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119909147 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118137364 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.148715044 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129896122 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134313067 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.155206248 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122182591 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126606184 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.153181974 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095458062 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123967416 seconds)
  done (took 11.835879276 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148849357 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122959601 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161212916 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.152115001 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125963262 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149437038 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125003266 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134425016 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126564486 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162014596 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128585536 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127686732 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168610665 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125485545 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122066827 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161659851 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126902823 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.180645441 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135180484 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141579992 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157747695 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120650422 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127284235 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156404095 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145992284 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126088488 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172386461 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128245471 seconds)
  done (took 5.180958474 seconds)
done (took 52.520096283 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.338240171 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.553006756 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.313166576 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.313132555 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.331572913 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.324318261 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.311154457 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.317156044 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.870068958 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.283127894 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.315064369 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.313227415 seconds)
done (took 29.789958047 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.423541108 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.871590248 seconds)
    (2/2) benchmarking "String"...
    done (took 1.598209971 seconds)
  done (took 4.671346251 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.3022537 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.305294929 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.55698342 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.303798551 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.303923691 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.321218152 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.30346984 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.315600514 seconds)
  done (took 16.610555208 seconds)
done (took 27.206929492 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.361855143 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.479863816 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.537343948 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.300955813 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.30607283 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.330474446 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.302958198 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.326298215 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.312503992 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.305243206 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.72362881 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.564051807 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.304686694 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.671769267 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.301304921 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.304150508 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.321031599 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.523568343 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.301955674 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.336730385 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.281306228 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.281005095 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.340289295 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.309515808 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.312181889 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.305536857 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.348225662 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.314204427 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.47224387 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.316039505 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.341814371 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.303649996 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.339739134 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.30893347 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.306798749 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.313360688 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.467368247 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.315123674 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.281946733 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.333051875 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.471782699 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.306546248 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.303017141 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.314425935 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.308741904 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.353294739 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.301284319 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.415790095 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.32428372 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.314365959 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.37656692 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.671403548 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.310806791 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.312270936 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.30593162 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.506057879 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.322065464 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.358609741 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.331656029 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.316752083 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.304416229 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.303584593 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.353398428 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.306818031 seconds)
  done (took 150.202889115 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.30802602 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.311099583 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.309143084 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.374592945 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.309813679 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.307782919 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.308452423 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.308541705 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.308895126 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.330608028 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.310024014 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.30500812 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.311065569 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.249493678 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.318427113 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.331586559 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.310683109 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.327485638 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.316890759 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.309341371 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.309838259 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.30998324 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.323957889 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.305813539 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.307021377 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.391776295 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.316427715 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.311081647 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.322060619 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.309840563 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.354963568 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.314550342 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.944102149 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.160417797 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.31212959 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.33167322 seconds)
  done (took 84.097296204 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.314099923 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.311172871 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.309593112 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.346100353 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.311725714 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.909295521 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.910808063 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.289579408 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.034975896 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.728101576 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543123304 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.30827977 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.405745501 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.31960111 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.308799294 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.325759295 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.335922825 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.313273923 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.31196794 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910611756 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.32390605 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.492262736 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.48777671 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.324145999 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34709917 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.707420562 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.308986526 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346692438 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.648596513 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.359679337 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.308675539 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.670885593 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.439622949 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421362484 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.310073881 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348260995 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.311890999 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.599989197 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.311077118 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.313404487 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.316275632 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968623301 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.313835093 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.915053638 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.312775566 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.298163233 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.315361597 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.315658836 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.193895739 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.024535526 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.314711907 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.314891704 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.316005165 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.314314139 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.314523539 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.348142619 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.313863954 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.314836764 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.213097091 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.409440216 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.315409556 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.318220408 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349481728 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.314617638 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.444502741 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.312660732 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.673223269 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.369208583 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.408597325 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.905693825 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.312661973 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.410569073 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.42816435 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.310610552 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.313066379 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.311531395 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.312612199 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.424934595 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.307830052 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.007667685 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.486637631 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.325447571 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.709171612 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.411111286 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.307895775 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.656584609 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.311007829 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.310258611 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.014393543 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404974586 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.305657592 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.308710257 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.312175049 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.005969727 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888416111 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.545995092 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.311297581 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.811625092 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.307459095 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.307103889 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.160821198 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.85729713 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.948705527 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.307979939 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.307021316 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.420230861 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.47678597 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.31766094 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.305511027 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.628149501 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.306014969 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.363392692 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.307253596 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.706553913 seconds)
  done (took 386.295384054 seconds)
done (took 621.794469589 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.197361227 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.132282928 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.282313464 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.150806138 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.128668477 seconds)
  done (took 12.088146774 seconds)
done (took 13.287790751 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495841363 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.499451399 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.366035266 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499260183 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.337802341 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51325302 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.474752564 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.319855147 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415207446 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.382501378 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424828142 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.355158436 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336702973 seconds)
  done (took 19.617385078 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.60716148 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.314502626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369493817 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569172844 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.348777311 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.607777106 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.634911421 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.313381929 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.452744071 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.330639607 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.32934151 seconds)
  done (took 19.077280203 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607943517 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.312761965 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375642027 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573697374 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.351418619 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.59966274 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.620902701 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.313876214 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.469515411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.330801447 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.327014221 seconds)
  done (took 19.081459018 seconds)
done (took 58.973987818 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.344723901 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.400357987 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.337791909 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.323835299 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.322352156 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.322613409 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.326353702 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.32113102 seconds)
  done (took 11.898463575 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.325289755 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.319953994 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.322774456 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.320826098 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.321994271 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.320646159 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.322032291 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.320610736 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.319635515 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.324065312 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.323000389 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.320855563 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.322844861 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.321774275 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.322377861 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.32280993 seconds)
  done (took 22.350399369 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.327240898 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.321740698 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.321709777 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.320771146 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.321916604 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.322786325 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.325219704 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.323187502 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.322988281 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.323695823 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.322805838 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.324365535 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.322768337 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.324510745 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.323003377 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.324475102 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.323806141 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.322794986 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.326285002 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.322635004 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.323415914 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.324760415 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.324387052 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.323927852 seconds)
  done (took 32.966452681 seconds)
done (took 68.414465565 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.311203865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.32136008 seconds)
  done (took 5.834122845 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.382821677 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.380989494 seconds)
  done (took 3.965106666 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.324927337 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.323825047 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.324839976 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.323965727 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.324115897 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.325436701 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.325023028 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.325916554 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.324157279 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.32475195 seconds)
  done (took 14.448006597 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.326876396 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.324745332 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.323890558 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.325171648 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.324356366 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.324544647 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.327137052 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.324534025 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.326507186 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.325693601 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.326053924 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.32723403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.325532407 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.324919808 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.325210955 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.325155473 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.325858294 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.325486125 seconds)
  done (took 25.06242876 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.341504229 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.34431219 seconds)
  done (took 3.888566614 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.456608601 seconds)
    (2/7) benchmarking "second"...
    done (took 1.369161385 seconds)
    (3/7) benchmarking "month"...
    done (took 1.431246785 seconds)
    (4/7) benchmarking "year"...
    done (took 1.423430535 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.368346344 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.346821557 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.368586486 seconds)
  done (took 10.966844794 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.329635659 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.53310049 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.654647068 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.330289404 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.327751787 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.33163714 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.524448451 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.330324609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.33070526 seconds)
  done (took 13.896151381 seconds)
done (took 79.261177166 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.316406203 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.361225823 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.329610084 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.326290265 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.623475156 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.324907356 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.315241963 seconds)
done (took 16.801991088 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.298247661 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.298889306 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.290736741 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.323836834 seconds)
  done (took 10.415630358 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.31142035 seconds)
    (2/2) benchmarking "read"...
    done (took 1.631620967 seconds)
  done (took 5.147869177 seconds)
done (took 16.76764528 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330122703 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.326593063 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.327816905 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.328708215 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.32700231 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.326112263 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.328387777 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.327008603 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.325158571 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.325706631 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.326677594 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.326067008 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.327227709 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.327804427 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326266108 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326899586 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328058269 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326318983 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.325715999 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327874312 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325811285 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327171188 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.32709045 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.326850974 seconds)
  done (took 33.053010204 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.328870233 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.326506901 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.329630306 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.327460961 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.326479905 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.327232706 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.327260674 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.324835437 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.328010421 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.326746637 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32754703 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.325392649 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.326996318 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.326443396 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327787623 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.327702137 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.326916062 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327978517 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326231487 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.326962023 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.328493002 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328049694 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.328314721 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327747695 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.325951569 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326952649 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.327504042 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.327347943 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.328019204 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.327974405 seconds)
  done (took 41.02363315 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.332245256 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.328192633 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.3277847 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.328717764 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.325605595 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.326416617 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.328588377 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.328590859 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.327294486 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.328823953 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.326521245 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.328169252 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.328481793 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.327009586 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.328295908 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.327793224 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.330449729 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.328373395 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.328132875 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.328283803 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.328012042 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.32890172 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.325888405 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.329884477 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.327197929 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.325970736 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.327797069 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.327424427 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.328038191 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.328835227 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.328471935 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.330514053 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.327659097 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.328387037 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.328633017 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.330164469 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.329520433 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.329958655 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.329231951 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.330208199 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.327448289 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.327835424 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.328391317 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.329120446 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.32842599 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.328951747 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.329405902 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.327966138 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.326476872 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.32654291 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.328374919 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.32965534 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.327496799 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.329236573 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.33095483 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.328815325 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.329567626 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.328494452 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.328197856 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.328630308 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.329756564 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.33091413 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.328834672 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.329122916 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.329399421 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.328922934 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.329578838 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.328940438 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.328633112 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.328728976 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.328907072 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.328448352 seconds)
  done (took 96.861583688 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.331188245 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329094476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.32946432 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.328408855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32875628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.32808164 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.329787206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330248128 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328750921 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.330811675 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329604469 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.331053763 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329289703 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.331795005 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.3296557 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.328608867 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.330151901 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329578448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.330331509 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.329222196 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.328446517 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.330911151 seconds)
  done (took 30.460503071 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332189472 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.330628877 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.330766502 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.331398196 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330947843 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.331378511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.330190104 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.332372665 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330892693 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331456878 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330398264 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330828459 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.333262478 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329243144 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330928194 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.333872432 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33124431 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.331946662 seconds)
  done (took 25.171810479 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.333064289 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.331197981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.331707376 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.332061011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.33154775 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.332208426 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330659831 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.334105902 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.32965597 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.331037112 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.332560618 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331936517 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.331939259 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333787303 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33249624 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.332802929 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.333466954 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331698869 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.334462267 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.33179405 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.33248665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332874958 seconds)
  done (took 30.517579131 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333695708 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.331323232 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.332168194 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.332822504 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.334292583 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.332634012 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.333147222 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.333388223 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.33392098 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.333173812 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332497269 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.332819228 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.335256518 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.333584744 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.332899906 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33366999 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.332632614 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.333002994 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336673178 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.332695297 seconds)
  done (took 27.876269297 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336497855 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333275795 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.333722811 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333793115 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334622194 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.334009284 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333770543 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.33579849 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.334862343 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334563639 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.334821433 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.336028207 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334098654 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.334013247 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334233253 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334873874 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333999321 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334179204 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.334970269 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336408358 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.334382296 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.33404168 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.335972902 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333818664 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334807022 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336041706 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334419131 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.336862772 seconds)
  done (took 38.583512377 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336206458 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.333650147 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.334980425 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.334141323 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.335302018 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.336765787 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.335936835 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.335857581 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.336165104 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.33627884 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.33496241 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.335701718 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.333846192 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.335351695 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333860798 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.334987065 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335905334 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.335485329 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335403061 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336125587 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.335466793 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334788649 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.335739566 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.335317839 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336648875 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.336907016 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337224086 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.337571439 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336252296 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.336299915 seconds)
  done (took 41.281282698 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.355832907 seconds)
    (2/2) benchmarking "in"...
    done (took 1.355259121 seconds)
  done (took 3.921877912 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.337509267 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337735247 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.335190688 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.33651774 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.337089283 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.339079929 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.335890912 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337765185 seconds)
  done (took 11.909200713 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.329322722 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.337586967 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.335562795 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.3367969 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.339347316 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.327692794 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.334787128 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.343994785 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.329206131 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.330303368 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.331283292 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.333078309 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.331967209 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334927574 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.330949944 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.333511314 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.341335309 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.338195965 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.339662536 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.33998784 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.337970905 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332647394 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.335227564 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.341604206 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.329414543 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.338739445 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.340635623 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.342052637 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.331767512 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.336220788 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.333626076 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.339357462 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.337452611 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.339891872 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.339016595 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.337185157 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.339108825 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.337968295 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.341286634 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.342635884 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.339451014 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.339123678 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.331962415 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.336173608 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338548428 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.342009894 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.338093175 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.338467873 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.331065513 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.332927308 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.341158088 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.330788984 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.341229884 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.335974189 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.338995589 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.342336621 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.349754864 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.332329735 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.333350813 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.339294088 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.348069298 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.34242826 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.340455154 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.345762405 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.337129597 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.339101757 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.343021268 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.344495016 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.339515884 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.338682266 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.341257795 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.350609927 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.344264287 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.345847786 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340464061 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.34107932 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.333420162 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34507616 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.343175024 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.340103231 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.344717802 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.34025294 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337344696 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.339785808 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.337895387 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.342290117 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.34041605 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.340193947 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.332625639 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.342905556 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.349811551 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.340108025 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.331965467 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.337425923 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.335118694 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.341179093 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.330889022 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33557733 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.343563904 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.339813998 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.338893692 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.331616374 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.337802511 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.346956367 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.340962854 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.341333829 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.34829154 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332839612 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.346047748 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.347707169 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341429477 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.333249313 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.337523434 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.343337565 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.333781753 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.340262485 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.343287607 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.335894364 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.345351159 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.340544002 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.336701901 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.344142973 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.34848318 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.341066409 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.333392709 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.344848513 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342665484 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.341014496 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.350015672 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.340884603 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.342556078 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.337801973 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.347263786 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.335179384 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345316807 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333561185 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.346118086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.342051475 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.339619313 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.338321382 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.34396564 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.340462834 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.337913499 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.341648132 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.346082957 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.337067932 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.351829891 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.342000587 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.340099139 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.339038882 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.344783099 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.337225216 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.334064197 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.348148707 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.334197925 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.342378873 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.335274901 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.345658907 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.342943875 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.340845645 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.344356147 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.329578904 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335396031 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.343638399 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.343602191 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.343740483 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.340632891 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.339778948 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.343304439 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.333001518 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.343538159 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.331791692 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.33315622 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.343187141 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.343019488 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.342197514 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.336269182 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.349558127 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341086404 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.34285691 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.332831346 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.338039255 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.346449847 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.345222098 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.349188558 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340508307 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.340267679 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.337630466 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.337295392 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.34393064 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.337732405 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.3480308 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.343752548 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348689482 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.338915435 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.345034878 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.332327541 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.345340075 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.335969567 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.350031016 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.344406923 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.337156133 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.334991509 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34753966 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.335774999 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.344684918 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.330515998 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.341813446 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.342523636 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.341182365 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.342469255 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.334882039 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.3425442 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.345066299 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.339951447 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344705875 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.337247396 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.347468548 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.334528263 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.339903953 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.351537913 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.34056189 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.345648359 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.352137206 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342826992 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.350452306 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.344660934 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.338909027 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.347220561 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.342050234 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.345753276 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347978868 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.346510548 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.340294577 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348741136 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.349688723 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.3378595 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.344770348 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.353481413 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.345149129 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.337797078 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.348418777 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.346823646 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.340283979 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.34358689 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.338493106 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349421819 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.345814783 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.353244843 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.338653408 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.349797421 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.338040613 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.350270992 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.341551381 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.347215614 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.343562154 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.34730359 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.355099247 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.344422194 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.337743349 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.347140064 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.340867305 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.34545719 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335959073 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.346371582 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.343867673 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.342578838 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.343739989 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.343398312 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.348792567 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.336784274 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.343351651 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.337908073 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.353521332 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.361537125 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.347859859 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.351359275 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.350062318 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348598884 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.34916534 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.343094198 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.340772584 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342993113 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.342000733 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.341711645 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.349764143 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341897847 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.350702812 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34565832 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.34943692 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.348866235 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.347946594 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.340304009 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.351201736 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.346396603 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.344154926 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.339537465 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.348369962 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.340652795 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348690162 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.346959183 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.341885548 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354233335 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350798303 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.343376625 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.343450468 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.34224828 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.341978042 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.343465167 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.353406242 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.339723898 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.350886059 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.338982645 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.344431612 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.343175994 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350080331 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.358767525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.337919848 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.351719714 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.345632841 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.339103311 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.343464316 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.350540112 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351410773 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.362277638 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.339948149 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.350205751 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346425341 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.346651218 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.346600866 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.345701667 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346359175 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.347981053 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.350867764 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.355041177 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.344223281 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.349242528 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.356638592 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.347192761 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.348605982 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.339014798 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.349419121 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.358740506 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.341612154 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.343942182 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.344525941 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.351619876 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.34725975 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.34823805 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.350476375 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.347329274 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350693468 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.353699028 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.352649962 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.347366014 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.350423628 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360009469 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.350200459 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.360661561 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.342314665 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.354085766 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.348702565 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.34409452 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.346026948 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.344609108 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.352877548 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.340660112 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.35311791 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.348308259 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.34474038 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.350110294 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.356511655 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.342630193 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.349620332 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357015283 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.340464626 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351175851 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.348530145 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.342513953 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.351205092 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.347677708 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.342294779 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.347254988 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345732472 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353588189 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.3429268 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.352757071 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343555321 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.352758704 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.349943065 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.349969833 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.34984622 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.349938728 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.344803941 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.352733819 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.349559469 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.363659557 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.345488076 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349408222 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.345189386 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.355027507 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.360769009 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.346950053 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355046613 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.350563596 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.343752611 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.349074379 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.354642791 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344460453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.355101833 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.342231356 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.347979516 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.346008156 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.351892493 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.356015014 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.3566939 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.344246957 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.345708676 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.355215702 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.351752274 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.352195272 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.347426471 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.358143664 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.34642752 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.345553219 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.353199355 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.346785968 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358712899 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346228619 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.348974954 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.350063193 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.355602535 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.352249114 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.353698755 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.343984892 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.346635736 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.358402157 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359552413 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.350099249 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.348159797 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.356532654 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.345426624 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.352293222 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.349689318 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.349717789 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.348761815 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.360604983 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.348753911 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.351473594 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.349675935 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.356017235 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.358767713 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.358282555 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.34620716 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36049146 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.365022805 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360530901 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.347446624 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.350953562 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.350766405 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.357302784 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.356287828 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.347688229 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.36322745 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.361930397 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358522539 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.353857764 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.357349771 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.348563194 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.35527323 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.352362336 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.351268774 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.363799296 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.351088228 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362678683 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357923664 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.355359247 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.348665068 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.350194216 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.349907532 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.351239759 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.358239748 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.354849723 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.361704359 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.355076515 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36229648 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357047703 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.356818926 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.355363605 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.345530482 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357811633 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.346720559 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.35925102 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.358301413 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.352098055 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.358044158 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.354903541 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348384585 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.355811588 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.361518426 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.358156108 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.352164278 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.357821026 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.362676567 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368609528 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.356478974 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351934506 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.354815995 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.363457778 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353793966 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.357860181 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.353951589 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367096158 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.366200254 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.351712572 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.355411367 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.36255833 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.368589279 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.35855758 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.360078011 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.353366569 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.357116032 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.360834604 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.357422388 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361650137 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365522112 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.355920303 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.361983303 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.354065693 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.356792912 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.359644758 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368244218 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.359238465 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.35342603 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.367728601 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370382398 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356784879 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.37409798 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.368072758 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.360845872 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.364446572 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350875232 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.363123028 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.355755528 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.365206734 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.361595366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.362114162 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.360290171 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.3537074 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.36312525 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.367991865 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.369395622 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.359583646 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.352690855 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.35372301 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.363964901 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.360648905 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.36324815 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.361247158 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.359920387 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.360271378 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.354298994 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.37056415 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.376027499 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.366672093 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.361630142 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.361788751 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.362552235 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.366659131 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359216193 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.365415317 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.362182239 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.361278042 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.356978013 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.371560164 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.362024933 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.355560528 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.360156564 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.357706285 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.367833831 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.366488826 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379809705 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.365056014 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.367478565 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366631198 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.363314198 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.357044736 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.366822784 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.363731556 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.35841494 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.360247111 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.3676512 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.366021622 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.362264176 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.357701223 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.368434941 seconds)
  done (took 804.478250321 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.36491839 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362683266 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362824718 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.362534429 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363250696 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363805975 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361246851 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.362402273 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.362605823 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.361130215 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.361712881 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362844045 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.361486113 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364224437 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363462082 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.36326007 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363236121 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.36513851 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.3640259 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363727998 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.364080334 seconds)
  done (took 29.856271829 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.366522803 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.36527786 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.364147965 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.364722271 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363717569 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.364419309 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.365137747 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364994293 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.366005393 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363663768 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.364163387 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363916013 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.363576858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.364864516 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365652336 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364329677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.364527182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365027219 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.364940929 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.366014129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.364246547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.366250417 seconds)
  done (took 31.259192388 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.367286715 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.364988232 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.360168857 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.369539037 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.367118492 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.365929175 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.367279838 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.365425439 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.367660382 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.358114923 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.360281272 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.360262208 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.362536753 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.370525447 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.362141304 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.370833976 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.366730221 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.364822473 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.367708912 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.367760004 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.370891254 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.380594881 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.367293217 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.35855594 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.36998753 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.366547341 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.366696137 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.366353964 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.359102418 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.370174789 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.366637954 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.36054372 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.370880674 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.369501649 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.36180488 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.370849448 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.367880195 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.366963715 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.369326929 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.365582376 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.37517358 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.367526685 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.369256298 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.38196303 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.367783496 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.359717199 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.373340274 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.367316919 seconds)
  done (took 66.851014637 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.369682614 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.369699671 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.369225808 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.369510647 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.368928869 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.369425607 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.36959215 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.36915242 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.368298484 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.3696983 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.369239524 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.37004802 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.369814647 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.368636786 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.370892402 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.369363898 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.370066773 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.368943186 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.369034016 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.368441841 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.370928643 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.368546183 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.369642856 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.370522363 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.370193601 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.368456473 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.368980244 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.369476314 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.370327098 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.369149471 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.370044707 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.370940933 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.370397668 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.370119311 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.370895069 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.370526459 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.370358138 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.370223753 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.369880418 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.367564002 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.368402889 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.368855527 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.368219696 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.368047934 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.367812624 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.367777042 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.362469115 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.360759643 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.362535677 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.36187641 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.360592765 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.360334439 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.362485761 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.362463111 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.361483295 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.361057295 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.361031562 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.361073804 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.361990339 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.361361544 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.362951499 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.362380269 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.363656513 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.363613083 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.36316688 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.364526223 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.363585748 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.36330001 seconds)
  done (took 94.20124762 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362786238 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.362311083 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362183021 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362958996 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363213733 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.36164214 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.361585042 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.359395993 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.358996979 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358779507 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.359801279 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.359392389 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.359626477 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.361554226 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.358971701 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35748256 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.356904637 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.358392704 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.357780322 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357883873 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.358204918 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.358454208 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.357434245 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.356528492 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.358246306 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.356372954 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.356755287 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.356961669 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357768525 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.354315307 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.354947491 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.355597726 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.354948753 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.35237785 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.355285292 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.35526866 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354667778 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351309564 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.352857832 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.352745645 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.350805481 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351731517 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.351176304 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.351960361 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348195238 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.34879959 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.348133263 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.348358994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.348245571 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.348295177 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.351361504 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.347127721 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.344760462 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.345527728 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.343361762 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.344610625 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344841547 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.343894766 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.345006292 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.342367717 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.34281352 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.34229082 seconds)
  done (took 85.179442911 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342766896 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.342223731 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.341685387 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.335733103 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.336519154 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.337438512 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.33771035 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.339311823 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.338444715 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.338141948 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340569644 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334770118 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334886151 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335244731 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.335708857 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335237802 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3367346 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.338825855 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.332597741 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.333384595 seconds)
  done (took 27.964045354 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.333946075 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.331227315 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.332123982 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.333355896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.333911236 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.33136811 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.3306439 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332403589 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330814219 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331247315 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.332970604 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.333953081 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329708315 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.330881818 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.329353846 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.329756972 seconds)
  done (took 22.51679458 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.331381076 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.331080852 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.331170061 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.32831375 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.326413883 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.328740619 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.328954929 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.328202325 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.328479982 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.328493135 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.326008903 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.325885831 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.32725119 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.326674644 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.325858375 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.326959445 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.326387373 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.32652425 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.323122563 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.32425561 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.324513559 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.324392605 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.324494835 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.324737276 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.323991024 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.325988555 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.322636478 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.322867579 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.322203796 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.324195128 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.323358032 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.323217661 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.32422482 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.321369709 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.319689835 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.320060957 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.321538596 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.320495426 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.322733497 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.321558619 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.322727116 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.319223523 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.318507979 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.318922115 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.318783036 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.320009096 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.319449137 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.321042469 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.31728945 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.317886053 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.317905239 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.31941202 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.31895195 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.318183945 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.319111422 seconds)
  done (took 74.003621207 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314832528 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315631409 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.31560343 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.314445396 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314048144 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.315098336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.315118203 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.316321148 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313890356 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314071948 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313361977 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315067318 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313137492 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313607438 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.313339279 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310188852 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.303500354 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307186824 seconds)
  done (took 24.838691547 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.311281742 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310976778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.306456729 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311092062 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.313873252 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315226329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314785455 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.312786289 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313579001 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.312247096 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314795534 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.317221327 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312921008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315154405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314191094 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315143171 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.313381457 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314144374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.31561767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310613164 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313238171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313870911 seconds)
  done (took 30.089730279 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.303983856 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.301610885 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.303674862 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.317190377 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.310138685 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.302871622 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.304261697 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.302430681 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.319161423 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.326708883 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.322397315 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.305812268 seconds)
  done (took 16.914662436 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311998007 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311771253 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311732611 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311691297 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312981732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313841269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311703201 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312259005 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31031964 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311272528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311596966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310909882 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310829533 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314209647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31103223 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309869353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311333694 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311047349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309967549 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311651633 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312941388 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309646207 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309970048 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310632635 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311807058 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311767844 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311051746 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312135323 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312294703 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310662901 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3117528 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311515063 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312158433 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311978256 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310920919 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310505991 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311822776 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312601423 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312377761 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312621939 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312553982 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312159837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310375119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310507354 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312899708 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309441366 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31289995 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31117893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312792739 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313252594 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313324711 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313311285 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313130077 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311873842 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313368232 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313083791 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31329365 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312757768 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312137936 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314570361 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313388637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313080292 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313362206 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314669313 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311281582 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313600094 seconds)
  done (took 87.786670126 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314307986 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31227344 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314557257 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313113393 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313242924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313868919 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312334798 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313853056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311544194 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311988384 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313339422 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312958942 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312732666 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312707043 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315658629 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311785409 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310937884 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312243716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311698844 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311901432 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312854953 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312188008 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312896875 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312680805 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313173469 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313820866 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310444652 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312896266 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312690269 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312264281 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312371452 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312987885 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313412999 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312141246 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312504735 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314608878 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31397835 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314666297 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313513029 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313503703 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313000319 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312743872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312233061 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313335859 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313488782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31390313 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31317406 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312868841 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314702256 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31292235 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313805297 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313842291 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315249711 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313152977 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313936453 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312906723 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312334751 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314752574 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315177479 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31470898 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313402042 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315278062 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315105907 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315094979 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313048954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316586785 seconds)
  done (took 87.875549134 seconds)
done (took 1865.679703224 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473279432 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424466154 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.305427808 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.321369548 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.30290394 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.306575651 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.317190882 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.301808687 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304917658 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305787942 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.306347568 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499548621 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.339942824 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302445623 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.306313634 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.402076104 seconds)
  done (took 26.717102308 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.331998359 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.315781298 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418114667 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.310000615 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.331388829 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.488266003 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36525775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311219614 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.465203266 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.32140603 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.300169188 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341464044 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.308928471 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.311835288 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.324118898 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.486677023 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.548479007 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.297935897 seconds)
  done (took 28.773451739 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.719860388 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.335611142 seconds)
  done (took 5.251468021 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.330208534 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311840331 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309962446 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309837477 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.30451079 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.298454168 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.311879548 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.306015793 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.307727776 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.426640755 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.310839963 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.323642899 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.310115799 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310999507 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319770599 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353394001 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.450915125 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.315825445 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.317862895 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318779595 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310357999 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.398759808 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.346472164 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.3213925 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.426838189 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.317188318 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.315992845 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.316988076 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.429634185 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.320221068 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310942208 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312662147 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.313678999 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.291666895 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.832171938 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.305865088 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330295017 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320030479 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.319340814 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.444423866 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.310354165 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318340542 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.303967343 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.831407649 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.421654412 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.428451045 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.290771515 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.3087473 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.308808363 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.365431819 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296429391 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.304361981 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.357547155 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.082403431 seconds)
  done (took 83.961361267 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.349096706 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.298726118 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481966159 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.313423563 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286176811 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290081255 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.291817043 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.55748743 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.318384237 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.297727496 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.608169206 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.896698135 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.297673779 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.364315798 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.328803166 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.345291387 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312870259 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.300061031 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.301221159 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.300837881 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849814571 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303829724 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.302766342 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.397344982 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337634105 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821609822 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.299419125 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.301944366 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.299291832 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.295151953 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870814959 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.314400279 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.346057842 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.297303255 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.581401694 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.676862422 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636515829 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.309427163 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334903305 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.298781814 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.328311492 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815248531 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.654377185 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.297942667 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.298422698 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805236693 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.297868471 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.304935466 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.310104863 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568485831 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.29960706 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.302815602 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.302337893 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.303183039 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.299489845 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.347738668 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.347991078 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822794636 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294970594 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.296060754 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.304473863 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.301474551 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.30606036 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.300539235 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.308005091 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656583616 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.552201588 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.308234439 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662616761 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.862648431 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.301443239 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.950481343 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.309241014 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.326031536 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.35290963 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.30515283 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.313930307 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818569264 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.299041238 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298582345 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.634662648 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.299506432 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.59434656 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.317832545 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.299263265 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864544929 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.317680485 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.345507959 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.302013584 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.313359951 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.298354522 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305683979 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.588027427 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.343920273 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.301875376 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.302839465 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.348468087 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301607937 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.318005298 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.303350398 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935300358 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.304464642 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.304811222 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.327086132 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302348741 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.301686721 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.306167462 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306465128 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.583342549 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.302751068 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.320014702 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306350948 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.300360397 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.299753663 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.406683716 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.307384244 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.597956685 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.303676855 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303030004 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.30176286 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312197142 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.316700358 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301511599 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.315924922 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.270207604 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.603097959 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.318546884 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.315262222 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307321601 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.30669228 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.31802979 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.301849029 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.36337734 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.311451859 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062964877 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.317435866 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.319116356 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.305855046 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.315839731 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.3153789 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.307292537 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.308553581 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607136672 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591194917 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.556376964 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.303432404 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.306749942 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.091147548 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.340921794 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489662282 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318980716 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.303659398 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586281178 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.524665947 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.311501195 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.305069923 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.308147149 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58662903 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.310994427 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616119014 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896341551 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.31011246 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.3138008 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.062686037 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.114662151 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.311584557 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.311347943 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.597495093 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.324570849 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.310067779 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.310808289 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.311951614 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.303166952 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.316173104 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.314688959 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.311210969 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.312883749 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.59772421 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504919165 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.323382905 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.308482252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833012047 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334969724 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306631614 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.320205032 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.311781332 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.309405713 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.356833996 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.317614955 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.359504318 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.311349041 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.322458145 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.858603781 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.311452289 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.324791626 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.505713192 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022392223 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.314324066 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.313005651 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.307852767 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.368703357 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.860781734 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344831379 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.60683617 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.32090251 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349138941 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.30887006 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.322444926 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.85983496 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31304761 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.310750281 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.037838153 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.31210245 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.791238804 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.308383978 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.308905334 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961708209 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.310447937 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.310500587 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.310853589 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310667095 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.628516133 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.310172781 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.338328961 seconds)
  done (took 491.967209734 seconds)
done (took 637.866558708 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.307190596 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.307359593 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.312196485 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.312705851 seconds)
  done (took 10.443596039 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327961345 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.314784265 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.325360074 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.314780142 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.327735844 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313040578 seconds)
  done (took 9.130257874 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.31176432 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.311866805 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.312104707 seconds)
  done (took 8.142092887 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.513476046 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.340085883 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.648911451 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.317693327 seconds)
  done (took 9.027268286 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.327847137 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.325647897 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.326353551 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.321032251 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.324842218 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.328748028 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.327489116 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323582776 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327813881 seconds)
  done (took 13.138603555 seconds)
done (took 51.08623813 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.459179008 seconds)
    (2/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.297201959 seconds)
    (3/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.289843055 seconds)
    (4/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.339756735 seconds)
    (5/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.287088605 seconds)
    (6/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.680035592 seconds)
    (7/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.351290522 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.379690515 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.421315371 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.437101902 seconds)
    (11/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.312810887 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.369441632 seconds)
    (13/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.42377042 seconds)
    (14/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.313256063 seconds)
    (15/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.392974275 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.294165542 seconds)
    (17/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.351594857 seconds)
    (18/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.456941382 seconds)
    (19/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.488206725 seconds)
    (20/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.434315742 seconds)
    (21/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.53303044 seconds)
    (22/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.398317802 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.395804462 seconds)
    (24/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.305880863 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.390664352 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.295907864 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.297146419 seconds)
    (28/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.462381215 seconds)
    (29/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.292128116 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.418034244 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.398929194 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.453606906 seconds)
    (33/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.304609723 seconds)
    (34/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.46444233 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.462866481 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387551724 seconds)
    (37/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.417360844 seconds)
    (38/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.550104956 seconds)
    (39/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.535682179 seconds)
    (40/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.383618927 seconds)
    (41/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.654018906 seconds)
    (42/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.289014635 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.474175542 seconds)
    (44/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.479895993 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.347547874 seconds)
    (46/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.293795065 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.378669766 seconds)
    (48/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.368479643 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.33867852 seconds)
    (50/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.470764912 seconds)
    (51/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.524273691 seconds)
    (52/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.35634586 seconds)
    (53/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.293631474 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.434731909 seconds)
    (55/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.551915987 seconds)
    (56/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.394245143 seconds)
    (57/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.292289877 seconds)
    (58/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.391766731 seconds)
    (59/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.534495429 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.448106634 seconds)
    (61/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.529494957 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.426862444 seconds)
    (63/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.346497885 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.291705452 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.640830491 seconds)
    (66/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.409870521 seconds)
    (67/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.388945562 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.296498489 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.410606841 seconds)
    (70/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.308563138 seconds)
    (71/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.338189051 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.324540025 seconds)
    (73/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.39211792 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.382032427 seconds)
    (75/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.335732643 seconds)
    (76/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.497997625 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.4716085 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.405561742 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.615268699 seconds)
    (80/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.296020016 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.44600303 seconds)
    (82/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.541090054 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.400128449 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.436467818 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.562726084 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.472250919 seconds)
    (87/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.436268474 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.294124516 seconds)
    (89/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.462180481 seconds)
    (90/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.443588546 seconds)
    (91/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.351487714 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.428958099 seconds)
    (93/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.41811069 seconds)
    (94/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.466833698 seconds)
    (95/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.349161214 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.32481668 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.433867524 seconds)
    (98/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.347310477 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.345430233 seconds)
    (100/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.40532594 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.486435849 seconds)
    (102/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.403142293 seconds)
    (103/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.299030206 seconds)
    (104/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.295261686 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.430231904 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.390267274 seconds)
    (107/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.387756329 seconds)
    (108/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.38137737 seconds)
    (109/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.465152086 seconds)
    (110/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.35901926 seconds)
    (111/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.412662364 seconds)
    (112/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.295609951 seconds)
    (113/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.55842715 seconds)
    (114/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.394459976 seconds)
    (115/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.474784811 seconds)
    (116/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.497677829 seconds)
    (117/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.526474093 seconds)
    (118/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.476205498 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.323586762 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.731654727 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.319330748 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.415556126 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.354182535 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.424761959 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.608269318 seconds)
    (126/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.523242595 seconds)
    (127/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.487595099 seconds)
    (128/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.301015427 seconds)
    (129/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.293789084 seconds)
    (130/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.293455474 seconds)
    (131/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.468144051 seconds)
    (132/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.623866209 seconds)
    (133/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.468862937 seconds)
    (134/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.306929434 seconds)
    (135/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.556663538 seconds)
    (136/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.389290162 seconds)
    (137/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.73282073 seconds)
    (138/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.306836844 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.545982767 seconds)
    (140/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.434920237 seconds)
    (141/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.392483561 seconds)
    (142/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.299655462 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.438206558 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.401178271 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.429233607 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.413636064 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.378729824 seconds)
    (148/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.29606197 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.615844614 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.530549957 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.466904118 seconds)
    (152/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.297084122 seconds)
    (153/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.456783502 seconds)
    (154/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.340790281 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.396545004 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.34665838 seconds)
    (157/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.614539918 seconds)
    (158/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.297792532 seconds)
    (159/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.377065044 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.534997694 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.374291342 seconds)
    (162/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.547869849 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.554283561 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.287299272 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.346415832 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.453404895 seconds)
    (167/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.499788333 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.428231974 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.445245346 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.379494822 seconds)
    (171/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.38657085 seconds)
    (172/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.551718482 seconds)
    (173/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.322869518 seconds)
    (174/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.304424753 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.334398013 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.419473717 seconds)
    (177/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.350294378 seconds)
    (178/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.355227282 seconds)
    (179/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.294486579 seconds)
    (180/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.291014318 seconds)
    (181/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.311727309 seconds)
    (182/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.296974786 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.517237626 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.556665181 seconds)
    (185/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.500139032 seconds)
    (186/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346303679 seconds)
    (187/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.39413539 seconds)
    (188/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.545041163 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.423650683 seconds)
    (190/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.309924014 seconds)
    (191/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.446109637 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.56013332 seconds)
  done (took 320.842497614 seconds)
done (took 322.05104348 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349408782 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.412840971 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.319034933 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.319051149 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328297057 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.323228269 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.344737749 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.318969774 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.335798628 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.334076511 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.321471985 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.33782867 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.342159077 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.335505922 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.350789601 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.318714361 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.319257875 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.331920829 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.337327062 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.34176068 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330401678 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323915434 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.353890926 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.326638692 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338126905 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332643455 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.336632391 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.327018272 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.337052237 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.340159476 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.333088364 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.32998749 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.348179675 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.343975594 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334709019 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.337806543 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332430737 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.424862472 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.348309403 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.343361895 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.342664768 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.34174693 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.332552115 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.330732324 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.344012276 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358265762 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339027903 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.349100402 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.330646337 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.325884245 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345829252 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.345642154 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.341224684 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.327276731 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.325624713 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.346758024 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.342205412 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352841137 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.341535865 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.330720841 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.369138614 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350282236 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.346873561 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341452709 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.332924794 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.34966431 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.345358841 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.348859772 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.337608904 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.333838263 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329338821 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.331445521 seconds)
done (took 105.678363228 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.456931089 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.33042283 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.48871409 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.33541207 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.497910106 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.450294697 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.339260944 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.340785216 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.342600736 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.136897188 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.345158542 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.340390738 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.330839601 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.341894165 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.448489507 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.338604636 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339308151 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.029519014 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.339250625 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.463552045 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.332561114 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.341072673 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.344305013 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.130986089 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.329451004 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.322752361 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.466289429 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.338606029 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.026970309 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.32071062 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.32815892 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.028834963 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.466289859 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.357937532 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.352405488 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.349809938 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.492048039 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.346600757 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.454546126 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.452960329 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.488123971 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.379417372 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.321543048 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.323582511 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.339173229 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.335541102 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.342027001 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.369212081 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.325490599 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.345160985 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.026611124 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.344815735 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.338726873 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.342739484 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.339266934 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.367170148 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.3393448 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.340205961 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.468878715 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.341893751 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.450909886 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.134190767 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.135231938 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.340932061 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.331388723 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.344370528 seconds)
  done (took 108.400175659 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.400314882 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.411901681 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.437091165 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.33840602 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.382748003 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.444890313 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.336136686 seconds)
  done (took 10.965781542 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.337128129 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335182708 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.384036334 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381025039 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.33745758 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.501708967 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345209629 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.342023468 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.338318415 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.387739971 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.34042981 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341750054 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.35171157 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.327430515 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383533417 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.338346329 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.445614747 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.337209979 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.344130584 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.482220698 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335790398 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.347535735 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.383633631 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.34204167 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.343464424 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.340079608 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.119488067 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337151846 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340996015 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.346400671 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340000638 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.401193303 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.343549727 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.332693181 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343684487 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.445662702 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.345447274 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344521945 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.341823347 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.328927724 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.345757108 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.340368552 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.341204195 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.342725628 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.340547677 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.357741227 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.342806107 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.342763626 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.341477793 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346030159 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.382787819 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341022148 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.33966154 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.343389699 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.386931518 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354448484 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.341273687 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.338112176 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.339773498 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340559116 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.484820455 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378795313 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.342965486 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.384524711 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343188865 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.343917356 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.340123064 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.338856311 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.419540332 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.336316984 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.377703105 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.336923247 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.511312673 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.357789178 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341435951 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.331719712 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.332985595 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341857991 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.332878394 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.340020034 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.343405672 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.331841349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.337987313 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341260198 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342512659 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.48993158 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441810044 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.344267166 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.348754108 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.337382354 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.342376891 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.385268173 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.342877849 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.34116705 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381602047 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.449623825 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.385440459 seconds)
  done (took 137.968613511 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.350050861 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.347122782 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.33684796 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.357805522 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.335550765 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.333734669 seconds)
  done (took 9.280992006 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.337175826 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.34155499 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.343921762 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.342360279 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.342619805 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.346535244 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.344254686 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334979972 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.34521804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343716199 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.346016058 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.342610187 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.349795237 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.340127284 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.346014162 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.34616671 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.344656226 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341292565 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.346320949 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347528419 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.333123018 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.342828867 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341357802 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.338810501 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.348613943 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.344581917 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360909057 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.345520286 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.346085418 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.343516756 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.346444585 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.347682885 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.338675551 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.339996625 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.350354609 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.339803759 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350967167 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.346208345 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344358191 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.344010688 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.348230565 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34985638 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.348011617 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.342760671 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.342094687 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.340839253 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.350772693 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363031443 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.346916445 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.343713888 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.347621097 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.348093585 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.347836728 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.34777262 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.338847426 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344321563 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.349091797 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.347769378 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.34597559 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.33803213 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.348594966 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.345910554 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338746621 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.352394758 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.348763171 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.347981601 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.339363191 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353644923 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349764003 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.348099309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.35025292 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.347559193 seconds)
  done (took 99.093683601 seconds)
done (took 366.923346597 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.558027817 seconds)
  done (took 3.779269066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.337855478 seconds)
  done (took 3.562216048 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.1837994 seconds)
  done (took 22.411280101 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.351909272 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.355722527 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.363670485 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.328219731 seconds)
  done (took 10.620733879 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.59586494 seconds)
  done (took 3.81780414 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.355339298 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.35731438 seconds)
  done (took 5.94854477 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.51270594 seconds)
  done (took 3.73924935 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.523489935 seconds)
  done (took 3.750012648 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.343349244 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.35644633 seconds)
  done (took 5.933038181 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.312084054 seconds)
  done (took 3.535230915 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.335361952 seconds)
  done (took 20.561809653 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.359209982 seconds)
  done (took 3.583642929 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.365849489 seconds)
  done (took 3.589573738 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.814489542 seconds)
  done (took 6.040682323 seconds)
done (took 102.095951924 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.332600855 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.338414119 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.342566009 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.338479794 seconds)
  done (took 10.576245215 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.416418922 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.413050167 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.422371085 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.408184107 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409063938 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.413694096 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.376422588 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.372999895 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.404823851 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.397758881 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.419061984 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.407474389 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.415233337 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374739291 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.400203219 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.416775882 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407193504 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.424540795 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.377847367 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409553243 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.350439159 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411960651 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.404417514 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351294845 seconds)
  done (took 34.842054761 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.863939749 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.410208057 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.493678728 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.393236147 seconds)
  done (took 7.38136189 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.454636611 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.458170079 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.474872538 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.508685024 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.5574067 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.471822004 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.374757932 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.373100602 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.358116059 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.457993836 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.531661955 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.452542828 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.671865646 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.353216604 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.670004646 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.350908005 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353732668 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.456825257 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.504779642 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.534261422 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.351436523 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.456436392 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.45982054 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.457104229 seconds)
  done (took 36.322393402 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.361643101 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.370623551 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.354317219 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.367017901 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.354428723 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.355438585 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.35672565 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.358502508 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.35323461 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.354409584 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.355810237 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.367657738 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.354766719 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.355048729 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.362070167 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.356204995 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.357263862 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.360997833 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.363906185 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.356296428 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.355920731 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.36310538 seconds)
  done (took 31.125398099 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.339870944 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.339145702 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.691257889 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.596219791 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.340012136 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.345895956 seconds)
  done (took 13.883800365 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.413440705 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.550214311 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.346663679 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.686169519 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.775784076 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.352648927 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.347072119 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.58615518 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.874853175 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.877857096 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.405407946 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.416103552 seconds)
  done (took 19.86729317 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.343236978 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.347042019 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.346322348 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.361405783 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.399613423 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.350400108 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.353185148 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.341355032 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.406575063 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.404524347 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.351120256 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.401785829 seconds)
  done (took 21.639268764 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432214944 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351549553 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353890734 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429341932 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350857004 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351996557 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346772411 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039181954 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.356579684 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627862147 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365828905 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434596533 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597204761 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35159801 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360073285 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.314874593 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579243486 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854616151 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359004997 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367133495 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390414706 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354590078 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371218087 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.566819362 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354362912 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353093887 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.630505009 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354109196 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637154902 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613898392 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615066272 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35507589 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630070649 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984334938 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45875034 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560083132 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35064451 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354763322 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.334051259 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.357889169 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362459681 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354513818 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61362486 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354618549 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353613944 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354559003 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055848966 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.361793798 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.354174826 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355392124 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616043603 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437106149 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.360506883 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355641271 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384702061 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35415669 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.36215576 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475537886 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992287191 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355110417 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373338055 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.361924452 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347811258 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355380049 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010049944 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.362705615 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.360116713 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360573348 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35518365 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357218242 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382600436 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356874986 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.375933835 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355615665 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134942058 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357624654 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358966606 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922153689 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363058108 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.364103161 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582547173 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35727987 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355829783 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.358538288 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357581538 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078160733 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36921007 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.326086229 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399014142 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045292824 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563763632 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374760971 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386103053 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.578792141 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.327640051 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357914132 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.369419851 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359182981 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378663783 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052146704 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3578443 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.363069003 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604260019 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.567725673 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358391382 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.327880284 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826586701 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35743783 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385445295 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358136026 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571410597 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.984394669 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621857901 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37035058 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397270894 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359026494 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139279814 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37915029 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.369619241 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360961886 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635322524 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.159231379 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36597818 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433033095 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361963409 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360615149 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360037656 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368554936 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359143821 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.546794832 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360844632 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629022732 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.361680726 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359772603 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.371693942 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365892321 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.362095774 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.581235856 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360504273 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656440996 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360966699 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36072509 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359930959 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.577366613 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.365955239 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.366707418 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698650678 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360560676 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367547919 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631397542 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393286724 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472473457 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392540719 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.373823111 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614784498 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.366071319 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.366964085 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361408658 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367332803 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366921043 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.36963658 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352156605 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989479751 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338428223 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367298911 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362381856 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.377839961 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435640656 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369029883 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570605307 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.361580588 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361064223 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.368534465 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.363071115 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588821811 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626516366 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.37299666 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542891038 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.83160809 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991501097 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376824995 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.362326912 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.362975469 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.362128987 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364346614 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364506022 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363332367 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571516198 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628963254 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379029913 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997035433 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364822067 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363568222 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.394028358 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62576267 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.372653881 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36474495 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.373868745 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38238439 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380359954 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633352611 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584069986 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.378790711 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363792077 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.882167602 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37262295 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364921731 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364659484 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391526528 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364952235 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199854803 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705448289 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380403545 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628726308 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378886695 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.387851086 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.363320834 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378778775 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368698119 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.376793285 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392700826 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.575215212 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365604943 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373852017 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003683325 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157804321 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939941257 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367433616 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.366153421 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372422201 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062510954 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366152851 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366214482 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61190429 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059877567 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365289548 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835290029 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.371916363 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115273849 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636207835 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591934134 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366664956 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.36844005 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633336223 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577343133 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392667261 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370518207 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372034078 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.337784572 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914249124 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380353189 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545804503 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061758673 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366401278 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369328822 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.399609332 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367264444 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749416389 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366237588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367861714 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380754382 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373518285 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198910241 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37321126 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368021919 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025888043 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368903421 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.860261547 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368301945 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.576551768 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630533933 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.610260997 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.369635336 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.36859528 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.618772761 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631922051 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369445802 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368216613 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950049272 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.226044273 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.375565323 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370878244 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155249635 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376718499 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662365896 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.371926943 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.377502494 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378971667 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370122148 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369930228 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.36940944 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376579133 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344189868 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87407735 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.370529864 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388785065 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379517257 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376060391 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.6172978 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.385498971 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00366366 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596509909 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371783096 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402848778 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.375042324 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371030019 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.342886473 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370392627 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371019679 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400867747 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589901637 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387916369 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.345708874 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376597891 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580688048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370416562 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371447863 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593844412 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.370488832 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.377118586 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16713489 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40175555 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370060543 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372902457 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373782126 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408270196 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445713271 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581028916 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.636679133 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640214096 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753320317 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370895703 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374408866 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.388825494 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453556377 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372033191 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.398604246 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.377881648 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004983141 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163177787 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011751228 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639998159 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374016638 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383409962 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37277181 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614712309 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371549177 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648890938 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372825609 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.365729847 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412421383 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372944907 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386942767 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589818583 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64821363 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373415192 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386786586 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381077311 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.374080925 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643061029 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.585325698 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882587355 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939515867 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380440046 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373564707 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07907026 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650593602 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374193449 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374942147 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37496908 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.390052506 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.376125761 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.388204366 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380907369 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600476417 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64020766 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009780412 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640338527 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.5548761 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.299581678 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386234974 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626361489 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20850176 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584444173 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014195 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11544438 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626720103 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44968112 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584950793 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.377501751 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612515019 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.384827969 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38300139 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377352151 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377675181 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.375789731 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.641356987 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016538626 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628810004 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381112627 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.385528178 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411433814 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.587139755 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.5980958 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111025353 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600776477 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645729434 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384485136 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37759984 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021820019 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645042073 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378441184 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.382718639 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598618772 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378770177 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413152527 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.251625709 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.377167799 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947808377 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.593867925 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399020419 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378560629 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.128757621 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019932998 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.387206334 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892600062 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384896707 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379077466 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662290104 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.386561582 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385848885 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666091318 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.38523765 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381960514 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596323024 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.0125816 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141366107 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.397646757 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381454674 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.388037691 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379290794 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444242573 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379944827 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38092268 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.763169039 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380166626 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382576491 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393383213 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.393892756 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386171284 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.387869347 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381233415 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.388864676 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.351816371 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.358955602 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387342385 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502276096 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930783947 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38215358 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.997872318 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.718041772 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62745094 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388789551 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.356548228 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.387891108 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383253769 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38289887 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382628436 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393874529 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945503748 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.391675948 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.655457649 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388170491 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.591494978 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591691426 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385816398 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594375146 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38459285 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407712306 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.352013615 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38181533 seconds)
  done (took 978.444814762 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.393039989 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.37283366 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.379283931 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.445767233 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.39830792 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.388006925 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.391319908 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.445538351 seconds)
  done (took 20.473864605 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.37491517 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.382550318 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.373097543 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.382185082 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.376399102 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.925455703 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.3864667 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.382667936 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.394453874 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.378937131 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.379136308 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.056483954 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.38244878 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.377268565 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.381350367 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.388776805 seconds)
  done (took 32.583487058 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.111353061 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.406559087 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.966654931 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.420985018 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.419197264 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.386961136 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.526061581 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.384767788 seconds)
  done (took 25.883424907 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.388316533 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.388372021 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.387924225 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.389425024 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.390005281 seconds)
  done (took 8.205501658 seconds)
done (took 1242.464726923 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.390304865 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.390123272 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.389740082 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390683624 seconds)
  done (took 6.822349948 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.354057206 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.354521557 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.355713115 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.365923414 seconds)
  done (took 9.691768074 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.082593045 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.893842958 seconds)
  done (took 5.237826652 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.929555109 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.919868236 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.917324039 seconds)
  done (took 7.028436312 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.669479332 seconds)
  done (took 2.931627221 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.36264245 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.375950285 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.103330517 seconds)
  done (took 8.104362006 seconds)
done (took 41.078120191 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.385859258 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.136589909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.531025099 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.385501259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535312226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.530730499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.625853837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.377564679 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.376673185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.377189318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.386051997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.536219388 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.614752105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.135926966 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.615662055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.136119708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.535671446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.376157534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.37638371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.377345907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.628040383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.388380536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.379881858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.388075539 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.53807674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.520931894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.378723689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.138214205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.377301403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.377908203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.522058087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390715253 seconds)
  done (took 82.644082479 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.37735885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.401845726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391001158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.37831603 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.393069526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.389700118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.378247324 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.377310932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.379221697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.377823729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.37786427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394577137 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.381256961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.378765316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.396863137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.378743856 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.393953315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394528098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.378751556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395562432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.380585597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391241088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.389164669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.379354966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.401546747 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.379706209 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4061422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.379461675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.38078451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.3884027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.380090229 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.394487445 seconds)
  done (took 77.630459469 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387291047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.379829496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.380065184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392173996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.389246369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.381460273 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.381510832 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.395748743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.379352979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.380733417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380224509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.401982944 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.383029942 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.380767752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.382162864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.381719431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.38070731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.411883768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.3801712 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379324379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.383514556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396218991 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.384281484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.386397015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.384233422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.413700434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.381180892 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.397773535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.381531769 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.38028519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.402985698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.387126196 seconds)
  done (took 77.656091959 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.623570743 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.397044342 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.399411387 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.391490186 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.399793324 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.396285048 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.391420061 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.629194353 seconds)
  done (took 14.895825705 seconds)
done (took 254.089206225 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.409295466 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.872488137 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424066598 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.393922257 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.40778515 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.420480793 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.614609923 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420377178 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.614640848 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.41041609 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.40655921 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.394432712 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.198632886 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545052469 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.192844962 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.306486553 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.255933883 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.389284297 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.943407039 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.683755505 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.419083341 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.383773603 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.209733729 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.273814588 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.370298643 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.469291935 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.486223143 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.622660326 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.553743434 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.468951419 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.885436142 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.397138651 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.396038533 seconds)
  done (took 64.511301564 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.390202171 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.39963163 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.399657366 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.400148444 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.400037699 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.399739953 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.391205913 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.399186519 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.39984602 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.400722627 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.399551469 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.400217989 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.399846384 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.39995204 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.399807882 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.37434799 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.390270878 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.400734829 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.391421729 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.374706088 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.400793011 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.401475596 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.402176725 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.402273541 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.402022283 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.402805187 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.401915053 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.401383645 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.401783193 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.401282795 seconds)
  done (took 43.20019737 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.403143986 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.942257605 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.131864045 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.404298794 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.392795836 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.397644344 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.678121568 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.403037201 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.396578131 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.396747328 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.851450691 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.405622631 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.42709293 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.137121469 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.401214063 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.402846823 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.402930996 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.394482617 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.949477163 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409444078 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.676792098 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.4035678 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.678055994 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.403798986 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.39750911 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.394036812 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.399541959 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.180195809 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.41503293 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.852117693 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.160717767 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.678149913 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.127241448 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.181393658 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.17247435 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.410912895 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.403043633 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.85764179 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.396671197 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.394761107 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.676673991 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.402001865 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.139758559 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.090898713 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.412932275 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.404499249 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.222568481 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.864842327 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.641889554 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.406889876 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.171637469 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.403824506 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.407278687 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.39776569 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.637040728 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.403671012 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.395827491 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.234054627 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.401991674 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.678519867 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.411459557 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.397123398 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.950974136 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.405072908 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.948532014 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.403057683 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.404859397 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.398518007 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.144184653 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.404728718 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.100949298 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.415341833 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.407351298 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.85855062 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.953333349 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.263915364 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.399154833 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.95611397 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.16556938 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.70088433 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.407801111 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.159732401 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.699152714 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.407952845 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.409666935 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.408680875 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.407737388 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.470385403 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.677416612 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.022941563 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.100911554 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.244575728 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.684082122 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.412701155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.399137516 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.234063739 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.408673428 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.408789602 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.135677173 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.107397444 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.415626161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.406501575 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.091278335 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.417725007 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.684344634 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.410809487 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.180596043 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.406519437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.471974951 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.409497344 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.405561606 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.402825553 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.68398684 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.409838393 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.410085582 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.086670139 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.886726778 seconds)
  done (took 195.060045914 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.394117634 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.395191851 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.396606072 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.394601905 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.394093389 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.400971507 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.394143491 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.395905425 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.401075874 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.394037287 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.396870673 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.403285824 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.401659758 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.393786698 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.401030737 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.395598508 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.395344232 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.402603548 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.39618077 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.39643923 seconds)
  done (took 45.22156618 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.410631532 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.958628406 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.926053589 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.415588477 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.40964316 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.401677003 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.457048287 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.411305827 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.411268784 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.696787348 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.574290128 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.416505496 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.409775451 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.411319896 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.922613279 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.388933065 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.699752236 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.964325908 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.417540004 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.960150617 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.390653964 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.411852272 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.401986755 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.959723177 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.713821329 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.683280324 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.466053064 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.96148752 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419201885 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.412405689 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.960425739 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.419630696 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.40277083 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.950003796 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.418320566 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.427108659 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.412283458 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.461826066 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.461848597 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.703929167 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.973851879 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.702831597 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.4300824 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.571757921 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.414937378 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.384988369 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.974116914 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.420382166 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.386869001 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.414880769 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.419144106 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.938354176 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.412437825 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.937265749 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.420214553 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.414117741 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.963219072 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.94426498 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.932582762 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.579928937 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.40778504 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.688400608 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.420383373 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.975023038 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.420109674 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.414397435 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.415586082 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.576000088 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.966226688 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.691796591 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.70665355 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.700095298 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.41565032 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.472902087 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.41574009 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.70255274 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.476232425 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.805781705 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.704445721 seconds)
  done (took 127.396930196 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.668259381 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.524743045 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.781295298 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.989263584 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.907314009 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.55143272 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.523302135 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.654004848 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.421065653 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.518581947 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.047232741 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.496512778 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.163458514 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.472892856 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.516911182 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.529952516 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.798788385 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.345891761 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.032910832 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.033480418 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.413480127 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.509002918 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.921878855 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.61367087 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.417385134 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.986284488 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.339808494 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.917299928 seconds)
  done (took 53.382025921 seconds)
done (took 530.040408371 seconds)
SAVING RESULT...
DONE!
