cset: moving following pidspec: 27595
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.399749059 seconds)
loading group "string"... done (took 0.495989224 seconds)
loading group "linalg"... done (took 8.714726578 seconds)
loading group "parallel"... done (took 0.172475019 seconds)
loading group "find"... done (took 1.254407066 seconds)
loading group "tuple"... done (took 1.838213265 seconds)
loading group "dates"... done (took 1.324067709 seconds)
loading group "micro"... done (took 0.189820677 seconds)
loading group "io"... done (took 0.497632259 seconds)
loading group "scalar"... done (took 50.100111739 seconds)
loading group "sparse"... done (took 13.740747134 seconds)
loading group "broadcast"... done (took 1.290622378 seconds)
loading group "union"... done (took 10.028518401 seconds)
loading group "simd"... done (took 3.032576691 seconds)
loading group "random"... done (took 11.373956194 seconds)
loading group "problem"... done (took 2.19396718 seconds)
loading group "array"... done (took 23.934093308 seconds)
loading group "misc"... done (took 1.101627803 seconds)
loading group "sort"... done (took 3.724531834 seconds)
loading group "collection"... done (took 19.176829432 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.607594355 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125306159 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.263473849 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.275841923 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.234192753 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166614527 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142349605 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.238948227 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.630364048 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.200008996 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135787817 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.502421003 seconds)
done (took 6.338528186 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252991199 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179919341 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161740322 seconds)
  done (took 1.104666097 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076176937 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154272601 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106657771 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091838797 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.089994072 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108614209 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090798696 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107486767 seconds)
  done (took 1.516670772 seconds)
done (took 3.714601233 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.50070279 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.862259682 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.504986667 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141698724 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309272746 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30234646 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.310665461 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.202122916 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106409005 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08806904 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172885261 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.419532994 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.414668823 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.981751388 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08644476 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09258466 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131678604 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.775830615 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077982117 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109162746 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.491860909 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.182409143 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098158362 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121132695 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184946395 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13323863 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159463954 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101227183 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.679312642 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131516043 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18094018 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098076305 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158486429 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184335992 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190919963 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109710267 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.69351039 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200986191 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.086513358 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098839499 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682000984 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11802774 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186402964 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10261611 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087515868 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.17969732 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093709635 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076228202 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109368098 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083667673 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163425679 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453948446 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106257103 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.167592728 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093025147 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.706696831 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096230399 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27292507 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123843308 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091511779 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090566538 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.0862525 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154704894 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092851662 seconds)
  done (took 20.096508366 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144457916 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162740984 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07693413 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155143769 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121953964 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077938004 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099777421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077679053 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106341312 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.194329048 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13603835 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150619422 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0905644 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089788974 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128787422 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247709541 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105993744 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.11911611 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088254884 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087487528 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13765513 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094810186 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106680869 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090937729 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167777396 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205559363 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108311525 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121252737 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089943287 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093963825 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140821946 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144420325 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092391871 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087542911 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.168617213 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122445347 seconds)
  done (took 5.217778197 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.164975252 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.151354346 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186861798 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18329654 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175770721 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147535212 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166167449 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122474571 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.272438817 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.201062483 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178275648 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113766073 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11983076 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079276957 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07947585 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077091573 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.434520657 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146796577 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.159564195 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125777177 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100415576 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081950016 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097021529 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083645422 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076751814 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096607617 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.121020327 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.310894649 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099010138 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189379201 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08241285 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.104771571 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083301417 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08160276 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131133115 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19487923 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124643576 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137377434 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080429308 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.075341795 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221120299 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102559365 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081116441 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113575323 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132453772 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113857851 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096634618 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083361189 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221225293 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094857089 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098550519 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.043734322 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193873056 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.137074838 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075857371 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288681417 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097737867 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098486609 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077015337 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.250229716 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112417377 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079050095 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095640613 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080939704 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076577503 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.426871659 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098290248 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.254673265 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082391449 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152969123 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07966713 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097576946 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086334821 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08424597 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117576477 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07866316 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077209311 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07625374 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096245298 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080211283 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105071119 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083402413 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082196697 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093989236 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146563667 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09776736 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114193493 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108039131 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098356081 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077928008 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125525537 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081229638 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079033673 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.164557566 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079200934 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106350054 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080086516 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141953556 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081267817 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.215705234 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082529674 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105471855 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100022791 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125856679 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100082906 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078370957 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100458283 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078571717 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078876725 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159192472 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08084326 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078671766 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078293478 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11005229 seconds)
  done (took 23.034912102 seconds)
done (took 49.110763828 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.42671086 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081095765 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079518675 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099615493 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081722614 seconds)
  done (took 1.612095091 seconds)
done (took 2.430035344 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316941379 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188106428 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101531324 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184850497 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084659419 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191932836 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179165709 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093324316 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202635683 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082803659 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182675869 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083067473 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102512478 seconds)
  done (took 2.83828655 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101316131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108369541 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100474619 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11952931 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082686036 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100038034 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118031203 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109055633 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099412024 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112275045 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084578193 seconds)
  done (took 1.95121996 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099247547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10450338 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096471196 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116297565 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084755282 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096756174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115584109 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107579101 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096234977 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11038681 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084694384 seconds)
  done (took 1.93292669 seconds)
done (took 7.537650191 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.076285835 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.397312259 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165059783 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.208681581 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346572337 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.235253697 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.56414941 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.150051616 seconds)
  done (took 14.108421929 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.165403873 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108670415 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090274818 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090589149 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090539375 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.113489328 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090217668 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090682233 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.112949628 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093574474 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091678706 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.108521445 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090746197 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088887013 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09204587 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.110827611 seconds)
  done (took 2.508421369 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142100304 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139167451 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097579996 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095984509 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111260967 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098320402 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098995462 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114537406 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093852193 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093321947 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099449755 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116103965 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095973536 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092097023 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116132956 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11642687 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091986902 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114217304 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114480493 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113897525 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099438308 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09567433 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112169618 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097738339 seconds)
  done (took 3.465597269 seconds)
done (took 20.904553681 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144596125 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101159573 seconds)
  done (took 1.067744962 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141264028 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159067377 seconds)
  done (took 1.128356002 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110275756 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088233785 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136819599 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100428452 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088524825 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108665837 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114101332 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106550759 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09074541 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089143751 seconds)
  done (took 1.864875203 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093349519 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093333142 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121275935 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136184024 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114305349 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091931852 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093718112 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09128654 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112960512 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088825327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093834218 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123844539 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093001568 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124487907 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094305612 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095384116 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115951299 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093478116 seconds)
  done (took 2.701493675 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090525805 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09099136 seconds)
  done (took 1.013912676 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092708906 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088549807 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090200295 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110600144 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08833484 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088384487 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106905732 seconds)
  done (took 1.497921997 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484399722 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26265397 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.356325598 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107762427 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144776734 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.347999315 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144215148 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101543437 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100869803 seconds)
  done (took 2.918232815 seconds)
done (took 13.020499817 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091758721 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221782873 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.626386362 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11179108 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.208081789 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160833043 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.284030869 seconds)
done (took 2.543504221 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337383524 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141760683 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083173248 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0915738 seconds)
  done (took 1.485297991 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08058705 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097546171 seconds)
  done (took 1.020304903 seconds)
done (took 3.3444789 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087930773 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.118666439 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105378209 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.087477703 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087516259 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.086279933 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.107100866 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088096176 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085918113 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.085575621 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.107562168 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087522751 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086349298 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104850489 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088829385 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086147071 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.086588169 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105738698 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086880486 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087337948 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103536881 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08860548 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086686741 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086281106 seconds)
  done (took 3.109579502 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105052815 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090775846 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109059536 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092205556 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092472672 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108863932 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092938898 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089006621 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110349872 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089838571 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09215771 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109420338 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091117991 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092749308 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088704869 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109477532 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091301902 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088022273 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107522848 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09283894 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091131814 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107967803 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092296749 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09062756 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10948513 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092716651 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089588232 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107387996 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09246092 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091328808 seconds)
  done (took 3.751925152 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097233962 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085142742 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087583752 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115111825 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086389266 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087702738 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102669139 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087798071 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088405127 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086273973 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108326337 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088666605 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08436352 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106316106 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090641999 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09177653 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096498754 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.105016204 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085261193 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088540339 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109071517 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086199727 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087013941 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08773073 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106381079 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085713021 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087490192 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106767582 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088754221 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08731894 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.088724867 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108570934 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088774425 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096932968 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109580077 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088790837 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092781573 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102361267 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090204503 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084825376 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083748041 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105778665 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086379659 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094512161 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106038961 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089796641 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085285261 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088076053 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106942269 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091010978 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084204888 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102759286 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090897293 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088840691 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.088946207 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103285154 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091021362 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083987779 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.105834134 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08801905 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084727308 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084090501 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111314835 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08928098 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101349306 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112407079 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085860453 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089284789 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.105925725 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093880253 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090196854 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115574937 seconds)
  done (took 7.62894888 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100406579 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096722258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088928111 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10823076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088949194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088422929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112478749 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089306258 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089779845 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114500437 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090637864 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088654657 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08861605 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10873058 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089870466 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089763444 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113135974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089044845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087750076 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1078069 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090065753 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093208198 seconds)
  done (took 2.960537606 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233549206 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095659979 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135464193 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121764604 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10553051 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120656419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093706515 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095011685 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111253553 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098483182 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097607644 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111651292 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106923117 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096622637 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115695756 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09875262 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111443812 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10066665 seconds)
  done (took 2.900481562 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103285123 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090353924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131101651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092031946 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090871422 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091086974 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115883364 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109663797 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108898657 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092110813 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096609278 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092484555 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.109982139 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092172852 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090915614 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109313828 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092023234 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090900332 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116653485 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096769955 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095825981 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116011901 seconds)
  done (took 3.077521872 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104238544 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090782426 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126134613 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094264666 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089389809 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089346979 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114504313 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090460295 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096222551 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109416943 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0910884 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08937121 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123063711 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090881617 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095600395 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108972221 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092172279 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090759062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109216876 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090950022 seconds)
  done (took 2.838655684 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.169763171 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124481813 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108597886 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11190953 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125425095 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107323924 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112733036 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125291593 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105697645 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136086044 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107637883 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105016105 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133292034 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113890427 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10482242 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133708818 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112304471 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132239716 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107292009 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106420106 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135795556 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104429278 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131407806 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106036209 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104062813 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125191144 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105623063 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111023466 seconds)
  done (took 4.163294359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090764219 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088676704 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087807256 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108949815 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089711478 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088472368 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088281336 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108067055 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090036739 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088045158 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107507023 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089683971 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089545526 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08756503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107981791 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089149399 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088131532 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105902462 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090442931 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088797273 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088094577 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108155704 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090545322 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088552886 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088993976 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108292442 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089454725 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088419721 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108450452 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089649976 seconds)
  done (took 3.680953354 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.1029437 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099042964 seconds)
  done (took 1.061062674 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098284922 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103262587 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088424927 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10929104 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096291316 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089613889 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116390581 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096599726 seconds)
  done (took 1.658784661 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14152944 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162282982 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09497285 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099868577 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162931599 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.153585862 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131304801 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093838929 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107765411 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083560657 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.156233443 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082386138 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090363074 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107149889 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092065556 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096706014 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109789112 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100800749 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096806441 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091213738 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114622493 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095865507 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0930101 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119643104 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084791682 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092188239 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114032589 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101438651 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086329461 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111296157 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088969642 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089513881 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112812397 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094846047 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089905073 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162627736 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097745993 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106605267 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091597171 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094393501 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1419101 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091721951 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092373968 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107107522 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095124221 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093344158 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113764058 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091273325 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082501761 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085055196 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.110909122 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086018813 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089454206 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110196218 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091862117 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095655146 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111216155 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088232868 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086436767 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10474387 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089922663 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086068144 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111730213 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09385088 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09093533 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110995027 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091117318 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090887655 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091072877 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.111144859 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08996598 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105487322 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112688687 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095305956 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09433831 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.110597938 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088961684 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095912469 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109110778 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092317863 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.094215837 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138953868 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092864138 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086875319 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106497523 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097392179 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092950146 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.11176887 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085071524 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099956398 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.110562783 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092622612 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084779895 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088941254 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106405696 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093660099 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084796311 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111431653 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090285162 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094653676 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114581403 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090962799 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091985265 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115746272 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097374404 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089214799 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157121648 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088192741 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085922604 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.113470852 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09627137 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084331421 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109468924 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090311837 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088532775 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10519516 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096021921 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090897562 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.110847217 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096285597 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093531667 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110840078 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093691761 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091153292 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086553518 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.115075465 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100537629 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09189597 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.111842858 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091968334 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091575222 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10913222 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096146671 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088201064 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114022977 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089317293 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091664784 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091172092 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115237708 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091708791 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08718715 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110158784 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092567778 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089822215 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.113333927 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094180114 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086883098 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102983314 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093225708 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08767495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.11189435 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100284098 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087730176 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113654409 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08982659 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100525147 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107056761 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097817633 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09433606 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096421786 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116958214 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084104751 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089160879 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.112675615 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094882975 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088823855 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112609676 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092534309 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098125366 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103954775 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096385788 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085031838 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088859245 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.117601692 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094738868 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095209156 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107789374 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132444499 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10305702 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116519906 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092282546 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093853516 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.1152539 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095485751 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0956402 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115467503 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098738401 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089527987 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10902184 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09954303 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087745997 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093765799 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109954177 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093721421 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083580409 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112488461 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086027302 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095876625 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112167671 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097908327 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097749862 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092435148 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111395316 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100030684 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087498082 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116510287 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084331797 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09522859 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121685838 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098398758 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096391003 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113893083 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089999479 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09289334 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119848248 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095187391 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092646896 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112606208 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086644704 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085656031 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09816301 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114237073 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089246861 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091518603 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112699423 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09604748 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090261302 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104677417 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097092295 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095470681 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106748823 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093906229 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087983247 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108963354 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101439459 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084852617 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108524485 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096217256 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096249794 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092593795 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111611805 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095171662 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097126518 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114691106 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095182293 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089633383 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119352373 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091555165 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091724583 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08786328 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.114968686 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086648715 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093030145 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112692205 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090448576 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088495489 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116078 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100654292 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09690664 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111044735 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097466719 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097742303 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.117622351 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092344434 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096828976 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107714123 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087846041 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08978819 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084621077 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.114509742 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089586652 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096836231 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110736619 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093130137 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097340195 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114442656 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091827016 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097638418 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123075702 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08749395 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085086045 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110817693 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102760834 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088046847 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108840051 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095392061 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093235299 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.115287119 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095805309 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088666329 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091556848 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.117966989 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089553353 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09852709 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119245168 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.09820226 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087570495 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.115796222 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090405701 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096882159 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106253222 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093063371 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09048684 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111227628 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091624541 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091286029 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107368294 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087878496 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088901198 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098287951 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112020315 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106382934 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090997681 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.11087099 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090237318 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088157938 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117408498 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092635055 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097846391 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.112949366 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087579728 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086179259 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095930972 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113741939 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097722911 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088558577 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.116376952 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099979177 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096609867 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.112251964 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102462039 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100197054 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116676321 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100356963 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086288395 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110451549 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099284256 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093557607 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.094548755 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.115597621 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088541102 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094656071 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118875992 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095900647 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09154332 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106685155 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094106581 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098541715 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114320677 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098671757 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094747039 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093444236 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.11018813 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09705702 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098066593 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113275746 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099387489 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091556624 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.116902273 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091259734 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097850587 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11228861 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088586684 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085917887 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08922635 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.119024815 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088091503 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096363458 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11698985 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090090435 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092632862 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117319957 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09157807 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095352494 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117835327 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092237723 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101917928 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093398956 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111910766 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0982127 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097064136 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10692486 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09298878 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091781686 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118058672 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094234699 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.0981087 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113469864 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099639066 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096045167 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.096413588 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.118035479 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099569547 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086542999 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120007256 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098670572 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096325473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110985446 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093192232 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087312166 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111186481 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101124365 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090294138 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100284254 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120342335 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092194512 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090700887 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.119219315 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093924734 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098794504 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109743561 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096778018 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087102133 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116234361 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094264757 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099531091 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109261674 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088617234 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097951203 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.097582137 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119179513 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097252803 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09950008 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107981831 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088714208 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.095245758 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110930832 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103714607 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096916268 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112081696 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093246047 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095116461 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.115048872 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10150783 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088404499 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089359381 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116553445 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095799767 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09042078 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109215832 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0974984 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09172012 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116659247 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093060777 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087742866 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112565701 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100508394 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09200825 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10913 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092125272 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10020791 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112987753 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091573257 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087412131 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118425257 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097957106 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099772616 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089507097 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114726371 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091710416 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095070155 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.119655143 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092495859 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092658622 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112618051 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099086009 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097930827 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109792594 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092506023 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102529972 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117634793 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09606861 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095798411 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112137382 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101668426 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099924623 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095352579 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108650017 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088665825 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092070361 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108414134 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096906752 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099088226 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113257181 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093127071 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097219018 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118329954 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098271273 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09660189 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086906877 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121273964 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09249756 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096106898 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10836878 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089124264 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097721493 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117844995 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093640037 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093530534 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094728956 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117363685 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089347808 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091298952 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119679798 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098467166 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098187153 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113144811 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093629979 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09641534 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123647367 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096379332 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093023372 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12126194 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101452584 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094895707 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113340013 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099941154 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10094799 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095736508 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.121662789 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092567399 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093110662 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122034203 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101688463 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102450008 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11424109 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088896109 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097830768 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112357447 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090348204 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098111994 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121881187 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101186133 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093616966 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110319188 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104294021 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099139976 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114163714 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094362244 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092224288 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097503647 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112916201 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09856505 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090709549 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122237199 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101406195 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099429236 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122827753 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090890984 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09951369 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117576058 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103885699 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095211887 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087787393 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110754735 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09707961 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100508676 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.12095982 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10010984 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096863261 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117944284 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097696015 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094139525 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111904114 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102274117 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099866234 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095545182 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118356579 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093879989 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096156734 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.116828639 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100758248 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101806283 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115379737 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105285641 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100102859 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112995933 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094030104 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095026456 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.117097471 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096609532 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099896021 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091869205 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.11012752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100908252 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100480375 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115420956 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103510588 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101315617 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11327592 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098556463 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102423852 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.118806866 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098514078 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096342569 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096541776 seconds)
  done (took 60.981514943 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143929449 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102454832 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117010513 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096812608 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114772513 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119109692 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098002481 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098016188 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118039311 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107710072 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09644897 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116028633 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113199343 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116681221 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134437689 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105775693 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116423821 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100491159 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096831227 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097981689 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131996778 seconds)
  done (took 3.256335512 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114813381 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109982331 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128993141 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111560608 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102773463 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130419319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107967321 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129514239 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113086894 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104663493 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132762213 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107500185 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124622456 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.1054953 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105440338 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126687626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111686932 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10306666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.13009395 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109559616 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12567886 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109106136 seconds)
  done (took 3.457424681 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127083289 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100203277 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094536754 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117670207 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101299279 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096625437 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121432985 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09843321 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105140127 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091154187 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109370332 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093724592 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094715496 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116865803 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092257344 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097059688 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123492192 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100640347 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102252173 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096132022 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109934198 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098199463 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097599957 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107678803 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103344813 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101797067 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097112007 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122063003 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089511729 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099633287 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117510592 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092916551 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089107955 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087294742 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110265155 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101941056 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099224942 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117977937 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100488131 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088720553 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097849136 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121972058 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090116959 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097799665 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117232608 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092934042 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099878471 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097028219 seconds)
  done (took 5.8446032 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12778351 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162401019 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101734726 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135291173 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134471342 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108283991 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099523853 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136074169 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098241207 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123221873 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113217082 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132643285 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104215282 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105415619 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100577901 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126325647 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103081432 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100206038 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127385963 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101032709 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126044333 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104998922 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110512171 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132422447 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105045776 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099977187 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123770987 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105741859 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109310401 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128444457 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10538166 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104935198 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133086173 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.341672423 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100431654 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124500605 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113041522 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123669686 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103930148 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100277018 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.121187009 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106239508 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102227105 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133352378 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104512034 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102731145 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123376588 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099563149 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109244892 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124150529 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108664887 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109846012 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125456124 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102005402 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103946313 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13210007 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102160519 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100006005 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124163141 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109774801 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118481126 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107374413 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1102797 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.12074684 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10723407 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111531688 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124017641 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103634761 seconds)
  done (took 9.045256349 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132290943 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103468104 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133988408 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113448436 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102963994 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125786799 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105506808 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103795203 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126289009 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109906871 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125035256 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197959704 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123623983 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109580182 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105208603 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126717524 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105074078 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103750463 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126577935 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104525951 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.1032395 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134389756 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10446942 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131910465 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115652079 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100372674 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125833004 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105707687 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112939681 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126371548 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114793869 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126345278 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105715679 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113040363 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137338135 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104783952 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099394391 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125512499 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104868888 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10487785 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.124021749 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11242966 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126119282 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103768172 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106248886 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124702114 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115416402 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114039426 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13046308 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11072073 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.124529123 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114583967 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103523923 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125503815 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114325071 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138932694 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113339575 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113119003 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126721645 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113720144 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132347588 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120443222 seconds)
  done (took 8.221336787 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101031752 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097928012 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097756051 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120141376 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099494572 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097742749 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097255029 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120227589 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099047476 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097857352 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119593892 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100059093 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098774252 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097441838 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119889068 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100131156 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098268576 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118393214 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100417248 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098160713 seconds)
  done (took 3.012377542 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108366341 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114815762 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121989974 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107964807 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100968438 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125919413 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102395091 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100574399 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100917539 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123340056 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108791404 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128904647 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10359295 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106618602 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128841755 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107104393 seconds)
  done (took 2.724845289 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119073047 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11553497 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.191174594 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102597579 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123573643 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109036004 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10187466 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124837708 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10298951 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107307786 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104465657 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127001453 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10318381 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101365951 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12359776 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104765263 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099738184 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12570559 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103004662 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189394847 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106414431 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102731585 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123656036 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106871999 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103645056 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126307253 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108971001 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100815971 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.1021789 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123756745 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103428638 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106925338 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122986618 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105784336 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101898122 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123906518 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102146864 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102341941 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124631903 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102623884 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103289307 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123008044 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103303783 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103743733 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099120696 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.123790508 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100622664 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106641759 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123256434 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104164288 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100811871 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129626669 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105973279 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110012896 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129251617 seconds)
  done (took 7.184337161 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112862737 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101801447 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133811845 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100469483 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102708466 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102236399 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124727564 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104385523 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102062594 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121556673 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103792641 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103718732 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123025027 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104043589 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102748151 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12296632 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10073633 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102618517 seconds)
  done (took 2.906166889 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106961171 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101257191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10530386 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123611182 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101653372 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100271423 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121771868 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102274341 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099688066 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101124066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123829851 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101585631 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099071252 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123366665 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10259321 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100386091 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12232185 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10239044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101363713 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09942554 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123316214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101063213 seconds)
  done (took 3.306001919 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11215399 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180849214 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10696305 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.188717682 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09853143 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096466402 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12790308 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09871257 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112116163 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119160428 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097008627 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095987692 seconds)
  done (took 2.376558571 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129097252 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136502848 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122922276 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10271036 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108737197 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126968459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10626453 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10467211 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135318515 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116669879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126025318 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11496931 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112432957 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135056873 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108736212 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130327869 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106690298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10461222 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122810586 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120868245 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105568893 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134644552 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106778966 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105623213 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127864929 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113868062 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133820211 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118221219 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105819302 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134506454 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111111813 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105039738 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136238282 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116310161 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124162309 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114017658 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105024971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142841755 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110177043 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135947364 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103740749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109763217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135313074 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11220092 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133342619 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107948983 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111113037 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127091199 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107780246 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125800197 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13300192 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113513081 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131453464 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114575111 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112494828 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147868559 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115856098 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13614913 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110355089 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138556297 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115279975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111419479 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135663374 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118518225 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132795549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115702814 seconds)
  done (took 8.862914738 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142280968 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102638715 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129335262 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117852285 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13565037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10767912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108588307 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127040017 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108427532 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103032315 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1687168 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107175186 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11395991 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136812149 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105953482 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127781393 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107857652 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114033662 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125167394 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127069888 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126797369 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116264017 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11413856 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137162687 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118538936 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131165993 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107506763 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106920849 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128740994 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107513626 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111348156 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128485086 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116018525 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103654185 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137363579 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1068124 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127800986 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115236931 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10640816 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132707665 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115369083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121010558 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129883115 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107207221 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13861077 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107777131 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106303814 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125460082 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107812011 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102796495 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140073381 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118774928 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139751798 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116250005 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106615901 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130778922 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107462327 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106901688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130236619 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11212678 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136051308 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108441463 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126369645 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129212827 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108032542 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113771619 seconds)
  done (took 8.841860742 seconds)
done (took 167.695094149 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.146502863 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.183731343 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.14254801 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177920393 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093825325 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12699681 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14716643 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145631035 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091261419 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115891709 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093854325 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095881132 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181938446 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094742747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091956098 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094255417 seconds)
  done (took 2.968341471 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190821731 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.303254204 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106760744 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118953946 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099518551 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09744275 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.1183106 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10054084 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097995433 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125632119 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098593169 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093635307 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12573078 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095582004 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098129283 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095942527 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125838207 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097993885 seconds)
  done (took 3.147148513 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117946893 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142779825 seconds)
  done (took 1.217372527 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127081219 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194271654 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277698555 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166109343 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118951774 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136753649 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146831922 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131077763 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186119624 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130960081 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111296321 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095959198 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144779267 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104596246 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112252489 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119289412 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125696031 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110979679 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.13444802 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099707988 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119430345 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.124172769 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102909924 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133542266 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177374292 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130169278 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103150528 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101378174 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120201595 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11264788 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103169187 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137458795 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110736418 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175289971 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10083803 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172993986 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103925734 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120061206 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113132231 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097245904 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123078117 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102263465 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110340908 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118242213 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101789999 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103947305 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123361593 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102666528 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104385045 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127589257 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105022264 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125634047 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1482826 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127296895 seconds)
  done (took 7.813283447 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.8517019 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139401832 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098226707 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.996237885 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14817704 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112561458 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.822591378 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144192945 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251201706 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.879569317 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115311668 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110437504 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253121001 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254476584 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.254456669 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.371948824 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690437839 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134799696 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127768122 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160797784 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107332964 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145527383 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119348032 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516397384 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100549219 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098022148 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128856697 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112038339 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174846418 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099389751 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124285542 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174627347 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289393571 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203066667 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098741216 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121450865 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098505789 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182856593 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26664297 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2142731 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.192210769 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097566288 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098907691 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129053665 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119119829 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095760241 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178043177 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190918294 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188133123 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104089114 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112608021 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133225743 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107675317 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176068623 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097969169 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.351385342 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385187266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104081975 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10652003 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138369855 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262874021 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101295452 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227222634 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148389079 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209163556 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099057999 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840112803 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182680637 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099147809 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128257609 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106760352 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104679801 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129409351 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165257903 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500266605 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111140426 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126354693 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099021375 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227626975 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099120681 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119590516 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157106804 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122320677 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107550683 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112573673 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133936471 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185595722 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245476015 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134348934 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107917202 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126846212 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113129404 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100156474 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230210708 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222735768 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173369797 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22681936 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108101689 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18024557 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18166135 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106116584 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186797982 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106821846 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138094736 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108615126 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217152595 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155257769 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101988077 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103425566 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130912731 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.133793938 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126219998 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109436053 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188928025 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553109356 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158965447 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119847766 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104552027 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108209645 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17686205 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10517552 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.255658792 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13262726 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182174775 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107009336 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096422664 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130289909 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.155446966 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133565838 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1081148 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129827206 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108570036 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.27766976 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216458642 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111808275 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243863956 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.196613113 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106285113 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190549992 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106354971 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184773923 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131058836 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108889316 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100778598 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825172632 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136434957 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106935458 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126565297 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184372513 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098623876 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125012262 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099602016 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096756002 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812807763 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124596431 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099223654 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101861423 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127880129 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108714431 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106623785 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127674815 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153268095 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261050373 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113841979 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128061976 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100932703 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.173667931 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.1021171 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100201621 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098786001 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123966504 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109315859 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124973156 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103990354 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187180493 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149762686 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.243882424 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.629149345 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101357591 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100214814 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23504663 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122672499 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321380377 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107213959 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227637551 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182464512 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096512434 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.376714199 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.161934709 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205600297 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102935929 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187710837 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097214398 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130320095 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153039451 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123216561 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107975398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173768893 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114010541 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135398475 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.271858672 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099940352 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250732932 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098041744 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185622677 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099567911 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130540452 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319354627 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099601218 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139549072 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15419682 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128492529 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100778588 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.668703285 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100355165 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132792116 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108603897 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226520422 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181348169 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107089392 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130998424 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112949411 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178193127 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228089523 seconds)
  done (took 47.310100636 seconds)
done (took 63.409766352 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.292950901 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254441169 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.30289818 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.209143972 seconds)
  done (took 2.109569134 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.256911051 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161695267 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.232519398 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096762857 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.240438997 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096130152 seconds)
  done (took 2.065584891 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.486262764 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.36829266 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.302576473 seconds)
  done (took 2.140910086 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251087602 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236542818 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328959465 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.400533123 seconds)
  done (took 2.319064422 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.263990976 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123440445 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.121496845 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.208154894 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.230150582 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209122 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127054547 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178415463 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127412603 seconds)
  done (took 2.621222195 seconds)
done (took 12.234693977 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.260842354 seconds)
    (2/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.343181234 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.197773326 seconds)
    (4/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.287546864 seconds)
    (5/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110448696 seconds)
    (6/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.162069619 seconds)
    (7/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.206517758 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.304824733 seconds)
    (9/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.193396321 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.203396161 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.153920475 seconds)
    (12/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109653221 seconds)
    (13/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125520247 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.153687669 seconds)
    (15/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.183148481 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124007652 seconds)
    (17/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.226825211 seconds)
    (18/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.189617981 seconds)
    (19/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.24855005 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.242681439 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.184393834 seconds)
    (22/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.095666523 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.286947362 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126793792 seconds)
    (25/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.201488083 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10020764 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.233939379 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.129466635 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115487481 seconds)
    (30/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.141639736 seconds)
    (31/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.099909532 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.14095692 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.129635865 seconds)
    (34/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.212589619 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.227250548 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.134563028 seconds)
    (37/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.126775008 seconds)
    (38/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.207686461 seconds)
    (39/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.145075571 seconds)
    (40/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.168852189 seconds)
    (41/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.192762467 seconds)
    (42/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109623587 seconds)
    (43/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141358185 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.294825758 seconds)
    (45/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.208108593 seconds)
    (46/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.163860678 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075188946 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074390841 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178220656 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114558873 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07478487 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.132650332 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10103262 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.154552206 seconds)
    (55/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.133443328 seconds)
    (56/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170795196 seconds)
    (57/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107026361 seconds)
    (58/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.101377415 seconds)
    (59/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.142301232 seconds)
    (60/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.170720744 seconds)
    (61/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123985056 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105238423 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106698286 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.132514319 seconds)
    (65/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.187574165 seconds)
    (66/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.1707914 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147875876 seconds)
    (68/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.142111162 seconds)
    (69/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075086881 seconds)
    (70/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.13300061 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102424223 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.104781177 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124866898 seconds)
    (74/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076676677 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.1687676 seconds)
    (76/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.188740362 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120257398 seconds)
    (78/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108496458 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.155984523 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.156364231 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.102724646 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.165418535 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.186485913 seconds)
    (84/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.136096041 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186489067 seconds)
    (86/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.19295408 seconds)
    (87/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185401535 seconds)
    (88/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085031041 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.12656316 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07723245 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099620605 seconds)
    (92/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077551033 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.1074062 seconds)
    (94/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.292344953 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.124641483 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101591302 seconds)
    (97/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.139032292 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075037048 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150673547 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075709841 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075459081 seconds)
    (102/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098211898 seconds)
    (103/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.110257803 seconds)
    (104/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102182869 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101143537 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074868535 seconds)
    (107/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.163606859 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102515175 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098417832 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107400274 seconds)
    (111/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087445296 seconds)
    (112/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.084347532 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169596133 seconds)
    (114/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.106748707 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11330807 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.171394225 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.134781213 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.131825301 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078125181 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106995763 seconds)
    (121/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.104037812 seconds)
    (122/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077720912 seconds)
    (123/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079042306 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084758328 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107705762 seconds)
    (126/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.192109391 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.163141163 seconds)
    (128/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.128630368 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078425789 seconds)
    (130/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078809447 seconds)
    (131/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.140177475 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077119516 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128347717 seconds)
    (134/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.141805821 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120889278 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.146983821 seconds)
    (137/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078469371 seconds)
    (138/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078704316 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075909128 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.195588792 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099762204 seconds)
    (142/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086598485 seconds)
    (143/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.194488158 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111157217 seconds)
    (145/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108915061 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124785959 seconds)
    (147/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.169473353 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076533351 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101126678 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.101781033 seconds)
    (151/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079047527 seconds)
    (152/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078542196 seconds)
    (153/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077160564 seconds)
    (154/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076931123 seconds)
    (155/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.099902967 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109734132 seconds)
    (157/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079349999 seconds)
    (158/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080612529 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099090182 seconds)
    (160/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110282785 seconds)
    (161/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07839404 seconds)
    (162/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076977702 seconds)
    (163/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110718651 seconds)
    (164/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102137577 seconds)
    (165/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110277809 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108111722 seconds)
    (167/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.110290659 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.147807242 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103215237 seconds)
    (170/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107683284 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099495128 seconds)
    (172/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078493963 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099837217 seconds)
    (174/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076524445 seconds)
    (175/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077550754 seconds)
    (176/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.101761602 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103457176 seconds)
    (178/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076509882 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078230128 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.075496767 seconds)
    (181/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.100920317 seconds)
    (182/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.077277955 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101931068 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119626014 seconds)
    (185/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.100648432 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102901618 seconds)
    (187/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.076032517 seconds)
    (188/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075991883 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.132509789 seconds)
    (190/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086336178 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07694479 seconds)
    (192/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078376033 seconds)
  done (took 26.218749211 seconds)
done (took 27.213353821 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.211216845 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127807231 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108041328 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107471166 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202419019 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115512106 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148310341 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110862981 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118323285 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132453049 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100342455 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12078495 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106885742 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205378579 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11048228 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127005058 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100601541 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118194657 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148547602 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124021367 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204304339 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102669817 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117268088 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125046544 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177261844 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128314377 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108917785 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108927647 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1453043 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111724276 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109268268 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124855232 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.124526882 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123137268 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100008983 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135604488 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099771216 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084948486 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.133194429 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111412342 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121230707 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133690163 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111761133 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101177824 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134343855 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110725922 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100787092 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111508199 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.124627452 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109834128 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10312587 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.151371307 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109238545 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098676858 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.124829078 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102161008 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118952351 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124916856 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123846998 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100446273 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.125233588 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103226055 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112146964 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099988567 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134487463 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101453665 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109829855 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.136150421 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110228304 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102874935 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126110435 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110887195 seconds)
done (took 9.841957914 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10706602 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14525061 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198990504 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212097903 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128072652 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114287252 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.14224583 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123592405 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112403544 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145527785 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.135998087 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156292077 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.180591548 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141792912 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114766268 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112185902 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138472176 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109759358 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.209068711 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125625814 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12403939 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142832839 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127446927 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141551295 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106206107 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134176519 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133174382 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114436386 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104095024 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13818827 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126030114 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104287861 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132773832 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124641657 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122254627 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140265387 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115976516 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112095929 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130854375 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106271216 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111981254 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145889916 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104743352 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138970698 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115828289 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120089871 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.112501229 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142867636 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107882499 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111933273 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131635418 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131739731 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11553041 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148521722 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116165944 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.140260817 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121435566 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117762436 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131649587 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120850772 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105478656 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10383678 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133880193 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126809577 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.132313824 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119633968 seconds)
  done (took 9.572426294 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124169555 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133807348 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140203939 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116078248 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110348346 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125406167 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099547053 seconds)
  done (took 1.893217969 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101909023 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1860785 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206621261 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.20846477 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182424456 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217241507 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148457339 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101784906 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134859002 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136708133 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186994935 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240772281 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110241263 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141696424 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183704918 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126970582 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185642213 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126324272 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11551873 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211847321 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117601403 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155689851 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114070377 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101062981 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208081103 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101869251 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260975264 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118635747 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137000093 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114669318 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115421008 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204366677 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208005665 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116078589 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108547706 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207797114 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207117508 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115783368 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.221932688 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.1050742 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.208222792 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115617441 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115764119 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142347358 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116679286 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193599292 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120464726 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116718364 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139057604 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191498045 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136753773 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184874986 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136598388 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115899714 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110976624 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142853192 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124102874 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115799571 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.217609871 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117767685 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209275856 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209843281 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184146512 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210294498 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125818942 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213276565 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.204457444 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11524657 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108145063 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.142902555 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183704361 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140963468 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116675328 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199053434 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119411827 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211663357 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183474945 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139888605 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115092452 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104215671 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140586149 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.1029114 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201297094 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116216557 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112199573 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146221171 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114758014 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114131749 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.132271953 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125112689 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114758698 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138249052 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120345109 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11514674 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144333038 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.213138382 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113403635 seconds)
  done (took 15.707795574 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105031974 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102717466 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107233766 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129787311 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104171131 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103489987 seconds)
  done (took 1.71586635 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140624487 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115478473 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150318999 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117957115 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159605478 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.217494835 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.221143813 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109305348 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158988527 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125421685 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.219851665 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.194431905 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.220136994 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119213348 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.223483191 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117171145 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.224179813 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114419838 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151609706 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114059031 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114446256 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14692387 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113744089 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.210965568 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116840382 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143884264 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111844977 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124027401 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15046484 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11295477 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118968022 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14501023 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109866171 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110036227 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.223717196 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107482735 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140268004 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119537063 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117429506 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145086548 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.221580359 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115586448 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121966239 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145031678 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112104665 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108467974 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.14573694 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111424213 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.225102649 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119177903 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119119896 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144082053 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117541494 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.1185834 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135935407 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110861046 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144772892 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.200143202 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145012248 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110319192 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117735306 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144889053 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112977569 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120913199 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143756341 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119649415 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108519024 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144062097 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115438651 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117770497 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144966148 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118489979 seconds)
  done (took 11.24611943 seconds)
done (took 41.171428612 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.509596827 seconds)
  done (took 2.568909716 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.8874743 seconds)
  done (took 1.947794137 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.547783174 seconds)
  done (took 19.641350702 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.522344191 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.599270864 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.024258422 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151462877 seconds)
  done (took 3.357875069 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.069772927 seconds)
  done (took 2.14826442 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.312497401 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268864248 seconds)
  done (took 1.649889733 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.738932296 seconds)
  done (took 1.820360365 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.510476608 seconds)
  done (took 2.577409098 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.35177737 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178899822 seconds)
  done (took 1.609059827 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.606650603 seconds)
  done (took 1.687295384 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.933683715 seconds)
  done (took 21.014080266 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247873198 seconds)
  done (took 1.334345953 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283821345 seconds)
  done (took 1.371328695 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.771952172 seconds)
  done (took 4.858832679 seconds)
done (took 68.658365516 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114140459 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115898666 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114265021 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14052778 seconds)
  done (took 1.560005641 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122111297 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.137671814 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119323885 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142535293 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122401538 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116047002 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142164622 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118718485 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11458224 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145653743 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117883303 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115763138 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145012815 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115808504 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113411924 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144714138 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121668845 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115108362 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142947862 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117807484 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118217987 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143139783 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121089663 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119017789 seconds)
  done (took 4.121410613 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113610145 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106401957 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108139292 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132290163 seconds)
  done (took 1.55310116 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124962613 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127310122 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151781754 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12506491 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128491407 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153202712 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115666946 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112627455 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141018261 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124580159 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131109086 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154712566 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127030932 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116261865 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152980433 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110819045 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115531168 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153120188 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122852408 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122771636 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14327944 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122058137 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119816947 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151550822 seconds)
  done (took 4.238529873 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189888551 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12731711 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171919634 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159472218 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17432694 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115253714 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142665798 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147995592 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122549789 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116853918 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146245537 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16198486 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14797014 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120070442 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115936049 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148373974 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129469057 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120728488 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189093353 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120286629 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148207345 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129167029 seconds)
  done (took 4.23816104 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120217237 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107307671 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103935532 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135240235 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118912976 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110396155 seconds)
  done (took 1.792785842 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107666249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101798259 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101303765 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127345418 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106380256 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101732298 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100483983 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129858382 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101896572 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101878224 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127880894 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101490704 seconds)
  done (took 2.406323748 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.333761819 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107376458 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135435679 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110017996 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112540069 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103757434 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145787279 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10588944 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270414321 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102140811 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.143751071 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195144401 seconds)
  done (took 2.963809962 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198284641 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144267905 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289137655 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340058392 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185931343 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185892137 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264416718 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189534466 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173197955 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163899839 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211594759 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157657208 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179090744 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180779183 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165578711 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157420344 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192440445 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200800698 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166564387 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232751069 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155328813 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197174141 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187196841 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173731951 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136168002 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184519163 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117286713 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124348014 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189937388 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185858666 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168475837 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17400493 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137822232 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214384938 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248837533 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167909027 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28431577 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157938903 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19132611 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189026987 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256755048 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137060483 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210334636 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176789537 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127219892 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214092481 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149562325 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.209093057 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132551288 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168507481 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175995881 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202911905 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197144192 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13445971 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306691896 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133166888 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167790144 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16459562 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212908545 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222532047 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174317009 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119550064 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203190485 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216794323 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234932298 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139793917 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188252189 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122262625 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189768082 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202134203 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204590634 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184736117 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.22522156 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131724639 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165588094 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196303293 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178019454 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202310268 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193660935 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117912833 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174469514 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132514686 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123493924 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213946539 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120967599 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239765713 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127300603 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340979561 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208776166 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151374567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184029403 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153815777 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186671853 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142739949 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128027889 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139436603 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186374228 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153349512 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123982146 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18157028 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136087116 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151450367 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147181468 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.146332098 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165101385 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130633088 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187353145 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192649791 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129821552 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198722499 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146852976 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.184409162 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165261987 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219050415 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127699287 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157366303 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214514295 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193569178 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133174604 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199549675 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220558191 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148868923 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131540327 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188630065 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218406746 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140867818 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226190579 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134397688 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160571453 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135161515 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195764259 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155533394 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179336919 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1261405 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18827309 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18907637 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152081143 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137186027 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204833261 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131896509 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121992695 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163165196 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132447392 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.168670221 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147143681 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135854042 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178735651 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18743735 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162605551 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178548235 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132099661 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194772649 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129451938 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.189786136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147394125 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116981196 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199641154 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219940874 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126810965 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204707079 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160108474 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211761045 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194933107 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127372125 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177936039 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154100425 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118517423 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185505138 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165321088 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18666128 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184202415 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208474078 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189751737 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157339031 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173894253 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189459649 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182311417 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180288809 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141160861 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195520787 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163008422 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.145433117 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122073497 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.1256776 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161062111 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128000119 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133618871 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200162048 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187450455 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179676624 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192936005 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13298813 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216982055 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121759363 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18515966 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196573423 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138458808 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21202529 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189012391 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201540764 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137162432 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185749469 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118278554 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122562123 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.159081157 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158897946 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163061148 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133213797 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166006578 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188612783 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195963309 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143061846 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2209177 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189389882 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225000598 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.11997693 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157622507 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195505443 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163563538 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.209748452 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13135957 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183167841 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190082304 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165200822 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187591059 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193091177 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172471656 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21944771 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.191023921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129237232 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173945897 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159523918 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134470234 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191661101 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14237953 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157262141 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148844657 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163004972 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138205649 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206817183 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140230813 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201952949 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155691361 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194462827 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123062779 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166091286 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171221443 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170326111 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104836733 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194241639 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190228389 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174471426 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151066106 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199976498 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126506564 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34616337 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210127072 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172706636 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159447407 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13680728 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194574522 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160772739 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185080426 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181886167 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165850058 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200514046 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193926435 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138787666 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157039175 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14637091 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174788843 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137140582 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.173066486 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158656059 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.168155696 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179835857 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161910744 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166445597 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20007139 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142190956 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174138714 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137608032 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248963332 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163848087 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196886776 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161378155 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192483349 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206193178 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123225257 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124300166 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.15616259 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182560972 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125958368 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200190939 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198384178 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210908445 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171285264 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189319109 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137674801 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.152307519 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164863262 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143036379 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214559253 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160406247 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136001768 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216502617 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125791249 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155540142 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158707326 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300931638 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145565976 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200246067 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106059805 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.294183072 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128326708 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129290925 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189516458 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192256664 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131664828 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179759929 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201625714 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138271307 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190271223 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132435029 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20750048 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212959974 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162751955 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197509112 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141862224 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18648798 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155881782 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201788909 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142269323 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174592002 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155855065 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220642481 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177351737 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15860335 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164953044 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195312257 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165823859 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195663359 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135191981 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209111571 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12504852 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189415369 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136415542 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152782317 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156075538 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.20108303 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128260754 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203829347 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19286959 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130919187 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125402589 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171713922 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162215528 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165156705 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12839377 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208467462 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127617855 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203678626 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203046499 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156527925 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165020793 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171388681 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128767151 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13416204 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169237379 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12921581 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172621538 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204772951 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1282165 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204854154 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186712146 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160636857 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180494411 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14041081 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.352861804 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127079237 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185948714 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177096856 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22156806 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147501241 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200049492 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166025266 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176328245 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160792375 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171321061 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219351799 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189859733 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163223098 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157326237 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1411529 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133979961 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161168302 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147939472 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194265332 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138323125 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162371954 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163379278 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170091032 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145598583 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138155411 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225437529 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175923789 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181264872 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214154351 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135211338 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201393246 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168267513 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157030204 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159497705 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196730192 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140784723 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176838739 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13044429 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163308199 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207820131 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.151241851 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158131852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197111458 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167859987 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197354494 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132112289 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20284892 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139392265 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199725723 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125597924 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148772406 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197251386 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130999183 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.154018326 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169683969 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185024158 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162123436 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168611127 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174946558 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222595395 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122176773 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131259944 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299235003 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187018844 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195177397 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162198201 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138034068 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141506718 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184705183 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15982246 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197951354 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127122842 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156834204 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143429523 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181269641 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143013629 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192505706 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170268085 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183828988 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182676833 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132153218 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283354801 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139897335 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197170263 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114576209 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156642198 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139146161 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131273826 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168239731 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209210479 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209222231 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190825512 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14323365 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162950908 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125950452 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128139206 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193482118 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147600707 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194241806 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143141874 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.132021338 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139484165 seconds)
  done (took 84.960921363 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161899984 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152874508 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167672299 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221541284 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193344142 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287808093 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227994492 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246843658 seconds)
  done (took 2.843072067 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118737995 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159315856 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140379858 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143790464 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107891745 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.443322465 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128937491 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.147090787 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158325965 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150334533 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135387248 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.623529329 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114474338 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143546722 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119114308 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135777336 seconds)
  done (took 4.145075914 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.113510892 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551234297 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.990099144 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.298290192 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.25271518 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.201808046 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.767444441 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.686526568 seconds)
  done (took 13.043139012 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.143652375 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135207511 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.332654107 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.256179618 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.146503797 seconds)
  done (took 2.204936407 seconds)
done (took 131.146052992 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121665728 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121333865 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120681827 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152248454 seconds)
  done (took 1.69320216 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.175493838 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090366245 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092239887 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117816452 seconds)
  done (took 1.663295224 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427444137 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089712448 seconds)
  done (took 1.731978246 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149300941 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139802216 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164371676 seconds)
  done (took 1.65405342 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140171811 seconds)
  done (took 1.32782803 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125662559 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11960372 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.236504698 seconds)
  done (took 1.675103045 seconds)
done (took 10.940483087 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117358035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.921606091 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432477912 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131642568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708093712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426035837 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.422554061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173087375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171392966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136228481 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129363626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687960211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436465712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873389195 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.388577379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.901632562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691517888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108820548 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143492214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110127351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.401606721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136249544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110874038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109705625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715484879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.451687387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107735304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912447859 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108501987 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112301922 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425531936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108911352 seconds)
  done (took 20.994252051 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116631385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.163942775 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14434749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110292745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110891883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137488952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121193441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119489842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201597071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107612907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158611299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107790122 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11332954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137418622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133657617 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107791163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139669108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112282912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115787699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138385276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131252044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107718944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136534234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113320601 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108279602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156338612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111267092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120298708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135171122 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113321449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113586969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108862208 seconds)
  done (took 5.254001669 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156552462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173065892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148027761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145426932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186001024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110924733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222087871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147316552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201336132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11002056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130315668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136790145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14911865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108546427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162529499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110369901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111170483 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140988248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117588664 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110344431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159627109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108823438 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11050187 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139721938 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109974116 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131197085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138626549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121850165 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108588918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142184178 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114682409 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108336838 seconds)
  done (took 5.574252867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12396634 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124206302 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129694903 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162251637 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118466487 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121685182 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15216389 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119260375 seconds)
  done (took 2.254499953 seconds)
done (took 35.269394087 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134453905 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126608873 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128264287 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154175693 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.188886298 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.14748107 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125835732 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115890382 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151499699 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130656781 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107962564 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116213865 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.15877137 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120860979 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.220982555 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124396264 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.226242266 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.193671525 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146723416 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123738378 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117600868 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.226275087 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121395415 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.14628662 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.194612579 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110438444 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.210981425 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119001452 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148988749 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111070335 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.222127772 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122780242 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116480167 seconds)
  done (took 6.101569178 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.208995149 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119004124 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148334565 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118868225 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.11838939 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147437698 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213572934 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148022094 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117722465 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117536075 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116692601 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224370381 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123014053 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145231094 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121496957 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.10855509 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.242505007 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.12032885 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108154672 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122562273 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114930207 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.11687051 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.254433787 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113596315 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117422808 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.148663449 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121011638 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122264349 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150258986 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121909576 seconds)
  done (took 5.485210264 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124813968 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131650182 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134866006 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.213980836 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146153409 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159974135 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137753135 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130174965 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16818227 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112089759 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125945638 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177104811 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127626157 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120984626 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14569212 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130368322 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131889333 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141933452 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120227997 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128755783 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160529883 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128275497 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.133952651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148925964 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110281765 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117660567 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.149661502 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127014218 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119959881 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.124849796 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.143976458 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114734949 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11285755 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.175545652 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112819214 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123051442 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166108717 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12316763 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.123402179 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173830708 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114475864 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.112153293 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.168013901 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163636122 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.111686608 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.15463388 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122644669 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124757944 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140698357 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130027535 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152280581 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142251532 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132329151 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.109691864 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140759684 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121768608 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112496816 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144534406 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128546555 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114402348 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.164435546 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121099205 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122631535 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.112500098 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.155281583 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11057155 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111355893 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.14724137 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138689248 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117889871 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178126577 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112034928 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122632563 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.154379544 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123168174 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12315625 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.140705188 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123848907 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122286963 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117067375 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.155111753 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114450431 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113515276 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.159347798 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132237517 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125430459 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.154471918 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125859089 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11467758 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143708914 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130243814 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112750744 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146393729 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125314402 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11188096 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114742566 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155938493 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123189631 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109815965 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.16722688 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116514725 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111366308 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.168068297 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115506488 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116820153 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.15188472 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154087217 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.1117386 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.153342939 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125773836 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111765089 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.149026637 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116765662 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111260156 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128676904 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158182243 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120820456 seconds)
  done (took 16.839607576 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.32011573 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.306115073 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.180282408 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.310169291 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156326024 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.205939121 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.304366274 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.306960793 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111615088 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179747478 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163772465 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.277272863 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144785674 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.139786595 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.308376893 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.35959734 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173203587 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149153172 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180387247 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125933093 seconds)
  done (took 5.632362994 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132491802 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146638155 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165938273 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141414548 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122172992 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159730758 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112908566 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132884153 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154956638 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122188989 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114839317 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160113758 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126653829 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127808031 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158466527 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148400236 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119786847 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148097211 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135046064 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116561814 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132622931 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138744466 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121735395 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165064822 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131021747 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122358666 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14226844 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118524658 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119291978 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.150784434 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119305956 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13030045 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148594513 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105851159 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123854384 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127367553 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150350767 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116574893 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116853406 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145460608 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128172543 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125006467 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150040039 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099312463 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130916462 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108568449 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156441521 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12695439 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106812798 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130526272 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155893153 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127813367 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118670563 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165758984 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120009991 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12872955 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154349671 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127490306 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116943155 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.142815016 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112903066 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116304483 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120496427 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.159328177 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127251821 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162317034 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130280312 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112717993 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116755189 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149522248 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116343667 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125192359 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164697987 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123709863 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.11876303 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155647907 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12175353 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094032819 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.151722353 seconds)
  done (took 11.714457628 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139086247 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122805137 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131006591 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179641922 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126358158 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118490922 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153528239 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132747035 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127008671 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163888724 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128459789 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125991321 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165809589 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123892391 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123449523 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161409746 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127936899 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151676479 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162064803 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140334008 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126794249 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150100795 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125081955 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123793613 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173336123 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125201518 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139443496 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158645046 seconds)
  done (took 5.158101889 seconds)
done (took 52.133990614 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.375534937 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.56922736 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.332492022 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.33071032 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.355991125 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.337877501 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.334792485 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.333885431 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.849346983 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.302769185 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.332883284 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.342271388 seconds)
done (took 30.02773114 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.385073747 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.860259411 seconds)
    (2/2) benchmarking "String"...
    done (took 1.630049347 seconds)
  done (took 4.711640278 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.322850036 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.32348977 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.571297559 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.321328294 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.345659219 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.327498996 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.331213298 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.325660681 seconds)
  done (took 16.76720899 seconds)
done (took 27.406715002 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.391906499 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.512561867 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.569356571 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.328208132 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.329113287 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.32389097 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.325135262 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.350394269 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.326952213 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.33134674 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.759204646 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.593056567 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.336190702 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.695183735 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.324586627 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.331264371 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.352342 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.559533182 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.326144157 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.359505323 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.302207587 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.312643062 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.337000587 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.323151444 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.332283108 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.329988296 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.32927734 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.325268646 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.494595374 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.328462076 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.358287568 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.326613957 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.395764906 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.335647908 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.337704296 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.338063047 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.508582623 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.335586011 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.312335366 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.350967821 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.522596305 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.331631878 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.332696288 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.331797351 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.331049743 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.386146332 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.331704883 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.440772268 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.347981644 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.333819809 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.361575026 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.691392179 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.337801232 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.330374009 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.331663602 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.546241954 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.348292129 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.380731099 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.348400747 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.327693169 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.333019405 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.326923389 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.360531191 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.330749696 seconds)
  done (took 151.710993501 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.329515995 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.333443516 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.329738732 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.333513671 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.331867502 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.33384096 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.326833022 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.327396267 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.332084002 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.358954254 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.331321725 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.328588643 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.33087428 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.277502436 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.342737911 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.355198957 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.338003688 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.333997864 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.354817502 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.327513397 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.336328225 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.332434612 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.329519412 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.329611467 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.332046985 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.403261958 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.359522077 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.339295288 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.341774055 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.32859255 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.3789108 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.338622111 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.976933026 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.207039063 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.338374477 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.359323433 seconds)
  done (took 84.916538261 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.32734182 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.329323342 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.327041877 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.326957547 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.363746752 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.330586337 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.930175989 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.933391053 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.297546546 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.494379814 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.742420765 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.573294871 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.329689824 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421796604 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.341173146 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.329896429 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345872737 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.354215467 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.333134674 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.331376086 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926152601 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.344766071 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.327644035 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.508638212 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.345283202 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362352321 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.719815592 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.556278817 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.328636485 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.327793692 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363182705 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.663570751 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.379182012 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330175526 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.677701119 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.451896112 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.436293755 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.327322498 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361591345 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.324464085 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.609717508 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.326318732 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.327264013 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.327363652 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.953438383 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.32272619 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.91037784 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.326702942 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.274875113 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.321830796 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.322929777 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.664801174 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.95528597 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.320670627 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.320134869 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.324830588 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.320991641 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.321620246 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.352213813 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.562969627 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.419372399 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.320381725 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.324322428 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.355366656 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.322106675 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.548601044 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.320182012 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.654025419 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.378114984 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.42603477 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89914126 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.325982967 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.416614767 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.440537332 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.322028622 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.322304196 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.322031897 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.320978055 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.434014031 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.322110111 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.733301652 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.322241141 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.500738252 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.339637246 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.676398304 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.424714282 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.321753851 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.670139238 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.325235198 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.319070321 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020645922 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.417046237 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.32236955 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.32271287 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.322538934 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.73286992 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.901257944 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.568643769 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.327351572 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.797879223 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.325373165 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.75775274 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.887499102 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.94906665 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.323799069 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.434630814 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.502225408 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.341317414 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.323538097 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.676685529 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.328086272 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.383639627 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.330301476 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.728692324 seconds)
  done (took 381.078221506 seconds)
done (took 618.925948146 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.198118651 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.144355461 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.298005239 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.156549979 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.136931843 seconds)
  done (took 12.152086217 seconds)
done (took 13.372256797 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518959295 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522122858 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.390005223 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52476088 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362683229 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536147746 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.509130574 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.345601781 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.436854282 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.411122974 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445312422 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.381024313 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.358321999 seconds)
  done (took 19.963266108 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.611985153 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.337838681 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.392613699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.606860151 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.372606253 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.616277289 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.657846689 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.337259438 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477722513 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347188672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346177624 seconds)
  done (took 19.325448311 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.60999841 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.337088257 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398981011 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.60254587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.372475837 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.615889858 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.647678326 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.338814469 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.493171407 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.348743493 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.345499029 seconds)
  done (took 19.33232164 seconds)
done (took 59.841526187 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.361495232 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.424804488 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.365311847 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.347063315 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.34263134 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.341233008 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.347952607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.342118934 seconds)
  done (took 12.092983194 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.339559304 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.344976453 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.340731177 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.342739418 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.34128318 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.339641175 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.340402489 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.34161537 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.344204885 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.340821244 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.341542186 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.340292513 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.340411335 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.340461815 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.340113611 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.342043874 seconds)
  done (took 22.682984628 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.343461658 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.340509966 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.343022598 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.340462969 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.341507881 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.341827582 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.344208071 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.339530994 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.339481314 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.340861755 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.342031325 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.340060288 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.342211198 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.340834754 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.343497511 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.342070797 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.33989304 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.340573857 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.345773382 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.339512062 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.341370372 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.343151082 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.340553669 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.34351946 seconds)
  done (took 33.423019091 seconds)
done (took 69.41877187 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.34147062 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.327721927 seconds)
  done (took 5.891657319 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.400186307 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.399107899 seconds)
  done (took 4.01981331 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.342406243 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.34012561 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.341846083 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.344483392 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.341081103 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.342860776 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.343126227 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.341257822 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.342667123 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.342183244 seconds)
  done (took 14.644199337 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.340624645 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.341250046 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.340212853 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.341311148 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.341200313 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.342564692 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.342499968 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.344034199 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.341649883 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.341031635 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.340695153 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.340439333 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.342408521 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.342021645 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.344768546 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.339777203 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.342030029 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.341114331 seconds)
  done (took 25.37596651 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.353846684 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.358744749 seconds)
  done (took 3.933743255 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.471680245 seconds)
    (2/7) benchmarking "second"...
    done (took 1.382180395 seconds)
    (3/7) benchmarking "month"...
    done (took 1.44504735 seconds)
    (4/7) benchmarking "year"...
    done (took 1.436743296 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.382909844 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.362903647 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.38342803 seconds)
  done (took 11.087226143 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.340679963 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.545078392 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.670777005 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.96272545 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.341124932 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.345877886 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.228867147 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.343747292 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.345959886 seconds)
  done (took 15.347397398 seconds)
done (took 81.520696585 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.32487666 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.389464539 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.344628413 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.343174504 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.637846572 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.332058072 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.329185695 seconds)
done (took 16.921984594 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.309537848 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.305991416 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.317610463 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.340462845 seconds)
  done (took 10.493474771 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.334137925 seconds)
    (2/2) benchmarking "read"...
    done (took 1.650676874 seconds)
  done (took 5.205847797 seconds)
done (took 16.919892255 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341989429 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.34199281 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.341599129 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.340470886 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.341534076 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.340441038 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.343960137 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.341261551 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.342400926 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.342124449 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.342025908 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343048472 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.34117818 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342920652 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342672866 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.341801681 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.341907412 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342463912 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.343355365 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.34203309 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.343505784 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343493383 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.341997706 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.342960929 seconds)
  done (took 33.434829785 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.343406212 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.344693981 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.341675716 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.344349115 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.34466676 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.342447657 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.343641554 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.342448001 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.344237479 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.342517175 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342682037 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.34235294 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.342556053 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.344149307 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344233998 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.344404711 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.342552135 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342492052 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343301083 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.342380974 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.342745416 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34353974 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.344712127 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342907499 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.34474174 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344680958 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.343584682 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.343270705 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.343972208 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.344761064 seconds)
  done (took 41.525814722 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.345147422 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.344842996 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.344969849 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.344445005 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.34467791 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.344414287 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.344734395 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.344937689 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.34412459 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.34502119 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.345231178 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.345705983 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.344724657 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.344317565 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.344847945 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.343581273 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.344900026 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.345642543 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.344959053 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.346187957 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.34690473 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.346614097 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.346063923 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.344096758 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.34536434 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.345710244 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.346991538 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.346387304 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.346151142 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.346613788 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.347028786 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.345098958 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.34739886 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.346785213 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.347225593 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.34649879 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.34988679 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.346070237 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.346615939 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.347427156 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.347994702 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.344024898 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.347169369 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.346521471 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.346922816 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.346464978 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.346772558 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.349767677 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.346799357 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.347429425 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.346507956 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.34879073 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.345746537 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.345296257 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.347445121 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.346536253 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.347641529 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.345518315 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.346073926 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.347488812 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.346685398 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.347384367 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.350648736 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.345719677 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.347052186 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.347048008 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.345996455 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.347928082 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.346072134 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.350415525 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.346688061 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.348895283 seconds)
  done (took 98.160427142 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.347817741 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.34673309 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.347631558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.347355968 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349611208 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.34657525 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.347382154 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346801129 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3474454 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.34810865 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347301021 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.348090247 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346338567 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347011107 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34809593 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.348807993 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.348403629 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348785211 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.347698224 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.350958155 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34750604 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.347245218 seconds)
  done (took 30.877069765 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.34785093 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.347517306 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.347577678 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.350275996 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.350282473 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.349391657 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.347600374 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.349467903 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349156239 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347745217 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347221195 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351189933 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.348879799 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3490191 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348687493 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349511295 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348125981 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350732984 seconds)
  done (took 25.506774528 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.347869956 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.347803679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.349081634 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.347950224 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.347118141 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.349893805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347930147 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.350432909 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.349088519 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.348608367 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.34798948 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351079592 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.348689434 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346583397 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350844805 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.347320432 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.350494331 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348749148 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349286557 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348915553 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.347301347 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351530819 seconds)
  done (took 30.903087037 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352280815 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.350109156 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.349842076 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.350452655 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.349162158 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.349244832 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.349773035 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.346923803 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.350349215 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.350281443 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348826792 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.34895728 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.351947507 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.352464612 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.349714421 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348683356 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349641747 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.349490782 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349287095 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349103456 seconds)
  done (took 28.223344855 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351560742 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349266986 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351590285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347589627 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350954532 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.350829826 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349724318 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.35343934 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351838513 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.350072233 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349817153 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.351307933 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349195444 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351269325 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350326255 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355257844 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350628804 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351242411 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.34967895 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349542865 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351319974 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351117609 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.352140875 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349978106 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.350042504 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351222308 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351768452 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.348730492 seconds)
  done (took 39.050105576 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350777322 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353528278 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.349124 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.349879273 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.350336378 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.349099776 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.349662931 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.352557449 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.352487807 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.349653847 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.353398629 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.349544605 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.352504276 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.351242121 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351704587 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.351805019 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349767134 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.349615692 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351120142 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349971846 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.351797279 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350391696 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.352361607 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352336588 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350598862 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.350549157 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351629461 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.350942873 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349844393 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.352691302 seconds)
  done (took 41.759105736 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.3690339 seconds)
    (2/2) benchmarking "in"...
    done (took 1.368102339 seconds)
  done (took 3.966320333 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.352817539 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352237923 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.351352401 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.35220021 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.353400616 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.349453353 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.35221129 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.35093676 seconds)
  done (took 12.043194095 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.344065093 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.353481762 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.354279943 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.351642864 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.352834037 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.344047008 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.352257374 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.356494604 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.345914307 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.344271511 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.348287658 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.344214895 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.346852478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345408474 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.346021474 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.348294396 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.353286539 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.351995259 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.352414851 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.35185261 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.352246763 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346439648 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34869117 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.35515398 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.347077657 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.353383735 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.352217539 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.3571332 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.344744787 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.350170178 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.346829259 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.354765653 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.354182327 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.351839343 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.353872931 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.353565441 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.352741874 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.352521856 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.354425447 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357328676 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351219442 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.353020211 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.348980833 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.351299734 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349927712 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.355371597 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.353497303 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.355004571 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.345401526 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.347088486 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.354821106 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343686259 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.355048602 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.348863281 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.348355311 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.354764503 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.361014833 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.345978449 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.346692277 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.354040598 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.362229196 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.35695507 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.35186472 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.357164366 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349301559 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.352265233 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.356706878 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.359022486 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.353852619 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.3559637 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.354319069 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362358506 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.359392855 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.35872514 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353482764 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.355337183 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.349059956 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357148056 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354802119 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.356893796 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.358972665 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354001673 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349812657 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351149994 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.349490417 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.355978351 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.353560333 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.353542733 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.347231807 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35582925 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.363538837 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.354923157 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.345444898 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.348318302 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.350300952 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.356009679 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.34621681 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350070746 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.360711209 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.354885403 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.354308039 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.346936296 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.353851537 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360465962 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355539292 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.357229676 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.364458454 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.347913109 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.358131852 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.360564989 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356371861 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.346012065 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.351104045 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.357803493 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349795693 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.352338573 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.358885576 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.351105776 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.360907693 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.353194891 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.352117966 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.359980677 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.363388258 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.354832321 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.349754886 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.358504377 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35484231 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.353287431 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.36233941 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.354782352 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.354100405 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.351770608 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.359972851 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.350301026 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.357424926 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.349728 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.357180644 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.355979486 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.354604154 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.351815116 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.35510031 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.351230917 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.354438493 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.357975216 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.35905792 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.35291606 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.36371412 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.355006192 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.353925192 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.357308689 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.362464679 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.354382236 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.349830054 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.358105926 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.349548912 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.357442547 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.350390517 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.361541609 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.356791835 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.357098724 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356780703 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.348994411 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350661562 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.358487362 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.354800801 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.356782909 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.358456706 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.356427716 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.357123666 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.348190176 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.356904879 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.347437439 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.350744538 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.357916304 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.355719985 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.355439382 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.35289484 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.362553971 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358825798 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357921888 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.35316728 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.355740977 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.362522958 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.35944121 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.363500716 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.359011965 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.357332848 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.35291208 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.352324992 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358734904 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.349196919 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.360433254 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36156863 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36406526 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.35185593 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.357437738 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.352052181 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.360653926 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.355518802 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.365381123 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.358154635 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.358111007 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.351672509 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.362254438 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.35123739 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.36170216 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.350458565 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.360233481 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.360347482 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.360267654 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358277961 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.352513096 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.355224745 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.361905545 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358233035 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.357738068 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.35270747 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.361857952 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.350363994 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.35438709 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.364245157 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.358497707 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.361701202 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.366185287 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355931206 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363190809 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.359871709 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.354192981 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.361054657 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.357582411 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.359056606 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363044872 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.362039655 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.355769612 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.365309009 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.361308546 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.35471336 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.361892809 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.366931192 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.359784788 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.3522725 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.362471543 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.359878769 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.360619869 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.360641987 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356186682 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364402998 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.363512413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.368839272 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.353676722 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.364242609 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.35689717 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.364696535 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.358008415 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.362847996 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.359590183 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.363220167 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.370523271 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.361552886 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.355486749 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.365545739 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.361411004 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.362444153 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35507806 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.364685074 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.362233064 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.361513186 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.360350826 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.358544352 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.363040701 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.353820471 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.362358871 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.357185967 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370634634 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.3769852 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365364166 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.367259127 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.367074944 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364527043 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.366386676 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.357289503 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.357161859 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360158367 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.358153544 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.357618872 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.365352564 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.357365381 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.365609343 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361489361 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.364931573 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.364184448 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.36244233 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.356672304 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.366180904 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.363985104 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.363873522 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.356137969 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.366450241 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.360587603 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.365101989 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.364661404 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.359476435 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370674064 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368217497 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.36086239 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.35969971 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.358847742 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.358196911 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.360586738 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.367711024 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.357271676 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.366953226 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.356402905 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.363325995 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.360310292 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.368792076 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.375563746 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.359732739 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.36829821 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.363427352 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.356784044 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.359355495 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.366642371 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36941403 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.376550243 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.358237112 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.367200894 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.366516507 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.365433512 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.366380824 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.365896578 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365603136 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.364037183 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370339971 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.37055268 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.3609563 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.368083755 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.375659365 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.366319973 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.36626886 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.358394598 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368615078 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.374679064 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.362443738 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.365507903 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.362351094 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.368914344 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.366037028 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.366148484 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.36738935 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.366772615 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372717936 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.370413273 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37073673 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.366651307 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.371279223 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.378531839 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.371226976 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.379314707 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.363207808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.372244251 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.368335784 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.362979415 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.364672708 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.363282271 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.370889415 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.359325387 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.371104503 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.367879868 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.365367283 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.369697678 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.373217267 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.360348219 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.368302166 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375210488 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.361884389 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.371331669 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.368878944 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.361454769 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.371162585 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.368430611 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.360498584 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.363483925 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.36676119 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371842401 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.362296952 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.373437597 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363288032 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372460912 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.371094829 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.370877851 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.369375685 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.370556814 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.363948423 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.372069497 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369342386 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.379780141 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.366280039 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.370608189 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.364250277 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.375261132 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.38100114 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.3678453 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.375577168 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.373164201 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.365116844 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.370589854 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.377694411 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367330304 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375036711 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.3648874 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.367736263 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.366046776 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.371002781 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.374209375 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.375353511 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.365235979 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.36836252 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.375002541 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.372989592 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.370595999 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.367928241 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.379232438 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.364085754 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.36429876 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.374100893 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.366629559 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.376724023 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365048725 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.368920877 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.369726414 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.377162101 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.371915383 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.372924144 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.365278394 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.366684856 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.378407586 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.376372464 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.3691081 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.367798638 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.376311275 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.368158621 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.370525921 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.370654006 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.368543995 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.370125736 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.378250897 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.367186171 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.367699124 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.369291984 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.375987694 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.376937343 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.375850188 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.367923847 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.382137741 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.382361384 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.381556553 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.368436048 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.370895611 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.371057004 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.376608214 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.375437464 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.369017893 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381199216 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.379695574 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.378756794 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.373518654 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.377158422 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.367823632 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.376967304 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.377252199 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.373162933 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.383002265 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.372841035 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382158188 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.37471277 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.375239209 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.367983114 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.369560454 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.370308471 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.373272588 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.376692562 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374980737 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.379095496 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.371862568 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381925767 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.376323334 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.375246421 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.376554962 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.368031843 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37801036 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.368365524 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.377533488 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.378278358 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.369226995 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.378373329 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376699272 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.371270851 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.371440585 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.380256815 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.377275799 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.371140485 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.374771456 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.380528185 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.387108551 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.378489089 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.36989553 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.375245491 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.380252878 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37508856 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.377962697 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.370342931 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38441501 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.391496888 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.371798236 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.37598947 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.379895885 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.388028839 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.377879646 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.378351077 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.374976452 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.37705545 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.379967179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.377782848 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381318345 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.385365386 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.374225994 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.380296449 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.373422548 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.374442411 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.380010744 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.389296378 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.380219609 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.373433762 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.386374821 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.390618578 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.377369958 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.392158612 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.385123602 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.379985172 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.385038017 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.371579528 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.380708482 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.377601578 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.383684423 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.379006325 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.381018716 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.379813647 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.372869079 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.381675192 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.387203443 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.388269524 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.380459926 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.37260727 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.374283525 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.382362676 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.379845343 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.38232693 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.381110743 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.380473964 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.382413616 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.375105854 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.391261058 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.394370067 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.38604152 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.382307292 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.381698822 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.381909152 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.385912917 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.378065291 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.383534884 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.381053492 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.381707979 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.380199115 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389524824 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.382687852 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.377090668 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.376079123 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.377122936 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.385947175 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.389072148 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.400691267 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.385447431 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.385993209 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.384611572 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.382005003 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378170933 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.386163995 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.382415231 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.376414102 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.37787198 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.38504047 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.385458251 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.383675409 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.376802221 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.387314594 seconds)
  done (took 814.701245335 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.385347628 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382248812 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.383849113 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.381454144 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384238375 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.382174896 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382798381 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.384457836 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.384394846 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.383377042 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.385000611 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.383475092 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.384034504 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.384540366 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383897788 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.382324713 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.385303075 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.385243242 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.385182513 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386671705 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.384023346 seconds)
  done (took 30.317500665 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.384634009 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.382894219 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.385031881 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.385720915 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.385752031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.384599749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.384240977 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383610692 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.384722705 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386515918 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.384023071 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383625995 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.383556838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.386644132 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384596587 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.385507562 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.383772912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.382379409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.385850548 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3861679 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.384868604 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.384925379 seconds)
  done (took 31.718579022 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.387124897 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.386294271 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.37895255 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.388104964 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.385804464 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.386617725 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.386382839 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.388014335 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.385925533 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.379217656 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.380414222 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.380823086 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.381824904 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.39023707 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.383470097 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.39118841 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.388493088 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.387645132 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.387301271 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.386425433 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.390319115 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.398792931 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.387110409 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.379514447 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.389951625 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.387495686 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.386737336 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.388262727 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.37914486 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.389747444 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.388974037 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.381522438 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.392108949 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.390154697 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.381851354 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.389589494 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.387288648 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.386134267 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.388286839 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.385214063 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.395929219 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.38825941 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.39231444 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.400366916 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.387539399 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.381853778 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.393099341 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.388703918 seconds)
  done (took 67.844059208 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.38909195 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.389061051 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.388894883 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.389187161 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.388756669 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.388415252 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.389215285 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.389442595 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.388625118 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.389963213 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.390668486 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.38958194 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.389951595 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.390406302 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.389547877 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.389833652 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.391105553 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.390130278 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.390227397 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.388751403 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.389935008 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.391164796 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.391239139 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.39131976 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.391408841 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.389967783 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.390730213 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.390279363 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.389756392 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.391036985 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.390160704 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.391010106 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.391454255 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.390243177 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.390310857 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.391462648 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.390276883 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.392025499 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.391745887 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.391637767 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.39250161 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.391154031 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.391914884 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.393018738 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.391147087 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.392267423 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.390980358 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.391594087 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.390937376 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.39205144 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.391256584 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.390504933 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.391619688 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.390979393 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.393418087 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.392545918 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.392942703 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.393923121 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.392110047 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.392409484 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.39234715 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.391860386 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.39345286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.391882754 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.394035263 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.39372405 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.393279611 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.392479615 seconds)
  done (took 95.849887085 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.393576737 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.39398007 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394257828 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394106046 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.393833531 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.394419368 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.394767631 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.395265548 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.393580183 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.392758648 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.394577126 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.395210252 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.39374215 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.395453355 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.393992062 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.393576833 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.3943338 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.394911216 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.394114271 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395672857 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.394855141 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.394417384 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.395156626 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.395945107 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.394982611 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.396275266 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.393533459 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.395792053 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395585616 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.394753486 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.39537631 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.395500575 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.394912308 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.395006818 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.396389575 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.395000276 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.395211514 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395997959 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.395251134 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.397556895 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.395887068 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.396584275 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.397088513 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.396605849 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.397325933 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.395834387 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.39787988 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.396706524 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.396731004 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.395909439 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.395792755 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.397081189 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396600179 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.396773996 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.39687442 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.397051888 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396754859 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.397155263 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398065101 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.398072642 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.396940643 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.398665665 seconds)
  done (took 87.790986209 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.398005898 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.397813648 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.398040171 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.398231656 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.395764949 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.400522478 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.397427586 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.396429624 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.398110246 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.397089606 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399172333 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.398729946 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400346275 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398514817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.400316864 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.399088453 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.398274877 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.398022977 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.398097953 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.398755134 seconds)
  done (took 29.233057499 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.399675228 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.400374787 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.400073885 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.400631641 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.398020601 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.399382931 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.399470565 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399143517 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398008572 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398699765 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.398655485 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.398418487 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400021536 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.400257717 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.400186191 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.399226701 seconds)
  done (took 23.657043976 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.399158027 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.398872669 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.399526491 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.402434947 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.397820286 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.401595442 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.399367213 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.398922915 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.400479486 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.402081175 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.401527049 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.400983009 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.400900883 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.400612559 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.399964747 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.400381531 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.400700209 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.403889102 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.406064758 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.406846571 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.405839005 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.4049685 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.402584556 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.401547271 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.400935096 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.402567941 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.402051088 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.402123108 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.40233421 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.401389381 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.400967647 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.402032956 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.401575687 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.403032497 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.401850966 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.402590773 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.402493493 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.40315519 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.401159188 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.403119885 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.402470659 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.402734974 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.401679457 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.402987531 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.403006034 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.402251152 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.402823133 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.403882892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.403371072 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.403097898 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.402998437 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.403238024 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.402440781 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.404131521 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.403336616 seconds)
  done (took 78.384467976 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.40563243 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.402613049 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.402610701 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.40249761 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.403288352 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.404574878 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.403696571 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.40506653 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.405805022 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.403992517 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.403944394 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.403768885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.403996198 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.405688219 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.404280237 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.40465968 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.405350842 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.406303657 seconds)
  done (took 26.549230276 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.406175262 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.406377401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.405233894 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.403936139 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.405205706 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.404802228 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.404716672 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.404202582 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.404869053 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.405837365 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.404840557 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.406321121 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.405775315 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.405818349 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.40672411 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.405576787 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.405609569 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.404040079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.404773244 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.406010977 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.40586352 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.404565965 seconds)
  done (took 32.189513835 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.395901416 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.398121056 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.395603416 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.409355851 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.405635832 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.394500306 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.395803968 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.396588202 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.413175848 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.420448388 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.416060926 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.404521812 seconds)
  done (took 18.118398799 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408081431 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407822205 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.407339872 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408797894 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40699987 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408286213 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408486698 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407512602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407133535 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407279281 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409133264 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407763062 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407708445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407372467 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408488955 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408713284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407956956 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406307934 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408548038 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406715577 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407845795 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408718834 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407947417 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407923091 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409089113 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408613023 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408183313 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407990059 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408569963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408689484 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407739611 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408474425 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409990539 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409074442 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408099661 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409581005 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40947536 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409158714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409476503 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409041788 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.40830921 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409533817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409387041 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409047717 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410324185 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408852669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409470672 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408710437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408265375 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409966606 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410831143 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409236052 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410487481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410204276 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410339748 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410324078 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410987548 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411271734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411447262 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410764842 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410824111 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408899392 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409752815 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410708701 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411944353 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410714915 seconds)
  done (took 94.265400289 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411156009 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.411484146 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412778493 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412969848 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413171591 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412594456 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41241596 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412179991 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411826945 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412230112 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411962329 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41160146 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412353435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412487085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410221097 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412249031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411804977 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413180052 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411859133 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413077703 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412963264 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413172584 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412625399 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412747215 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413614155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414037053 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414064985 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414207924 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413028449 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415970965 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412302927 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412702326 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413829611 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.413503732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413133743 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413903794 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412983756 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414486664 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413461309 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414026954 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413580532 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414367614 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413994916 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413463346 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413158821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41496165 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412903173 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412496295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413634753 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413357824 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413840738 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414189859 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414140962 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41459967 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413001122 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414469026 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413880724 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414514577 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416447258 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415578965 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416263856 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415734569 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414807779 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415977168 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414606075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415748087 seconds)
  done (took 94.566468082 seconds)
done (took 1911.857219561 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.570585525 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.525717871 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.406019202 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.425961801 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.40707915 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.406581031 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.417728276 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.405640191 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.405204267 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.404474267 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.405809528 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.597384427 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.443261691 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.408453739 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.405720882 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.503075513 seconds)
  done (took 28.418945235 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.435345144 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.416433623 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.519886688 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.415129441 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.434112773 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.593075507 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.471162298 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.415987922 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.573892952 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.433685775 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.406403708 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.438003084 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.411645457 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.402468526 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.4363227 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.598048951 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.662028491 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.420055055 seconds)
  done (took 30.766271972 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.8325722 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.441640113 seconds)
  done (took 5.557522284 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.429657629 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.4155491 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.410851296 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.410631572 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.400025133 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.416815393 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.410518261 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.419366839 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.412452592 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.534527358 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.411128677 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.41883336 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.42465487 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.405858215 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.413884097 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.448073529 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.564105864 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.420361379 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.413380628 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.412303856 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.40202041 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.489984438 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.441749739 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.415447566 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.520308864 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.40971419 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.406013311 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.400437302 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.513493333 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.408538099 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.395663615 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.394808919 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.398185311 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.331642948 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.917578728 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.397627271 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.416200677 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.402668033 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.40528834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.546640466 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.401200213 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.405426252 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.402516902 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.91929709 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.500725143 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.512932513 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.40270016 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.398748552 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.395785837 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.460626426 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.393161228 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.398236128 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.453696906 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.174598428 seconds)
  done (took 89.120226615 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.3884457 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.387667801 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569209056 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.407941134 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.396427225 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.393436508 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.39279827 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.666159057 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.416315281 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.3890393 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.705773163 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.016228169 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.396627452 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.453535576 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.423468515 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.449819284 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.40592238 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.398783738 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.394127999 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.394094037 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.956346701 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.393768686 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.3906788 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.477845434 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.430781946 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.925733763 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.393612736 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.393603603 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.408265703 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.389514802 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972591815 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.398506678 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.442388161 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.392550015 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.67720632 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.77903779 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.739680208 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.403479443 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.437702917 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.395110641 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.41981984 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915182593 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.761257587 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.39485528 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.400977625 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.92522791 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.403721506 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.404820164 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.398919493 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.660450712 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.392902229 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.395071536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.39784304 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.408921259 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.392831155 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.454725237 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.469356675 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.931485101 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.395100671 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.39524164 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.404081425 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.39927345 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.406984057 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.398271302 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.392627863 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.76288888 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.663056215 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.395044124 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.75361078 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963522629 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.396393212 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058969766 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.40133326 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.416338411 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.438469077 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.392241271 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.393175376 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.910580596 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.395725941 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.386642163 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.728442682 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.38799272 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.688793331 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.405063963 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.385682508 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.976219444 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.404182126 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.424723561 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.386810491 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.393610913 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.398322974 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.391513731 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.676423645 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.448621687 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.386829717 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.389073032 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.432451051 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.387979758 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.402619029 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.398088405 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038421199 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.391843039 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.388761127 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.40616858 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.390015569 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.393413967 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.389564161 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.389384004 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.675494384 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.3920035 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.395259639 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.388762777 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.388489484 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.399405662 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.48416616 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.397644676 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.687657769 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.389831453 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391464331 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.396961698 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.397113821 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.41287253 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.390831153 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.404037463 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.393642178 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.692282778 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.410909172 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.401853059 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.391920685 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389221599 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40667036 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.398203573 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.44240687 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.39023032 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.245477365 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.395567778 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.405499264 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.393834264 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.403028654 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.39084099 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.399034491 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.393246108 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.689523505 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.677300445 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.64228837 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.397785708 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.38933656 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.232109704 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.395682449 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575877569 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.416310224 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.392587197 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.672059919 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.626570392 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.39539441 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.389696649 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.394762396 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.669657491 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.395417114 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.727410708 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.003394592 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.393164103 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.399856662 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.239667849 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.211846569 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.396861755 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.394820334 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.695084492 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.413479016 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.391592636 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.394146591 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.394348989 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.393846836 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.399519237 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.393737487 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.395651769 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.392285921 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.685486255 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.589664526 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.411795152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.401098674 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919776444 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.412769188 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.392508877 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.403364992 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.39814312 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.391858419 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.466395702 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.395569053 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.391942713 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.394756577 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.396815351 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.948828959 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.395727276 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.411854865 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.590655294 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.160946612 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.395080796 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.399974801 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.394230149 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.457737068 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955061298 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.44480113 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.694876287 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.402027522 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.434170848 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.397366703 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.404105181 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.952201111 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.399274141 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.411511243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.134486715 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.395147221 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.874563299 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.396173129 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.39475967 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.060951536 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.398596747 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.398416406 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.393950585 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.413784607 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.727086329 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.399671517 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.427908653 seconds)
  done (took 512.685942452 seconds)
done (took 667.830265476 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.395353488 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.398236062 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.379786352 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.399162761 seconds)
  done (took 10.842489851 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.414788445 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.403584788 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.413135197 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.401827231 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.411547129 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.400010912 seconds)
  done (took 9.71959062 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.396784548 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.401919368 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.400189471 seconds)
  done (took 8.471514989 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.615779172 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.415888433 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.745944826 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.401741504 seconds)
  done (took 9.450550497 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.411631717 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.409466138 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.411682211 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.413206804 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.413852968 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.416079881 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.41602147 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.412848255 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.413932019 seconds)
  done (took 13.991379859 seconds)
done (took 53.74753031 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.396179939 seconds)
    (2/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.300126159 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.47017558 seconds)
    (4/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.56354985 seconds)
    (5/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.4353596 seconds)
    (6/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.548309653 seconds)
    (7/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.372764808 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.12381933 seconds)
    (9/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.378552091 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.378946013 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.565907309 seconds)
    (12/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.431753659 seconds)
    (13/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.475854266 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.549318077 seconds)
    (15/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.469689536 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.551630961 seconds)
    (17/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.086151405 seconds)
    (18/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.581454081 seconds)
    (19/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.617787568 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.431161076 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.379417062 seconds)
    (22/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.464977841 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.497544305 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.478260272 seconds)
    (25/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.546871202 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.581249392 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.379071104 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.520540299 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.401936714 seconds)
    (30/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.534894034 seconds)
    (31/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.406087584 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.485586478 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.647136261 seconds)
    (34/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.378053675 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.383420224 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.475971898 seconds)
    (37/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.465973529 seconds)
    (38/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.526199749 seconds)
    (39/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.609640191 seconds)
    (40/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.380942201 seconds)
    (41/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.13844127 seconds)
    (42/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.442529073 seconds)
    (43/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.406119761 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.259760929 seconds)
    (45/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.223023923 seconds)
    (46/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.382189643 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.59675381 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.37783301 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.507073723 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.422836926 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.377806435 seconds)
    (52/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.469837108 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.397551216 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.383565173 seconds)
    (55/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.514684371 seconds)
    (56/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.08938978 seconds)
    (57/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.438652884 seconds)
    (58/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.222040805 seconds)
    (59/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.651197212 seconds)
    (60/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.383003839 seconds)
    (61/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.521851284 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.523795022 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.473242082 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.435030741 seconds)
    (65/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.530698596 seconds)
    (66/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.514251616 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.495612572 seconds)
    (68/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.47431721 seconds)
    (69/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.380823248 seconds)
    (70/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.446090226 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.645145186 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.488403689 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.522192754 seconds)
    (74/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.552644276 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.241118974 seconds)
    (76/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.383235907 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.499646807 seconds)
    (78/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.437380669 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.546268957 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.672504238 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.518225867 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.495384511 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.204433411 seconds)
    (84/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.484407856 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.16154814 seconds)
    (86/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.380633879 seconds)
    (87/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.255204477 seconds)
    (88/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.383479126 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.532094756 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.210184443 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.526490296 seconds)
    (92/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.479712984 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.435581409 seconds)
    (94/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.564406702 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.554178335 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.555580451 seconds)
    (97/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.522257937 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.581163254 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.480355792 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.552442597 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.262447904 seconds)
    (102/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.517022676 seconds)
    (103/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.376656343 seconds)
    (104/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.43270425 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.559339221 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.553240326 seconds)
    (107/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.615463715 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.409706687 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.538559843 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.653215482 seconds)
    (111/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.385286965 seconds)
    (112/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.619185739 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.281521142 seconds)
    (114/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.527782832 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.509754931 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.383380198 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.536131718 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.413490936 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.414588128 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.448236004 seconds)
    (121/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.481182422 seconds)
    (122/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.180189396 seconds)
    (123/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.506687511 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.384359589 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.450703323 seconds)
    (126/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.58798349 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.384315983 seconds)
    (128/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.407259685 seconds)
    (129/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.423792208 seconds)
    (130/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.390823191 seconds)
    (131/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.622422498 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.387601193 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.503969696 seconds)
    (134/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.571995325 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.538321592 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.49755815 seconds)
    (137/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.381255754 seconds)
    (138/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.493162653 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.166935188 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.375574056 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.471843608 seconds)
    (142/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.386100198 seconds)
    (143/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.183912441 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.474780158 seconds)
    (145/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.485800381 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.516066446 seconds)
    (147/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.233032458 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.387924818 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.431535851 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.387586074 seconds)
    (151/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.417189504 seconds)
    (152/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.462742511 seconds)
    (153/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.391512991 seconds)
    (154/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.3927853 seconds)
    (155/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.591665064 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.452406767 seconds)
    (157/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.436915841 seconds)
    (158/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.386474843 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.492087514 seconds)
    (160/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.662502148 seconds)
    (161/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.388598521 seconds)
    (162/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.524952229 seconds)
    (163/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.480679872 seconds)
    (164/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.432994658 seconds)
    (165/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.448076825 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.448025585 seconds)
    (167/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.553924676 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.519039435 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.437582211 seconds)
    (170/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.454059785 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.264823146 seconds)
    (172/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.387729233 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.499842245 seconds)
    (174/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.605348497 seconds)
    (175/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.471721814 seconds)
    (176/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.389201248 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.532282666 seconds)
    (178/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.131702251 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.385847924 seconds)
    (180/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.653366829 seconds)
    (181/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.509715834 seconds)
    (182/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.542447876 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.656244022 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.616643814 seconds)
    (185/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.591807148 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.518418146 seconds)
    (187/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.556929169 seconds)
    (188/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.526531772 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.45077468 seconds)
    (190/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.75834514 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.126153374 seconds)
    (192/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.388615633 seconds)
  done (took 353.97104181 seconds)
done (took 355.241984853 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.444193052 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.514214154 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.419493849 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.415744068 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.420018804 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.411167977 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.438810853 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.417687826 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.431770841 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.432401403 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.412766754 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.425588015 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.434539025 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.431397283 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.454635308 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.420483394 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.419026844 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.429697708 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.435621083 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.436316582 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.419235254 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422169449 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.449272996 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.419265173 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427446434 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.431599796 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.425933682 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.412404952 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.446271998 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.435131591 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.419529744 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.427645973 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.43701259 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.431869185 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423236149 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.432452016 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.423307935 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.517225431 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.441381949 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.432101653 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.429272973 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.438679893 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.425097517 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.426337714 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.434254697 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.450365792 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428610142 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.43686277 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.413381997 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.426640215 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.440782867 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.434856837 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.429032675 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.414780711 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.437064759 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.436899629 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.432547137 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440888924 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.431323103 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.420821513 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.457866417 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.444271061 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.434581521 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431732085 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.432800203 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.439665809 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.433068965 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.438277587 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.431069684 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424706185 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424624165 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.433490561 seconds)
done (took 112.468241396 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.547142937 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.42252048 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.581125867 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.432565059 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.589548011 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.54850011 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.430007598 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.430345177 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.431687996 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.223855503 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.43193354 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.431534446 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.422157386 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.432595687 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.541339113 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.431491512 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.430281888 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.122182942 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.431994308 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.556519694 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.422442182 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.432758895 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.431846477 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23224911 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.421164379 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.41721199 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.560761373 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.435043977 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.134350326 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.419045229 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.418227233 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.134058009 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.560817761 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.452328004 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.441209487 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.44217073 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.588748772 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.437447365 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.550231302 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.549575558 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.58284198 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.474046658 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.414883296 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.425323252 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.438229967 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.436050641 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.431703826 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.460455521 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.41901088 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.433985632 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.126784217 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.440981924 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.440832834 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.433395431 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.433193404 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.452061682 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.433900732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.437555967 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.562788668 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.433984958 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.551195815 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.234975488 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.227095687 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.433745954 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.421793814 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.436286918 seconds)
  done (took 114.655023037 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.494582656 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.501382042 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.538979429 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.427357381 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.472740378 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.540534718 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.429266509 seconds)
  done (took 11.697855258 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.434357608 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.434666293 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.474492817 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.474856836 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.436879365 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.597668719 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436010756 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.439480674 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.434614225 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.476777037 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.436661466 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.438749893 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.444792589 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.42678373 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.475644136 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.440701292 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.544779875 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.43017451 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.435971522 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.578609234 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.433998732 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.447771057 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.475714956 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.439745173 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.439200138 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.431619204 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.208553118 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.434784034 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.43589552 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.435833487 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.434365792 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.493262777 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438053984 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.430385036 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.435551161 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.541484223 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.437292586 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437267827 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.439032957 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.427615884 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.436157222 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.436563888 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.435874823 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.439773688 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.436431224 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.452227955 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.435989471 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.439178846 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.43656643 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.440703204 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.476735676 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.436895959 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.436769177 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.440774467 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.480704382 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.449697121 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.437883861 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.43932216 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.437537761 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.441002255 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.581736491 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.477764171 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.439382324 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.476507937 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439759833 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.438864672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.437325675 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.439277556 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.519040826 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.440349185 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.47587572 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.442892888 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.60975851 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.457231585 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.440123384 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.431999398 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.434606038 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437831776 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.42836899 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.438795799 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.440383784 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.432775077 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.441050105 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.439296417 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.440716327 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.589206687 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.536887573 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.442938565 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.449189691 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.443103109 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.440472603 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.483446883 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.441322942 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.439396627 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483044228 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.550570811 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.480574957 seconds)
  done (took 147.415455635 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.444570556 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.445428421 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.435971675 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.458095655 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.431826031 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.436704349 seconds)
  done (took 9.95066422 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.43723762 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.445633743 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.443061406 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.44073988 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.440576756 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.445395052 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.442284844 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.438973769 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.447983313 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.442878478 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.445132131 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.445924356 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.443367452 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.444265889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.445710884 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.444028251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.443975835 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.440250447 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.444895924 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.445043922 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.433054987 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.443492805 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.44550043 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.436015352 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.448959391 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.44577104 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.457867141 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.444815247 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.448479099 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.43795613 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.446429846 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.446606073 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.438001708 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.439443733 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.449803426 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.436787505 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.447675521 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.446308035 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.445311703 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.447734701 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.448209824 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.44742238 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.445150639 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.447999474 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.437762642 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.441726884 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.451478977 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.459670693 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.443807769 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.447648204 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.450045171 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.444454736 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.448727104 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.446147632 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.439568038 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.442060377 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.450339451 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.448690459 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.447139548 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.439137365 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.448452385 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.450058039 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.441398418 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.4557859 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.447583845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.446817962 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.43819276 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.451135677 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.445606292 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.448740712 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.447529098 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.446139165 seconds)
  done (took 106.350752896 seconds)
done (took 391.356944973 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.791286528 seconds)
  done (took 4.09068304 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.51724766 seconds)
  done (took 3.821482969 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.907171527 seconds)
  done (took 23.222695323 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.493763996 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.506229699 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.443717379 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.436036345 seconds)
  done (took 11.188903982 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.878941634 seconds)
  done (took 4.18738977 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.44132904 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.446621592 seconds)
  done (took 6.198003596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.682469991 seconds)
  done (took 3.99239204 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.70238309 seconds)
  done (took 4.021604255 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.440955199 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.466093425 seconds)
  done (took 6.227215284 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.407605082 seconds)
  done (took 3.718369528 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.724651548 seconds)
  done (took 21.035381959 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.45420996 seconds)
  done (took 3.766995274 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.480226038 seconds)
  done (took 3.790178074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.014815609 seconds)
  done (took 6.323731842 seconds)
done (took 106.888213765 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.434637333 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.441643195 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.442423288 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.439398733 seconds)
  done (took 11.067272126 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.512439329 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.511290929 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.52058897 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.508078427 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.507245045 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.516030901 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.475207537 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.474626974 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.506165569 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.503203617 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.517885284 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.507597044 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.515214228 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.47514504 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.50080325 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.517738654 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.502474043 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.52216403 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.474605032 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.50575352 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.451413154 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.50886287 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.501699498 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.44959431 seconds)
  done (took 37.297926562 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.938874283 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.51094459 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.594229725 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.494095619 seconds)
  done (took 7.848241904 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.555032381 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.556708462 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.56890394 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.609392251 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.653662693 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.569456889 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.477722242 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.473220237 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.457989297 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.555122986 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.640411008 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.55528366 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.771863256 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.449312872 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.770242792 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.452222805 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.452108605 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.556324232 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.60483463 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.638325279 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.453028486 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.5559654 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.559377844 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.554672875 seconds)
  done (took 38.803752846 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.462607078 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.469071343 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.453396891 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.467247388 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.452633769 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.454786183 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.455465926 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.459286139 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.454474435 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.45075858 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.453534265 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.469379776 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.454714766 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.455158598 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.463171526 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.452941235 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.455175033 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.459293418 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.461280326 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.455446791 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.454533891 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.461253668 seconds)
  done (took 33.388945466 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.440083167 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.439348393 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.788739939 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.692478756 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.441523801 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.443522408 seconds)
  done (took 14.55975619 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.515613639 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.660184585 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.445779533 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.798497247 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.884945288 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.450972776 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.446192868 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.691765485 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990432262 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.987141737 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.506854793 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.515741202 seconds)
  done (took 21.210135925 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.448543461 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.446321548 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.446741118 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.461217769 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.50154278 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.448402514 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.451806111 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.440749293 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.504983505 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.502632225 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.450916967 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.502361661 seconds)
  done (took 22.921025742 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531265785 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452119873 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456065788 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46111797 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452038144 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452766716 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477251985 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155929642 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.456737252 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72747637 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464983242 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53496516 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.698653743 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463035827 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45791995 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.414707671 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682224907 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967194839 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457816295 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453570018 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489739361 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466144334 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461341978 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671972787 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.454057132 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453833917 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.715325472 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45434906 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749610049 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727692609 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728161893 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460482564 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731585947 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100446238 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560626704 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6682429 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443994997 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.460334936 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.424273772 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.456393073 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468835144 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461789699 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724051283 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460004352 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45580638 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461514256 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169666464 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.461843535 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.455136681 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.456897159 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724858918 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542079697 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.459672449 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.454525177 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512731744 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455599216 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.461317246 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578689464 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095322668 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455460142 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463297119 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.461330712 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.449881311 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462475235 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136562303 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.463721341 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.463781544 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.460733627 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458052753 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.455788677 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499967706 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457767771 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.476323766 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4576299 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258807004 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.457286143 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459507801 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025202834 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471996015 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.463520524 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6823759 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45718651 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457228136 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.458086622 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.459308792 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217000234 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470479969 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.424537315 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518420837 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165572252 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673099317 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477066827 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486426773 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.679449043 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.427457868 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461200531 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.458700864 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460898623 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479222263 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171113539 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45810082 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.463878984 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70638225 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.668933511 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460758728 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.431514299 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948715183 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466859203 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.486438137 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460635489 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6780765 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.107076337 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730969601 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466455981 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499526544 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.458099894 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278109856 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471984108 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.469716725 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.461333386 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759195888 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.303729043 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466681321 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534565182 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471942888 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.461303893 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472678421 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47228906 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463518991 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.654018159 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467830943 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.736885412 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.468035189 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462460969 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.461140252 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467040375 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.468829916 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.6826122 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467783668 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741745548 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461248437 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462040435 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462923694 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.679789777 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.462502483 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.487053866 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803606812 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463415052 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.469703555 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.740081426 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500931565 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575931321 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494396711 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.462410008 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.716561991 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.468443048 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.467387257 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472273186 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468521518 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465345442 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.471156289 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456409414 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121213061 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439873936 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471298344 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.464735668 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.481044562 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537491598 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471623995 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.681120114 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.465748296 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483381934 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.474906345 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.46448559 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690325086 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738589629 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.477031645 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646520492 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.948395682 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120940395 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479682487 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.4661982 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.465231716 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.466125242 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467117238 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466856767 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468305399 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681563692 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740693909 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.46190605 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126749188 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465875342 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478436293 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.478430249 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738303938 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.479141785 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466903637 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.473138405 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471638704 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488089866 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.742569385 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691105461 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.481527316 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465251899 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.028815864 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475093755 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469353482 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467061992 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493607489 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481430139 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318123528 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805083292 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463457444 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744514898 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48392389 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.489041803 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.467063667 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479220355 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483253461 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.495222763 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474035045 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.684590807 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467757357 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476037171 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107712041 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281242598 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064126395 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473652814 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.482204282 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472353424 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183196598 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468262249 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469458144 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720885261 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.183671168 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467829069 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953662676 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.482272275 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233719637 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747145102 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698761816 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48589364 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.472004189 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743125483 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.686063779 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495983128 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478541525 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473481947 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.437654844 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029528543 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468207117 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651498121 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181469623 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48386667 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470979593 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.541836149 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.473597078 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869360492 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.467414151 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470305691 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.469628339 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49158285 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320541679 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.47751067 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471124555 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14949174 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470459493 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.963965027 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470567328 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.686426337 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.743802996 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.72489591 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.477704545 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.492299385 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.736583086 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747069275 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475814651 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4849371 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073708043 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.327908609 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.47923745 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473278806 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296393014 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475846246 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775434586 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.487996529 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.477131661 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487034606 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473803979 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473313829 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.471548174 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48196504 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448174878 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990584921 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.481339536 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483167023 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489008077 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478349299 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.719302707 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.489574706 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127895421 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699871175 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465273066 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510066183 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.478360027 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474605495 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.44143149 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473765121 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474722388 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523012802 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.695603692 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487245437 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.444932178 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.515925318 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685156654 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474030677 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473856115 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703306159 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.475156439 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.478757063 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288413423 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504047201 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.476473064 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475641801 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475938756 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515681002 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547936796 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690668831 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.747871747 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.753420904 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87531039 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472723438 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476574542 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.489975256 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555123328 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47403086 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.481386535 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.480554979 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130724175 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286768213 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134310491 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752010673 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478928744 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474677362 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474562331 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717354673 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472502295 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750426098 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475630785 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.469617563 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499931902 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474156116 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483256887 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689732625 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74898321 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474515595 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476142779 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482957777 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.476487615 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754028193 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.694319685 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000545733 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057730307 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483176195 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484143519 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.200675303 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752551284 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476113246 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476417152 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478110759 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.492216343 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.485063122 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.488707603 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483805833 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701542729 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.750631329 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132795688 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.750756218 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.660348904 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.395186386 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477754529 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.727968581 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31189963 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.695307098 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138715033 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245865668 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728745379 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552261928 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695381049 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.476978444 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714055593 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.485817842 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484151236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480163287 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478789108 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.479637664 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.753540576 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1409672 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730687775 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.484410444 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.487911188 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513402144 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.697703725 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.699512951 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251153338 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.702898581 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757042962 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490194042 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479859799 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147236251 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755415915 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485381262 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.485483038 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707895 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479649541 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514720693 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.354791423 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.479871136 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057215388 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.694238627 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501646875 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483790807 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25553376 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141752536 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.483880566 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006281368 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488199764 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486132947 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761095965 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.48761623 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495480365 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765446032 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.486675953 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496142055 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705056212 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.13474785 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258179448 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.503550477 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496625887 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.487218285 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483563117 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507703557 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484564749 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490930114 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.876832634 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483269425 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482186387 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494723065 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.494206915 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484548279 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.504242209 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482924401 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.488675441 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.469369003 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.45792125 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483415925 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608088031 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047031473 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485873839 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.098070902 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.81594883 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.730771406 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485392777 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.457557974 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.488056306 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484530379 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485801024 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484418799 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490507061 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069151451 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.488359824 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.768548447 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496564665 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.692691742 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69546422 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488162815 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704903395 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484015364 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511491707 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.451539047 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483402784 seconds)
  done (took 1029.424532826 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.516239609 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.505244871 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.506851202 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.55295862 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.536750437 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.604813472 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.574153687 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.583589935 seconds)
  done (took 21.723229064 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.484901057 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.489618967 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.482977769 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.490700729 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.48173949 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.968107541 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.488829264 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.491390814 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.50034722 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.483061992 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.489892217 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.198857645 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.507601051 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.481702013 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.492114113 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.491758918 seconds)
  done (took 34.375901335 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.240605964 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.542002007 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.176799507 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.48320538 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.509900352 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.487430287 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.65865393 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.495250548 seconds)
  done (took 26.941493647 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.490708797 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.489268812 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.489912418 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.492239323 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.492276571 seconds)
  done (took 8.801324301 seconds)
done (took 1309.673279186 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.493085573 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.494724799 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.492598175 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.492583809 seconds)
  done (took 7.31983685 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.45533349 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.459085657 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.459293301 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.47272913 seconds)
  done (took 10.194444441 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.19444834 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.102490916 seconds)
  done (took 5.643380944 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.029010895 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.026698225 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.019158089 seconds)
  done (took 7.424682785 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.781578913 seconds)
  done (took 3.13179722 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.477113746 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.479594088 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.212188991 seconds)
  done (took 8.517267797 seconds)
done (took 43.579038327 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.494476936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.244628443 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.63367036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.49333832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.642648788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.637077244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.732140772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.480210277 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.492452697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.494967847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.494992206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.64090622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.718198572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.246523633 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.716529465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.245187425 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.642062225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.486280736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.484827925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.505351969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.731812911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.481027341 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.487205213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.480083176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.668246344 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.689383293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.48452552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.245472042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.495986759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.480518455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.632811877 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.483286698 seconds)
  done (took 86.238058187 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.488072274 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.48054542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.51073668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.48034632 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.483186525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.499437746 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.485825262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.485345435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.482774791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.483395188 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.481475321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.481577098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.499292825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.483811146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.484191186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.482756877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.484911793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.48666855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.484763141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.482303203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.485716472 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.48348547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.483133963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.509733906 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.499445275 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.484116805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.498846123 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.486193632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.481965576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.489501711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.490030307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.503520512 seconds)
  done (took 80.979618837 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.483939241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.504495127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.501195969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.488952453 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.483037846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.515968746 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.48490059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.489886403 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.485253506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.489818098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.500475609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.485108364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.491088381 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.499604482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.489232726 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.499712464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.493624209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.488400096 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.492561155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.505198274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.489123117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.495189515 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.499231525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.489093963 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.506069853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.492338795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.489443714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.499601955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.497912305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.485291403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.516477919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.48883031 seconds)
  done (took 81.1755301 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.72497906 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.500551458 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.50169964 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.496741228 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.503095724 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.502018058 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.496468272 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.734024399 seconds)
  done (took 15.81527789 seconds)
done (took 265.557469763 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.510029038 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.993191382 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.529535945 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.495194746 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.534472051 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.522409368 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.720591189 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.527161405 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.723820794 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.523881671 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.514513564 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.497496446 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.31630506 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.655247584 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.330269679 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.449444602 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.401529877 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.493921385 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.069962807 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.788272183 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.524383836 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.488271161 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.332196793 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.407717367 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.469284952 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.583673305 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.598348876 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.729673708 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.665414707 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.576052965 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.0068284 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.504133449 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.504457397 seconds)
  done (took 68.343476699 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.494321439 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.50409641 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.503986175 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.504703175 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.504011389 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.50441765 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.493839503 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.5038497 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.506042585 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.504006835 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.503938176 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.504452193 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.505511992 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.50404433 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.505186244 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.477247976 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.494741203 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.50370642 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.495131183 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.477217327 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.505543753 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.504542301 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.506641574 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.505962203 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.506307324 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.505954424 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.505435089 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.505849798 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.506435059 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.506204859 seconds)
  done (took 46.412748284 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.506864678 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.060763217 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.248771833 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.50561319 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.496069365 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.501662478 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.793291329 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.511903657 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.501042269 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.501905191 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.985111169 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.51183439 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.53275782 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.257803747 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.502732747 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.507480795 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.508186564 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.49970632 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.075194666 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.515031435 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.793376692 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.51398738 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.796023661 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.513620929 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.504468644 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.500213395 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.504197389 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.308132291 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.525094421 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.988458239 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.312572966 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.795061252 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.241130442 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.310636783 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.313845519 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.516356473 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.508563503 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.994617818 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.506934418 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.501833611 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.793730817 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.501133783 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.26223676 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.192599045 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.523622772 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.510223615 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.345499951 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.995242333 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.754489333 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.512733161 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.298523222 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.504966923 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.51214329 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.504022656 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.749498795 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.508745153 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.501575885 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.353509449 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.507162296 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.79188605 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.510779527 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.502487928 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.074673491 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.508581873 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.072747497 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.509257552 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.511494041 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.504371355 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.268659071 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.508076905 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.211116008 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.524742271 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.512084578 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.990639476 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.074097501 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.388976991 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.506210487 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.08364084 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.275447783 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.813653694 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.507612685 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.282614053 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.814675154 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.509226534 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.513758298 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.515330165 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.513043884 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.582520793 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.794046449 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.128562141 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.212868861 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.373793305 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.798681952 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.513354215 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.504901224 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.359816468 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.513370634 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.514024459 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.262985089 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.216264689 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.525926788 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.511776683 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.199076235 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.528387633 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.801044361 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.511943181 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.303505001 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.507119731 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.58675792 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.51489593 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.511379014 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.510090239 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.798664285 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.510916483 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.514743434 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.200893742 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.024360779 seconds)
  done (took 208.304397452 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.510880463 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.501462988 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.514325637 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.500414688 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.501278796 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.509494943 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.502505536 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.500916344 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.50705407 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.501965904 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.500570012 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.510564244 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.506974145 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.50145609 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.515093356 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.502396926 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.50161739 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.522653806 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.502056357 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.501838304 seconds)
  done (took 47.485170968 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.516259384 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.075633052 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.049673384 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.518003187 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.515275033 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.507995998 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.565734565 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.521900846 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.517452904 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.812568348 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.683490852 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.525031264 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.516818361 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.516798467 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.049254587 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.492677945 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.812304657 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.084115651 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.52055421 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.076300819 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.490468798 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.518966894 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.506655541 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.077701962 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.824860864 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.802740382 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.569100668 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.094135405 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.522339688 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.519967905 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.084587962 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.52289939 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.509463539 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.064090427 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.519041575 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.530858618 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.518945624 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.57247678 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.576089838 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.820730709 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086390961 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.814588956 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.531285875 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.668362267 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.525801985 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.489359511 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.091917983 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.520249286 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.490358986 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.522092881 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.526930245 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.067296361 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.515206229 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.065601561 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.52424747 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.520386551 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.090976679 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.07155797 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.059720905 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.688066215 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.516687421 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.805323254 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.525083134 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.093324426 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.52252914 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.521561705 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.521008628 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.689430327 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.088748026 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.805155059 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.822759853 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.820421401 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.521543666 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.582994123 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.528226667 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.818451059 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.581464658 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.899596346 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.822424014 seconds)
  done (took 136.252252098 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.797463586 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.628839805 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.896872482 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.102534802 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.021627828 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.652547125 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.629682383 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.763174548 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.521720736 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.620911919 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.172090233 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.607317499 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.275963651 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.579776738 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.625539149 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.644679344 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.921651527 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.481099382 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.15597129 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.156650647 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.520240237 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.623754662 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.031182093 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.71290144 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.512371965 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.101265196 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.479229236 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.045303902 seconds)
  done (took 56.655133388 seconds)
done (took 564.808208177 seconds)
SAVING RESULT...
DONE!
